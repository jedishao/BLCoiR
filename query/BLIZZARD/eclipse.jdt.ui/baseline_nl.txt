12996	open multipage editor causes Invalid thread access when exporting to a jar  This also happens in Eclipse 2 0 build 20020214  1  install the mulitpage editor example into the workspace 2  in a project create a file of type  mpe 3  a multipage editor opens on this new file  Leave the editor open  4  select File Export Jar File  Fill in the jar file and click finish  You get the following Jar Export Error  Creation of JAR failed  Invalid thread access
29531	JavaColorManager initialized in non UI thread  Build I20030114   open Workspace   select CU without opening in editor   activate Move refactoring   select different package   press Preview Caused by  java lang NullPointerException
75843	Deadlock arised when calling JDIDebugModel createMethodEntryBreakpoint  We are now having quite a few cases where a deadlock occurred when we were trying to created an internal breakpoint by calling JDIDebugModel createMethodEntryBreakpoint  The deadlock will freeze the entire UI  The situation can be summarized into the following  1  The UI thread  main thread  is in the process of displaying a GUI component  e g  a dialog 2  The processing of the UI component triggers our debugger to call JDIDebugModel createMethodEntryBreakpoint to set an internal breakpoint  3  The process of creating the method entry breakpoint results in the WorkbenchContentProvider resourceChanged IResourceChangeEvent  to be executed  which calls Display syncExec Runnable   4  And we have a deadlock  Since I have already discussed this issue with folks from both the JDT team an UI team  I just want to reemphasize a few points  1  Delay the displaying of the GUI component is not a valid solution  because it is the displaying of the GUI component that triggers the rest of the reaction chain  2  The process of displaying the GUI component is pending because the information required by the GUI component cannot be completed due to the breakpoint creation  I am including the thread snapshots when the deadlock is occurred  The main thread shows  Thread  main   Suspended  OS DispatchMessageW MSG  line  not available  native method  OS DispatchMessage MSG  line  1467 Display readAndDispatch   line  2429 Workbench runEventLoop Window IExceptionHandler  Display  line  1377 Workbench runUI   line  1348 Workbench createAndRunWorkbench Display  WorkbenchAdvisor  line  254 PlatformUI createAndRunWorkbench Display  WorkbenchAdvisor  line  141 IDEApplication run Object  line  96 PlatformActivator 1 run Object  line  335 EclipseStarter run Object  line  273 EclipseStarter run String    Runnable  line  129 NativeMethodAccessorImpl invoke0 Method  Object  Object    line  not available  native method  NativeMethodAccessorImpl invoke Object  Object    line  85 NativeMethodAccessorImpl invoke Method  Object  Object    line  58 DelegatingMethodAccessorImpl invoke Method  Object  Object    line  60 Method invoke Object  Object    line  391 Main basicRun String    line  185 Main run String    line  684 Main main String    line  668 The thread that is responsible for the creation of the java method entry breakpoint shows  Thread  org eclipse jdt debug  JDI Event Dispatcher   Suspended  Semaphore Object  wait long  int  line  not available  native method  Semaphore Object  wait long  line  223 Semaphore acquire long  line  37 UISynchronizer syncExec Runnable  line  42 Display syncExec Runnable  line  3096 WorkbenchContentProvider resourceChanged IResourceChangeEvent  line  107 NotificationManager 2 run   line  283 InternalPlatform run ISafeRunnable  line  615 Platform run ISafeRunnable  line  747 NotificationManager notify ResourceChangeListenerList ListenerEntry    IResourceChangeEvent  boolean  line  277 NotificationManager broadcastChanges ElementTree  int  boolean  line  151 Workspace broadcastChanges int  boolean  line  172 Workspace endOperation ISchedulingRule  boolean  IProgressMonitor  line  900 Workspace run IWorkspaceRunnable  ISchedulingRule  int  IProgressMonitor  line  1682 JavaMethodEntryBreakpoint JavaBreakpoint  run ISchedulingRule  IWorkspaceRunnable  line  769 JavaMethodEntryBreakpoint  init  IResource  String  String  String  int  int  int  int  boolean  Map  line  87 JDIDebugModel createMethodEntryBreakpoint IResource  String  String  String  int  int  int  int  boolean  Map  line  553 WSAJavaMethodEntryBreakpoint setBreakpoint IResource  IDebugTarget  line  35 WSAJavaMethodEntryBreakpoint  WSAJavaMethodBreakpoint  setTemporaryBreakpoint IResource  IDebugTarget  line  35 WSABreakpointManager setMethodEntryBreakpoint String  String  String  line  893 WSAJavaThread handleBreakpointHit IBreakpoint  line  468 WSAJavaThread handleDebugEvents DebugEvent    line  255 WSAJavaDebugTarget filterJavaEvents DebugEvent    line  731 WSAJavaDebugTarget filterDebugEvents DebugEvent    line  705 DebugPlugin EventNotifier run   line  936 InternalPlatform run ISafeRunnable  line  615 Platform run ISafeRunnable  line  747 DebugPlugin EventNotifier dispatch DebugEvent    line  960 DebugPlugin fireDebugEventSet DebugEvent    line  337 EventDispatcher fireEvents   line  296 EventDispatcher dispatch EventSet  line  181 EventDispatcher run   line  221 Thread run   line  813
79793	Deadlock in JavaWorkingSetUpdater  I20041130   Started workspace   Pressed CTRL Shift T to open a type   Progress dialog appeared   pressed cancel   Pressed CTRL Shift T again   workspace deadlocked will attach thread dump
103450	Quick fix to remove synchronized block  I would like a Quick Fix option to  remove surrounding  synchronized  statement   just like you can do with an  if  statement
125013	deadlock in PreferencesAdapter firePropertyChangeEvent  I20060119   ZRH plug ins from 20060124   started target workbench  but it never came up   selected threads from the vm dump below    the trace shows that the syncExec call from PreferenceForwarder waits forever while holding the JavaModelManager waited for by the main thread    the main thread waits for the lock    the reconciler waits forever and is never woken up by the main thread    Not exactly a deadlock  but similar in result  org eclipse core launcher Main at localhost 32917  Suspended  Thread  main   Suspended  waiting for  JavaModelManager   id 80  JavaModelManager containerGet IJavaProject  IPath  line  337 JavaModelManager getClasspathContainer IPath  IJavaProject  line  1163 ClasspathEntry validateClasspathEntry IJavaProject  IClasspathEntry  boolean  boolean  line  1560 JavaProject getResolvedClasspath IClasspathEntry    IPath  boolean  boolean  Map  line  2120 DeltaProcessingState ProjectUpdateInfo updateProjectReferencesIfNecessary   line  98 DeltaProcessingState performClasspathResourceChange JavaProject  IClasspathEntry    IClasspathEntry    IClasspathEntry    boolean  line  228 SetClasspathOperation updateProjectReferencesIfNecessary   line  799 SetClasspathOperation executeOperation   line  254 SetClasspathOperation JavaModelOperation  run IProgressMonitor  line  720 Workspace run IWorkspaceRunnable  ISchedulingRule  int  IProgressMonitor  line  1714 SetClasspathOperation JavaModelOperation  runOperation IProgressMonitor  line  784 JavaProject setRawClasspath IClasspathEntry    IPath  IProgressMonitor  boolean  IClasspathEntry    boolean  boolean  line  2995 JavaCore 5 run IProgressMonitor  line  4167 BatchOperation executeOperation   line  39 BatchOperation JavaModelOperation  run IProgressMonitor  line  720 Workspace run IWorkspaceRunnable  ISchedulingRule  int  IProgressMonitor  line  1714 JavaCore run IWorkspaceRunnable  ISchedulingRule  IProgressMonitor  line  3976 JavaCore setClasspathContainer IPath  IJavaProject    IClasspathContainer    IProgressMonitor  line  4150 JREContainerInitializer initialize IPath  IJavaProject  line  56 JavaModelManager initializeContainer IJavaProject  IPath  line  1748 JavaModelManager 7 run IProgressMonitor  line  1694 Workspace run IWorkspaceRunnable  ISchedulingRule  int  IProgressMonitor  line  1714 JavaModelManager initializeAllContainers IJavaProject  IPath  line  1703 JavaModelManager getClasspathContainer IPath  IJavaProject  line  1170 JavaCore getClasspathContainer IPath  IJavaProject  line  1458 JavaProject getResolvedClasspath IClasspathEntry    IPath  boolean  boolean  Map  line  2154 JavaProject getResolvedClasspath boolean  boolean  boolean  line  2058 DeltaProcessingState initializeRoots   line  271 BatchOperation JavaModelOperation  run IProgressMonitor  line  717 Workspace run IWorkspaceRunnable  ISchedulingRule  int  IProgressMonitor  line  1714 JavaCore run IWorkspaceRunnable  ISchedulingRule  IProgressMonitor  line  3976 JavaCore setClasspathContainer IPath  IJavaProject    IClasspathContainer    IProgressMonitor  line  4150 JREContainerInitializer initialize IPath  IJavaProject  line  56 JavaModelManager initializeContainer IJavaProject  IPath  line  1748 JavaModelManager getClasspathContainer IPath  IJavaProject  line  1172 JavaCore getClasspathContainer IPath  IJavaProject  line  1458 JavaProject getResolvedClasspath IClasspathEntry    IPath  boolean  boolean  Map  line  2154 JavaProject getResolvedClasspath boolean  boolean  boolean  line  2058 JavaModelManager determineIfOnClasspath IResource  IJavaProject  line  735 JavaModelManager create IFolder  IJavaProject  line  624 JavaModelManager create IResource  IJavaProject  line  553 JavaCore create IResource  line  1372 ResourceAdapterFactory getAdapter Object  Class  line  32 AdapterFactoryProxy getAdapter Object  Class  line  63 AdapterManager getAdapter Object  Class  line  253 Folder PlatformObject  getAdapter Class  line  65 NamePatternFilter select Viewer  Object  Object  line  62 PackageExplorerPart PackageExplorerProblemTreeViewer filter Object  Object  ViewerFilter    line  324 PackageExplorerPart PackageExplorerProblemTreeViewer isExpandable Object  line  313 PackageExplorerPart PackageExplorerProblemTreeViewer AbstractTreeViewer  updatePlus Item  Object  line  2021 PackageExplorerPart PackageExplorerProblemTreeViewer AbstractTreeViewer  createTreeItem Widget  Object  int  line  541 AbstractTreeViewer 1 run
179109	Editor computing AST twice concurrently  Build  I20070322 1800 I did Open Type  and it was taking a long time to open the editor after I clicked finish  I produced a stack dump while I was waiting  and I noticed that there are two threads creating an AST at the same time  Presumably they are even generating the same AST  It would be good to avoid creating the same AST multiple times when the editor is first opened
261198	nodes missing in Java Model in Synchronize view  I have a project with the following structure  123  project shared using CVS     src  source folder     somebusiness    some business       file1 txt   file2 txt Now when I make changes only to file1 txt and do  Team  Synchronize with Repository   I don t see the file1 txt  only  123    src But when I make changes to file2 txt  in  Team  Synchronize with Repository  I see that both file1 txt and file2 txt have changed  This problem was originally spotted on Eclipse 3 2 2  but appears still on 3 5M4  So far I had traced it to org eclipse jdt internal ui model JavaSynchronizationContentProvider
272742	ImagesOnFileSystemRegistry is not thread safe  I20090416 1053 Got the exception below when I clicked hovered over a type and had the Javadoc view open  linked to editor   This has already been reported as bug 223686  but the real problem is that ImagesOnFileSystemRegistry is not thread safe  I could not find steps to reproduce  but I m pretty sure this happens if getNewFile   is called in two threads at the same time such that fImageCount is the same for both threads  Later  both threads must call ImageLoader save     concurrently  Exception in thread  Info view input computer  org eclipse swt SWTException  i o error  java io FileNotFoundException  C  e w runtime head CLEAN 2  metadata  plugins org eclipse jdt ui jdt images 0 png  The system cannot find the path specified   Caused by  java io FileNotFoundException  C  e w runtime head CLEAN 2  metadata  plugins org eclipse jdt ui jdt images 0 png  The system cannot find the path specified  at java io FileOutputStream open FileOutputStream java      6 more
291996	Invalid thread access from JavaMergeViewer during extracting method  I was extracting method in the source with compilation errors  Error dialog disappeared  so I guess some shell was presented and closed after the error  org eclipse swt SWTException  Invalid thread access org eclipse swt SWTException  Invalid thread access
296794	DocumentChange fails if document is not thread safe  User Agent Mozilla 5 0  Windows  U  Windows NT 5 1  ru  rv 1 9 1 2  Gecko 20090729 Firefox 3 5 2 Build Identifier  I20090611 1540 This code worked in Eclipse 3 4 but throws org eclipse swt SWTException  Invalid thread access in Eclipse 3 5  Seems like this is because of you try to run the refactoring changes in non ui thread when possible  Reproducible  Always Steps to Reproduce  final Document doc    SynchronizableDocument final Point position  Refactoring ref   new Refactoring     Override public Change createChange IProgressMonitor pm   DocumentChange change   new DocumentChange  test   doc   TextEdit replaceEdit   new ReplaceEdit position x  position y   replaced    change setEdit replaceEdit   return change          RefactoringWizard wizard   new RefactoringWizard ref  RefactoringWizard DIALOG_BASED_USER_INTERFACE    Override protected void addUserInputPages     UserInputWizardPage page   new UserInputWizardPage  wizard_title    public void createControl Composite parent          addPage page        IWorkbenchWindow win   PlatformUI getWorkbench   getActiveWorkbenchWindow    new RefactoringStarter   activate wizard  win getShell     wizard_title   RefactoringSaveHelper SAVE_ALL
297709	JDT error behavior when  link with editor  option opening  User Agent        Mozilla 5 0  Windows  U  Windows NT 6 1  zh CN  rv 1 9 1 5  Gecko 20091102 Firefox 3 5 5 GTB6 Build Identifier  I20091210 1301 JDT frequencely synchronize the package tree when link with editor option opening  Reproducible  Always Steps to Reproduce  1 open some other class in editor  like Composite  SWT  Control and so on 2 new java class wizard  after completed  the editor should open the newly java file  3 At this moment  the package tree change change and change again  4 where change to the before opened class resource item  5  sometimes  autocomplete result to same synchronize actions
300536	Invalid thread access while undoing quick fix   I20100122 0800  I quick fixed a dead code error and then used undo to see previous state  Got this error  org eclipse swt SWTException  Invalid thread access
301242	UI locked by 2 dialogs after repeated Undos in Java editor  Created attachment 157616  details  Stacktrace I20100128 1731 The UI can be locked up by 2 dialogs when the user repeatedly performs Undo in a Java editor with the  Format all  Save Action enabled  My test case    check out org eclipse ui workbench   open class SearchPattern  go to validateMatchRule       add spaces at the beginning of a few lines   press Ctrl S   add more spaces at the beginning of a few lines   press Ctrl S again   press and hold Ctrl Z
319689	Invalid thread access in ProblemMarkerManager  I ve just got this exception while shuting down my 4 0 SDK but my guess from the stacktrace is that this not really a problem solely in 4 0         8          org eclipse swt SWTException  Invalid thread access         8
336841	Show In  doesn t work in Synchronize view for open  java file outside of classpath  Created attachment 188698  details  Fix & test HEAD  Show In   Package Explorer  doesn t work in the Synchronize view for an open  java file that is not on the classpath
347599	Provide a way to implement refactorings that depend on resources that have to be explicitly released  Created attachment 196865  details  Refactoring dispose   method C   refactorings must hold a lock on C   index  Currently it is pretty hard to determine when the lock should be released  Under normal circumstances the lock has to be released at the end of createChange method  but in case of errors it may have to be released in checkFinalConditions or checkInitialConditions  The situation is further complicated by possibility that check Conditions and createChange methods may be called multiple times  This life cycle uncertainty makes reliable release of C   index in CDT refactorings virtually impossible  The proposed solution is to add org eclipse ltk core refactoring Refactoring dispose   method and call that method before the refactoring object goes out of scope  C   rafactorings would override the dispose method and release the index lock there  The attached patch adds dispose method to Refactoring class and calls to this method to PerformRefactoringHistoryOperation and RefactoringHistoryWizard  There are more places where dispose calls should be added  but none of these places would cause problems even with a missing dispose call since they don t deal with refactorings that override the dispose method  The patch is intended for Eclipse 3 8
411636	Save is very slow  burns cycles in the Package and Project Explorer   Created attachment 232751  details  Stack trace I noticed that when I saved a Java file  the UI would be come unresponsive for about 5 seconds  I did a stack trace  attached  and noticed that the main thread seemed to be hung up somewhere in the project explorer  When I unchecked  Link With Editor  this delay went away  I tried doing the same action on the exact same workspace in Indigo and did not notice the same delay  My workspace is very large  100  projects  maybe 50 100K files   I m using  Version  4 3 0 Build id  I20130605 2000
411841	Rerunning a test from JUnit results view is launching the test on UI thread  When I rerun a test by selecting  Run  from the JUnit test results view context menu the test launch is happening on the UI thread  When build before launch is enabled the project build is invoked on UI thread on Eclipse is frozen during the test launch process  I am working on a patch to avoid it by delegating the rerun config launching to DebugUITools launch   and will attach it to the bug soon  A sample stack trace captured during the freeze is
417765	ImageDescriptorRegistry hookDisplay   causes SWT Invalid thread access  Eclipse Kepler There appears to be a case where NewJavaProjectWizardPageTwo causes an SWT Invalid Thread Access when using Bndtools  This problem has been reproduced by others  To reproduce  create a new workspace  switch to the Bndtools perspective  create a new Bndtools OSGi project  You should get the Invalid Thread Access  The workaround is to delete the project you just created and create it again  I believe the key here is that you have a brand new workspace  Here is the stack trace  org eclipse swt SWTException  Invalid thread access