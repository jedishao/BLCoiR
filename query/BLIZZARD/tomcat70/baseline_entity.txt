39769	application is unload seem be case understanding is executing code web app code INSTANCE variable is servlet have been loaded SHARED classloader classloader set thread is one problem occurs try close T5 dos windows suppose occurs uninstall webApp T5 notice problem T5 verified  s code problem is Regards David Gagnon class loader destroy called myServlet is T5 shared directory web app needs have getContextClassLoader classes are T5 shared directory getClassLoader shared classloader StandardCalssLoader getContextClassLoader give WebappLoader used StandardContext problem occurs unload calling destroy method fireInstanceEvent be classloader related getLoader
40380	expiring manager syncro problem expire
42530	Environment Tomcat JDK TestServletF protected doGet HttpServletRequest request Test is called processExpires Tomcat6 sessions ManagerBase has been changed HashMap ConcurrentHashMap time synchronized operations sessions have been removed methods findSession String is add Session session remove Session session think add Session session remove Session session manipulate sessions synchronized manner Tomcat backgroundProcess throws NullPointerException backgroundProcess throws NullPointerException NullPointerException is follows ManagerBase findSessions results size A results Session toArray results B lock sessions is acquired add Session session remove Session session Servlets execute invalidate A B see result NullpointerException is thrown processing line processExpires
45453	JDBCRealm caches PreparedStatement preparedRoles case JDBC driver gets confused blocks waiting server response causing threads try access DB hang was observed PostgreSQL JDBC driver getRoles synchronization causes hangs w DIGEST authentication getRoles synchronization causes hangs w DIGEST authentication missing synchronization JDBCRealm DigestAuthenticator allow threads call getRoles T1 do executeQuery T2 does setString userName executeQuery PreparedStatement object
47158	think AccessLogValve has race condition problem Based article think variables class be declared get rid race condition
47524	McastServiceImpl executor is dispatching events Created attachment details Fix proposal class McastServiceImpl does dispatch events executor is creating threads class ReceiverBase has queue address issue have refactored code reuse class attaching diff file  m filing bug Bugzilla is procedure Trunk branch tell proceed Regards Ariel
48172	instance is accessed threads returned value be value be tell be made are written constructor JspRuntimeContext synch problems jspReloadCount is synchronised updated read getJspReloadCount is Javadoc say getter needs be synch field needs be use AtomicInteger fields are synchronized g classpath codeSource
48234	seems access subclasses considerations apply logName logName Javadoc getLogger states return does appear be getLogger thread getLogger is synchronised methods access logger are synch logger be prevent unsynch method returns parent logger
48248	run be run be is used communicate running threads
48249	run run be is used communicate running threads
48399	Lock fields be Created attachment details Patch lock field be field is used lock be diffLock is protected
48790	Thread http  8080 3 Tid WRITE Lock Set Thread http  8080 1 Tid READ Lock Set Statement statement executed manner fix problem is move statement statement synchronized block Race condition ManagerBase maxActive ManagerBase field maxActive Data Race ManagerBase ManagerBase add Lorg apache catalina Session V StandardSession setId Ljava lang String V ManagerBase createSession Ljava lang String Lorg apache catalina Session StandardManager createSession Ljava lang String Lorg apache catalina Session Request doGetSession Z Lorg apache catalina Session Request getSession Z Ljavax servlet http HttpSession RequestFacade getSession Z Ljavax servlet http HttpSession RequestFacade getSession Ljavax servlet http HttpSession AuthenticationManager login Ljavax servlet http HttpServletRequest Z ManagerBase add Lorg apache catalina Session V StandardSession setId Ljava lang String V ManagerBase createSession Ljava lang String Lorg apache catalina Session StandardManager createSession Ljava lang String Lorg apache catalina Session is code snip java
48843	Tomcat Acceptor Thread goes wait come believe  ve found race condition Tomcat causes http port be exists code has been refactored find reference Bug database mailing list archives sequence events is follows Thread Thread are servicing request request comes createWorkerThread returns threads are processing requests acceptor thread executes while workerThread statement is switched CPU acceptor thread is switched CPU executes synchronized block goes wait point are Worker threads processing requestsand is thread wake acceptor thread application is solution be check curThreadsBusy synchronized block going wait method getWorkerThread increase scope section include while loop Thanks Harshad Stack Traces bda19102143 id WAITING http  8091 Acceptor 0 id WAITING Consider tomcat instance maxThreads set e have tomcat threads service requests class java acceptor thread calls methods processSocket calls getWorkerThread calls createWorkerThread threads executing requests go await waiting job executing method recycleWorkerThread wait Method M wait Method M
48895	enumerates Threads looks structures Thread class are memory barrier ensure state ThreadLocalMap being examined is ThreadLocal Thread A was cleaned application thread B is undeploying application does see up date state  s synchronization threads remove method is thread is expungeStaleEntries method be invoked clearThreadLocalMap webapp is being applications continue receive load requests structures ThreadLocalMap instance propose keep detection leaks is make clearing default avoid encountering problems production Idea improve clearing way thread is provoking leak is tomcat worker threads mark have background task end threads renew threads pool clearThreadLocalMap concurrency issues think memory leak protection clearReferencesThreadLocals detects clears ThreadLocals prevent GC WebAppClassLoader instance has issues regarding concurrency detecting leak invokes remove ThreadLocal Thread  s ThreadLocalMap instance invocation is done Thread B thread undeploys app
49129	Findbugs says method contains initialization static field compiler processor reorder instructions threads are guaranteed see initialized object method be called threads md5Helper initialisation make field correct
49144	initialization update static fields initialization update static fields Findbugs says method contains initialization field field is set object stored location is updated accessed setting field is threads is set futher accesses method set field serve initialize object have multithreading bug something prevents thread accessing stored object is initialized feel method is called threads be set field value are setting is daemon contextDigester
49567	starting thread startAsync amount doPosts is generated Created attachment details testcase demonstrating bug starting thread startAsync amount doPosts is generated GET status is Server Error is exception thrown tomcat attached code demonstrates printing Start async amount times
49730	Race condition StandardThreadExecutor requests are enqueued creating threads tomcat configure Executor minSpareThreads work memory leak issues redeployment development refresh page webapp Safari Chrome Firefox resources page take seconds be served are resources come 50ms is scenario ThreadPoolExecutor is user refreshes page accesses cache web browser page uses resources browser establishes TCP connection Thread is created browser receives response decides load resources parallel establishes TCP connections tests study sources Java ThreadPoolExecutor see  s delay time Thread is created increasing poolSize time starts working task increasing activeCount Keep Alive is enabled tomcat threads take care TCP connection time requests queue wait keep timeout Thread is returned pool serve pending tasks 25s keepAliveTimeOut means requests take 25s be served eventhough pool was server facts issue test case starts pool occur loaded server thing triggers issue is burst TCP connections problem is keepAliveTimeout keepalive is case depends time taken serve requests issue affects tomcat is tc7 threads are returned pool http request TCP connection is kept impact tc6 instance requests page html others resources js css have take 10s analysis found offer statement getPoolSize is Acceptor thread calls execute process connection call offer is being called case connections are established burst calls offer are delay do have getPoolSize task is enqueued forcing creation thread serve
49905	cluster using DeltaManager memory leak occur Created attachment 26008 details Patch remove context classloader threads ThreadPoolExecutor tribes Tested apache tomcat running jdk 1 6 0_18 DeltaManager turn initalization asks sessions nodes result creating threads ThreadPoolExecutor tribes threads created contextClassLoader set webapplication WebAppClassLoader results memory leak error message redeployment log web application creditdev appears have started thread named pool  1 thread 1 has failed stop is create memory leak Stacktrace Source MessageDispatch15Interceptor pass instance ThreadPoolExecutor executor creation instance call setContextClassLoader newThread method DeltaManager is instantiated assigned start is done bindThreads S clearReferencesThreads addIfUnderCorePoolSize Proposed solution implement ThreadFactory
49985	Lazy initialization synchronization data race AstInteger AstFloatingPoint AstString r998053 Use init synchronization methods getInteger getFloatingPoint getString Consider AstInteger Data races number method getInteger read line write lines
49987	Data race ApplicationContext r998053 Data race Map parameters method parameters read parameters results write
50138	Symptom processor threads spin tomcat processor daemon prio tid nid javadoc HashMap says Note implementation is synchronized threads access hash map threads modifies map be synchronized Lack synchronization SecurityUtil State Cause objectCache is HashMap access is synchronized
50293	Created attachment details threads call add is threads get size check thread updates size thread tries update size fails ArrayIndexOutOfBoundsException makes sense increase default size ELResolver array jasper EL adds ELResolvers propose default CompositeELResolver synchronization issue Synchronize change add add method needs synchronize update resolvers
50352	Example Servlet  WebServlet value MyServlet asyncSupported protected doGet HttpServletRequest request  Override  Override  Override  Override  Override is called is called Using servlet async features is called async thread AsyncListener onComplete method is called be
50353	following example leads NPE servlet spec is behavior adopt timeout do think be returned IllegalStateException seems be case is called timeout  WebServlet value MyServlet asyncSupported protected doGet HttpServletRequest request  Override  Override  Override  Override  Override Calling getResponse returns async timeout async thread calls getResponse async timeout gets reference
50459	bindThread unbindThread are limited thread side effect commit think found bug bindThread unbindThread methods tomcat methods be unbindThread restore Thread CCL calling unbind unbindThread bindThread call bindThread bind unbindThread call unbindThread unbind
50547	CHANGE_SESSION_ID message received cluster session synchronization is dropped CHANGE_SESSION_ID message SESSION_EXPIRED message set timestamp messages are received cluster sessions synchronization DeltaManager startup timestamp is set are dropped made patch add timestamp CHANGE_SESSION_ID SESSION_EXPIRED message Regards
50554	use getClass lead concurrency bugs future Using getClass lock is bug pattern class subclasses javaURLContextFactory getInitialContext gets called instance subclass getClass return Class object instance Locking objects classes is behavior method getInitialContext Hashtable has synchronized block getClass suggest remove bug pattern replacing getClass class
50629	Make bindThread unbindThread method protected Tomcat codes saw thread is created listener start filter start loadOnStartup methods bindThread unbindThread is marked making methods protected containers use methods initialization works Thanks
51185	Performance DataSourceProxy  createPool use grained synchronisation do know is component Enhancement concerns Tomcat JDBC POOL Looking code think DataSourceProxy  createPool be synchronized use method is synchronized used creation is needed something createPool is called lots getters get synchro IMPACT needing Regards Philippe
51197	sendError sendRedirect do work AsyncContext server side async request completes everything looks client gets response server appears Tomcat times default seconds closes connection headers are returned content nothing  ve confirmed thread dumps server is stuck client gets response time put test isolates issue See README details NOTE behavior sendError changed sendError seems close connection client gets response kind reason sendRedirect sendError are producing behavior using AsyncContext use setStatus setHeader works
51212	QueryStats has synchornisation issues Created attachment details Patch Atomic approach do know is think QueryStats fields be are accessed threads time made Load test load collected results SlowQueryReport get queries number executions is have been executed way do know approach perform synchronize add failure Use Atomic did performance reasons Regards Philippe Mouawad
51467	usage method run start start thread StandardContext method Thread  run is used is mistake lines Thread  join is called wait completion thread remove join get rid thread using start thread
51545	make threadname ExtendedAccessLogValve Created attachment details Threadname ExtendedAccessLogValve discussed tomcat users mailinglist make threadname thread served request ExtendedAccessLogValve
51688	JreMemoryLeakPreventionListener protect AWT thread creation addition JreMemoryLeakPreventionListener alleviate condition webapp calls getDefaultToolkit launch thread AWT Windows AWT XAWT capture ContextClassLoader pinning webapp memory undeploy redeploy
52055	ChunkedInputFilter is recycled servlet request  m using servlet async APIs tomcat server side code is something following read input stream InputStream returns bytes HTTP post chunking has been recycled nextRequest reuse request result endChunk flag is request return reading buffer debugging found ChunkedInputFilter is reused AbstractInputBuffer
52091	TagHandlerPool is TagHandlerPool is ran stress test web application using tomcat7 occured Profiler said causes are followings attached patch resolve issue environment makes following changes Makes log field static StandardWrapper changes lock policy synchronized block ReentrantReadWriteLock Lock log instance TagHandlerPool Lock parameters field getInitParameter
52213	accesses be synchronized is make flag protect access used Keshmesh detect concurrency bug pattern Field enabled be
52259	synchonization issues lock realm is presented configuration Problem Tomcat startup freezes INFO Deploying web application directory Nuances errors are displayed logs http request port wait  s host configuration setup works build including lib jar files tomcat are replaced lib jar files tomcat everything works fix thank tomcat process be shutted sh script fill contact details ru
52356	Prevent data races size accesses size are synchronized add ChannelMessage Member InterceptorPayload remove read access getSize is synchronized lead race condition getSize is used bug manifests suggest Tomcat developers remove getSize make access shared field Field size is declared
52777	shut versions deployment deployment version application has sessions shut release tomcat JVM resources Christopher Schultz suggested approaches be Tomcat user list Modify deployment code register MBean NotificationListener filters events expiring session notifications webapp session count start thread stops webapp de registers listener Install SessionEventListener counts sessions have get count JMX suppose equal starts thread Install Timer thread polls intervals minute see sessions are starts thread idea seems Tomcat fire events things session count changing listener receives notification check state g session count suppose make part filter step
52999	was reported dev list method contains section Is is called put operation request session map code tomcat looks candidate CopyOnWriteArrayList confirm see fireContainerEvent calls places StandardSession confirm reported problem request attributes do see anything code send events access Is solve ReadWriteLock be have helper class avoids copying array access said copy write classify enhancement request Thread performance problems found myfaces testing dev list starting Performance issue locking fireContainerEvent are nested loops loop StandardSession array getApplicationEventListeners copying list container listeners array fireContainerEvent
53173	maxConnections feature hangs system Created attachment details fix missing count maxConnections latch  ve run scenario JIO Acceptor thread hangs connections are counted Executor name tomcatThreadPool namePrefix tomcat minSpareThreads maxThreads Connector port maxKeepAliveRequests executor tomcatThreadPool connectionTimeout acceptCount Thread dump yields http bio 8080 Acceptor 0 daemon prio tid 0xXXXXXXXX nid 0xXX waiting condition 0xXXXXXXXX xXXXXXXXX imagine is use case reproduce test case way reproduce is create following configuration Executor name tomcatThreadPool namePrefix catalina exec maxThreads minSpareThreads maxQueueSize Connector port protocol HTTP executor tomcatThreadPool connectionTimeout redirectPort maxConnections reproduces test case state machine is taking account connections be rejected queue does count latch  m attaching patch fix use case be fix workaround patch introduces maxConnections configuration disables usage maxConnections  1 setting is give administrator workaround edge cases are tracked have been reproduce error NIO connector is place JioEndpoint requires handling RejectedExecutionException processSocketAsync SocketWrapper  Socket  socket SocketStatus status is unhandled port Http11Protocol State WAITING parking parking wait LimitLatch Sync
53450	Deployment application ROOT context hangs scenario is following have running Tomcat deploy application ROOT context deployment hangs taking tread dump following is localhost startStop daemon prio tid nid waiting condition 0x0000000009ebf000 see listener is invoked process container event ReentrantReadWriteLock is stated upgrade read write lock is Reentrancy allows downgrading write lock read lock acquiring write lock read lock releasing write lock Regards Violeta Georgieva State WAITING parking parking wait ReentrantReadWriteLock upgrading read lock write lock is
53498	Atomicity violation bugs misusing collections Created attachment details patch fix atomicity violation bugs name is Yu Lin student CS department UIUC  m doing research mining Java library misusages found misusages ConcurrentHashMap Tomcat result atomicity violation bugs harm performance L1265 code atomicity violation occur lines Suppose thread T1 executes line finds hashmap attributes contains name thread T1 executes line thread T2 removes name key attributes thread T1 resumes execution line get value name line throw NullPointerException invoking method name snapshot has atomicity violation Let look lines Suppose thread T1 executes line finds hashmap dose contain name gets execute line thread T2 puts pair name v hashmap parameters thread T1 resumes execution overwrite value written thread T2 code preserves put semantics found misusages files executes line thread T2 puts pair contextName v hashmap deployed thread T1 resumes execution overwrite value written thread T2 putIfAbsent method shoule be used put method line  m D code is snapshot code file java line line java atomicity violation occur thread T2 remove name hashmap tomcatAttributes thread T1 executes line java suppose thread T1 executes line finds hashmap dose contain contextName
53624	sendRedirect does work dispatch AsyncContext project demonstrating issue Build deploy source tomcat issue repro home page deployed application select Redirect scenario scenario involves Servlet RedirectA creates thread dispatches Servlet RedirectB turn redirects Servlet RedirectC forwards JSP page JSP page rendering see page log output show processing ended ServletC FWIW forward is used dispatch async thread scenario works do modify line creates servlet RedirectA be ForwardingAsyncServlet DispatchingAsyncServlet issue is was marked resolved issue was tested call sendRedirect dispatch does redirect returns status code details setup see setupRedirectScenario ServletContext
53843	isAsyncStarted return thread started async processing period dispatch is called dispatch begins DispatcherType becomes ASYNC isAsyncStarted return return value isAsyncStarted change thread A is exiting causing recognize async processing started needs exit async processing starts container thread A calls isAsyncStarted return expected application thread B calls dispatch isAsyncStarted begins return dispatch has occurred case spec says dispatch operation be delayed container initiated dispatch has returned
54045	ReplicatedMap do like TcpFailureDetector static configuration Tribes stack using Do work static cluster side thread side thread Note be issue AbstractReplicatedMap TcpFailureDetector node disapear replicated map try use message sent node fail exception does fix ReplicatedMap issue fix avoid adding missing member membership list does fix AbstractReplicatedMap issue work acknoledge nodes code Tomcat regards F Arnoud ReplicatedMap use value is SEND_OPTIONS_USE_ACK override heartbeat avoid performBasicCheck use static configuration TcpPingInterceptor call performForcedCheck
54086	ConcurrentModificationException NioReceiver shutdown Solaris jdk use clustering session replication nodes nodes get ConcurrentModificationException shutdown have been reproduce exception looked code briefly noticed use SelectionKey Iterator selector key selected key sets are use threads thread modify sets access be controlled synchronizing set log see close cluster receiver exception ConcurrentModificationException iterators returned sets iterator methods are set is modified iterator is created way invoking iterator remove method ConcurrentModificationException be
54521	DigestAuthenticator fails case requests client components Scenario client sends requests millisecond DigestAuthenticator creates request NonceInfo instance nonces are were created millisecond writing data cache method generateNonce NonceInfo instance overwrites key Problem client threads send request digest authentication header requests nc count is nonce has been created request NonceInfo instance is used instance is retrieved map nonces using nonce key is requests key is used authentication fails client has sent digest authentication header Conclusion Working clients requests digest authentication does function DigestAuthenticator NonceInfo NonceInfo request array seen is set index   length method nonceCountValid returns seen   length has been set
55267	NIO thread locked Did load test thread got stuck see dump simulate users connect disconnect
55309	issue TagPluginManager Created attachment details Patch TagPluginManager TagPluginManager is shared ServletContext contains PageInfo pageInfo PageInfo be aligned specified page PageInfo is used holding page information Import are pages are compiled parallel encounters issue page be compiled server is restarted
55521	Race Condition HttpSession  invalidate HttpServletRequest  getSession Created attachment details code flow exhibits race condition session fixation protection have discard user session create one user login state changes rely Spring Security SessionFixationProtectionStrategy core uses following commands Yesterday had message log indicates command returned session was invalidated line container did change session ID session was created investigated issue found is fact race condition threads associated requests client enter session fixation protection code parallel effect thread B obtain session session interface provides way detect expiring session error message appears production log files go weeks seems be event be implement session fixation race condition Regards Christoph attached TXT file illustrates code flow leads race condition thread B calls invalidate call returns session is expiring state session is call getSession create session
55524	Created attachment details thread dump deadlock use Tomcat application uses Websockets deadlock occurs write operations websocket have attached thread dump deadlock issue is duscussed are threads Found Java level deadlock Atmosphere Shared AsyncOp is held Atmosphere Scheduler Atmosphere Scheduler is held Atmosphere Shared AsyncOp Java stack information threads listed Atmosphere Shared AsyncOp Atmosphere Scheduler Deadlock produced Websocket write operation WsOutbound waiting lock monitor 0x00007efebc0015f8 object 0x00000005ef4c6988 WsOutbound waiting lock monitor 0x00007efe8c290ac0 object 0x00000005ef4b77f8 AtmosphereResourceImpl waiting lock WsOutbound locked AtmosphereResourceImpl waiting lock AtmosphereResourceImpl locked WsOutbound
55582	issue TagFileProcessor Created attachment details getting wrapper RuntimeContext following code has issue creates duplicated JspServletWrapper scenario A jsp C tag B jsp C tag A jsp B jsp are compiling come given lines threads get JspRuntimeContext JspServletWrapper instances JspServletWrapper was created
55684	Tomcat have permissions granted manage SecurityException avoid access parent ThreadGroup thread start Tomcat getThread want access root ThreadGroup method getThread try access root ThreadGroup order list threads
55799	Stability issues sending messages Created attachment details Test case modifications Chat example thread Users List described problems occur sending messages WebSocket connection using getBasicRemote sendText String WebSocket connection is closed guess browser aborts connections data corruption Timeout errors have examined data sent TCP Exceptions occur see reproduce Checkout Tomcat trunk r1543467 apply attached patch Build Tomcat run Windows machine used Windows x64 Java x64 using NIO HTTP connector default configuration Open Firefox IE Repeat following actions interval Wait seconds be Tomcat closes WebSocket connections time time see browsers WebSocket connection is closed Tomcat show following exceptions think IOException ClosedChannelException are expected browser aborts connection add synchronization modifying ChatAnnotation broadcast method repeat steps start press F5 time everything appear getting IOExceptions ClosedChannelExceptions tried minutes got problems WebSocket connections are closed closed opening time browser did get response HTTP request browser got WebSocket reply XHTML page reply see added screenshots got exceptions ChatAnnotation class does synchronize using method means threads call Basic  sendText JavaDoc Basic says websocket connection underlying RemoteEndpoint is sending message call is made send example threads attempt call send method developer attempts send message middle sending existing send method called connection is throw thought had read implementation synchronize calls methods Basic throwing ISE has changed sending Messages Websocket using Basic threads synchronization problems happen open xhtml example browser shows seems be WebSocket response xhtml file see added screenshots issues happen synchronizing calls Basic  sendText are reproduce applies modifications Chat Websocket Example Javascript sends messages interval ms ChatAnnotation modifies message be times message sends using getBasicRemote  sendText msg browsers g IE press F5 times Nov http nio  8080 ClientPoller 0 processSocket Error allocating socket processor NullPointerException Nov http nio  8080 exec 3 onError Chat Error ClosedChannelException ClosedChannelException Nov http nio  8080 exec 2 onError Chat Error IllegalArgumentException InvocationTargetException IllegalArgumentException InvocationTargetException Caused InvocationTargetException Caused CoderMalfunctionError BufferOverflowException Caused BufferOverflowException Nov http nio  8080 exec 10 onError Chat Error IOException Eine vorhandene Verbindung wurde vom Remotehost geschlossen IOException Eine vorhandene Verbindung wurde vom Remotehost geschlossen try press F5 be Websocket connection is closed was opened browser does get response request xhtml xhtml IE Firefox do nothing WebSocket connection be closed Nov http nio  8080 exec 9 onError Chat Error IOException ExecutionException IOException Key be cancelled IOException ExecutionException IOException Key be cancelled Caused ExecutionException IOException Key be cancelled Caused IOException Key be cancelled Nov http nio  8080 exec 3 doRun NullPointerException Nov http nio  8080 exec 15 destroy Failed close WebConnection destroying WebSocket HttpUpgradeHandler NullPointerException Nov http nio  8080 exec 15 process Error processing request IllegalArgumentException
55996	Async context does timeout HTTP NIO connector Created attachment details Servlet Async processing Java Based client created ProblemServlet receives request Java based client Servlet starts Async processing request Async processing run method is while loop sends String messages client implementation run method is shown void run try continu try catch InterruptedException e Java based console application client hits servlet reads output stream sec messages arrive seconds connection is closed server Logs Server side Starting Async Context Mon Jan IST Mon Jan IST Mon Jan IST Mon Jan IST Mon Jan IST Mon Jan IST Mon Jan IST Mon Jan IST Mon Jan IST Mon Jan IST Mon Jan IST Mon Jan IST Issue is seen apache tomcat apache tomcat tested release variants codebase run apache tomcat  8 0 0 RC10 are issues println publishing message publishing message publishing message publishing message publishing message publishing message publishing message publishing message publishing message publishing message publishing message publishing message publishing message Exception thread http bio 8080 exec 6 IllegalStateException request associated AsyncContext has completed processing
56042	issue appears response has been set startAsync wonder anyone do scenario is bit involves thread completes startAsync is called resulting stack trace Servlet spec says is call startAsync response has been committed closed is reason error be raised startAsync be allowed proceed is issue be fixed  s works Jetty spec says is IllegalStateException Calling asyncComplete is request Async state MUST_DISPATCH IllegalStateException Calling asyncComplete is request Async state MUST_DISPATCH
56082	Created attachment details Source reproduce reproduce download attached run mvn package using Maven copy target test war tomcat webapps start Tomcat case is reproduced using Tomcat JDK ConcurrentModificationException ClassLoaderLogManager Tomcat getLogManager is instance ClassLoaderLogManager webapp iterating result getLoggerNames ConcurrentModification occur see lot Issue reproduced ConcurrentModificationException System output webapp uses getLogger String getLoggerNames threads suppose copy result be made getLoggerNames
56518	NIO async servlet limit latch leak Created attachment details sample webapp reproduce bug have encouter bug product webapp have tested linux oracle jdk jdk1 7 0_55 tomcat tomcat 8 0 5 CONFIG WEBAPP LOGIC situation user thread be interrupted timeout logic code PROBLEM connections limit latch count max default tomcat DO accept connection client hangs REPRODUCER tomcat installation Optional add maxConnections reproduce bug copy sample webapp attachment webapps ROOT war start tomcat request is limit latch leak requests reaches maxConnections set client curl hangs TECHNIC DETAILS debug found channel closed SelectionKey was removed Poller thread stack trace Daemon Thread http nio  8080 ClientPoller 0 Suspended owns Object id owns HashSet  E  id owns EPollSelectorImpl id owns Collections id owns Util id SelectionKey was removed attachment returns WORK work around switch BIO connector change HTTP Connector NIO xml g Http11NioProtocol call startAsync start async serlvet execute async logic user thread user code call flushBuffer send response client situation descibed countDown is called change default xml Connector config change Http11NioProtocol make request html do echo curl html done thread was interrupted user code call flushBuffer NioChannel was Closed jdk NIO code ClosedByInterruptException is thrown call run processSocket NioChannel SocketStatus code is logic is break countDownConnection is called limit latch leak happens avoid call flushBuffer user thread
56577	executor WsServerContainer executor service process SendHandler sendAsync calls is initialized WsServerContainer is using queue corePoolSize threads be created corePoolSize has default value be be changed context parameter  s find optimized value create issue using SendHandler close session sending message example stack trace is following WebSocketServer spring websocket test daemon prio tid nid waiting condition 0x00007f9f73af8000 value maximumPoolSize does have State TIMED_WAITING parking parking wait CountDownLatch Sync locked Object threads are state be threads clear SendHandler send methods throw TimeoutException clients receive messages
56653	Concurrency issue Mapper stopping Contexts code exists Tomcat nesting field is used mapping contexts example are following contexts ROOT foo foo  bar Context foo  bar is being stopped behaviour Map context foo application behaviour be request be mapped ROOT webapp foo have test case noticed issue reviewing code removeContextVersion trunk removeContextVersion removeContext Tomcat does following problem is is delay list contexts is updated contexts field is updated request foo comes g
56724	Restart Container background thread died ContainerBackgroundProcessor compounding OOMEs Background thread died errors log invoking backgroundProcess JMX has effect think is start background thread delay start succeeds be thread stack help StackOverflowError help OutOfMemoryError thread death nothing is strategy admin handle OutOfMemoryError is start JVM XX OnOutOfMemoryError flag script shuts restarts Tomcat address issue has been raised times mailing lists g
56746	Webssocket client thread access webapp resources Removing line restores access threads have classloader calling webapp thread SecureIOThreadFactory method AsyncChannelWrapperSecure sets context class loader websocket client threads  s class loader preventing accessing webapp resources
56857	Thread stacks ApplicationContextFacade implements ServletContext objects are singletons webapp get passed threads Suggested remedy change ConcurrentHashMap is thread performs synchronizing access connector userId sessionId C9EC1C59DD2244557BC6231A5476000E daemon prio tid nid Thread safety issue invokeMethod Thread dumps were exhibiting lots threads hanging get status consuming CPU indicator thread safety issue Maps member objectCache is HashMap e thread gets accessed modified synchronization invokeMethod State
56907	Threads leak using WebSocket implementation versions leaking threads were noticed URL specify page Count threads are increasing reconnect attempt URL Leakage threads be observed using jvisualvm program make deal kind situations destroy threads Use method connection endpoint clientEndpointConfiguration path reproduce issue result connection return error Found threads have been created class AsyncChannelWrapperSecure stay time source threads creation ExecutorService executor newFixedThreadPool SecureIOThreadFactory live time disable application calls connection connection
57265	Tomcat hiden NGINX fails send file using NIO connector have moved Tomcat server nginx balancing server have started experiencing problem Problem occurres loading lots scripts refencenced homepage seems be useSendfile have tried add logging flushing output code lowers occurrence rate looks race condition problem NioEndpoint Nov http nio  8443 ClientPoller 0 IllegalArgumentException read using application read buffer provided handler
57338	SingleSignOnEntry cache ClusterSingleSignOn valve is synchronized Tomcat startup using ClusterSingleSignOn valve looks sign session state is synchronized cluster nodes start state is replicated moment action is performed nodes come action are sync
57340	NioConnector caches get corrupted comet close Configuration Tomcat NioConnector nginx atmosphere happens nginx atmosphere close comet connection Poller unregisters channel read forks thread B handle event see NioEndpoint SocketChannel is case thread B has invalidated SelectionKey Poller thread A initiates closing process forks thread D Thread B completes closing process puts NioChannel AttachmentKey corresponding caches Caches become corrupted contain references object requests get NioChannel AttachmentKey stuff happen mixed responses Poller thread A SocketChannel becomes read nginx closes atmosphere calls connection thread C Tomcat receives action code COMET_CLOSE adds channel Poller registers read
57420	class names generated URL_ENCODER DirContextURLConnection is thread  ve been debugging time tomcat starts fail deploy webapp find class class name is garbage error stack trace is process resource element jndi localhost testapp WEB INF classes ch blabli dNlewrP lculgiansDisalog class annotations time time see referenced class name is mix class name classes exist vicinity class was catch exception debugger dcUrlConn DirContextURLConnection contains entries WAR file Calling list debugger yields results  s contents dirs URL_ENCODER is thread result garbage used is note failure had step was caused classes WEB INF classes directory JAR files WEB INF lib appears are DirContextURLConnections concurrency issues use URL_ENCODER  s stacktrace error occurs process resource element jndi localhost medusa config editor 5 48 0 WEB INF classes ch ergon medusa configeditor ui dialog aTsesxtAreaDialog class annotations FileNotFoundException jndi localhost testapp WEB INF classes ch blabli dNlewrP lculgiansDisalog Enumeration dirs list does lCsosn acslsass aticolnaLsosad LocadlLaisstsen cCaotnifiognur lCaonsfsig s cluaiss CwoindgfetisegtEditorApplication class class ConfigEditorApplication ConfigEditorApplication class class ConfigLoader class class class class class command data field rendering session ui util widgetset walking list command leads list turn is encoded using URL_ENCODER class UEncoder Jan PM ContextConfig processAnnotationsJndi process resource element class annotations FileNotFoundException class Jan PM ContextConfig processAnnotationsJndi FileNotFoundException jndi localhost medusa config editor 5 48 0 WEB INF classes ch ergon medusa configeditor ui dialog aTsesxtAreaDialog
57681	Allow class loading web application class loader synchronizing class object Created attachment details classloading port Tc Tc Related fix Tomcat Add web application class loader implementation supports loading web application classes Source file patch
57683	Crash stockticket async example caused client request mentioned issue Time thread dev is bug error handling example webapp is regression changes is Steps reproduce Using Tomcat JDK 6u45 Start Tomcat Visit stockicker example Abort request page is being loaded Press Esc key keyboard Re visit example Expected Working stockicker example Browser waits response seconds progress indicator stops page is displayed Access log shows response status byte counter is Mar  0300 GET examples async stockticker HTTP INFO error occurred processing thread connection be closed Looking console is exception followed following exception explains behaviour exception is logged console is logged Tomcat log files Looking log is following exception AbstractProcessor setErrorState SocketException Software caused connection abort socket write error IllegalStateException request associated AsyncContext has completed processing Stockticker thread crashed handled ISE
57779	Deadlock using thread write ServletOutputStream using thread write ServletOutputStream deadlock occur io error occurs write example client drops connection is caused synchronized operation underlying socket object servlet handling thread is blocked waiting end output thread holds lock socket object http bio 25030 exec 10 daemon prio tid nid waiting condition 0x00007f767aeeb000 thread trys write io error occurs Thread daemon prio tid nid waiting monitor entry trys get lock socket object threads are blocked tomcat version used was issue had look source code saw failing code was invented State WAITING parking parking wait AbstractQueuedSynchronizer locked SocketWrapper State BLOCKED object monitor waiting lock SocketWrapper
57943	NioEndpoint thread died restart tomcat tomcat process request find error log tomcat poller thread is catch exception thread is died connection is accept has poller thread process Exception thread http nio  7001 ClientPoller 1 ConcurrentModificationException
57959	Tomcat deadlock log file is rotated issue has been fixed tomcat tomcat tomcat ensures writer remains comment order is have acquire read lock release write lock make race condition does occur way do is Deadlock java log is rotated
57977	Created attachment details patch trunk class loader had been used bind is restored thread class loader be thread class loader is re bound thread invoke invoke Request Response method Webapp class loader has been bound thread
58179	Atomicity violation name is Bai Guangdong research fellow National University Singapore find atomicity violation bug Look code snippet L792 L801 replaced L802 event L805 L806 event Suppose threads T1 T2 executes code snippet key name attributes is T1 executes line T1 becomes T1 executes line T2 executes T2 becomes T1 executes line T2 replaces T1 value line T1 T2 fire event line situation replaced T2 be beforeContextAttributeReplaced be fired line problem occurs file java L803 getServletContext L807 getServletContext L817 fireContainerEvent L820 fireContainerEvent afterContextAttributeReplaced L823 fireContainerEvent beforeContextAttributeAdded L826 fireContainerEvent afterContextAttributeAdded
58522	Calling request threads result children array losing entries duplicating others entries representing directories war are lost Tomcat load resources resource requests result http error code jsp compliation throw JasperException included files are found have seen CentOS versions Tomcat Java 1 7 0_51 following are attached zip requires runs concurrency problem corrupts Entry children discovered problem calling getResourcePaths jsp children list Entry method performs sort children call is thread
58946	ApplicationHttpRequest enforce immutability ParameterMap example message class is shown Tomcat dev Steps reproduce Put following JSPs ROOT web application     test2 jsp       map   Call response is observed Expected call test2 jsp application behaviour is expected HTTP Status exception occurred processing JSP page test2 jsp line root cause noticed issue performing code review inspired thread started users mailing list JavaDoc getParameterMap one Oracle site says Returns Map containing problem is immutability is enforced ApplicationHttpRequest class is used implement included forwarded requests Note ParameterMap class used forwarded requests does enforce immutability jsp    page contentType text plain charset UTF      page contentType text plain charset UTF   IllegalStateException modifications are allowed locked ParameterMap
59138	checkThreadLocalMapForLeaks has positives ThreadLocal references keys references values Example output Threads are going be renewed time try avoid memory leak web applications positives output makes tracking noticing issues party libraries refuse adjust use ThreadLocal believe code is causing leaks have read bug comment given heuristic has positives compromise be reached configuration stifling warning class name basis be added be configuration hid instance message issued suppressing N ThreadLocal warnings based config info warning message appears checkThreadLocalMapForLeaks checking reports positives key is ThreadLocal subclass class value does reference class loader Integer int List Mar localhost startStop checkThreadLocalMapForLeaks web application servlettest 0 1 created ThreadLocal key type TestServlet value TestServlet value type Integer value failed remove web application was stopped