17	Race Netty cancel stream creation cancel cancel stream wire appears stream has been allocated is described comment happens is case is transport is notified stream destruction stream be created transport be cancelled issue does seem problem OkHttp transport allocates stream id returning created stream Netty delays id allocation stream headers are sent is done be delayed MAX_CONCURRENT_STREAMS appears optimization AbstractClientStream be removed sendCancel doc be updated specify expectation handle cases opposed cause RST_STREAM OkHttp Netty seem be handling cases optimization seems races given id allocation is occurring transport thread cancel is happening application thread using synchronization application transport threads seems
120	Remove blocking parts NettyClientTransport blocking is cause performance issues QPS Client results threads being created are calls going have seen Threads calls resulting OOM issue depends     be resolved NettyClientTransport  newStream is blocking operation blocks HEADERS frame has been written wire is behavior is people use API come expect blocking lead deadlocking EventLoop cases DirectExecutor is used scenario deadlock happen is EventLoop is flush HEADERS frame wire Netty create task flush remaining bytes put task task queue task be completed EventLoop Thread is blocked newStream method waiting task be completed
238	Race Server handler initialization Symptom fix be call awaitRunning initChannel reduces rate connections connect is solution   is finished thoughts initializing client connection call startAsync transport registers handler thread is race have been fixed had finished Service removal   DEBUG DefaultChannelPipeline Discarded message SimpleLeakAwareByteBuf PooledUnsafeDirectByteBuf ridx widx cap reached tail pipeline check pipeline configuration
330	races startPendingStreams has phases do things lock cleanup phase collects streams terminate sets goAway startPendingStreams does observe goAway creates streams be failed goAway look seems be remove failPendingStreams integrate phases phases is holding lock onGoAway replace pendingStreams list holding lock call transportReportStatus
583	OkHttp cancellation is synchronized seems usages streams is done lock is held finishStream data data race finishStream end sending DATA frames RST_STREAM seems be have stream protected lock having synchronization is providing benefit is leading correct code sendCancel calls finishStream application thread finishStream calls transportReportStatus lock held is synchronized transportReportStatus be called transport thread lock is held
605	BufferingHttp2ConnectionEncoder does shutdown channelInactive  nmittler is race condition handling channelInactive NettyClientHandler goes bit stream report closure GRPC stream call try creating stream adds stream list stream is closed reproduces bufferedStreamsShouldBeClosedWhenTransportTerminates beta5 Having streams being created side effect channel inactivation is fixes include Reorder teardown channelInactive encoders are closed streams are closed Make BufferedHttp2ConnectionEncoder check isActive trying create streams
696	process transport deadlock shutdown Found Java level deadlock AccountServer STOPPING is held is held AccountServer STOPPING Java stack information threads listed AccountServer STOPPING Found deadlock shutting server client sharing process transport lead deadlock server shutdown transport lock is held calling transportShutdown channel listener attempts lock channel time shutdownNow holds channel lock while trying lock transport leads deadlock waiting lock monitor 0x00007f88221d72a8 object 0x000000076eb28a20 ChannelImpl waiting lock monitor 0x00007f8824015488 object 0x000000076c2afb38 InProcessTransport waiting lock ChannelImpl locked InProcessTransport locked InProcessTransport locked ServerImpl locked InProcessServer locked ServerImpl waiting lock InProcessTransport locked ChannelImpl locked ChannelImpl
887	OkHttp race sendCancel sendFrame sendCancel is called timeout example stream is started following sendFrame cause NPE NullPointerException
999	race condition ServerImpl start shutdown believe be start stop are called shared executor get released  m is problem does go ThreadSafe annotation
1253	ClientCallImpl operations race Context cancellation do create stream Context is cancelled following request sendMessage halfClose encounter IllegalStateException send PR fix IllegalStateException started
1343	Deadline fire stream started  carl mastrangelo ClientCallImpl deadline is scheduled start deadline has elapsed be executed race start  ve looked OkHttp be impacted believe NullPointerException be thrown trying notify stream listener cancellation   exception be logged result stream completes logging went was discovered timeout_on_sleeping_server android being uses timeout test fail awaitCompletion
1408	risk deadlock calling listeners locks Methods Listener ServerTransportListener are called lock reason locking is guarantee ordering methods listener listeners call channel layer code turn acquire locks forms transport lock channel lock lock order hand channel layer calls transport layer  s form channel lock transport lock lock order makes deadlock  s issue today is rule today channel layer hold lock calling transport code base grows become keep track requirement solution is schedule listener calls executor cost thread listener order be guaranteed need locking be options
1510	DelayedClientTransport InProcessTransport means deadlock is chance deadlock DelayedClientTransport is linked InProcessTransport See pull
1981	Executor usage ClientCallImpl races channel shutdown termination ManagedChannelImpl scheduledExecutor shutdown releases closes executor maybeTerminateChannel seems executor be cleared being returned shared pool scheduledExecutor newCall ClientCallImpl checks shutdown state channel ClientCallImpl relies FailingClientTransport behavior ClientCallImpl uses passed executors scheduling deadline timer invoking call listener ClientCallImpl tries schedule deadline timer channel is shut get NPE runs call listener shared executor has been closed is DESTROY_DELAY_SECONDS references are gone application calls start get RejectedExecutionException tests are testing cases does seem be issue affect people try use Calls channel has been shutdown am figure solution
2152	Deadlock found TransportSet Deadlock found running benchmarks client started server calls failed deadlock detector seems think is deadlock grpc client net  1 32 daemon prio Id BLOCKED Object 7eeb2e6b owned grpc client app Id grpc client app daemon prio Id BLOCKED Object 17902cf5 owned grpc client net  1 32 Id
2246	Deadlock TransportSet was testing Grpc RoundRobinLB custom NameResolver deadlock happened Found Java level deadlock grpc timer is held is held grpc timer grpc timer do know know know know know relate code issue is side waiting lock monitor 0x00007fa1b00062c8 object 0x00000007397d7f88 Object waiting lock monitor 0x00007fa1800087f8 object 0x00000007397d7e00 Object waiting lock Object locked Object waiting lock Object locked Object
2388	New deadlock TransportSet GrpcTimer Found Java level deadlock consumer is held consumer consumer is held grpc timer grpc timer is held consumer Java stack information threads listed consumer consumer grpc timer have encountered deadlock TransportSet  m running v   cherry picked waiting lock monitor 0x00007f7ea408ca78 object 0x0000000733ee5700 Object waiting lock monitor 0x00007f7e9052a3c8 object 0x000000070c6272f0 Object waiting lock monitor 0x00007f7ea408ca78 object 0x0000000733ee5700 Object waiting lock Object waiting lock Object locked Object waiting lock Object locked Object
2453	Threading StatsTraceContext StatsTraceContext assumes is RPC is closed application ClientCall ServerCall interface are thread RPC is closed application cancelled side closed transport errors call callEnded transport thread is synchronized application thread application be notified closure time trying send messages resulting wireBytesSent being called callEnded trigger check failure is data race counter fields wireBytesSent write callEnded reads threads synchronization remove preconditions checks writeBytesSent data race kind synchronization be required atomics
2562	Race pick transport shutdown are done steps transport is state is selected newStream is called selected transport is relies timing work fail cases time steps are delay transport is shutdown LoadBalancer channel mode steps Step fail work adding delay stopping selecting subchannel owns transport shutting delay is time Step Step race happen be solution differentiate shutdown intended shutdown Channel is shutdown response shutdown transport selection be retried clientTransportProvider ManagedChannelImpl is position do knows Channel has shutdown clientTransportProvider have call newStream start stream return started stream ClientCallImpl transport
2865	race condition Client Client starts RPC transport server is DelayedClientTransport is used server handles RPC sends headers compressed message client sees are headers begins executing queued stream callbacks channel executor threads transport thread stream has failed queued callback onHeaders is executed app thread using compression race occurs race looks something client sees Data frame tries decompress network thread fails headers have been processed is root cause   mentioned is compression ClientInterceptors see headers data has been received solution seems be move OkHttp used AbstractClientStream2   move decompression ClientCallImpl stream fix decompression interceptors
3084	deadlock calling callbacks holding lock Thread1 Thread2 locks are acquired orders threads deadlock is issue is call application code holding lock do know application code do control order locking use ChannelExecutor renamed prevent calling callbacks holding lock InProcessClientStream InProcessServerStream are synchronized serverStreamListener is called synchronized application tries call methods ClientCall ServerCall callbacks assuming has taken care thread safety method calls Call objects deadlock is executor is used example serverRequested locks messageRead reaches application callback calls locks clientRequested locks messageRead reaches application callback calls locks OkHttp has issue transportDataReceived call application code is called lock
3207	Data race TestServiceImpl WARNING ThreadSanitizer data race pid Read size thread T36 Generated Stub write size thread T38 mutexes write M173247660336208224   Generated Stub
5015	Revisit LoadBalancer API threading model issue createSubchannel are going suggest calling SynchronizationContext log warning  s case like discuss makes sense make Helper Subchannel require be called SynchronizationContext argument made Helper Subchannel thread based mindset is implementation is GRPC fact party developer want wrap add logic becomes burden make added logic thread LoadBalancer interface is thread is guaranteed be called SynchronizationContext has relieved implementors worrying synchronization interfaces SubchannelPicker is thread path Helper Subchannel are path made thread are implemented GRPC thought making thread provide convenience callers client side health checking   Google request routing work revealed use cases LoadBalancer wrap delegate adding logic Helper Subchannel be wrapped process example HealthCheckingLoadBalancerFactory wraps createSubchannel initialize health checking created Subchannel find implement createSubchannel were called SynchronizationContext is case createSubchannel is thread fact LoadBalancers call createSubchannel SynchronizationContext race handleSubchannelState  s handle cancel benefits threading guarantee LoadBalancer interface argument thread safety requestConnection be called path does guarantee action caller caller enqueue SynchronizationContext
5450	Data race onError onError be called threads following code onError impl have data race
6601	Deadlock start gRPC server version gRPC Java are using is environment Linux Alpine openjdk version 1 8 0_171 OpenJDK Runtime Environment IcedTea Alpine r0 OpenJDK Bit Server VM build b11 mode Netty Vertx Vertx gRPC did expect see start gRPC Server did see Start hangs deadlock Steps reproduce bug case stopped started gGPR server  m is related Analysis see thread dump is following threads stays state seems see thread dumps code think be problem deadlock seems time client opens connection server bound  m attaching file thread dumps JVM txt suppose  s race condition related synchronization gRPC ServerImpl await start vertx nettty event loops threaded happened time someone start gRPC server client connection server   prio os_prio tid nid waiting monitor entry 0x00007fb72abc8000 State BLOCKED object monitor waiting lock Object locked NettyServer   prio os_prio tid nid wait State WAITING object monitor locked PromiseTask locked Object Vertx grpc starts server start vertx blocking thread ServerImpl synchronize lock try keeping lock start server start start opens channel binds moment assume receive connections clients channel event loop threaded is received initChannel try get lock transportCreated coudl got start start schedules channel event loop blocks await await waits be executed channel event loop threaded point await keeps lock lock transportCreated occupies blocks is suppose threaded channel event loop making process
6641	Deadlock server transport ports is deadlock port server transport usecase deadlock mechanism   start calls start holding start awaits submitted eventloop pending runnable be executed eventloop be executing task transportCreated is trying acquire lock causing deadlock
8190	hang ELG thread placement NameResolver refresh method version gRPC are using grpc v operating system Linux Windows version Linux Windows did do Implement customized NameResolver extends NameResolver let call CustomizedNameResolver override refresh method makes call service discovery agent retrieve list service instances resolve did expect see Expect customized namer resolver works being called hang existing grpc call did see grpc calls hang customized name resolver grpc calling refresh method did thread dump analysis problem is call refresh method is placed gRPC ELG thread worker thread turns blocks gRPC traffic causing grpc call hang According comment refresh method document does states delegate call worker background thread block grpc calls is placement call refresh method grpc ELG thread behavior delegate worker thread default guides explanations be added document NameResolver clarify grpc default worker ELG  1 6 Thread t 428 Attach thread dump ELG reference Thank State WAITING parking wait AbstractQueuedSynchronizer refresh
8536	BinderChannel flow control get stuck load version gRPC Java are using head is environment Linux Android Steps reproduce bug did expect see Binder transactions pause flow control kicks resume bytes are acknowledged did see bytes are acknowledged transmitWindowFull remains way  s acknowledgedOutgoingBytes numOutgoingBytes  re launching GetTile gRPC interaction Android processes Response message be clients request tiles Telemetry field shows clients start experiencing DEADLINE_EXCEEDED errors calls server process Channels continue succeed lowering BinderTransport  TRANSACTION_BYTES_WINDOW requesting tiles loop reproduce symptoms Using debugger see server BinderTransport  transmitWindowFull becomes bytes have been acknowledged client server is generating response messages is put wire believe problem is BinderTransport  sendTransaction updates transmitWindowFull based read acknowledgedOutgoingBytes include updates  handleAcknowledgedBytes thread
8565	WARNING ThreadSanitizer data race pid Write size thread T36   Generated Stub read size thread T24   Generated Stub Thread T36 tid running created thread T4   Generated Stub   Generated Stub Thread T24 tid running created thread T21 Generated Stub Data race onReady shown following stack trace onReady is calling isReady transport thread isReady is calling frame isClosed closed is thread   run V   pthread_create cpp 376a5944a96225acb3a97f61e6778a4ec3c82048422e4aec0368c2ff748e7a61_020003520650 x69ceac   os create_thread Thread os ThreadType x10484c1   devtools_java_launcher LauncherMainImpl JavaMain JNIEnv std tsan pair tsan basic_string char std tsan char_traits std tsan allocator devtools_java_launcher ArgumentEncoding const int char std tsan basic_string char std tsan char_traits std tsan allocator const cc 376a5944a96225acb3a97f61e6778a4ec3c82048422e4aec0368c2ff748e7a61_020003520650 x71e717   operator cc 376a5944a96225acb3a97f61e6778a4ec3c82048422e4aec0368c2ff748e7a61_020003520650 x722a39   Invoke lambda cc std tsan pair tsan string devtools_java_launcher ArgumentEncoding int char std tsan string JNIEnv h 376a5944a96225acb3a97f61e6778a4ec3c82048422e4aec0368c2ff748e7a61_020003520650 x722a39   invoke lambda cc std tsan pair tsan string devtools_java_launcher ArgumentEncoding int char std tsan string JNIEnv h 376a5944a96225acb3a97f61e6778a4ec3c82048422e4aec0368c2ff748e7a61_020003520650 x722a39   Apply absl CompressedTuple lambda cc std tsan pair tsan string devtools_java_launcher ArgumentEncoding int char std tsan string 0UL 1UL 2UL 3UL 4UL JNIEnv h 376a5944a96225acb3a97f61e6778a4ec3c82048422e4aec0368c2ff748e7a61_020003520650 x722a39   operator JNIEnv jvalue h 376a5944a96225acb3a97f61e6778a4ec3c82048422e4aec0368c2ff748e7a61_020003520650 x722a39   invoke FrontBinder lambda cc std tsan pair tsan string devtools_java_launcher ArgumentEncoding int char std tsan string JNIEnv crosstool v18 stable toolchain bin include c   v1 type_traits 376a5944a96225acb3a97f61e6778a4ec3c82048422e4aec0368c2ff748e7a61_020003520650 x722a39 call absl FrontBinder lambda cc std tsan pair tsan string devtools_java_launcher ArgumentEncoding int char std tsan string JNIEnv h 376a5944a96225acb3a97f61e6778a4ec3c82048422e4aec0368c2ff748e7a61_020003520650 x722a39   operator h 376a5944a96225acb3a97f61e6778a4ec3c82048422e4aec0368c2ff748e7a61_020003520650 x722a39   jvalue std tsan function policy_invoker jvalue JNIEnv call_impl tsan function default_alloc_func absl FrontBinder LauncherMain RunJavaMainInJVMThread const std tsan pair tsan basic_string char std tsan char_traits std tsan allocator devtools_java_launcher ArgumentEncoding int char std tsan basic_string char std tsan char_traits std tsan allocator jvalue JNIEnv std tsan function policy_storage const JNIEnv h 376a5944a96225acb3a97f61e6778a4ec3c82048422e4aec0368c2ff748e7a61_020003520650 x722a39   operator h 376a5944a96225acb3a97f61e6778a4ec3c82048422e4aec0368c2ff748e7a61_020003520650 x734598   operator h 376a5944a96225acb3a97f61e6778a4ec3c82048422e4aec0368c2ff748e7a61_020003520650 x734598   devtools_java_launcher UserRequest Run thread cc 376a5944a96225acb3a97f61e6778a4ec3c82048422e4aec0368c2ff748e7a61_020003520650 x734598 void thread FutureObjectInternal ProducerRunner thread FutureObjectInternal h 376a5944a96225acb3a97f61e6778a4ec3c82048422e4aec0368c2ff748e7a61_020003520650 x738585   ProducerWrapper cc 376a5944a96225acb3a97f61e6778a4ec3c82048422e4aec0368c2ff748e7a61_020003520650 x73c3b1   thread FutureObjectInternal Run cc 376a5944a96225acb3a97f61e6778a4ec3c82048422e4aec0368c2ff748e7a61_020003520650 x73c3b1   devtools_java_launcher LauncherImpl VmThreadRoutine cc 376a5944a96225acb3a97f61e6778a4ec3c82048422e4aec0368c2ff748e7a61_020003520650 x735684   pthread_create cpp 376a5944a96225acb3a97f61e6778a4ec3c82048422e4aec0368c2ff748e7a61_020003520650 x69ceac   os create_thread Thread os ThreadType x10484c1 SUMMARY ThreadSanitizer data race java V
8642	CsdsService synchronized XdsClient Consider code CsdsService Lines a46560e ListenersConfigDump ldsConfig dumpLdsConfig issue is getSubscribedResourcesMetadata getCurrentVersion have synchronization Lines Lines a46560e java LDS java java is xdsClient API is CSDS method calls need be methods were thread version needs match resources returned
8914	binder Deadlock re entrancy transactions process Binder Steps reproduce instance bug Have client server send messages time threads did expect see deadlock did see Example deadlock sendAcknowledgeBytes xxx prio tid Blocked group sCount ucsCount flags obj self sysTid cgrp background sched handle state S schedstat utm stm core HZ stack 0x6caab7c000 stackSize held mutexes yyy prio tid Blocked group sCount ucsCount flags obj self sysTid cgrp background sched handle state S schedstat utm stm core HZ stack 0x6ca785e000 stackSize held mutexes BinderTransport locking was written assumption calls IBinder  transact enqueued Parcel delivery peer returned Android guarantees object identity IBinder instances process client creates Channel Server Service process outgoingBinder Binder  transact object is implemented implemented system call binder driver call onTransact method is problem BinderTransport  handleTransaction holds lock while calling transact places peer instances BinderClientTransport BinderServerTransport are running handleTransaction threads time end holding lock waiting Use BinderChannelBuilder create Channel Service hosted process locked Outbound