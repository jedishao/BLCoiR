39	setSuccess DefaultPromise RedissonLock 1 DefaultChannelHandlerContext fireChannelRead channelRead RedisPubSubConnection invokeChannelRead ChannelInboundHandlerAdapter PubSubCommandHandler Promise IllegalStateException Locking on Jersey
40	Lock TTL plan add TTL Lock operation Don confuse tryLock TIME refer situation thread dead leave resource locked deadlock Lock TTL lock async test time queue redisson topic set
67	RedissonList concurrency problem safe rely RedissonList size invocation technically calling subList size consecutive calls hasNext iterator exception RedissonList concurrency problem test async address method executor string reactive multimap
83	wait Object awaitUninterruptibly RedissonLock lockInterruptibly DefaultPromise lock Promise Uninterruptibly await Redisson Deadlock while obtaining lock
89	RedissonLock locks heavy production Redisson locks locked application stalls Redisson thread locked release lock Thread BLOCKED java lang Object wait bci Compiled frame imprecise java lang Object wait bci Compiled frame netty util concurrent DefaultPromise await bci Compiled frame netty util concurrent DefaultPromise awaitUninterruptibly java util concurrent TimeUnit bci Compiled frame lambdaworks redis RedisAsyncConnection await netty util concurrent java util concurrent TimeUnit bci Compiled frame lambdaworks redis RedisConnection await netty util concurrent bci Compiled frame lambdaworks redis RedisConnection multi bci Compiled frame org redisson RedissonLock unlock lambdaworks redis RedisConnection bci Compiled frame org redisson RedissonLock access org redisson RedissonLock lambdaworks redis RedisConnection bci Compiled frame org redisson RedissonLock execute lambdaworks redis RedisConnection bci Compiled frame org redisson RedissonLock execute lambdaworks redis RedisConnection bci Compiled frame org redisson connection MasterSlaveConnectionManager write org redisson async SyncOperation bci Compiled frame org redisson connection MasterSlaveConnectionManager write org redisson async SyncOperation bci Compiled frame org redisson RedissonLock unlock bci Compiled frame note threads locked awaiting lock previous thread checked threads jstack relevant output Thread BLOCKED java lang Object wait bci Compiled frame imprecise java lang Object wait bci Interpreted frame netty util concurrent DefaultPromise awaitUninterruptibly bci Interpreted frame netty util concurrent DefaultPromise awaitUninterruptibly bci Interpreted frame org redisson RedissonLock lockInterruptibly java util concurrent TimeUnit bci Interpreted frame org redisson RedissonLock lockInterruptibly bci Interpreted frame org redisson RedissonLock lock bci Interpreted frame checked Redis redis cli betCreation key thread blocked release lock threads waiting separate lock locked lock RedissonLock locks lock async time operation topic redisson set map
106	RedissonList Iterator Race Conditions RedissonList iterator data race condition hasNext call set emptied list NoSuchElementException RedissonList Iterator Race Conditions async lock set sort redisson map topic time
169	ConnectionManager call hangs exception thrown Command processing Bug MasterSlaveConnectionManager hang call exception thrown CommandHandler replicate bug RedissonMap JsonJacksonCodec instance doesn constructor fetch object RedissonMap call deserialization object fail MapOutput missing constructor thread calling RedissonMap block details happening method awaits object released Command complete called complete call executed decode method CommandHandler RedisStateMachine processes Redis response RedisStateMachine exception complete won called result exception set object causing calling thread block MasterSlaveConnectionManager method Pull request test proving bug bug proposition published shortly ConnectionManager call hangs exception thrown Command processing async connection command eval handle write reference promise
199	callDecode ReplayingDecoder AbstractChannelHandlerContext ByteToMessageDecoder channelRead ChannelInboundHandlerAdapter invokeChannelRead fireChannelRead Decoder Channel Decode DecoderException IllegalStateException CancellationException Concurrency Issues
254	callDecode ReplayingDecoder AbstractChannelHandlerContext ByteToMessageDecoder channelRead ChannelInboundHandlerAdapter invokeChannelRead fireChannelRead Decoder Channel Decode DecoderException EOFException EOFException when I use RLock with SerializationCodec
455	wait CommandAsyncService awaitUninterruptibly Object RedissonObject BaseRedisLockClientImpl get RedissonLock DefaultPromise tryLock tryAcquire Long latency issue while call Redis
486	Rlock performance issue reddison Rlock cluster setup latency acquire lock unlock issue opened zhxjouc problem working latency thread lock key code running Java thread pool accessing redis notice work pool size latency lock working threads lock delay thread overhead issue performance locking unlocking Rlock performance issue lock test async time multi read leasetime transactional
491	Dead Locks Happen in lock  Process
530	Deadlock lock raise issue deadlocks bug exist making big headache heavy loaded tasks client talks claster located remotely single local claster local servers unable reproduce remote server rate runs heavy load JUnit test thread locked stuck CommandAsyncService await exits understand wrong mainPromise object staying incomplete change understand logics CommandAsyncService async function deals connection retry redirections release fail mainPromise object nightmare spagetty promises futures code difficult read impossible analyse BUG thoughts Deadlock lock test lock async time unlock thread single count
533	Exception RedissonMultiLock independent masters single server config create Redission instance java util concurrent TimeUnit org redisson Config org redisson Redisson org redisson RedissonClient org redisson core RLock org redisson core RedissonMultiLock LockTest RedissonClient redisson RedissonClient redisson RedissonClient redisson RedissonClient redisson RedissonClient redisson main String args redisson createClient redisson createClient redisson createClient redisson createClient redisson createClient System println lock lock shout Redis instance port System println lock System println lock lock RedissonClient createClient String port Config config Config config useSingleServer setAddress port RedissonClient redisson Redisson create config redisson lock String lockKey RLock lock redisson getLock lockKey RLock lock redisson getLock lockKey RLock lock redisson getLock lockKey RLock lock redisson getLock lockKey RLock lock redisson getLock lockKey RedissonMultiLock lock RedissonMultiLock lock lock lock lock lock lockResult lockResult lock tryLock TimeUnit MILLISECONDS InterruptedException printStackTrace System println lock successfuly lockResult lockResult RedissonMultiLock works fine redis nodes alive shutdown redis nodes RedisConnectionException Exception thread main org redisson client RedisConnectionException init connections amount initialized Server Redlock algorithm lock node exception RedissonMultiLock correctly acquire lock instances sequentially key random instances step setting lock instance client timeout small compared total lock auto release time order acquire auto release time seconds timeout milliseconds range prevents client remaining blocked time talk Redis node instance talk instance ASAP Exception RedissonMultiLock lock async task time transactional test leasetime multi
543	PublishSubscribe subscribe Lock tryLock RedissonLock LockPubSub DataContextAwareTask JobProcessor access 000 getProcessingLock RedisLock RLock trylock blocks forever
757	Unlock unlock unlock FairLock thread delay threads lock test clase java util concurrent ExecutorService java util concurrent Executors java util concurrent TimeUnit org junit org junit Test org redisson Redisson org redisson api RLock org redisson api RedissonClient org redisson config Config org slf Logger org slf LoggerFactory RedissonLockTest String LOCK LOCK Logger log LoggerFactory getLogger RedissonLockTest Test itDoesSomething InterruptedException ExecutorService executorService Executors newFixedThreadPool Config config Config config useSingleServer setAddress RedissonClient redisson Redisson create config executorService execute log info Attempting lock executor Thread currentThread getId RLock fairLock redisson getFairLock LOCK fairLock tryLock TimeUnit SECONDS log info Sleeping lock holder thread Thread sleep InterruptedException log error Thread sleep interrupted log info Releasing lock executor LOCK fail Unable acquire lock reason InterruptedException log error Interrupted fairLock isHeldByCurrentThread fairLock unlock executorService execute Thread sleep InterruptedException printStackTrace log info Attempting lock executor Thread currentThread getId RLock fairLock redisson getFairLock LOCK fairLock tryLock TimeUnit SECONDS log info block fail block log info Releasing lock executor LOCK log info block lock InterruptedException log error Interrupted fairLock isHeldByCurrentThread fairLock unlock executorService awaitTermination TimeUnit SECONDS log info Attempting lock unlocked RLock fairLock redisson getFairLock LOCK fairLock tryLock TimeUnit SECONDS log info Lock acquired fail unlocked lock LOCK InterruptedException log error Interrupted fairLock isHeldByCurrentThread fairLock unlock Unlock unlock lock test time async thread read unlock write
758	RReadWriteLock reentrant expecting RReadWriteLock reentrant wiki describes emphasis Redisson distributed reentrant ReadWriteLock object Java simple test Config config Config config useSingleServer setAddress redisAddress client Redisson create config RReadWriteLock readWriteLock client getReadWriteLock TEST LOGGER warn Acquiring write lock readWriteLock writeLock lock LOGGER warn Write lock acquired acquiring read lock success readWriteLock readLock tryLock TimeUnit SECONDS LOGGER warn Lock success success InterruptedException printStackTrace app main WARN craigotis myapp core lock RedisLockService Acquiring write lock app main WARN craigotis myapp core lock RedisLockService Write lock acquired acquiring read lock app main WARN craigotis myapp core lock RedisLockService Lock success reentrancy clause ReentrantReadWriteLock Javadoc Additionally writer acquire read lock vice versa redisson relies locks reentrant Thread bug configuration issue RReadWriteLock reentrant test read lock write expirable unlock remove counted
775	CommandAsyncService 10 HashedWheelTimer HashedWheelBucket HashedWheelTimer HashedWheelTimeout HashedWheelTimer Worker run expireTimeouts Wheel Hashed Timer expire Service RedisTimeoutException Indefinite lock lost during master failover
828	URIBuilder thread safe test multi cluster setup java net URL factory original factory Scenario Thread replaceURLFactory currentFactory original start create URL Thread replaceURLFactory currentFactory newFactory currentFactory start create URL Thread restoreURLFactory set URL factory “new URL call load handlers ebersb URIBuilder thread safe codec jackson object create kryo stream pack channel
889	parkNanos AbstractQueuedSynchronizer park LockSupport doAcquireSharedNanos tryAcquireSharedNanos RedissonLock Unsafe Nanos FailSafeCache lockInterruptibly Cache ops taking too long
891	RReadWriteLock incompatible reentry RReadWriteLock bug confuse time wrong ops yesterday logic problem ops write lock succeed read lock succeed read unlock succeed write unlock hold current thread Assuming unlock holding check holding check running concurrent environment IllegalMonitorException write lock succeed write lock succeed write unlock succeed write unlock succeed read unlock delete lock checking write lock bug shouldn RReadWriteLock incompatible reentry test read lock write expirable unlock remove counted
1048	chService 5 operationComplete Complete operation ch 5 Service  RedisNodeNotFoundException Redisson hang on RBatch execute
1104	RFairLock dead lock issue report locking issue redisson versions RFairLock instances application competing fair lock time timeout fair lock queue set time hours thread lock redis reporting occurences commands PST redis zrange redisson lock timeout mylock WITHSCORES dfaa cfee baa aff redis lrange redisson lock queue mylock aff dfaa cfee baa timeout zscore timeout set hours Current time Tuesday October GMT DST Tuesday October GMT DST Tuesday October GMT DST haven reproduce issue locally happening daily production environment suspecting problem happening randomly application killed operating system kill happen manage apps redisson version experienced issue Earlier year updating version started problem day reverted waited updated version days decided upgrade assuming problem fixed happened hours reproduce issue appreciated Michael RFairLock dead lock issue test lock async time unlock thread single count
1268	park parkAndCheckInterrupt AbstractQueuedSynchronizer LockSupport doAcquireSharedInterruptibly acquireSharedInterruptibly CountDownLatch AsyncSemaphore acquireUninterruptibly Unsafe removeAllListeners org redisson RedissonTopic removeAllListeners got blocked on CountDownLatch await
1433	Concurrent calls RemoteService result exception Expected behavior Concurrent calls RemoteService result exception Actual behavior Concurrent calls RemoteService result exception Steps reproduce test IService addToThreadUnsafeList Integer element List Integer getList clear ServiceImpl IService List Integer list ServiceImpl list ArrayList addToThreadUnsafeList Integer element System println element list add element Override List Integer getList list Override clear list clear parallelTestUsingExecutorServiceAndPoolSizeOf poolSize ExecutorService executorService Executors newFixedThreadPool poolSize IService service redissonClient getRemoteService IService List futures ArrayList iterations Integer element futures add executorService submit service addToThreadUnsafeList element futures stream allMatch isDone Thread sleep InterruptedException RuntimeException assertThat service getList hasSize iterations Redis version Redisson version Redisson configuration config useSingleServer setAddress redis Concurrent calls RemoteService result exception async remote response result pub command queue cancel
1602	unlock fail expirationRenewal execute Expected behavior unlock success Actual behavior unlock fail Steps reproduce test unlock client redis service network problem unlock Exception network recovery expirationRenewal execute Redis version Redisson version Redisson configuration redisson connectionPoolSize redisson connectionMinimumIdleSize redisson address redisson database redisson password redisson connectTimeout redisson timeout unlock fail expirationRenewal execute test lock timeout set thread time read write
1626	JCacheProxy CommandAsyncService 11 tryConsumeAndReturnRemainingTokensImpl JCache execute GridBucket HashedWheelTimer HashedWheelBucket HashedWheelTimer HashedWheelTimeout invoke HashedWheelTimer Worker tryConsumeAndReturnRemaining EntryProcessorException RedisTimeoutException InterruptedException Exception IllegalMonitorStateException Deadlock with RedissonLock used by JCache
1950	CommandAsyncService 13 HashedWheelTimer HashedWheelBucket cancel RedissonPromise HashedWheelTimer HashedWheelTimeout run HashedWheelTimer Worker CompletableFuture expireTimeouts Wheel Hashed CancellationException Exception PriorityBlockingQueue doesn t release lock after reconnect on network
1966	Deadlock Redis timeout Expected behavior Redis response timeout Redisson resilient normal operation Redis timeout lock unlock critical sections Actual behavior Redis response timeout attempts Redisson adds lock scheduled renew task remove application enters deadlock lock renewed unlock task thread reentrant lock feature task runs thread deadlock occurs Steps reproduce test Start Redis test application https github hmagarotto redissonlock simple locked task Force timeout Redis runnning client pause command CLIENT PAUSE Redis version Redisson version Redisson configuration Single server Deadlock Redis timeout set async ssl timeout time expire connection parallel
2099	RedissonFairLock timeout drift discovered additional conditions produce timeout drift originally summarize issue timeouts redisson lock timeout sorted set created RedissonFairLock gradually increase time hours days queue threads condition continues fair wait queue empties threads dies threads forced wait timeout dead thread lapse creates dead lock situation provide follow shortly test cases proposed issue greatly feed misunderstanding issue feedback Expected behavior expected behavior documented paragraph Fair Lock waiting threads queued thread died Redisson waits seconds threads died reason delay seconds replicates documentation threads lock expect redis data structures roughly threads acquire lock RLock tryLock threadId order delays HGETALL fair lock lock thread LRANGE redisson lock queue fair lock lock thread lock thread lock thread lock thread lock thread lock thread ZRANGE redisson lock timeout fair lock WITHSCORES lock thread lock timeout lock thread lock timeout lock thread lock timeout lock thread lock timeout lock thread lock timeout lock thread lock timeout thread wait lock expiration based lease time acquire lock threads die Additionally expect thread leaves queue voluntarily wait timeout acquiring lock timeouts adjust thread queue thread left queue RedissonFairLock acquireFailedAsync call wait timeout sorted set expected ZRANGE redisson lock timeout fair lock WITHSCORES lock thread lock timeout lock thread lock timeout lock thread lock timeout lock thread lock timeout lock thread lock timeout thread wait lock expiration acquire lock threads died Actual behavior usages redisson fair lock servers single instance Redisson running roughly code thread server RLock lock redisson getFairLock worker lock lock tryLock TimeUnit MILLISECONDS work Thread sleep lock unlock observe work locked portion code server threads running code churn lock queue issue queue time thread unlocks locks periodic snapshots redisson lock timeout sorted set tend timeouts increase increments time timeouts hours days servers killed observe servers work timing lock dead server lock holding position redisson lock queue timeout redisson lock timeout hours days expect lose server timeout values range time lease time thread wait time position queue lock usage foolish working chance deadlock Steps reproduce test provide issue follow additional test cases RedissonFairLockTest started modification testTimeoutDrift changed wait time changed lock holding time Thread sleep test tryLock failing wait timeout threads lock unlock lock version test test fails timeout drift futre test failed test cases hope cover code produce expected behavior Redis version Redisson version Redisson configuration single redis server exclusively redisson RedissonFairLock timeout drift async test timeout lock time expire unlock thread
2278	RedissonFairLock deadlock change upgrade behavior started occurring Expected behavior FairLock acquired high load system lease time defined Actual behavior Redisson handle Fair lock lease time high load threads lock key client stuck thread acquires lock Steps reproduce test ExecutorService executorService ThreadPoolExecutor Integer MAX TimeUnit MILLISECONDS SynchronousQueue Runnable RedissonClient client Redisson create IntStream rangeClosed boxed forEach Consumer Integer Override accept Integer integer executorService submit Runnable Override ConnectionManager connectionManager Redisson client getConnectionManager Field field MasterSlaveConnectionManager getDeclaredField field setAccessible field set connectionManager UUID randomUUID NoSuchFieldException IllegalAccessException printStackTrace RLock lock client getFairLock fair lock lock lock Thread sleep InterruptedException printStackTrace lock unlock System println integer Thread sleep Redis version Redisson version Redisson configuration defaults RedissonFairLock deadlock async lock test map read key set redisson
2355	cancelExpirationRenewal lambda unlockAsync 3 RedissonLock DefaultPromise lambda onComplete 0 RedissonPromise setValue0 notifyListener0 notifyListeners0 setSuccess0 notify NullPointerException IllegalMonitorStateException RedissonLock unlock  hangs infinitely waiting for RedissonPromise
2575	RedissonLock fails unsubscribe channel lock acquired Expected behavior pub channels created acquire lock RedissonLock unsubscribed longer needed Actual behavior pub channels meaning client unsubscribe locks longer expired unlocked channels cleaned created workaround rid restart client observed caused connection leak calling RedissonLock locks returned error Subscribe timeout Increase subscriptionsPerConnection subscriptionConnectionPoolSize parameters increased limits order workaround bug Steps reproduce test RedissonLock java implementation method lockInterruptibly leaseTime TimeUnit unit multiple locks simultaneously limits subscription connection pool size subscriptions connection increase probability bug wait error Subscribe timeout Increase subscriptionsPerConnection subscriptionConnectionPoolSize parameters connect Redis server fetch lock pub channels number pub channels active locks bug reproduced number pub channels decrease locks created subscriptions leaked active longer RedissonLock implementation Redis version Redisson version Redisson configuration redisson client redissonClient redisson single server address redis url idle connection timeout ping timeout connect timeout timeout connection pool size connection minimum idle size subscription connection pool size subscriptions connection redisson client RedissonLock fails unsubscribe channel lock acquired async pub time lock listener entry operation slave
2690	RedissonSessionRepository onMessage PubSubPatternMessageListener lambda enqueueMessage 0 RedisPubSubConnection CommandPubSubDecoder onPatternMessage Message ThreadPoolExecutor Worker FastThreadLocalRunnable ThreadPoolExecutor NullPointerException RedissonSessionRepository topic listeners initialization has race condition
2692	decodeRemovalReentryProtection CommandDecoder decode ByteToMessageDecoder decodeCommandBatch callDecode ReplayingDecoder invokeChannelRead channelRead decodeCommand AbstractChannelHandlerContext RedisException RedissonSession changeSessionId expiredKey race condition
2714	RedissonLock tryLock interrupted renew lock Expected behavior tryLock interrupted watchdog renew listener cancelled Actual behavior tryLock interrupted watchdog renewing lock ifinite lock Steps reproduce test threadTwoScheduled test lockThenInterruptNotCatchThenBroke RLock lock redissonClient getLock concurrent test assertFalse lock isLocked Thread thread Thread threadTwoScheduled lock tryLock doBusiness lock unlock thread start threadTwoScheduled tcp request Object thread interrupt Thread sleep longer watchdog time InterruptedException printStackTrace lock renewed watchdog assertTrue lock isLocked Redis version doesn matter Redisson version Redisson configuration RedissonLock tryLock interrupted renew lock lock test time async expire thread read unlock
2883	RedissonFairLock deadlock version spring boot redisson spring boot starter redis test GetMapping testRedisson testRedisson String UUID randomUUID toString ExecutorService executorService ThreadPoolExecutor Integer MAX TimeUnit SECONDS SynchronousQueue Runnable log info startLock IntStream rangeClosed boxed forEach Consumer Integer Override accept Integer integer executorService submit Runnable Override RLock test redissonClient getFairLock test lock TimeUnit SECONDS ThreadUtil sleep log info endLok integer test unlock executorService shutdown RedissonFairLock result endLok printed。if RedissonLock，it print all。 redis key redisson lock queue cbfe bec aaf redisson lock timeout cbfe bec aaf Blocking program running LRANGE redisson lock queue cbfe bec aaf acc acc acc acc acc acc acc acc acc acc acc ZRANGE redisson lock timeout cbfe bec aaf WITHSCORES acc acc acc acc acc acc acc acc acc acc acc RedissonFairLock deadlock async lock test map read key set redisson
3484	concurrency problems org redisson RedissonLock tryLockInnerAsync tryLockInnerAsync waitTime leaseTime TimeUnit unit threadId RedisStrictCommand command internalLockLeaseTime unit toMillis leaseTime thread lock subject method time leaseTime leaseTime bigger thread cam set internalLockLeaseTime thread set internalLockLeaseTime bigger bigger leaseTime real redis lock watchDog invaild lock expired time evalWriteAsync getName LongCodec INSTANCE command redis call exists redis call hincrby ARGV redis call pexpire ARGV nil redis call hexists ARGV redis call hincrby ARGV redis call pexpire ARGV nil redis call pttl Collections singletonList getName internalLockLeaseTime getLockName threadId concurrency problems org redisson RedissonLock tryLockInnerAsync test async address time lock method string executor
4033	multilock fail Expected behavior lock successful Actual behavior lock fail lock multi lock Steps reproduce test set waitTime multi lock fail set waitTime RLock success RLock lock client getLock lock RLock lock client getLock lock RLock lock client getLock lock RedissonMultiLock lock RedissonMultiLock lock lock lock flag lock tryLock TimeUnit SECONDS flag debug RedissonMultiLock remainTime remainTime System currentTimeMillis time remainTime negative lock flow time System currentTimeMillis remainTime unlockInner acquiredLocks bug RedissonMultiLock Redis version Redisson version Redisson configuration single server multilock fail test set lock object cluster codec add find
4064	CommandAsyncService syncSubscription lambda main 0 Executors RunnableAdapter RedissonLock ReddisTest lock ThreadPoolExecutor Worker ThreadPoolExecutor run Subscription RedisTimeoutException InterruptedException Exception Thread safe problem when acquiring locks resulting in a pubsub channel not being unsubscribed