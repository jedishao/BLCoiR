1117	checkArgument ResourceMethodInvocationHandlerFactory 1 PulsarWebResource validateNamespaceBundleOwnership validateNamespaceBundleRange AbstractJavaResourceMethodDispatcher 1 DelegatingMethodAccessorImpl invoke GeneratedMethodAccessor127 splitNamespaceBundle Preconditions IllegalArgumentException Exception during namespace bundle split
2141	Race condition reconnection managed ledger fenced checking intermittent failures SequenceIdWithErrorTest test failing race condition involving producer consumer reconnecting broker topic fenced test fencing error purposely inject Race condition reconnection managed ledger fenced ledger entries cursor position read async callback size
3768	eventFdWrite AbstractChannelHandlerContext SingleThreadEventExecutor EpollEventLoop writeAndFlush PulsarSink PulsarSinkProcessorBase ClientCnx safeExecute Native sendRequestWithId ProducerImpl ThreadTimeoutException pulsar function  intermittent test failure due to deadlock
4447	park LockSupport ForkJoinPool Unsafe managedBlock CompletableFuture Signaller PersistentTopicsBase internalGetPartitionedStats CompletableFuture TopicsImpl GeneratedMethodAccessor56 Error Broker gets stuck when getting partitioned stats
4635	Bookie deadlock broker multiple bookie servers cluster hardware failure time broker server Messages broker connect output log deadlock pulsar session watcher WARN ZooKeeperSessionWatcher zoo keeper disconnected waiting reconnect time remaining seconds pulsar session watcher WARN ZooKeeperSessionWatcher zoo keeper disconnected waiting reconnect time remaining seconds pulsar session watcher WARN ZooKeeperSessionWatcher zoo keeper disconnected waiting reconnect time remaining seconds pulsar session watcher WARN ZooKeeperSessionWatcher zoo keeper disconnected waiting reconnect time remaining seconds pulsar session watcher WARN ZooKeeperSessionWatcher zoo keeper disconnected waiting reconnect time remaining seconds pulsar session watcher WARN ZooKeeperSessionWatcher zoo keeper disconnected waiting reconnect time remaining seconds pulsar session watcher WARN ZooKeeperSessionWatcher zoo keeper disconnected waiting reconnect time remaining seconds pulsar session watcher WARN ZooKeeperSessionWatcher zoo keeper disconnected waiting reconnect time remaining seconds pulsar session watcher WARN ZooKeeperSessionWatcher zoo keeper disconnected waiting reconnect time remaining seconds pulsar session watcher WARN ZooKeeperSessionWatcher zoo keeper disconnected waiting reconnect time remaining seconds pulsar session watcher WARN ZooKeeperSessionWatcher zoo keeper disconnected waiting reconnect time remaining seconds pulsar session watcher WARN ZooKeeperSessionWatcher zoo keeper disconnected waiting reconnect time remaining seconds pulsar session watcher WARN ZooKeeperSessionWatcher zoo keeper disconnected waiting reconnect time remaining seconds pulsar session watcher ERROR ZooKeeperSessionWatcher timeout expired reconnecting invoking shutdown service thread dump broker shuts broker threaddump txt phenomenon Pulsar version broker previous bug fixed Bookie deadlock broker bookie ledger broker config test async bookies service
4707	DefaultPartitioner PulsarKafkaProducer partition Partitioner buildMessage lambda main 3 send Main Message build Kafka NullPointerException Exception PulsarKafkaProducer is not thread safe
5585	persistent topic replication deadlock NonPersistentReplicator disable batching batch message producer acquire release num message meta process ack publishing replication set correct number message batch tracking publish rate stats numMessages msg getMessageBuilder hasNumMessagesInBatch msg getMessageBuilder getNumMessagesInBatch ByteBufPair cmd sendMessage producerId sequenceId numMessages msgMetadata encryptedPayload msgMetadataBuilder recycle msgMetadata recycle OpSendMsg OpSendMsg create msg cmd sequenceId callback setNumMessagesInBatch numMessages setBatchSizeByte encryptedPayload readableBytes pendingMessages lastSendFuture callback getFuture ProducerImpl semaphore longer ProducerImpl sendAsync method blocked pendingMessages method deadlock ackReceived sendAsync deadlock pulsar pulsar jstack log broker jstack log persistent topic replication deadlock topic test stats check replicator replication client producer
8050	Replace map set PulsarClientImpl IdentityHashMap hold reference producers consumers producers producer List stored Pulsar pursues performance good thread safe set Collections newSetFromMap ConcurrentHashMap Replace map set load broker test update resource function doc report
8293	Race condition updating ManagedCursorImpl readPosition Describe bug caused race condition updating ManagedCursorImpl readPosition Reproduce concurrency issue hard reproduce isn publicly shared reproduce Expected behavior Updates ManagedCursorImpl readPosition field lead inconsistent clear understanding code concurrent updates handled Additional context refer additional context link Slack thread discussions prevents infinite loop doesn address race condition updating ManagedCursorImpl readPosition field issues race condition updating readPosition issue change adds READ POSITION UPDATER ManagedCursorImpl readPosition race condition ManagedCursorImpl readPosition sync OpReadEntry readPosition ManagedCursorImpl readPosition updated OpReadEntry created OpReadEntry readPosition initialized ManagedCursorImpl readPosition race condition happen code setAcknowledgePosition method pulsar managed ledger src main java org apache bookkeeper mledger impl ManagedCursorImpl java Lines fdd readPosition compareTo newMarkDeletePosition position mark deleted read position client skipped entries move read position PositionImpl oldReadPosition readPosition readPosition ledger getNextValidPosition newMarkDeletePosition log isDebugEnabled log debug Moved read position mark delete position ledger getName oldReadPosition readPosition markDeletePosition Clarification solution problem isn synchronization missing lock race condition resolved simply adding lock synchronization detect thread modified code conflict resolution readPosition updated setAcknowledgePosition method shouldn move readPosition code setReadPosition markDeletePosition account updating readPosition setAcknowledgePosition previous readPosition account updating readPosition doesn jump race condition Race condition updating ManagedCursorImpl readPosition test read entries cursor position ledger entry delete
9109	park LockSupport ForkJoinPool TypedMessageBuilderImpl Unsafe managedBlock CompletableFuture Signaller ProducerBase CompletableFuture send processPossibleToDLQ IllegalStateException PulsarClientException Exception pulsar timer thread blocked at redeliverUnacknowledgedMessages
10170	Optimize lock AuthenticationAthenz Describe bug lock AuthenticationAthenz reduce efficiency AuthenticationAthenz Hope optimized Error Medium Inconsistent synchronization org apache pulsar client impl AuthenticationAthenz roleToken locked time org apache pulsar client impl AuthenticationAthenz org apache pulsar client impl AuthenticationAthenz org apache pulsar client impl AuthenticationAthenz org apache pulsar client impl AuthenticationAthenz org apache pulsar client impl AuthenticationAthenz org apache pulsar client impl AuthenticationAthenz org apache pulsar client impl AuthenticationAthenz Unsynchronized access AuthenticationAthenz java Unsynchronized access AuthenticationAthenz java Unsynchronized access AuthenticationAthenz java access AuthenticationAthenz java access AuthenticationAthenz java access AuthenticationAthenz java access AuthenticationAthenz java INCONSISTENT SYNC Reproduce logs Expected behavior clear concise description expected happen Screenshots applicable add screenshots explain problem Desktop complete iOS Additional context Add context problem Optimize lock AuthenticationAthenz lock callback set test stat url key watch
10235	Deadlock Monitoring thread LeaderService isLeader Describe bug checking dashboards pulsar summary board brokers running kubernetes brokers running traced problems metrics queries returning wget http localhost metrics returning Gateway timeout checked logs errors logs exception occurred processing metrics query proceeded heap dumps stack traces java process continued process data queues Review stack traces prometheus stats thread hung waiting Lock held thread pulsar external listener thread waiting additional locks suspect deadlock condition find lock waiting problem scope executed becameInactive wide threaddump itomdipulsar broker log threaddump itomdipulsar broker gcs log threaddump itomdipulsar broker rglm log itomdipulsar broker log itomdipulsar broker gcs log itomdipulsar broker rglm log Deadlock Monitoring thread LeaderService isLeader stats drain check worker function schedule test backlog
10767	redeliverUnacknowledgedMessages ConsumerImpl UnAckedMessageTracker 2 run HashedWheelTimer HashedWheelBucket FastThreadLocalRunnable HashedWheelTimer Worker HashedWheelTimer HashedWheelTimeout expireTimeouts parkAndCheckInterrupt LockSupport Java client  Deadlock in Pulsar Client when running ConsumerBatchReceiveTest
11379	NativeMethodAccessorImpl DelegatingMethodAccessorImpl invoke JavaInstanceMain Method deleteFiles FileUtils deleteFile invoke0 Impl Accessor IOException Exception InvocationTargetException Directory facing race condition on NarUnpacker
11605	Race condition concurrent schema deletion Describe bug scenarios deleted topics concurrently trigger race condition deleting topic schema org apache pulsar broker service AbstractTopic deleteSchema firstly perform schemaRegistryService getSchema read bookkeeper schemaRegistryService deleteSchemaStorage delete ledgers bookkeeper delete schema concurrently threads happen thread deleted ledger thread started executing ledger exception Reproduce Steps reproduce behavior start cluster brokers create partitioned topic multiple partitions concurrently delete partitioned topics topic schema sporadically ledger exists Bookies NoNode schemas Note phenomenon happen time Expected behavior Broker service handle scenarios correctly Race condition concurrent schema deletion async set message namespace entries remove subscription messages
11689	Java consumer block batchReceive Describe bug Consumer batchReceive called concurrently threads exists race condition ConsumerBase java triggered CompletableFuture queue pendingBatchReceives removed queue completed causing consumer block issue concurrent calls peek poll peekNextBatchReceive code correct peeked polled thread calls poll peek poll bug occurs error message occurs Bug Removed entry wasn expected Reproduce Create consumer threads repeatedly call batchReceive Wait time eventually block Thread sleep peek poll peekNextBatchReceive trigger faster Expected behavior batchReceive block Java consumer block batchReceive message consumer topic async batch time messages partitions
11690	get Optional MethodInvocationHelper revalidateLockOnDifferentSession LockManagerTest Method NativeMethodAccessorImpl DelegatingMethodAccessorImpl InvokeMethodRunnable invoke invokeMethod Error NoSuchElementException Flaky test  LockManagerTest revalidateLockOnDifferentSession
11966	wait Object InputStreamContentProvider InputStreamContentProviderIterator HttpSenderOverHTTP HeadersCallback blockForContent HttpInput 1 HttpInput Http InputStream read Input Proxy  Proxied  admin endpoint connections might remain blocked forever
12723	Race condition PersistentTopic addReplicationCluster Describe bug org apache pulsar broker service persistent PersistentTopic field replicators ConcurrentOpenHashMap race condiftion method addReplicationCluster replicators computeIfAbsent remoteCluster PersistentReplicator PersistentTopic cursor localCluster remoteCluster brokerService PulsarClientImpl replicationClient PulsarServerException log error Replicator startup failed topic remoteCluster clean replicator startup failed replicators containsKey remoteCluster replicators remoteCluster replicators remove remoteCluster clear race condition multi threads code Thread execute replicators remove Thread inserts PersistentReplicator thread delete PersistentReplicator thread created thread safe measures applied code Expected behavior thead safe Screenshots applicable Desktop complete mac Additional context Nop Race condition PersistentTopic addReplicationCluster topic message test async receive entry impl tls
12885	Bug Unordered consuming Key Shared subscription Describe bug previous flaky test org apache pulsar client api KeySharedSubscriptionTest testRemoveFirstConsumer race condition PersistentDispatcherMultipleConsumers previous client closed unack messaages Detailed Explanation core steps produce messages wait unitl message create setting produce messages receive messages processing prefetched close Call receive receive chance race condition step step retry loop consumer Thread PersistentDispatcherMultipleConsumers readMoreEntries calculateToRead xxx getMessagesToReplayNow havePendingReplayRead asyncReplayEntriesInOrder cursor asyncReplayEntries callback readEntriesComplete async Thread PersistentDispatcherMultipleConsumers readEntriesComplete havePendingReplayRead PersistentStickyKeyDispatcherMultipleConsumers sendMessagesToConsumers DEBUG Log select consumer messages num read type Replay send runs permits DEBUG Log select consumer messages num read type Replay send wait complete unacked messages consumer send message schedule call readMoreEntries close PersistentDispatcherMultipleConsumers removeConsumer called Thread PersistentDispatcherMultipleConsumers removeConsumer consumer getPendingAcks forEach addMessageToReplay calls readMoreEntries Thread Thread real cases time Thread Thread small order Thread Thread Thread disorder occurs readMoreEntries calculateToRead havePendingReplayRead Thread readMoreEntries returns actions Thread previous reading ended dispatch select consumer waiting client Reproduce Steps reproduce behavior easier reproduce local environment changing pulsar pulsar broker src main java org apache pulsar broker service persistent PersistentStickyKeyDispatcherMultipleConsumers java TimeUnit MILLISECONDS Test org apache pulsar client api KeySharedSubscriptionTest testRemoveFirstConsumer hit race condition retries Expected behavior designed testRemoveFirstConsumer consuming order Screenshots Nop Desktop complete macOS Additional context Bug Unordered consuming Key Shared subscription ack message consumer messages batch set test key
12929	LockSupport PersistentTopicsBase Lambda 1126 0x000000084080a840 lambda internalDeleteSubscription 69 internalDeleteSubscriptionForNonPartitionedTopic ForkJoinPool PersistentTopicsBase park managedBlock CompletableFuture CompletableFuture Signaller CompletableFuture UniAccept Deadlock in internalDeleteSubscription in metadata store callback thread
13004	CompletableFuture lambda acquireWithNoRevalidation 7 ResourceLockImpl postComplete encodeThrowable tryFire uniExceptionally completeThrowable completeExceptionally CompletableFuture UniRun CompletableFuture UniExceptionally MetadataStoreException CompletionException completeException uniException LockBusyException UniException metadata  Race condition in ResourceLockImpl revalidate
13923	channelRead PulsarDecoder handleProducer fireChannelRead AbstractChannelHandlerContext invokeChannelRead ProxyConnection ByteToMessageDecoder Channel Read Decoder UnsupportedOperationException Proxy  Race condition in Pulsar Proxy that causes UnsupportedOperationExceptions in Proxy logs
13964	LockSupport ClientDeduplicationFailureTest ForkJoinPool PulsarClientImpl park managedBlock CompletableFuture Signaller Support Lock CompletableFuture waitingGet Flaky tests  PulsarClientImpl close hangs forever
13986	Transactiion Performance bottleneck TransactionBufferHandler enhancement request problem describe synchronization lock timeout performance bottleneck TransactionBufferHandler Describe solution method timeout processing sync locks Transactiion Performance bottleneck TransactionBufferHandler handle command test topic resource request message schema
14362	CompletableFuture asyncDeleteCursor CompletableFuture UniRelay encodeRelay postComplete completeRelay ManagedLedgerImpl completeExceptionally PersistentTopic 5 deleteCursorFailed Relay CursorNotFoundException BrokerServiceException completeException Error BrokerMetadataException InterruptedException ManagedLedgerException handleError NullPointerException CompletionException PersistenceException PulsarClientException getPulsarClientException Broker Healthcheck Endpoint Exposes Race Conditions
14413	ConsumerBuilderImpl subscribeAsync blocks calling thread Describe bug Retry topics enabled ConsumerBuilderImpl performs compatibility check DLQ Retry topics created previous version Pulsar naming scheme calling getPartitionedTopicMetadata block waiting client getPartitionedTopicMetadata oldRetryLetterTopic client conf getOperationTimeoutMs TimeUnit MILLISECONDS partitions retryLetterTopic oldRetryLetterTopic client getPartitionedTopicMetadata oldDeadLetterTopic client conf getOperationTimeoutMs TimeUnit MILLISECONDS partitions deadLetterTopic oldDeadLetterTopic implemented partial add Timeout implemented block calling thread lookup issue code attempt call subscribeAsync blocking Pool Netty signature subscribeAsync implies blocking pointless subscribeAsync blocks Note undocumented breaking change behavior safe call blocking pool running custom SLF log exporter thread pool deadlock number concurrent subscribeAsync calls exceeded pool size extreme poor decision good unexpected blocking dangerous Note blocking call retry DLQ names explicitly DeadLetterPolicy scenario check needed blocking calling Thread unneeded lookup requests Reproduce Call subscribeAsync enableRetry calling thread blocked metadata lookup complete Expected behavior subscribeAsync CompletableFuture performing Proposed Restructure subscribeAsync chain getPartitionedTopicMetadata calls blocking Don perform metadata lookup DLQ Retry topic names Add flag disable compatibility check projects don project maintainer happy proposal happy raise change ConsumerBuilderImpl subscribeAsync blocks calling thread message topic impl time consumer async executor producer
14438	park LockSupport ForkJoinPool internalDeleteTopicForcefully PersistentTopicsBase Unsafe managedBlock CompletableFuture Signaller internalDeleteTopic CompletableFuture GeneratedMethodAccessor241 Error sometimes internalDeleteTopicForcefully will block forever
14633	setupTopicPublishRateLimiterMonitor updateMaxPublishRate BrokerService Lambda 1326 0x00000008408bc440 updatePublishDispatcher BrokerService BrokerService Lambda 1325 0x00000008408bc040 onPoliciesUpdate PersistentTopic AbstractTopic lambda null 82 lambda null 81 setupTopicPublishRateLimiterMonitor  can block forever  causing deadlock for metadata store operations
17446	Bug Producer permanently blocked chunking messages blockIfQueueFull enabled Search searched issues Version Pulsar Minimal reproduce step reproduced simply Test testMiniChunkingBlockIfQueueFull Exception conf setMaxMessageSize String topicName persistent property testChunkingWithOrderingKey ExecutorService exec Executors newFixedThreadPool Cleanup Producer producer pulsarClient newProducer topic topicName enableChunking chunkMaxMessageSize blockIfQueueFull maxPendingMessages enableBatching create data RandomUtils nextBytes producer newMessage data send expect reason bug chunk message semaphore pulsar pulsar client src main java org apache pulsar client impl ProducerImpl java Lines cfa chunked message individually acquire send permits totalChunks canEnqueueRequest callback message getSequenceId memory reserved client getMemoryLimitController releaseMemory uncompressedSize semaphoreRelease large message split large number chunks message big chunkMaxMessageSize set small remaining semaphores acquired sending send sendAsync large message blocked blockIfQueueFull maxPendingMessages chunking enabled time risk deadlock exists number chunks single message large response submit submit Bug Producer permanently blocked chunking messages blockIfQueueFull enabled test message consumer topic producer set messages block
17913	LockSupport ForkJoinPool park managedBlock CompletableFuture Signaller DefaultBookieAddressResolver PerChannelBookieClient CompletableFuture Support Lock connectIfNeededAndDoOp Bug  Deadlock while reading Schema from BookKeeper
18196	Bug locallyAcquiredLocks leak OwnershipCache Search searched issues Version master Minimal reproduce step review code expect CompletableFuture removeOwnership NamespaceBundle bundle ResourceLock NamespaceEphemeralData lock locallyAcquiredLocks bundle lock don bundle CompletableFuture completedFuture lock release locallyAcquiredLocks remove bundle leak response submit submit Bug locallyAcquiredLocks leak OwnershipCache namespace test bundle ownership service owned owner topic
18988	run ZKMetadataStore Lambda 350 0x00000008404b5840 FastThreadLocalRunnable ScheduledThreadPoolExecutor ScheduledFutureTask Executors RunnableAdapter lambda existsFromStore 9 ThreadPoolExecutor Worker Thread ThreadPoolExecutor ZKMetadataStore FutureTask handleError recoverException completeException uniException UniException Bug  Deadlock pulsar io and metadata store if transactions enabled