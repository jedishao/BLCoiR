6623	Threading problems on plugin startup  Plugin startup can be called in the UI thread  but AbstractUIPlugin refreshPluginActions then fails   org eclipse swt SWTException  Invalid thread access at org eclipse swt widgets Widget checkWidget Widget java Compiled Code   at org eclipse swt widgets Tree getSelection Tree java Compiled Code   at org eclipse jface viewers TreeViewer getSelection  TreeViewer java 158  at org eclipse jface viewers AbstractTreeViewer getSelectionFromWidget  AbstractTreeViewer java 586  at org eclipse jface viewers StructuredViewer getSelection  StructuredViewer java 365  at org eclipse ui internal SelectionService getSelection  SelectionService java 64  at org eclipse ui internal WWinPluginAction refreshSelection  WWinPluginAction java 128  at org eclipse ui internal WWinPluginAction refreshActionList  WWinPluginAction java 52  at org eclipse ui internal Workbench refreshPluginActions  Workbench java 978  at org eclipse ui plugin AbstractUIPlugin refreshPluginActions  AbstractUIPlugin java 382  at org eclipse ui plugin AbstractUIPlugin startup  AbstractUIPlugin java 421  at org eclipse pde selfhosting internal SelfHostingPlugin startup  SelfHostingPlugin java 176  at org eclipse core internal plugins PluginDescriptor 1 run  PluginDescriptor java 643  at org eclipse core internal runtime InternalPlatform run  InternalPlatform java 818  at org eclipse core internal plugins PluginDescriptor internalDoPluginActivation  PluginDescriptor java 655  at org eclipse core internal plugins PluginDescriptor doPluginActivation  PluginDescriptor java 135  at org eclipse core internal plugins PluginClassLoader activatePlugin  PluginClassLoader java 52  at org eclipse core internal plugins PluginClassLoader findClassParentsSelf  PluginClassLoader java Compiled Code   at org eclipse core internal boot DelegatingURLClassLoader loadClass  DelegatingURLClassLoader java Compiled Code   at org eclipse core internal boot DelegatingURLClassLoader loadClass  DelegatingURLClassLoader java Compiled Code   at java lang ClassLoader loadClass ClassLoader java Compiled Code   at org eclipse core internal plugins PluginDescriptor createExecutableExtension  PluginDescriptor java 79  at org eclipse core internal plugins PluginDescriptor createExecutableExtension  PluginDescriptor java 116  at org eclipse core internal plugins ConfigurationElement createExecutableExtension  ConfigurationElement java 96  at org eclipse debug internal core Launcher getDelegate  Launcher java 92  at org eclipse debug internal ui LaunchHistoryElement getLaunchElement  LaunchHistoryElement java 111  at org eclipse debug internal ui DebugUIPlugin removeDeletedHistories  DebugUIPlugin java 1352  at org eclipse debug internal ui DebugUIPlugin removeDeletedHistories  DebugUIPlugin java 1340  at org eclipse debug internal ui DebugUIPlugin ResourceDeletedVisitor visit  DebugUIPlugin java 202  at org eclipse core internal events ResourceDelta accept  ResourceDelta java Compiled Code   at org eclipse core internal events ResourceDelta accept  ResourceDelta java Compiled Code   at org eclipse core internal events ResourceDelta accept  ResourceDelta java Compiled Code   at org eclipse core internal events ResourceDelta accept  ResourceDelta java Compiled Code   at org eclipse core internal events ResourceDelta accept  ResourceDelta java Compiled Code   at org eclipse core internal events ResourceDelta accept  ResourceDelta java Compiled Code   at org eclipse core internal events ResourceDelta accept  ResourceDelta java Compiled Code   at org eclipse core internal events ResourceDelta accept  ResourceDelta java Compiled Code   at org eclipse core internal events ResourceDelta accept  ResourceDelta java Compiled Code   at org eclipse core internal events ResourceDelta accept  ResourceDelta java Compiled Code   at org eclipse debug internal ui DebugUIPlugin resourceChanged  DebugUIPlugin java 1178  at org eclipse core internal events NotificationManager 1 run  NotificationManager java 125  at org eclipse core internal runtime InternalPlatform run  InternalPlatform java 818  at org eclipse core internal events NotificationManager notify  NotificationManager java 140  at org eclipse core internal events NotificationManager broadcastChanges  NotificationManager java 43  at org eclipse core internal events NotificationManager broadcastChanges  NotificationManager java 64  at org eclipse core internal resources Workspace broadcastChanges  Workspace java 110  at org eclipse core internal resources Workspace endOperation  Workspace java Compiled Code   at org eclipse core internal resources Workspace build  Workspace java 122  at org eclipse debug internal ui DebugUIPlugin 9 run  DebugUIPlugin java 1677  at org eclipse jface operation ModalContext ModalContextThread run  ModalContext java 98
15379	WorkingSetManager resource change listener not thread safe  Resource changes can occur in any thread  and so the resource change listener installed by WorkingSetManager can be called in any thread  However  the ResourceNavigator listens to working set changes and tries to update its viewer  which can only happen in the UI thread  The result is an illegal thread access exception from SWT   To reproduce   1  Create a java project 2  Add that project to a working set 3  Make the navigator or packages view show only that working set 4  Delete the project   Attaching log
33942	Javadoc for IDecoratorManager update should state threading requirements  I get an SWTException if I call IDecoratorManager form a thread other then the UI thread  The javadoc should be updated to mention this restriction
46562	Deadlock in modal cvs dialogI20031111   I was using  Update and Overwrite  on a conflicting resource from the sync view  As you can see from the dump the modal CVS dialog locks itself up   Full thread dump Java HotSpot TM  Client VM  1 4 2 b28 mixed mode     ModalContext  prio 7 tid 0x039dc658 nid 0xf44 in Object wait    441f000  441fd94    waiting on  0x1019bd10   a org eclipse ui internal Semaphore    locked  0x1019bd10   a org eclipse ui internal Semaphore  at org eclipse team internal ccvs ui subscriber CVSSubscriberAction promptForOverwrite CVSSubscriberAction java at at at at at org eclipse team internal ccvs ui operations CVSBlockingRunnableContext 3 run CVSBlockingRunnableContext jav at org eclipse team internal ccvs ui operations CVSBlockingRunnableContext 2 run CVSBlockingRunnableContext jav at   Worker 10  prio 5 tid 0x03446060 nid 0xca0 in Object wait    380f000  380fd94    waiting on  0x11af4c18   a org eclipse core internal jobs WorkerPool    locked  0x11af4c18   a org eclipse core internal jobs WorkerPool    Worker 9  prio 5 tid 0x03a23990 nid 0xec8 in Object wait    45cf000  45cfd94    waiting on  0x11af4c18   a org eclipse core internal jobs WorkerPool    locked  0x11af4c18   a org eclipse core internal jobs WorkerPool    Worker 8  prio 5 tid 0x039fd518 nid 0xea4 in Object wait    458f000  458fd94    waiting on  0x11af4c18   a org eclipse core internal jobs WorkerPool    locked  0x11af4c18   a org eclipse core internal jobs WorkerPool    org eclipse jdt internal ui text JavaReconciler  daemon prio 2 tid 0x038fb770 nid 0xf54 in Object wait    431f000  431 at   locked  0x1430dcb0   a org eclipse jface text reconciler DirtyRegionQueue    Worker 5  prio 5 tid 0x0337f5e0 nid 0xbd4 in Object wait    450f000  450fd94    waiting on  0x11af4c18   a org eclipse core internal jobs WorkerPool    locked  0x11af4c18   a org eclipse core internal jobs WorkerPool    Java indexing  daemon prio 4 tid 0x02e62938 nid 0xb84 in Object wait    379f000  379fd94    waiting on  0x120dc728   a org eclipse jdt internal core search indexing IndexManager  at   locked  0x120dc728   a org eclipse jdt internal core search indexing IndexManager    Signal Dispatcher  daemon prio 10 tid 0x00a13e88 nid 0x5c4 waiting on condition  0  0    Finalizer  daemon prio 9 tid 0x00a0f0e8 nid 0x6a4 in Object wait    2c6f000  2c6fd94    locked  0x11af0138   a java lang ref ReferenceQueue Lock    Reference Handler  daemon prio 10 tid 0x009c1a20 nid 0x5ac in Object wait    2c2f000  2c2fd94    waiting on  0x11af01a0   a java lang ref Reference Lock    locked  0x11af01a0   a java lang ref Reference Lock    main  prio 7 tid 0x000350d8 nid 0xe48 runnable  7e000  7fc3c  at at at   locked  0x1019bd38   a org eclipse swt widgets RunnableLock  at at at at at org eclipse team internal ccvs ui operations CVSBlockingRunnableContext 1 run CVSBlockingRunnableContext jav at org eclipse team internal ccvs ui operations CVSBlockingRunnableContext run CVSBlockingRunnableContext java  at at at at at at at at at   VM Thread  prio 5 tid 0x009bd970 nid 0x690 runnable   VM Periodic Task Thread  prio 10 tid 0x00a10498 nid 0x5bc waiting on condition  Suspend Checker Thread  prio 10 tid 0x00a02540 nid 0x720 runnable
48382	Deadlock running automated testsI20031209  The automated tests for this build failed due to a deadlock   The stack trace is attached  All of the jobs involved are from the new marker view work  The problematic pattern is in Worker 4 and Worker 1  both of which are trying to join another job while owning an ILock  I recommend releasing the ILock before attempting to join the job
54450	requestInUI seems to have a race condition  fails most times   I m trying to exercise the job API that lets me query the user via a UI job and the requestInUI call  I get no Status back from the call unless I step through the logic in the debugger  Only then do I get a non null return from the method   This is my logic  private boolean askUserForHelp     UIJob uiJob   new UIJob  Help Request      public IStatus runInUIThread IProgressMonitor monitor     if  MessageDialog openQuestion PlatformUI getWorkbench    getActiveWorkbenchWindow   getShell     Choose    Should we run the runnable     return Status OK_STATUS  else return Status CANCEL_STATUS        IProgressService ps   PlatformUI getWorkbench   getProgressService     IStatus choice   ps requestInUI uiJob   Help Me    getName     if  choice getCode      0  return true  else return false     The job I have processes some work and then does more  a runnable passed to the job for fun   I m trying to make that 2nd bit of work optional based on the user prompt  This works only if I step through the logic  deep down into feedbackManager requestInUI job  message  where it sets up another UIJob and then uses a join   to wait on the response  Not sure if it is because of the async job execution  Something I had not noticed before on my API tour   or what  Another observation is that it seemed like the inUI request was not removed from the prompt dialog  The general purpose Errors Running Jobs dialog gets opened  but it is not helping identify what exception is thrown  I m wondering if this dialog actually shows enough information  even when you open details it is redundantly showing the same thing twice   and little specific info that I can find a way to influence so far   I have to go to the error log to see that it is a NullPointerException  this is due to the fact my choice var above is null after the requestInUI call  An aside  I got the impression from EclipseCON that this user request would be a hint to see what was needed vs a dialog that opened on top of their current work   Is this prompt technique still under development or finalized  I ve been running my code on both M7 and I20040310
59782	Deadlock in reentrant workspace runbuild I20040420 1300    started eclipse in Java perspective   I believe I selected a project in the packager explorer  then chose Window   Preferences   when the prefs dialog came up  with the Workbench page selected   I then got a progress dialog   it showed a waiting user operation and a waiting workspace build  Full thread dump Java HotSpot TM  Client VM  1 4 2_01 b06 mixed mode     All Types Caching  prio 4 tid 0x21125410 nid 0x7cc in Object wait    2266f000  2266fd90    waiting on  0x11a81550   a org eclipse core internal jobs ImplicitJobs ThreadJob  at   locked  0x11a81550   a org eclipse core internal jobs ImplicitJobs ThreadJob  at at at at at at at at at at at at at at at at at at at at   Worker 4  prio 5 tid 0x211a3bf8 nid 0x7c4 in Object wait    2249f000  2249fd90    waiting on  0x127c5690   a org eclipse core internal jobs ImplicitJobs ThreadJob  at   locked  0x127c5690   a org eclipse core internal jobs ImplicitJobs ThreadJob  at at at at   Worker 2  prio 5 tid 0x21c14458 nid 0x7bc in Object wait    223bf000  223bfd90    waiting on  0x112015e0   a org eclipse core internal jobs WorkerPool    locked  0x112015e0   a org eclipse core internal jobs WorkerPool    Java indexing  daemon prio 4 tid 0x2110be20 nid 0x76c in Object wait    222bf000  222bfd90    waiting on  0x11be9bc8   a org eclipse jdt internal core search indexing IndexManager  at   locked  0x11be9bc8   a org eclipse jdt internal core search indexing IndexManager    Start Level Event Dispatcher  daemon prio 5 tid 0x21137410 nid 0x7b0 in Object wait    2124f000  2124fd90    waiting on  0x10f90fb0   a org eclipse osgi framework eventmgr EventThread  at   locked  0x10f90fb0   a org eclipse osgi framework eventmgr EventThread    Framework Event Dispatcher  daemon prio 5 tid 0x21025410 nid 0x7ac in Object wait    2120f000  2120fd90    waiting on  0x10f91000   a org eclipse osgi framework eventmgr EventThread  at   locked  0x10f91000   a org eclipse osgi framework eventmgr EventThread    Signal Dispatcher  daemon prio 10 tid 0x00970e90 nid 0x7a0 waiting on condition  0  0    YJP CPU Sampler  daemon prio 5 tid 0x0023fdb0 nid 0x798 runnable  0  0    YJP RequestServer  daemon prio 5 tid 0x00970c18 nid 0x794 runnable  20e6f000  20e6fd90    locked  0x10f911a8   a java net PlainSocketImpl    Finalizer  daemon prio 9 tid 0x0091e1e8 nid 0x790 in Object wait    209ef000  209efd90    waiting on  0x10f912c0   a java lang ref ReferenceQueue Lock    locked  0x10f912c0   a java lang ref ReferenceQueue Lock    Reference Handler  daemon prio 10 tid 0x0091ce38 nid 0x78c in Object wait    209af000  209afd90    waiting on  0x10f91328   a java lang ref Reference Lock    locked  0x10f91328   a java lang ref Reference Lock    main  prio 7 tid 0x00234dc0 nid 0x780 runnable  6e000  6fc3c  at at at at at at at at at at at at at at at at at at at at at at at at at at at at at at at at at at at at at at at at at at   VM Thread  prio 5 tid 0x0095cd38 nid 0x788 runnable   VM Periodic Task Thread  prio 10 tid 0x0095e168 nid 0x7a8 waiting on condition  Suspend Checker Thread  prio 10 tid 0x00970d80 nid 0x79c runnable
67053	when locking fails with exception  wrong message is shown3 0 RC2   The same message will be shown by UI when locking fails  regardless the nature of the failure  case 1  Location lock returns false   the  Current workspace is already in use  is shown case 2  Location lock throws an IOException   something like  An error happened trying to lock the workspace  should be shown to the user  and the IOException should be logged  The same message  case 1  is being shown in both cases   Follows the code I am talking about   public final class IDEApplication           private boolean checkInstanceLocation Shell shell        try   if  instanceLoc lock      writeWorkspaceVersion    return true      catch  IOException e       do nothing   MessageDialog openError  shell  IDEWorkbenchMessages  getString  IDEApplication workspaceCannotLockTitle       NON NLS 1  IDEWorkbenchMessages  getString  IDEApplication workspaceCannotLockMessage        NON NLS 1  return false
74185	UIJobTest has potential concurrency failure  The UIJobTest is testing flags prematurely   The assertions wait until  while  testJobRan        Is complete testJobRan is set to true within testJob so it is possible for the while loop to break out before the join is completed here   delayJob join     thereby checking the flag before the job is done and preventing backgroundThreadFinished from getting set   Removing this test altogether fixes this and keeps the main test  for a join    Also all of the booleans should be volatile to prevent copies being created in dual processors
76378	Deadlock in interaction between ModalContext  UIThread  and background NotifyJob  org eclipse ui internal UILockListener seems to contain code that allows the UI thread to obtain locks that are held by another thread  if the UI thread is currently servicing a syncExec request from that other thread  However  when a third thread gets involved this seems to sometimes deadlock  In particular  if workspace background notification is triggered during an workspace operation that contains multiple nested operations  deadlock occurs  Since background notification is timing related  changes in timing can cause otherwise OK code to suddenly begin deadlocking  I ve included a JUnit test to reproduce the problem  and a patch that seems to solve it
84141	DecoratorScheduler should not lock UI Thread20050125  Currently the DecoratorScheduler locks the UI Thread sometimes while decorations are running  We should remove this lock and use a scheduling rule instead
108162	eadlock using MoveFilesAndFoldersOperation from a refactoring participant  We provide a Resource Move refactoring participant for resources managed by our plug in  The following line of code in the participant causes the deadlock   new MoveFilesAndFoldersOperation  the active shell   copyResources  some resources    destination container     The MoveFilesAndFoldersOperation class is from the  org eclipse ui actions  package
113582	Deadlock updating marker list during builds  I hot a deadlock involving jobs  The only two parties involved appear to be the problems view and the editor being saved  From the stacktrace  It s not obvious to me why the deadlock has occurred  I m assigning it to Tod since the Problems view is involved but it could also be a problem in the Jobs framework so I ve copied John as well  Here s the stacktrace   Full thread dump Java HotSpot TM  Client VM  1 4 2_10 ea b01 mixed mode     org eclipse jdt internal ui text JavaReconciler  daemon prio 2 tid 0x041fbb68 n id 0x9e0 in Object wait    5b7f000  5b7fd68  at org eclipse jface text reconciler AbstractReconciler BackgroundThread  run AbstractReconciler java 176    locked  0x17197160   a org eclipse jface text reconciler DirtyRegionQu eue    org eclipse jdt internal ui text JavaReconciler  daemon prio 2 tid 0x046ff530 n id 0xca8 in Object wait    5daf000  5dafd68  at org eclipse jface text reconciler AbstractReconciler BackgroundThread  run AbstractReconciler java 176    locked  0x16eac480   a org eclipse jface text reconciler DirtyRegionQu eue    org eclipse jface text reconciler MonoReconciler  daemon prio 2 tid 0x041ea010 nid 0x8c8 in Object wait    5d6f000  5d6fd68  at org eclipse jface text reconciler AbstractReconciler BackgroundThread  run AbstractReconciler java 176    locked  0x16d75488   a org eclipse jface text reconciler DirtyRegionQu eue    org eclipse jface text reconciler MonoReconciler  daemon prio 2 tid 0x0451ad30 nid 0xd7c in Object wait    5d2f000  5d2fd68  at org eclipse jface text reconciler AbstractReconciler BackgroundThread  run AbstractReconciler java 176    locked  0x16d754e8   a org eclipse jface text reconciler DirtyRegionQu eue    org eclipse jface text reconciler MonoReconciler  daemon prio 2 tid 0x04691d80 nid 0x544 in Object wait    583f000  583fd68  at org eclipse jface text reconciler AbstractReconciler BackgroundThread  run AbstractReconciler java 176    locked  0x16d75548   a org eclipse jface text reconciler DirtyRegionQu eue    org eclipse jface text reconciler MonoReconciler  daemon prio 2 tid 0x04734928 nid 0x540 in Object wait    531f000  531fd68  at org eclipse jface text reconciler AbstractReconciler BackgroundThread  run AbstractReconciler java 176    locked  0x16c98228   a org eclipse jface text reconciler DirtyRegionQu eue    org eclipse jface text reconciler MonoReconciler  daemon prio 2 tid 0x0402d8d8 nid 0x208 in Object wait    3dff000  3dffd68  at org eclipse jface text reconciler AbstractReconciler BackgroundThread  run AbstractReconciler java 176    locked  0x16c98470   a org eclipse jface text reconciler DirtyRegionQu eue    Worker 779  prio 5 tid 0x04799308 nid 0x5dc in Object wait    77df000  77dfd68     locked  0x1a18c4e8   a org eclipse core internal jobs Semaphore  at org eclipse core internal jobs InternalJob join  InternalJob java 305   at org eclipse ui views markers internal MarkerView scheduleCountUpdate   MarkerView java 1329  at org eclipse ui views markers internal MarkerAdapter fetchDeferredChil dren MarkerAdapter java 107  at org eclipse ui progress DeferredTreeContentManager 1 run  DeferredTree ContentManager java 192    Worker 775  prio 5 tid 0x04723c08 nid 0x72c in Object wait    613f000  613fd68     waiting on  0x16cec7f0   a org eclipse ui console IOConsoleInputStream   at org eclipse ui console IOConsoleInputStream waitForData  IOConsoleInpu tStream java 147  at org eclipse ui console IOConsoleInputStream read  IOConsoleInputStream  java 93    locked  0x16cec7f0   a org eclipse ui console IOConsoleInputStream  at org eclipse ui console IOConsoleInputStream read  IOConsoleInputStream  java 118  at org eclipse debug internal ui views console ProcessConsole InputReadJ   Worker 769  prio 5 tid 0x04859c18 nid 0x44c waiting on condition
114527	Race condition in Workbench leads to intermittent crashes  org eclipse ui startup
114813	Incorrect synchronization will lead to JUnit failure  org eclipse ui tests dynamicplugins DynamicPluginsTestSuite   The DynamicTestCase  org eclipse ui tests dynamicplugins  provides synchronization on the registry events that is not quite correct   To ensure that all registry events for the bundles added or removed have been processed  it adds a registry listener in the doSetUp   and waits for the listener to be called assuming that it is going to be the last listener in the chain   This work most of the time  however  in some instances  i e  ObjectContributionTest testViewerContributions    new registry listeners are added between the doSetUp   and the getBundle   calls   Such listeners would fall outside of the synchronization mechanism and JUnit s  will fail   The simple solution is to do addition of the synchronization registry listener at the begining of the getBundle     removeBundle   and remove that listener before returning from those methods
118414	Deadlock on each startup caused by AbstractWorkingSetManagerI20051129 0800   I always get a deadlock caused by AbstractWorkingSetManager when starting an existing workspace   Full thread dump Java HotSpot TM  Client VM  1 5 0_05 b03 mixed mode     Java indexing  daemon prio 4 tid 0x02e3f338 nid 0x28c in Object wait    0x0492f000  0x0492fb68    waiting on  0x12dd1b00   a org eclipse jdt internal core search indexing IndexManager    locked  0x12dd1b00   a org eclipse jdt internal core search indexing IndexManager    Worker 3  daemon prio 5 tid 0x03907ca0 nid 0x948 in Object wait    0x03d8f000  0x03d8fbe8    waiting on  0x11b4ff60   a org eclipse core internal jobs WorkerPool    locked  0x11b4ff60   a org eclipse core internal jobs WorkerPool    Worker 2  daemon prio 5 tid 0x0377d0a8 nid 0x11e0 in Object wait    0x03d4f000  0x03d4fc68    waiting on  0x11b4ff60   a org eclipse core internal jobs WorkerPool    locked  0x11b4ff60   a org eclipse core internal jobs WorkerPool    Worker 1  daemon prio 5 tid 0x0371f570 nid 0x988 in Object wait    0x0350f000  0x0350fce8    waiting on  0x11b4ff60   a org eclipse core internal jobs WorkerPool    locked  0x11b4ff60   a org eclipse core internal jobs WorkerPool    Worker 0  daemon prio 5 tid 0x036d4408 nid 0x1430 in Object wait    0x034cf000  0x034cfd68    waiting on  0x11b4ff60   a org eclipse core internal jobs WorkerPool    locked  0x11b4ff60   a org eclipse core internal jobs WorkerPool    Start Level Event Dispatcher  daemon prio 5 tid 0x02dc7870 nid 0x1428 in Object wait    0x0344f000  0x0344fae8    waiting on  0x11b364a8   a org eclipse osgi framework eventmgr EventManager EventThread    locked  0x11b364a8   a org eclipse osgi framework eventmgr EventManager EventThread    State Saver  prio 5 tid 0x02dc57b0 nid 0xea4 in Object wait    0x0340f000  0x0340fb68    waiting on  0x11b365f8   a org eclipse osgi internal resolver SystemState    locked  0x11b365f8   a org eclipse osgi internal resolver SystemState    Framework Event Dispatcher  daemon prio 5 tid 0x02dd8560 nid 0xa80 in Object wait    0x033cf000  0x033cfbe8    waiting on  0x13113e28   a org eclipse swt widgets RunnableLock    locked  0x13113e28   a org eclipse swt widgets RunnableLock    locked  0x12d83968   a org eclipse ui internal WorkingSetManager    Low Memory Detector  daemon prio 5 tid 0x00a92fd0 nid 0x1768 runnable  0x00000000  0x00000000    CompilerThread0  daemon prio 10 tid 0x00a91ba8 nid 0xe6c waiting on condition  0x00000000  0x02d0f6cc    Signal Dispatcher  daemon prio 10 tid 0x00a90f98 nid 0xe1c waiting on condition  0x00000000  0x00000000    Finalizer  daemon prio 9 tid 0x00a48850 nid 0x1774 in Object wait    0x02c8f000  0x02c8fa68    waiting on  0x11af0310   a java lang ref ReferenceQueue Lock    locked  0x11af0310   a java lang ref ReferenceQueue Lock    Reference Handler  daemon prio 10 tid 0x00a87b58 nid 0x15c0 in Object wait    0x02c4f000  0x02c4fae8    waiting on  0x11af0070   a java lang ref Reference Lock    locked  0x11af0070   a java lang ref Reference Lock    main  prio 7 tid 0x00036d78 nid 0xd50 waiting for monitor entry  0x0007e000  0x0007fc3c    waiting to lock  0x12d83968   a org eclipse ui internal WorkingSetManager    VM Thread  prio 10 tid 0x0003f2a0 nid 0x9dc runnable   VM Periodic Task Thread  prio 10 tid 0x00a8f3d0 nid 0xeec waiting on condition
136855	Deadlock caused by IDEIdleHelper and HeapStatus calls to runFinalization from UI thread  Plugins that have multi threaded access to a COM server dll whose ThreadingModel Apartment are broken in Eclipse 3 2   COM implements cross apartment COM calls using Windows messages  Thus the IUnknown  Release   calls from a thread in the multi threaded apartment  MTA  to an object owned by the single threaded apartment  STA  actually post a message to the main thread s dispatch loop and then block waiting for a response  The IUnknown  Release   calls typically happen during finalization of the Java objects that are accessing the COM server via JNI   The IDEIdleHelper and HeapStatus calls to System runFinalization   from the UI thread cause it to block  thus its dispatch loop  i e  Workbench runEventLoop  is no longer functioning when objects are finalized   Result  deadlock   The System runFinalization   method  unlike the System gc   method  causes the calling thread to block on a Thread join   call   Thread  main   Suspended  Object wait long  line  not available  native method  Thread join long  line  1038 Thread join   line  1091 Finalizer 1 run   line  164 AccessController doPrivileged1 PrivilegedAction  line  not available  native method  AccessController doPrivileged PrivilegedAction  line  287 Finalizer forkSecondaryFinalizer Runnable  line  170 Finalizer runFinalization   line  175 Runtime runFinalization0   line  not available  native method  Runtime runFinalization   line  692 System runFinalization   line  833 IDEIdleHelper performGC   line  154 IDEIdleHelper 1 run   line  125 Display runTimer int  line  3409 Display messageProc int  int  int  int  line  2691 OS DispatchMessageW MSG  line  not available  native method  OS DispatchMessage MSG  line  1879 Display readAndDispatch   line  2964 Workbench runEventLoop Window IExceptionHandler  Display  line  1914 Workbench runUI   line  1878 Workbench createAndRunWorkbench Display  WorkbenchAdvisor  line  419 PlatformUI createAndRunWorkbench Display  WorkbenchAdvisor  line  143 IDEApplication run Object  line  95 PlatformActivator 1 run Object  line  78 EclipseAppLauncher runApplication Object  line  92 EclipseAppLauncher start Object  line  68 EclipseStarter run Object  line  376 EclipseStarter run String    Runnable  line  169 NativeMethodAccessorImpl invoke0 Method  Object  Object    line  not available  native method  NativeMethodAccessorImpl invoke Object  Object    line  85 NativeMethodAccessorImpl invoke Method  Object  Object    line  58 DelegatingMethodAccessorImpl invoke Method  Object  Object    line  60 Method invoke Object  Object    line  391 Main invokeFramework String    URL    line  336 Main basicRun String    line  280 Main run String    line  977 Main main String    line  952  Here s the relevent code from the Finalizer class   private static void forkSecondaryFinalizer final Runnable proc    PrivilegedAction pa   new PrivilegedAction     public Object run     ThreadGroup tg   Thread currentThread   getThreadGroup    for  ThreadGroup tgn   tg  tgn   null  tg   tgn  tgn   tg getParent     Thread sft   new Thread tg  proc   Secondary finalizer    sft start    try   sft join      catch  InterruptedException x       Ignore      return null      AccessController doPrivileged pa      The  Secondary Finalizer  thread calls the Java objects  finalize   method  which calls IUnknown  Release    which then deadlocks   Besides this deadlock behaviour  in principle  it s a bad idea to block the UI thread while doing finalizations   Especially since there s no compelling reason to do so   Either the calls to System runFinalization   should be removed or they should be run from a background thread   This call is entirely optional anyways   The objects will eventually be finalized  though there may be compelling reasons to force the finalizations    Probably the best solution is to make both the call to gc   and to runFinalization   in a background thread   I have confirmed this behaviour using IBM VM versions 1 4 2 and Sun VM versions 1 4 2 and 1 5 0   I am unable to reproduce this using the IBM 1 5 vm   I have written a small Java only testcase that demonstrates the deadlock   It emulates the scenario by doing a Display syncExec   from a Java object s finalize   method so there s no need for the Eclipse team to actually use a Java COM bridge to see the behaviour   I ll attach the testcase to the report shortly
164361	Task name not shown in user job progress dialog3 2  The progress dialog for a user job often does not show the task name passed to IProgressMonitor beginTask  This appears to be due to a race condition in the optimization in ProgressMonitorDialog that tries to avoid trimming and setting the message in the label if the dialog is not visible   It s possible for the message to get set but never get shown  due to the SWT Show handler running before messageLabel isVisible   is true   I suggest that the SWT Show handler always set the last message in the label  even if it s not yet visible   That is  avoid the isVisible   check in setMessage when coming from the SWT Show handler in configureShell   Can this get addressed for the next milestone   I d be happy to sit down and help with this one
168806	Realm ensureWorkerThreadIsRunning   doesn t start a new thread
171452	Deadlock on startup using I20070123 1030  I got a couple of deadlocks on startup using I20070123 1030  It appears to be a syncExec from the Splash handler that is causing the deadlock  I will attach a trace
230472	Expression controlled Activities aren t correctly synchronized with the internal enabled list when they are persisted and reloaded
248908	BusyIndicator deadlocks UI threadBuild ID  3 4 0   Steps To Reproduce  1  Create a Form editor 2  Listen for PROP_DIRTY events 3  when form is dirty show the BusyIndicator by calling form setBusy true  3  then when editor is not dirty anymore disable the BusyIndicator by calling form setBusy false  4  the application will lock  UI thread is waiting on th synchronized setBusy   while the BusyIndicator thread is also waiting on syncExec      More information  I have been debugging my RCP application during a whole day to find why the application was freezing  I like to have the BusyIndicator shown when the editor is dirty  and when i save it  the UI locked  Disabling the BusyIndicator solved my problem  i took time to test the BusyIndicator because i thought the problem can not come from the Eclipse Framework itself  but it seems it s a bug   Thanks
258352	synchronization in ProgressManager too expensive
262032	DeadlockDetector may create deadlock
273752	syncExec in org eclipse ui internal navigator NavigatorContentService getSourceOfContribution Object  causes deadlock in test suite  The Platform UI test suite does not complete anymore   it hangs in the org eclipse ui tests dynamicplugins EditorTests testEditorClosure   test case  The hang is in the following code   final boolean   flag   new boolean     false    FrameworkListener listener   new FrameworkListener     public void frameworkEvent FrameworkEvent event    if  event getType      FrameworkEvent PACKAGES_REFRESHED  synchronized  flag    flag 0    true  flag notifyAll           context addFrameworkListener listener   packageAdmin refreshPackages bundles   synchronized  flag    while  flag 0     try   flag wait      catch  InterruptedException e           The flag 0  is never set to true  which probably means that the PACKAGES_REFRESHED event is not fired
296056	Deadlock between syncExec and IJobManager beginRuleThe following case now produces a deadlock  since N20091120 2000    1  The UI is waiting to begin a scheduling rule 2  The thread that owns the scheduling rule attempts to perform a syncExec
296822	NullProgressMonitor is not thread safe for expected usage  NullProgressMonitor setCanceled and isCanceled access the cancelled field  but there s no synchronization  The expected use is that setCanceled is called from a thread other than the one doing the work  which polls isCanceled    so this needs to be thread safe   Could either make these two methods synchronized or make the field volatile   Should check other progress monitor implementations too
302536	Broken double checked locking in MarkerSupportRegistry
306738	Renderer does not synchronize ToolItem selection state with MToolItemBuild  I20100318 2100   I have an app with an MToolBar defining a set of tool items of type  radio   When I select a different tool item  the button states change  Upon quitting the application  however  the change of state is not written to the delta  As a result  when running the application again  the toolbar item states are not what they should be
307405	Deadlock in NavigatorContentServiceContentProvider  We are using an adopting product and one of our users encountered this deadlock when starting up their workspace   1LKDEADLOCK    Deadlock detected  NULL                                 NULL 2LKDEADLOCKTHR  Thread  main   0x41591300  3LKDEADLOCKWTR    is waiting for  4LKDEADLOCKMON      sys_mon_t 0x43134548 infl_mon_t  0x43134580  4LKDEADLOCKOBJ      org eclipse ui internal navigator NavigatorSaveablesService 0x05DB48A8 0x05DB48B4  3LKDEADLOCKOWN    which is owned by  2LKDEADLOCKTHR  Thread  Framework Event Dispatcher   0x42467700  3LKDEADLOCKWTR    which is waiting for  4LKDEADLOCKMON      sys_mon_t 0x43BA6AB8 infl_mon_t  0x43BA6AF0  4LKDEADLOCKOBJ      org eclipse ui internal navigator NavigatorContentServiceContentProvider 0x0306F6E8 0x0306F6F4  3LKDEADLOCKOWN    which is owned by  2LKDEADLOCKTHR  Thread  main   0x41591300   I will attach the stack trace
312063	SelectionServiceImpl should use ListenerList instead of a HashSetHashSets are not thread safe and does not guarantee event order