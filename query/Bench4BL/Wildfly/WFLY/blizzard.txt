1810	synchronization sfsb lock callback exception released thrown lock sync throwable reentrant ownablereentrantlock tryacquire ownable statefulsessionsynchronizationinterceptor handlethrowableintxsync ownership jboss stateful org session ejb interceptor component subsequent acquire fail stateful owning pushed
2016	ejb context security thread time invocations caller asynchronous corrupted invocation role security async association context securitycontext instance object behaviour shouldn foo updates threads clears lose separate ongoing original assume runs
2065	Update jboss transaction spi JPA integration test suite tests afterCompletion synchonization callback timed transactions called transaction reaper thread hard coding reaper thread latest SPI jar includes method job update test suite SPI method marked jira bug testing reaper thread brittle Update jboss transaction spi student transaction test employee ejb deployment message create
2458	run AsynchronousService 1 GlobalComponentRegistryService ThreadPoolExecutor Worker AbstractComponentRegistry PrioritizedMethod JBossThread ThreadPoolExecutor GlobalComponentRegistry Thread ReflectionUtil start IllegalStateException CacheException EmbeddedCacheManagerStartupException StartException Exception Re deployment of a clustered application fail due to race condition with infinispan
2467	service cachescacheconfigurationservice infinispan wrapper configuration deadlock asynchronous asynchronousservice startup cache transactional installed configured caches
2954	synchronization transaction jmscontext issue producer registration jmscontextthe object jmscontextproducer injected registers the parts synchronizations objects stackoverflow jsmcontextproducer mess questions register arjuna registry jsmcontext transactionsynchronizationregistry wildfly http allowed sending jboss leads
3259	ServiceControllerImpl StartTask UndertowDeploymentService contextInitialized ApplicationAssociate PostConstructApplicationListener DeploymentManagerImpl startService ForwardingBeanManager BeanManagerImpl getContext ConfigureListener start RuntimeException ContextNotActiveException StartException Race condition in built in ServletContextListenersWeldComponentIntegrationProcessor properly adds service dependency on the WeldStartService
3280	problem thread server shutdown msc service shutdowni thread app deadlocked locking face remoting repository deploymentrepository file trace places jdbc jar src copying type listeners testing queue org driver observation application
3338	jmscontext thread safe javax transaction instance factory resource println application message enterprise ctx system time applicationscoped method bean jms producer jmsctx thread org test topic sendmessage wildfly wild threads topic
3381	request receipt cancellation process race remote initial operation operation domain linux buildresultsdiv test buildtypeid amp master masterlinux buildid lab div redhat eng viewlog testnameid html view tab type activeoperation rollback
3396	TimerResourceDefinition AbstractReadAttributeHandler TimerResourceDefinition 10 AbstractOperationContext TimerResourceDefinition AbstractTimerHandler 1 ModelControllerClientOperationHandler ExecuteRequestHandler completeStepInternal ModelControllerImpl readAttribute execute doCompleteStep executeStep NullPointerException InterruptedException NPE in TimerResourceDefinitionI am experiencing race conditions when running test remotely from Arquillian to Wildfly       CR
3517	provider deployment mount thread pools pool calls leaks thread shutdown scheduled pool deploymentmountprovider newscheduledthreadpool executors poolsdeploymentmountprovider start new reload oom leak command slow eventually result
3548	jta synchronization requestprocessor request processor tccl transaction processing synchronizations tcclit set incorrect called distributed comp module java ise user classloader access singleton container transaction tcclsingleton org jndi thread acccess provider
3695	shutdown service scheduled executor scheduledexecutorservice session threads tasks pool leaks expiration sessionexpirationscheduler thread setexecuteexistingdelayedtasksaftershutdownpolicy expiration scheduler undeploy shutdown session execute policy web tasks undeploythe delayed existing employed distributed scheduled attempt
3715	sessions servlets timeouts async distributable lock objects thread batchcontainer container batcher clustering ejb modules share batch locals capabilities web infinispan refactored relies
3727	run AsynchronousService 1 GlobalComponentRegistryService ThreadPoolExecutor Worker AbstractComponentRegistry PrioritizedMethod JBossThread ThreadPoolExecutor GlobalComponentRegistry Thread ReflectionUtil start CacheException NullPointerException EmbeddedCacheManagerStartupException StartException Race condition during channel create vs start causing NPE on channel startupMy hunch is that this is due to the fact that WildFly creates a channel in one thread but starts it in another
3731	TransactionSynchronizationRegistryImple getTransactionImple EjbRequestScopeActivationInterceptor registerInterposedSynchronization StatefulSessionSynchronizationInterceptor AbstractEJBRequestScopeActivationInterceptor processInvocation Interceptor InterceptorContext Invocation proceed Synchronization IllegalStateException EJBTransactionRolledbackException org jboss as ejb  component stateful StatefulSessionSynchronizationInterceptor should not register a Synchronization if the transaction was rolled back
3942	Race condition clean shutdown mod cluster session draining issue exists revalidate logic race conditions https issues jboss org browse MODCLUSTER https bugzilla redhat bug cgi Race condition clean shutdown mod cluster session draining cluster channel message failover removed test invocation client
4133	Hanging EJB threads persistent timer failed deployment time service pending timeouts bad redeploy hang worker threads server Hanging EJB threads persistent timer failed deployment timer method ejb transaction failed component type fail
4310	AbstractModelResource DefaultResourceProvider AbstractResourceAdapterDeploymentServiceListener registerChild ServiceControllerImpl ListenerTask AbstractModelResource ServiceControllerImpl Resource invokeListener access 2800 register ThreadPoolExecutor Worker IllegalStateException Race condition registering resource adapters at startupUpstream Jira of https bugzilla redhat com show bug cgi id
4511	code application deadlock exception interceptor cmttx description problem applicationdeadlockexceptiondescription invokeinourtx cmttxinterceptor stale handling invoke our exception transaction eap version component applicationdeadlockexception beforecompletion src org register bos completion object redhat synchronization
4844	transaction ejb timer finishes committed wildfly fully issue timers ejbread lock cmttx interceptor container concurrency containermanagedconcurrencyinterceptor xie xiaodong analysis lock test ejbreadwritelock imho cmttxinterceptor managed https singleton assume starts facing
5186	LockManagerImpl lockKeyAndCheckOwnership lockAndRegisterBackupLock AbstractTxLockingInterceptor visitLockControlCommand Lock acquireLock lock PessimisticLockingInterceptor LockControlCommand CommandInterceptor TimeoutException TimeoutException  Unable to acquire lock after   secondsSeen in these scenarios
5449	socket jgroups factory set custom subsystem jchannel correctlywildfly transport factory custom jchannelfactory wildfly correctly channel time api channels condition race correct overwritten started starts
5596	delivery thread safe startdelivery times safewfly component wfly driven change message start messagedrivencomponent mdbs stopdelivery multiple prevent deactivated activated stop manager deactivation recovery order threads protection methods deadlock code risk
5770	DefaultPendingLockManager awaitPendingTransactionsForKey lockOrRegisterBackupLock checkPendingAndLockKey visitDataWriteCommand checkForPendingLock AbstractTxLockingInterceptor Pending PessimisticLockingInterceptor Lock visitRemoveCommand CacheException RollbackException Exception TimeoutException Lock TimeoutException on CacheRegistry close Just happened on node shutdown when testing locally
6127	jta context component persistence illegalstateexception transaction exception target contextspec illegal spec propagated called unsynchronized sfb state transaction synchronization session bean synchronizationtype required method type type unsynchronized exception method container specifies
6215	sessionsynchronization synchronization sfsbissue eap jbpapp customer session access callbacks concurrent encountered examplemethod bean method thread transaction sfsb completion aftercompletion reaper finish transactions worker container original executing local timesout execute calling
6405	deployment archive bean method weld welddeployment getbeandeploymentarchive wildfly performance get bug limitation cases test performance deployment weldprovider behavior question impl provider manager getbeanmanager cdi app users org cdiimpl threads code
6776	thread pools error work pool workmanagerwhen type workmanager message manager multiple unclear running create creating configuration when max java illegalargumentexception custom log illegal length subsystem jca marshal failure argument wflyctl
6877	DefaultLockManager KeyAwareExtendedLockPromise DefaultLockManager CompositeLockPromise lockAllOrRegisterBackupLock lock Interceptor checkPendingAndLockAllKeys invokeNextInterceptorAndVerifyTransaction AbstractTxLockingInterceptor visitPrepareCommand lockAllAndRecord Lock Error TimeoutException Fine session attributes  i e  replication granularity   ATTRIBUTE  cause org infinispan util concurrent TimeoutException  ISPN   Unable to acquire lock after   secondsOur system using the following infinispan configuration for web session cache  i e  an async  non transactional  batch  optimistic locking dustrubutable cache
7282	jta jboss action basic basicaction deadlock remoting transaction support transaction iiop transactions deadlock post problem corp html resource diamond servers office calls redhat archives september recovery server ejbremote ejbremotetransactionpropagatinginterceptor implementation