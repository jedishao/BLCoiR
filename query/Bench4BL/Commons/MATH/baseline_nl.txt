505	TestUtils is thread hostile  TestUtils has several mutable static fields which are not synchronised  or volatile  If one of the fields is updated by thread A  there is no guarantee that thread B will see the full update   it may see a partially updated object  Furthermore  at least some of the static fields reference a mutable object  which can be changed whilst another thread is using it  As far as I can tell  this class must only ever be used by a single thread otherwise the results will be unpredictable
899	A random crash of MersenneTwister random generatorThere is a very small probability that MersenneTwister generator gives a following error  java lang ArrayIndexOutOfBoundsException  624 in MersenneTwister java line 253 The error is completely random and its probability is about 1e 8  UPD  The problem most probably arises only in multy thread mode
1134	unsafe initialization in BicubicSplineInterpolatingFunction  The lazy initialization of the internal array of partialDerivatives in BicubicSplineInterpolatingFunction is not thread safe  If multiple threads call any of the partialDerivative functions concurrently one thread may start the initialization and others will see the array is non null and assume it is fully initialized  If the internal array of partial derivatives was initialized in the constructor this would not be a problem  i e  the following check in partialDerivative which  x  y  if  partialDerivatives    null     computePartialDerivatives       will start the initialization  However in computePartialDerivatives   partialDerivatives   new BivariateFunction 5  lastI  lastJ   makes it appear to other threads as the the initialization has completed when it may not have
1294	Data race PolynomialUtils  buildPolynomial  If you run PolynomialUtilsTest methods concurrently there will occur problem with ComparisonFailure due to incorrect building of coefficient list  https   github com apache commons math blob master src main java org apache commons math4 analysis polynomials PolynomialsUtils java L368 should be in synchronized block  Explanation  polynomial of given degree can be created by other thread  and when primary thread access synchronized block  there is already created coefficients for this degree  therefore no coefficients should be added to coefficients list