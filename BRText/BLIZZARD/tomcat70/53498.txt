Atomicity violation bugs because of misusing concurrent collections.
The patch that may fix the atomicity violation bugs.
I'm currently doing research on mining Java concurrent library misusages.
I found some misusages of ConcurrentHashMap in Tomcat 7.0.28, which may result in potential atomicity violation bugs or harm the performance.
In java/org/apache/catalina/ha/context/ReplicatedContext.java, similar atomicity violation may occur when another thread T2 remove the key "name" from concurrent hashmap "tomcatAttributes" before thread T1 executes line 172.
In java/org/apache/catalina/startup/HostConfig.java, suppose thread T1 executes line 1480 and finds out the concurrent hashmap dose not contain the key "contextName".
The code below is a snapshot of the code in file java/org/apache/catalina/core/ApplicationContext.java from line 761 to 767 and line 1262 to 1266
