Remote service undiscovered and not rediscovered due to concurrency bug.
Build Identifier: 3.4
Hi,
While using zoodiscovery I got a remote service undiscovered and it was not rediscovered again.
Following error has been reported at the moment of undiscovery:

I had a quick look at the zoodiscovery code and it seems that the above exception happened because ReadRoot.this.readKeeper is null on line 70 in ReadRoot.java.
I think the reason why readKeeper is null because there's a race condition in the ReadRoot.process method.
Although the process method is synchronized it uses a separate thread to process the WatchedEvent and the code within this thread is not thread safe.
For example, you get two ReadRoot.process calls quite fast after each other:
- one with WatchedEvent state Disconnected or Expired (A)
- one with WatchedEvent state SyncConnected (B)
Then you can have following:
enter ReadRoot.process(A)
That's another bug: in connect method removeZooKeeper will have no effect because this.readKeeper is already set to null.
This means that the list of zooKeepers in watchManager will only grow.
I've put the severity on Major because the remote service is not rediscovered.
Reproducible: Sometimes
Steps to Reproduce:
As for any concurrency bug it's hard to reproduce and I don't have any idea how I could increase the probability to reproduce it.