Deadlock arised when calling JDIDebugModel.createMethodEntryBreakpoint.
We are now having quite a few cases where a deadlock occurred when we were trying to created an internal breakpoint by calling JDIDebugModel.createMethodEntryBreakpoint.
The deadlock will freeze the entire UI.
The situation can be summarized into the following:
1.
The UI thread (main thread) is in the process of displaying a GUI component, e.g. a dialog
2.
The processing of the UI component triggers our debugger to call JDIDebugModel.createMethodEntryBreakpoint to set an internal breakpoint.
3.
The process of creating the method entry breakpoint results in the WorkbenchContentProvider.resourceChanged(IResourceChangeEvent) to be executed, which calls Display.syncExec(Runnable).
4.
And we have a deadlock.
Since I have already discussed this issue with folks from both the JDT team an UI team, I just want to reemphasize a few points:
1.
Delay the displaying of the GUI component is not a valid solution, because it is the displaying of the GUI component that triggers the rest of the reaction chain.
2.
The process of displaying the GUI component is pending because the information required by the GUI component cannot be completed due to the breakpoint creation.
I am including the thread snapshots when the deadlock is occurred:
The main thread shows:
Thread [main] (Suspended)