ManagementRequestContext executeAsync hides RejectedExecutionExceptionThe impl of ManagementRequestContext executeAsync catches RejectedExecutionException and doesn't notify the calling thread. 
The handling itself seems ok (call failed on the result handler and send a failure response to the client), but not notifying the caller is problematic. 
There are a number of cases where the caller thread waits for a latch to be tripped, with the async task tripping. 
If the latch never trips, the caller thread will block forever. 
The testsuite hang at http://brontes.lab.eng.brq.redhat.com/viewLog.html?buildId=71233&amp;buildTypeId=WildFlyCore_MasterLinux&amp;tab=buildLog#_focus=13620 looks to be a case of this, with a server not stopping due to this:
locked (a org.jboss.as.controller.remote.TransactionalProtocolOperationHandler$ExecuteRequestContext)

The RejectedExecutionException indicates a thread pool has been shutdown before the response has gone out.
Ideally we would prevent that (for which I&amp;apos;ve recently filed a JIRA) but in any case we should make this more robust.
I think having executeAsync return a boolean should suffice.