Performance regression for OUTER JOINs.
Following simple query:

has slowed down between versions 154 and 157 by the factor of 10. On 8 nodes cluster it was completing in ~60 seconds now it completes in over 540 seconds, with very low CPU usage (constant ~20% of 24 cores) regardless of the task_concurrency. It doesn't seem to be the problem with hash partitioning (#6864). From profiling it seems like the problem is with OuterLookupSource.OuterPositionTracker#positionVisited method (called from PartitionedLookupSource#appendTo) in which code spends ~90% of the time.
This code was changed recently by @dain here 4f0f9fa
Previous version of PartitionedLookupSource didn't synchronize visitedPositions[][] array, but OuterLookupSource did synchronize it.
Currently, both are synchronized.
From profiling it looks like synchronization/locking prevents query from utilizing more CPU.
I didn't have time to look deeper into this code, but is this synchronization absolutely required?
Has something else changed recently in this area?