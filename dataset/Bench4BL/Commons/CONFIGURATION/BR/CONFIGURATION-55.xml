<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 02 18:20:08 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/CONFIGURATION-55/CONFIGURATION-55.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[CONFIGURATION-55] [configuration] Interpolation with multivalued keys returns nested strings instead of flattend string and interpolate doesn&apos;t work with all getters</title>
                <link>https://issues.apache.org/jira/browse/CONFIGURATION-55</link>
                <project id="12310467" key="CONFIGURATION">Commons Configuration</project>
                    <description>&lt;p&gt;I tried these properties with Configuration 1.1 stable (a&lt;br/&gt;
PropertiesConfiguration in a CompositeConfiguration, but that shouldn&apos;t matter)&lt;/p&gt;

&lt;p&gt;z=1,2,3,$&lt;/p&gt;
{x}
&lt;p&gt;,7,8&lt;br/&gt;
x=4,$&lt;/p&gt;
{y}
&lt;p&gt;y=5,6&lt;/p&gt;

&lt;p&gt;If queried using getStringArray(&quot;z&quot;) etc. this results in:&lt;br/&gt;
e.g. something like&lt;/p&gt;

&lt;p&gt;String[] z = config.getStringArray(&quot;z&quot;);&lt;br/&gt;
for (int i = 0; i &amp;lt; z.length; i++) {&lt;br/&gt;
  System.out.println(z&lt;span class=&quot;error&quot;&gt;&amp;#91;i&amp;#93;&lt;/span&gt;.toString());&lt;br/&gt;
}&lt;/p&gt;

&lt;p&gt;1&lt;br/&gt;
2&lt;br/&gt;
3&lt;br/&gt;
[4, &lt;span class=&quot;error&quot;&gt;&amp;#91;5, 6&amp;#93;&lt;/span&gt;]&lt;br/&gt;
7&lt;br/&gt;
8&lt;/p&gt;

&lt;p&gt;Note brackets and nesting!&lt;br/&gt;
I guess it would be better to flatten such multivalued keys without&lt;br/&gt;
brackets,commas and spaces e.g. the result should look like (note: this is&lt;br/&gt;
already formated a bit)&lt;br/&gt;
x = 4,5,6&lt;br/&gt;
y = 5,6&lt;br/&gt;
z = 1,2,3,4,5,6,7,8&lt;/p&gt;

&lt;p&gt;Also note that commons-configuration-src-20050926.zip nightly build behaves&lt;br/&gt;
different, here the result was (also preformated):&lt;/p&gt;

&lt;p&gt;x = &lt;span class=&quot;error&quot;&gt;&amp;#91;4, 5&amp;#93;&lt;/span&gt;&lt;br/&gt;
y = &lt;span class=&quot;error&quot;&gt;&amp;#91;5, 6&amp;#93;&lt;/span&gt;&lt;br/&gt;
z = &lt;span class=&quot;error&quot;&gt;&amp;#91;1, 2, 3, 4, 7, 8&amp;#93;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Looks as if only the first value is taken when interpolating...&lt;/p&gt;

&lt;p&gt;&amp;#8212;&lt;/p&gt;

&lt;p&gt;Besides interpolate should get called for each getter.&lt;br/&gt;
a = $&lt;/p&gt;
{b}&lt;br/&gt;
b = 5&lt;br/&gt;
&lt;br/&gt;
One would expect config.getInt(&quot;a&quot;) == 5 instead of throwing an exception&lt;br/&gt;
because ${b}
&lt;p&gt; is no valid int. Of course, you can workaround by using&lt;br/&gt;
.getString(&quot;a&quot;) and converting manually, but this defeats the added value of all&lt;br/&gt;
different getters.&lt;/p&gt;</description>
                <environment>&lt;p&gt;Operating System: other&lt;br/&gt;
Platform: Other&lt;/p&gt;</environment>
        <key id="12342577">CONFIGURATION-55</key>
            <summary>[configuration] Interpolation with multivalued keys returns nested strings instead of flattend string and interpolate doesn&apos;t work with all getters</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="3">Duplicate</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="mech@tngtech.com">Michael Echerer</reporter>
                        <labels>
                    </labels>
                <created>Tue, 27 Sep 2005 05:26:58 +0000</created>
                <updated>Tue, 16 May 2006 12:09:40 +0000</updated>
                            <resolved>Tue, 16 May 2006 12:09:40 +0000</resolved>
                                    <version>1.1</version>
                                                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12410459" author="oliver.heger@t-online.de" created="Tue, 27 Sep 2005 14:57:56 +0000"  >&lt;p&gt;A while ago there was a discussion about interpolation of multi-valued&lt;br/&gt;
properties on the user list. The thread can be found here:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://mail-archives.apache.org/mod_mbox/jakarta-commons-user/200508.mbox/%3c20050817150058.1E260E04EE@gate2.excedent.us%3e&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://mail-archives.apache.org/mod_mbox/jakarta-commons-user/200508.mbox/%3c20050817150058.1E260E04EE@gate2.excedent.us%3e&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The outcome was this change in behavior you noticed and also the conclusion that&lt;br/&gt;
there is probably no correct solution to this problem because the expected&lt;br/&gt;
results strongly depend on a concrete use case.&lt;/p&gt;

&lt;p&gt;It is planed to make interpolation support more configurable by allowing&lt;br/&gt;
customizable strategies. Interpolation support for other data types is on the&lt;br/&gt;
agenda, too. All these issues are covered in the bugzilla ticket 35116, so I am&lt;br/&gt;
marking this ticket as duplicate.&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;
	&lt;ul&gt;
		&lt;li&gt;
		&lt;ul&gt;
			&lt;li&gt;This bug has been marked as a duplicate of 35116 ***&lt;/li&gt;
		&lt;/ul&gt;
		&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12410460" author="ebourg" created="Tue, 27 Sep 2005 19:16:55 +0000"  >&lt;p&gt;I think Michael has a point regarding getInt(&quot;a&quot;) throwing an exception in this&lt;br/&gt;
example. We could fix this easily before revamping the interpolation system:&lt;/p&gt;

&lt;p&gt;return PropertyConverter.toInteger(value);&lt;/p&gt;

&lt;p&gt;turns into&lt;/p&gt;

&lt;p&gt;return PropertyConverter.toInteger(value instanceof String ?&lt;br/&gt;
interpolate((String) value) : value);&lt;/p&gt;

&lt;p&gt;for all getters in AbstractConfiguration and DataConfiguration.&lt;/p&gt;</comment>
                            <comment id="12410461" author="oliver.heger@t-online.de" created="Tue, 27 Sep 2005 20:24:57 +0000"  >&lt;p&gt;Then it would be easier to call interpolate() directly inside the&lt;br/&gt;
resolveContainerStore() method, which is invoked by all primitive getters.&lt;/p&gt;</comment>
                            <comment id="12410462" author="ebourg" created="Tue, 27 Sep 2005 21:12:42 +0000"  >&lt;p&gt;Interesting idea, I&apos;m not sure it&apos;s wise to overload the responsability of&lt;br/&gt;
resolveContainerStore() though. I have added an interpolate(Object) method that&lt;br/&gt;
returns the value as is if it&apos;s not a String. That makes the code shorter and&lt;br/&gt;
keeps it readable:&lt;/p&gt;

&lt;p&gt;return PropertyConverter.toInteger(interpolate(value));&lt;/p&gt;
</comment>
                            <comment id="12410463" author="oliver.heger@t-online.de" created="Tue, 27 Sep 2005 21:29:11 +0000"  >&lt;p&gt;An Object interpolate(Object) method will be needed in future anyway, that&apos;s&lt;br/&gt;
fine with me.&lt;/p&gt;

&lt;p&gt;What resolveContainerStore() does ATM is to prepare a property value as far as&lt;br/&gt;
possible, so that primitive getters only need to perform a type conversion.&lt;br/&gt;
Performing interpolation is part of this task IMO. I would prefer having all&lt;br/&gt;
these steps at a central place to reduce code duplication.&lt;/p&gt;

&lt;p&gt;However &quot;resolveContainerStore&quot; is surely the wrong name for this method.&lt;br/&gt;
Because of backwards compatibility we cannot simply change the name. Should we&lt;br/&gt;
deprecate the method and instead introduce a new one with a better name?&lt;/p&gt;</comment>
                            <comment id="12410464" author="ebourg" created="Tue, 27 Sep 2005 21:53:24 +0000"  >&lt;p&gt;My concern about interpolating in resolveContainerStore is that it will be only&lt;br/&gt;
useful for scalar getters (getInt(), getFloat()...) and not for list and array&lt;br/&gt;
getters, especially in DataConfiguration, which use getProperty(). That would&lt;br/&gt;
look a bit odd to call PropertyConverter.toInteger(value) in getInteger() and&lt;br/&gt;
PropertyConverter.toInteger(interpolate(value)) in getIntegerList(). One might&lt;br/&gt;
think by comparing the two methods that getInteger() doesn&apos;t not perform the&lt;br/&gt;
interpolation.&lt;/p&gt;

&lt;p&gt;I agree that resolveContainerStore() is definitely not an explicit name. Its&lt;br/&gt;
logic could be moved in PropertyConverter as a toScalar(Object) or a&lt;br/&gt;
getHead(Object) method. Then we could remove resolveContainerStore() and call&lt;br/&gt;
directly the new method in PropertyConverter.&lt;/p&gt;</comment>
                            <comment id="12410465" author="ebourg" created="Tue, 27 Sep 2005 22:10:26 +0000"  >&lt;p&gt;I&apos;ve commited my changes introducing the new interpolate() method and performing&lt;br/&gt;
the interpolation in all getters.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_10010" key="com.atlassian.jira.plugin.system.customfieldtypes:importid">
                        <customfieldname>Bugzilla Id</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>36819</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 27 Sep 2005 14:57:56 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>33894</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            11 years, 11 weeks, 2 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0than:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>170111</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            </customfields>
    </item>
</channel>
</rss>