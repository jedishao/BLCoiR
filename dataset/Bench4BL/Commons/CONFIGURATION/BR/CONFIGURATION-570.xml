<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Thu Dec 01 20:12:19 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/CONFIGURATION-570/CONFIGURATION-570.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[CONFIGURATION-570] Passing SystemConfiguration() into PropertiesConfiguration() can cause a ConcurrentModificationException</title>
                <link>https://issues.apache.org/jira/browse/CONFIGURATION-570</link>
                <project id="12310467" key="CONFIGURATION">Commons Configuration</project>
                    <description>&lt;p&gt;This was encountered in a release of Accumulo. I&apos;m not sure if this is in the realm of commons configuration, but I figured I should put in a ticket-&lt;br/&gt;
A. just in case it is or&lt;br/&gt;
B. So others can be aware of this issue&lt;/p&gt;

&lt;p&gt;We had a piece of code which interpolates java properties (SystemConfiguration) with other variables. This code worked as follows&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
      PropertiesConfiguration pconf = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; PropertiesConfiguration();
      pconf.append(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; SystemConfiguration());
      pconf.addProperty(&lt;span class=&quot;code-quote&quot;&gt;&quot;hack_default_value&quot;&lt;/span&gt;, &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.defaultValue);
      &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; v = pconf.getString(&lt;span class=&quot;code-quote&quot;&gt;&quot;hack_default_value&quot;&lt;/span&gt;);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;However, after we added a monitor thread which calls System.setProperty before this code is hit, we would occasionally get a ConcurrentModificationException.&lt;/p&gt;

&lt;p&gt;I traced it down to pconf.append doing an iteration over the Configuration (AbstractConfiguration, line 1233 in 1.6). The configuration being passed in, SystemConfiguration, is just a MapConfiguration from the result of System.getProperties. This is an exact copy of the map the System maintains.&lt;/p&gt;

&lt;p&gt;There are two accessors to that map, setProperty and setProperties in System. Set property basically just falls to Properties.setProperty, while setProperties will copy the existing properties, add new ones, and then replace the object. We are using setProperty in our code.&lt;/p&gt;

&lt;p&gt;Properties.setProperty is a synchronized call, so we resolved it by replacing our code with&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
      PropertiesConfiguration pconf = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; PropertiesConfiguration();
      Properties systemProperties = &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.getProperties();
      &lt;span class=&quot;code-keyword&quot;&gt;synchronized&lt;/span&gt; (systemProperties) {
        pconf.append(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; MapConfiguration(systemProperties));
      }
      pconf.addProperty(&lt;span class=&quot;code-quote&quot;&gt;&quot;hack_default_value&quot;&lt;/span&gt;, &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.defaultValue);
      &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; v = pconf.getString(&lt;span class=&quot;code-quote&quot;&gt;&quot;hack_default_value&quot;&lt;/span&gt;);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I&apos;m not quite sure if/how it should be handled in commons configuration. I&apos;m thinking if it IS in the scope of this project, then SystemConfiguration should create a snapshot of System.getProperties. Or a new Configuration/configuration flag should be added to create a snapshot of it instead of the map directly.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12699269">CONFIGURATION-570</key>
            <summary>Passing SystemConfiguration() into PropertiesConfiguration() can cause a ConcurrentModificationException</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="vines">John Vines</reporter>
                        <labels>
                    </labels>
                <created>Thu, 6 Mar 2014 21:34:20 +0000</created>
                <updated>Thu, 24 Mar 2016 20:20:43 +0000</updated>
                            <resolved>Tue, 9 Sep 2014 18:00:06 +0000</resolved>
                                    <version>1.6</version>
                                    <fixVersion>2.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="13926176" author="oliver.heger@t-online.de" created="Mon, 10 Mar 2014 20:38:15 +0000"  >&lt;p&gt;This is an interesting report. I am also not sure how to handle it.&lt;/p&gt;

&lt;p&gt;First of all, you have entered 1.6 as affected version. The current version is 1.10. There has been some work on &lt;tt&gt;SystemConfiguration&lt;/tt&gt;, but to be honest, I doubt that the problem is solved in this version.&lt;/p&gt;

&lt;p&gt;IMHO, situation is similar to the synchronized collections provided by the JDK (which can be obtained via Collections.synchronizedSet/Map etc.). Here the Javadocs explicitly state that iteration over the elements has to be manually synced. We could think about creating a snapshot for the iteration, but this would affect every caller - a manual synchronization in opposite can be added if needed dependent on the current use case.&lt;/p&gt;

&lt;p&gt;Another thought: There is an alternative way for accessing system properties. In configuration files you can use a special method for variable interpolation to access system properties. Details can be found here: &lt;a href=&quot;http://commons.apache.org/proper/commons-configuration/userguide/howto_basicfeatures.html#Variable_Interpolation&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://commons.apache.org/proper/commons-configuration/userguide/howto_basicfeatures.html#Variable_Interpolation&lt;/a&gt;&lt;br/&gt;
Maybe this makes the append operation unnecessary?&lt;/p&gt;</comment>
                            <comment id="13926256" author="vines" created="Mon, 10 Mar 2014 21:36:11 +0000"  >&lt;p&gt;I checked, and the code around this bug was not fixed as of 1.9. I did not look at trunk to see if it changed.&lt;/p&gt;

&lt;p&gt;And that seems to work as well, that was a good tip!&lt;/p&gt;</comment>
                            <comment id="13930896" author="oliver.heger@t-online.de" created="Tue, 11 Mar 2014 20:27:55 +0000"  >&lt;p&gt;Glad to hear this.&lt;/p&gt;

&lt;p&gt;However, it occurred to me that we probably have to do something about this problem because we might also be affected when constructing a combined configuration using &lt;tt&gt;DefaultConfigurationBuilder&lt;/tt&gt;. This class allows combining multiple configuration sources to a single combined configuration. During this process, an iteration over the keys of the single sources is performed. So if there are concurrent modifications on system properties, the mentioned exception can be thrown.&lt;/p&gt;</comment>
                            <comment id="14127299" author="oliver.heger@t-online.de" created="Tue, 9 Sep 2014 18:00:06 +0000"  >&lt;p&gt;Fixed in SVN in revision 1623863.&lt;/p&gt;

&lt;p&gt;The &lt;tt&gt;getKeys()&lt;/tt&gt; implementation in &lt;tt&gt;SystemConfiguration&lt;/tt&gt; was changed to return a snapshot of the keys currently stored in the system properties. Thus &lt;tt&gt;ConcurrentModificationExceptions&lt;/tt&gt; can no longer occur.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12698513">ACCUMULO-2425</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 10 Mar 2014 20:38:15 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>377616</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            2 years, 12 weeks, 2 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1t2h3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>377909</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>