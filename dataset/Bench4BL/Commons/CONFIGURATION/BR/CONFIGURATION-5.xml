<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Thu Dec 01 19:39:16 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/CONFIGURATION-5/CONFIGURATION-5.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[CONFIGURATION-5] [configuration] ClassCastException not thrown by getBoolean()</title>
                <link>https://issues.apache.org/jira/browse/CONFIGURATION-5</link>
                <project id="12310467" key="CONFIGURATION">Commons Configuration</project>
                    <description>&lt;p&gt;Reading an existing not boolean property using the method&lt;br/&gt;
public boolean getBoolean(String key)&lt;br/&gt;
throws a NoSuchElementException instead of a ClassCastException as correct&lt;br/&gt;
using &lt;br/&gt;
public boolean getBoolean(String key, boolean defaultValue)&lt;br/&gt;
public Boolean getBoolean(String key, boolean defaultValue)&lt;br/&gt;
we get a null value instead of a ClassCastException as correct&lt;/p&gt;</description>
                <environment>&lt;p&gt;Operating System: All&lt;br/&gt;
Platform: All&lt;/p&gt;</environment>
        <key id="12341345">CONFIGURATION-5</key>
            <summary>[configuration] ClassCastException not thrown by getBoolean()</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="gufo99@yahoo.com">Alessio Piccoli</reporter>
                        <labels>
                    </labels>
                <created>Thu, 18 Mar 2004 00:15:47 +0000</created>
                <updated>Sat, 22 Aug 2009 19:36:38 +0000</updated>
                            <resolved>Sat, 22 Aug 2009 19:36:38 +0000</resolved>
                                    <version>Nightly Builds</version>
                                    <fixVersion>1.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12406261" author="gufo99@yahoo.com" created="Thu, 18 Mar 2004 00:17:34 +0000"  >&lt;p&gt;Created an attachment (id=10831)&lt;br/&gt;
patch for the described wrong behavior&lt;/p&gt;</comment>
                            <comment id="12406262" author="dep4b" created="Sun, 28 Mar 2004 23:18:46 +0000"  >&lt;p&gt;Alessio,&lt;/p&gt;

&lt;p&gt;I think that the correct behavior needs to be either throw the &lt;br/&gt;
NoSuchElementException if the value is missing, or the ClassCastException if &lt;br/&gt;
the value can&apos;t be casted.  However, can you submit a patch that applies this &lt;br/&gt;
logic to ALL the various methods of AbstractConfiguration, like getDouble, &lt;br/&gt;
getShort etc?  I don&apos;t want to have getBoolean operating differently from the &lt;br/&gt;
others.   Also, a unit test would be good to verify which Exception was thrown.&lt;/p&gt;

&lt;p&gt;Thanks!&lt;/p&gt;

&lt;p&gt;Eric&lt;/p&gt;</comment>
                            <comment id="12406263" author="ebourg" created="Wed, 5 May 2004 21:14:21 +0000"  >&lt;p&gt;Actually for all other types (double, short, byte...) a NumberFormatException is&lt;br/&gt;
thrown instead of a ClassCastException if the value of the property is not&lt;br/&gt;
compatible with the type. I&apos;m not sure throwing a ClassCastException for&lt;br/&gt;
incompatible values is the best choice because we are not casting a reference&lt;br/&gt;
there, maybe an IllegalArgumentException is best suited for this case.&lt;/p&gt;</comment>
                            <comment id="12406264" author="ebourg" created="Wed, 5 May 2004 21:48:59 +0000"  >&lt;p&gt;Created an attachment (id=11434)&lt;br/&gt;
Enhanced TestBaseConfiguration testing exceptions&lt;/p&gt;</comment>
                            <comment id="12406265" author="ebourg" created="Wed, 5 May 2004 21:57:53 +0000"  >&lt;p&gt;A new dependency on junit-addons is required in order to run the modified test case:&lt;/p&gt;

&lt;p&gt;  &amp;lt;dependency&amp;gt;&lt;br/&gt;
    &amp;lt;id&amp;gt;junit-addons&amp;lt;/id&amp;gt;&lt;br/&gt;
    &amp;lt;version&amp;gt;1.4&amp;lt;/version&amp;gt;&lt;br/&gt;
  &amp;lt;/dependency&amp;gt;&lt;/p&gt;</comment>
                            <comment id="12406266" author="dep4b" created="Thu, 13 May 2004 19:16:38 +0000"  >&lt;p&gt;I have applied the new unit tests (and update the project.xml).  At this point &lt;br/&gt;
however, with or without Alessio&apos;s patch, the unit test fails.  I think &lt;br/&gt;
because we changed it form a NoSuchElementException to a &lt;br/&gt;
ClassCastException..   Could the two of you put your heads together on this &lt;br/&gt;
one?  Not sure why getBoolean seems to function differently from getBigDecimal &lt;br/&gt;
etc...&lt;/p&gt;</comment>
                            <comment id="12406267" author="ebourg" created="Sun, 13 Jun 2004 20:23:35 +0000"  >&lt;p&gt;I&apos;ve been pondering this issue this week and I came to the conclusion that&lt;br/&gt;
neither a ClassCastException nor an IllegalArgumentException are appropriate.&lt;br/&gt;
One of the added value of &lt;span class=&quot;error&quot;&gt;&amp;#91;configuration&amp;#93;&lt;/span&gt; comparing to java.util.Properties or a&lt;br/&gt;
Map is its ability to convert transparently, as far as reasonably possible, the&lt;br/&gt;
stored properties into the type requested by the user. If this conversion is not&lt;br/&gt;
possible, we need an unified exception to inform the user, and not several&lt;br/&gt;
exceptions (ClassCastException, NumberFormatException, etc).&lt;/p&gt;

&lt;p&gt;I suggest adding a ConversionException, extending a&lt;br/&gt;
ConfigurationRuntimeException (or RuntimeConfigurationException ?) and wrapping&lt;br/&gt;
the cause that made the conversion to fail.&lt;/p&gt;

&lt;p&gt;If no one objects I&apos;m going to implement this change next week.&lt;/p&gt;
</comment>
                            <comment id="12406268" author="dep4b" created="Sun, 13 Jun 2004 20:34:26 +0000"  >&lt;p&gt;I think this sounds reasonable..  Typically, if a conversion doesn&apos;t happen,&lt;br/&gt;
people don&apos;t care about the nitty gritty details, they just want to know it&lt;br/&gt;
couldn&apos;t convert!  I see this typically happening in a dynamic environment where&lt;br/&gt;
someone might put in a value as a string and request it as a different datatype&lt;br/&gt;
due to missunderstanding what was to go in..  I think it should extend&lt;br/&gt;
ConfigurationRuntimeException, as that highlights that it is a Configuration&lt;br/&gt;
sublcass of RuntimeException!  &lt;/p&gt;

&lt;p&gt;Then, if you needed the specific reason, you could read it..  &lt;/p&gt;</comment>
                            <comment id="12406269" author="ebourg" created="Mon, 14 Jun 2004 19:42:10 +0000"  >&lt;p&gt;Moreover the new ConfigurationRuntimeException could replace the&lt;br/&gt;
NestableRuntimeExceptions used in BasePropertiesConfiguration, DOMConfiguration&lt;br/&gt;
and DOM4JConfiguration.&lt;/p&gt;</comment>
                            <comment id="12406270" author="dep4b" created="Tue, 15 Jun 2004 12:54:27 +0000"  >&lt;p&gt;Good thinking!  Way to refactor that code!  Let&apos;s add an o.a.c.c.exceptions&lt;br/&gt;
directory, since it looks like we are up to ConfigurationException,&lt;br/&gt;
ConfigurationRuntimeException, and ConfigurationConversionException.&lt;/p&gt;

&lt;p&gt;Eric&lt;/p&gt;</comment>
                            <comment id="12406271" author="ebourg" created="Tue, 15 Jun 2004 16:32:36 +0000"  >&lt;p&gt;I don&apos;t think we need an exception subpackage though, after all even java.lang&lt;br/&gt;
has more exceptions/errors than classes &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="12406272" author="ebourg" created="Tue, 15 Jun 2004 22:59:57 +0000"  >&lt;p&gt;Changes applied, the test case for getBoolean is ok. There is still an issue&lt;br/&gt;
with the getList() implementation in CompositeConfiguration, it returns an empty&lt;br/&gt;
list instead of a NoSuchElementException when the key is not found. I&apos;m sure to&lt;br/&gt;
like this though...&lt;/p&gt;</comment>
                            <comment id="12406273" author="ebourg" created="Tue, 15 Jun 2004 23:10:57 +0000"  >&lt;p&gt;Oops I meant I&apos;m NOT sure to like this, it looks more convenient to return an&lt;br/&gt;
empty List IMHO. Maybe we could remove the NoSuchElementException for non&lt;br/&gt;
primitive types ? This would make the API easier to use by removing a try/catch&lt;br/&gt;
block or a &apos;defaultValue&apos; parameter.&lt;/p&gt;</comment>
                            <comment id="12406274" author="ebourg" created="Mon, 21 Jun 2004 19:42:53 +0000"  >&lt;p&gt;The getList() implementation in CompositeConfiguration was actually consistent&lt;br/&gt;
with the one in AbstractConfiguration, I just cleaned the code and updated the&lt;br/&gt;
javadoc to state clearly that getList never throws an exception but returns an&lt;br/&gt;
empty list if the key doesn&apos;t exist.&lt;/p&gt;

&lt;p&gt;All our exceptions are consistent now, this bug can be closed.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12332811" name="ASF.LICENSE.NOT.GRANTED--Configuration-BooleanException.txt" size="805" author="gufo99@yahoo.com" created="Thu, 18 Mar 2004 00:17:34 +0000"/>
                            <attachment id="12332812" name="ASF.LICENSE.NOT.GRANTED--TestBaseConfiguration.java" size="18266" author="ebourg" created="Wed, 5 May 2004 21:48:59 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_10010" key="com.atlassian.jira.plugin.system.customfieldtypes:importid">
                        <customfieldname>Bugzilla Id</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>27747</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sun, 28 Mar 2004 23:18:46 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>110627</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            12 years, 25 weeks, 2 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0upfz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>177263</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            </customfields>
    </item>
</channel>
</rss>