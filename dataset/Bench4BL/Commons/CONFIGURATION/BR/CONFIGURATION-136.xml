<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Thu Dec 01 19:50:28 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/CONFIGURATION-136/CONFIGURATION-136.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[CONFIGURATION-136] Reloading may corrupt the configuration</title>
                <link>https://issues.apache.org/jira/browse/CONFIGURATION-136</link>
                <project id="12310467" key="CONFIGURATION">Commons Configuration</project>
                    <description>&lt;p&gt;Current reloading process clears current properties and load updated values from&lt;br/&gt;
resource reader. If an IO error occurs (or invalid format), the configuration&lt;br/&gt;
gets corrupted and the application becomes unstable.&lt;/p&gt;

&lt;p&gt;It may be better for hot-reload to put loaded values into a temporary Properties&lt;br/&gt;
and replace previous values only when reloading is successful. &lt;/p&gt;

&lt;p&gt;It may also allow to use a &apos;currentlty-reloading&apos; flag in the synchronized&lt;br/&gt;
&apos;reload&apos; block to avoid blocking threads during a reload (they could access&lt;br/&gt;
safelly the &apos;old&apos; properties until reload is finished)&lt;/p&gt;</description>
                <environment></environment>
        <key id="12342553">CONFIGURATION-136</key>
            <summary>Reloading may corrupt the configuration</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="ndeloof">nicolas de loof</reporter>
                        <labels>
                    </labels>
                <created>Wed, 14 Sep 2005 18:26:59 +0000</created>
                <updated>Thu, 24 Mar 2016 20:20:50 +0000</updated>
                            <resolved>Sat, 13 Sep 2014 19:16:41 +0000</resolved>
                                    <version>1.1</version>
                                    <fixVersion>2.0</fixVersion>
                                    <component>File reloading</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12410399" author="ebourg" created="Wed, 14 Sep 2005 19:02:14 +0000"  >&lt;p&gt;This issue has been on the todo list for quite some time. It could be quickly&lt;br/&gt;
fixed by changing the reload() method in AbstractFileConfiguration, it may look&lt;br/&gt;
like this :&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void reload()
    {
        &lt;span class=&quot;code-keyword&quot;&gt;synchronized&lt;/span&gt; (reloadLock)
        {
            &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (noReload == 0 &amp;amp;&amp;amp; strategy.reloadingRequired())
            {
                &lt;span class=&quot;code-comment&quot;&gt;// save the properties
&lt;/span&gt;                Map previousProperties = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; LinkedMap(store);

                &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt;
                {
                    clear();
                    load();

                    &lt;span class=&quot;code-comment&quot;&gt;// notify the strategy
&lt;/span&gt;                    strategy.reloadingPerformed();
                }
                &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (Exception e)
                {
                    e.printStackTrace();

                    &lt;span class=&quot;code-comment&quot;&gt;// rollback the changes
&lt;/span&gt;                    store = previousProperties;
                }
            }
        }
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I&apos;m not sure it&apos;s the best way to rollback the changes though, copying the&lt;br/&gt;
properties seems expensive. Any idea ? Should we add a safeReload flag to&lt;br/&gt;
enable/disable this feature ?&lt;/p&gt;</comment>
                            <comment id="12488813" author="ebourg" created="Fri, 13 Apr 2007 23:10:16 +0000"  >&lt;p&gt;The copy of the store can be avoided by keeping a reference to the previous store and creating a new empty store before loading the file :&lt;/p&gt;

&lt;p&gt;Map previousStore = store;&lt;br/&gt;
store = new LinkedMap();&lt;/p&gt;

&lt;p&gt;However this will only work for the &quot;flat&quot; configurations like PropertiesConfiguration and INIConfiguration, the hierarchical configurations like XMLConfiguration don&apos;t use the Map in BaseConfiguration to store the properties.&lt;/p&gt;</comment>
                            <comment id="13218027" author="l.michelet" created="Tue, 28 Feb 2012 09:40:56 +0000"  >&lt;p&gt;THe problem here is that filesystem is not transactional. When an exception is raised, there is no rollback on the file which is written.&lt;/p&gt;

&lt;p&gt;A proposal of correction is to save in memory the file before any modifications. When an exception is raised we replace the current file with the original one.&lt;/p&gt;

&lt;p&gt;The 2 following patches has been tested successfully with XMLConfiguration file.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-style: solid;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeHeader panelHeader&quot; style=&quot;border-bottom-width: 1px;border-bottom-style: solid;&quot;&gt;&lt;b&gt;AbstractFileConfiguration.java&lt;/b&gt;&lt;/div&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;

	/**
	 * Save the configuration to the specified URL. This doesn&apos;t change the
	 * source of the configuration, use setURL() &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; you need it.
	 * 
	 * @param url
	 *            the URL
	 * 
	 * @&lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; ConfigurationException
	 *             &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; an error occurs during the save operation
	 */
	&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void save(URL url) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; ConfigurationException {
		OutputStream out = &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;;
		ByteArrayInputStream originalFile = &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;;
		&lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
			&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; File file = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; File(url.getFile());
			&lt;span class=&quot;code-comment&quot;&gt;// Save original file &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; existing
&lt;/span&gt;			&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (file.exists()) {
				InputStream inputStreamOfOrignalFile = fileSystem
						.getInputStream(url);
				originalFile = saveOriginalFile(inputStreamOfOrignalFile);
			}
			out = fileSystem.getOutputStream(url);
			save(out);
			&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (out &lt;span class=&quot;code-keyword&quot;&gt;instanceof&lt;/span&gt; VerifiableOutputStream) {
				((VerifiableOutputStream) out).verify();
			}
		} &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (IOException e) {
			&lt;span class=&quot;code-comment&quot;&gt;// Rollback &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; IOException &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; existing
&lt;/span&gt;			&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (originalFile != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
				reloadOriginalFile(url, originalFile, out);
			}
			&lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ConfigurationException(&lt;span class=&quot;code-quote&quot;&gt;&quot;Could not save to URL &quot;&lt;/span&gt; + url, e);
		} &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (Exception e) {
			&lt;span class=&quot;code-comment&quot;&gt;// Rollback when any kind of Exception is raised &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; existing
&lt;/span&gt;			&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (originalFile != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
				reloadOriginalFile(url, originalFile, out);
			}
			&lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ConfigurationException(e);
		} &lt;span class=&quot;code-keyword&quot;&gt;finally&lt;/span&gt; {
			closeSilent(out);
		}
	}

	/**
	 * Save the original file before any modifications
	 * 
	 * @param in
	 * @&lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt;
	 * @&lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException
	 * @since 1.9
	 */
	&lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; ByteArrayInputStream saveOriginalFile(
			InputStream inputStreamOfOrignalFile) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
		ByteArrayOutputStream baos = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ByteArrayOutputStream();
		&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] buffer = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[1024];
		&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; len;
		&lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; ((len = inputStreamOfOrignalFile.read(buffer)) &amp;gt; -1) {
			baos.write(buffer, 0, len);
		}
		baos.flush();
		&lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ByteArrayInputStream(baos.toByteArray());
	}

	/**
	 * Replace the current file with the original one before any modifications
	 * 
	 * @param url
	 * @param originalFile
	 * @param outOfCurrentFile
	 * @&lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; ConfigurationException
	 * @since 1.9
	 */
	&lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; void reloadOriginalFile(URL url, ByteArrayInputStream originalFile,
			OutputStream outOfCurrentFile) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; ConfigurationException {
		&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (outOfCurrentFile != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; originalFile != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
			&lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
				&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; nextChar;
				&lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; ((nextChar = originalFile.read()) != -1)
					outOfCurrentFile.write((&lt;span class=&quot;code-object&quot;&gt;char&lt;/span&gt;) nextChar);
				outOfCurrentFile.write(&apos;\n&apos;);
				outOfCurrentFile.flush();
			} &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (IOException ioe) {
				&lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ConfigurationException(
						&lt;span class=&quot;code-quote&quot;&gt;&quot;Could not save to URL &quot;&lt;/span&gt; + url, ioe);
			}
		}
	}

&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13218045" author="l.michelet" created="Tue, 28 Feb 2012 10:25:47 +0000"  >&lt;p&gt;Patch for &lt;a href=&quot;https://issues.apache.org/jira/browse/CONFIGURATION-136&quot; title=&quot;Reloading may corrupt the configuration&quot; class=&quot;issue-link&quot; data-issue-key=&quot;CONFIGURATION-136&quot;&gt;&lt;del&gt;CONFIGURATION-136&lt;/del&gt;&lt;/a&gt; based on a 1.5 release&lt;/p&gt;</comment>
                            <comment id="13218049" author="l.michelet" created="Tue, 28 Feb 2012 10:29:29 +0000"  >&lt;p&gt;Patch for &lt;a href=&quot;https://issues.apache.org/jira/browse/CONFIGURATION-136&quot; title=&quot;Reloading may corrupt the configuration&quot; class=&quot;issue-link&quot; data-issue-key=&quot;CONFIGURATION-136&quot;&gt;&lt;del&gt;CONFIGURATION-136&lt;/del&gt;&lt;/a&gt; based on a 1.8 release&lt;/p&gt;</comment>
                            <comment id="13220339" author="oliver.heger@t-online.de" created="Thu, 1 Mar 2012 20:40:39 +0000"  >&lt;p&gt;Thanks for your contribution, but we need a patch of the source code (that&apos;s why it&apos;s called Open Source &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;. Then we can incorporate it in our code base for the next release. Your IDE should be able to generate the patch, otherwise you can use &lt;tt&gt;svn diff&lt;/tt&gt; on the command line. More information can be found at &lt;a href=&quot;http://commons.apache.org/patches.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://commons.apache.org/patches.html&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="13223403" author="l.michelet" created="Tue, 6 Mar 2012 16:44:54 +0000"  >&lt;p&gt;Maybe it&apos;s because I get used to work with proprietary source code &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13227903" author="oliver.heger@t-online.de" created="Mon, 12 Mar 2012 21:09:38 +0000"  >&lt;p&gt;I had a look at the patch, but I am not sure whether I fully understand what you intend. I expected something similar to what Emmanuel had suggested in his comments, i.e. a modification of the &lt;tt&gt;reload()&lt;/tt&gt; method to temporarily store the configuration&apos;s content before it is loaded again from disk.&lt;/p&gt;

&lt;p&gt;But you modified the &lt;tt&gt;save()&lt;/tt&gt; method. It looks like that you try to restore the original content of the configuration if an error occurs during saving. This does not solve the problem this ticket is about.&lt;/p&gt;

&lt;p&gt;Also, are you sure that your solution is robust? I mean, if you get an error on saving (maybe because the disk is full or not readable), how likely is it that the rollback operation succeeds?&lt;/p&gt;</comment>
                            <comment id="14132892" author="oliver.heger@t-online.de" created="Sat, 13 Sep 2014 19:16:41 +0000"  >&lt;p&gt;This has been solved by the rework of the reloading mechanism which is now handled by configuration builders.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12625614">CONFIGURATION-520</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12516307" name="commons-configuration-1.5_patch_CONFIGURATION-136.jar" size="279388" author="l.michelet" created="Tue, 28 Feb 2012 10:25:47 +0000"/>
                            <attachment id="12516308" name="commons-configuration-1.8_patch_CONFIGURATION-136.jar" size="329351" author="l.michelet" created="Tue, 28 Feb 2012 10:29:29 +0000"/>
                            <attachment id="12517254" name="patch.txt" size="3100" author="l.michelet" created="Tue, 6 Mar 2012 16:44:53 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_10010" key="com.atlassian.jira.plugin.system.customfieldtypes:importid">
                        <customfieldname>Bugzilla Id</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>36652</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 14 Sep 2005 19:02:14 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>61988</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            2 years, 11 weeks, 5 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i16z33:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>248819</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>