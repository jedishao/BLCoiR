<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Thu Dec 01 20:00:43 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/CONFIGURATION-224/CONFIGURATION-224.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[CONFIGURATION-224] BaseConfiguration.getProperty() returns reference to intenal store collection object instead of a clone</title>
                <link>https://issues.apache.org/jira/browse/CONFIGURATION-224</link>
                <project id="12310467" key="CONFIGURATION">Commons Configuration</project>
                    <description>&lt;p&gt;When the property object is a List or an Array, BaseConfiguration.getProperty() returns a reference to the object contained in the store.&lt;br/&gt;
This means that changing that object, changes the content of the properties store without an explicit setProperty() or addProperty(). &lt;br/&gt;
Also any change to the object in the store will change the object that the code has reference to, but the user is not aware that the property has changed unless he has added a ConfigurationListener.&lt;/p&gt;

&lt;p&gt;Attached a patch to make the object returned by BaseConfiguration.getProperty() a clone of store content, to avoid side effects when changing Collection properties.&lt;/p&gt;</description>
                <environment>&lt;p&gt;1.3RC2&lt;/p&gt;</environment>
        <key id="12349270">CONFIGURATION-224</key>
            <summary>BaseConfiguration.getProperty() returns reference to intenal store collection object instead of a clone</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="garu">Gabriele Garuglieri</reporter>
                        <labels>
                    </labels>
                <created>Wed, 6 Sep 2006 05:41:37 +0000</created>
                <updated>Sat, 22 Aug 2009 19:36:43 +0000</updated>
                            <resolved>Fri, 22 Sep 2006 17:25:58 +0000</resolved>
                                                    <fixVersion>1.3</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12433639" author="oliver.heger@t-online.de" created="Sat, 9 Sep 2006 19:11:57 +0000"  >&lt;p&gt;Good catch. This also means that the way ConfigurationDynaBean is implemented ATM it will not properly work with other configuration types (e.g. XMLConfiguration) that do not return modifiable list objects.&lt;/p&gt;

&lt;p&gt;However I am not sure whether cloning a collection is the best solution. I would assume that directly manipulating a list object returned by getProperty() is rather unusual because there is no guarantee that this works for all configuration types. So by making use of cloning each call to getProperty() with collections involved would become more expensive only to deal with a special case. An alternative would be to return an unmodifiable collection (using Collections.unmodifiableCollection). But this would have to be exactly documented because it can impact existing code. WDYT?&lt;/p&gt;

&lt;p&gt;I would like to postpone this issue until the 1.3 release is out.&lt;/p&gt;</comment>
                            <comment id="12433789" author="garu" created="Mon, 11 Sep 2006 07:41:03 +0000"  >&lt;p&gt;Hi Oliver,&lt;br/&gt;
i agree with you that directly manipulating a list object returned by getProperty() is rather unusual, but i don&apos;t think making the returned object unmodifiable keeps you safe from the worst side effect of this problem.&lt;/p&gt;

&lt;p&gt;The real case that made me aware of this problem is as follows.&lt;br/&gt;
Based on the new events mechanism i implemented a PropertyListener by which you can specify one or more properties to monitor for changes. One of the options it gives is that user can specify  he wants to be notified only if the property value really changes. I.e. events like file reloads for properties that are reloaded with same value are filtered out.&lt;br/&gt;
To allow this the listener saves the old property value to match it against the new value, but in case of a collection value the old value is just a reference to the value in store.&lt;br/&gt;
This means that addProperty() or a file reload against a Collection object cause change events to be issued but  when they arrive both old value and new value refers to the same object hence, either changed or not, the comparison ALWAYS gives perfect match. So real change events are lost.&lt;/p&gt;

&lt;p&gt;I was not able to find a solution to this other than the returned property value is a different object than the one in store.&lt;/p&gt;

&lt;p&gt;Also think of cases where a casual user that didn&apos;t implemented any configuration listener holds a reference to a Collection object. If another thread changes the object in store, as a side effect also changes what the user refers too, but he may never become aware of that unless he always tests the size() of the Collection before he accesses it.&lt;/p&gt;

&lt;p&gt;IMO this should go into 1.3 because side effects that cause unexpected changes are always dangerous.&lt;/p&gt;</comment>
                            <comment id="12434537" author="oliver.heger@t-online.de" created="Wed, 13 Sep 2006 20:17:29 +0000"  >&lt;p&gt;I am still reluctant to add this copy operation to getProperty(). The getter methods that deal with collections like getList() and getStringArray() will perform another copy because they need to do interpolation. (So if somebody holds a collection or array returned by these methods, there won&apos;t be a problem.)&lt;/p&gt;

&lt;p&gt;Maybe the documentation of getProperty() should be changed to state that this method (depending on a specific implementation) may return an object that is under the control of the configuration instance and should not be manipulated or considered constant over time.&lt;/p&gt;

&lt;p&gt;This won&apos;t help you with your current problem. But can&apos;t you do the copy yourself for collection objects? I guess you will have a special treatment for collections anyway to compare the single elements, haven&apos;t you?&lt;/p&gt;</comment>
                            <comment id="12435561" author="oliver.heger@t-online.de" created="Mon, 18 Sep 2006 20:05:36 +0000"  >&lt;p&gt;For the incompatibility of ConfigurationDynaBean with some of the Configuration classes I have created a special ticket: &lt;a href=&quot;https://issues.apache.org/jira/browse/CONFIGURATION-227&quot; title=&quot;ConfigurationDynaBean does not work well with all types of configurations&quot; class=&quot;issue-link&quot; data-issue-key=&quot;CONFIGURATION-227&quot;&gt;&lt;del&gt;CONFIGURATION-227&lt;/del&gt;&lt;/a&gt; (I did some further testing and found out that there are more problems than dealing with lists). This is mainly to have this somewhere documented, I see no easy solution for this problem ATM.&lt;/p&gt;

&lt;p&gt;Meanwhile the vote for the release of Configuration 1.3 has passed, so these issues can be addressed later (which IMHO is no big problem, because the code in question exists since the very first release; so there is no need to hurry).&lt;/p&gt;

&lt;p&gt;Do you think that updating the documentation of the getProperty() method in the way outlined above would be a good idea?&lt;/p&gt;</comment>
                            <comment id="12435821" author="garu" created="Tue, 19 Sep 2006 14:44:52 +0000"  >&lt;p&gt;Hi Oliver,&lt;br/&gt;
sorry, i&apos;ve been out of office.&lt;br/&gt;
I already solved my problem, as you said, making myself a clone of the returning list.&lt;br/&gt;
About the problem, you may be right, indeed i missed that there are already other methods that returns a copy, so perhaps accurately documenting the behaviour of getProperty() may be enough.&lt;/p&gt;</comment>
                            <comment id="12436933" author="oliver.heger@t-online.de" created="Fri, 22 Sep 2006 17:25:58 +0000"  >&lt;p&gt;A comment describing the behavior of getProperty() was added to the Configuration interface. So I am closing this ticket now. The problems with ConfigurationDynaBean are now dealt with in ticket &lt;a href=&quot;https://issues.apache.org/jira/browse/CONFIGURATION-227&quot; title=&quot;ConfigurationDynaBean does not work well with all types of configurations&quot; class=&quot;issue-link&quot; data-issue-key=&quot;CONFIGURATION-227&quot;&gt;&lt;del&gt;CONFIGURATION-227&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="12491590" author="ebourg" created="Wed, 25 Apr 2007 10:24:48 +0000"  >&lt;p&gt;There is another alternative to this issue : getProperty() could return a decorator for Collection properties, the decorator would intercept the modifications to the collection and generate a configuration event.&lt;/p&gt;

&lt;p&gt;That may be interesting for the getList() methods, I think it&apos;s important that getProperty() returns the stored object without modification.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12340241" name="ASF.LICENSE.NOT.GRANTED--list.patch" size="2270" author="garu" created="Wed, 6 Sep 2006 05:41:37 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sat, 9 Sep 2006 19:11:57 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>110784</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            9 years, 33 weeks, 1 day ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0uqcn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>177410</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>