<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Thu Dec 01 19:41:57 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/CONFIGURATION-344/CONFIGURATION-344.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[CONFIGURATION-344] Deadlock during refresh properties</title>
                <link>https://issues.apache.org/jira/browse/CONFIGURATION-344</link>
                <project id="12310467" key="CONFIGURATION">Commons Configuration</project>
                    <description>&lt;p&gt;Hi&lt;br/&gt;
Commons configurations get itself stuck in deadlock when refreshing&lt;br/&gt;
properties using Managed reloading strategy. It seems to me it get stuck&lt;br/&gt;
because of fireEvent in reload method. Another access grabs lock on&lt;br/&gt;
synchronized (getNodeCombiner()) when trying to rebuild but Combined&lt;br/&gt;
configuration is one of the listeners for event es well and it gets&lt;br/&gt;
stuck when processing invalidate. Can anyone suggest quick fix please?&lt;br/&gt;
Relevant information follows.&lt;br/&gt;
Thanks&lt;br/&gt;
Pavel&lt;/p&gt;

&lt;p&gt;Configuration:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-xml&quot;&gt;
&lt;span class=&quot;code-tag&quot;&gt;&amp;lt;configuration&amp;gt;&lt;/span&gt; 
  &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;override&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;system/&amp;gt;&lt;/span&gt;    
    &amp;lt;properties fileName=&lt;span class=&quot;code-quote&quot;&gt;&quot;gsxweb.properties&quot;&lt;/span&gt; throwExceptionOnMissing=&lt;span class=&quot;code-quote&quot;&gt;&quot;false&quot;&lt;/span&gt;
       config-name=&lt;span class=&quot;code-quote&quot;&gt;&quot;gsxweb&quot;&lt;/span&gt; config-optional=&lt;span class=&quot;code-quote&quot;&gt;&quot;false&quot;&lt;/span&gt; listDelimiter=&lt;span class=&quot;code-quote&quot;&gt;&quot;|&quot;&lt;/span&gt;&amp;gt;
       &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;reloadingStrategy config-class=&lt;span class=&quot;code-quote&quot;&gt;&quot;org.apache.commons.configuration.reloading.ManagedReloadingStrategy&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;      
    &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/properties&amp;gt;&lt;/span&gt;    
  &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/override&amp;gt;&lt;/span&gt; 
&lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/configuration&amp;gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Our Reload code:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
        &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; ln = combinedConfiguration.getNumberOfConfigurations();
        &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; reloaded = 0;
        &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; i = 0; i &amp;lt; ln; i++) {
            Configuration conf = combinedConfiguration.getConfiguration(i);
            &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (conf &lt;span class=&quot;code-keyword&quot;&gt;instanceof&lt;/span&gt; PropertiesConfiguration) {
                ManagedReloadingStrategy strat = &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;;
                ReloadingStrategy strategy = ((PropertiesConfiguration) conf).getReloadingStrategy();
                &lt;span class=&quot;code-comment&quot;&gt;//refresh &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; managed strategy
&lt;/span&gt;                &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (strategy &lt;span class=&quot;code-keyword&quot;&gt;instanceof&lt;/span&gt; ManagedReloadingStrategy) {
                    ((ManagedReloadingStrategy) strategy).refresh();
                &lt;span class=&quot;code-comment&quot;&gt;//reload &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; file changed strategy    
&lt;/span&gt;                } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (strategy &lt;span class=&quot;code-keyword&quot;&gt;instanceof&lt;/span&gt; FileChangedReloadingStrategy) {                    
                    ((PropertiesConfiguration) conf).reload();
                }
                reloaded++;
            }
        }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
Stack trace of deadlock threads
Name: http-10980-1
State: BLOCKED on
org.apache.commons.configuration.tree.OverrideCombiner@8511bb owned by:
http-10980-6
Total blocked: 154  Total waited: 2

Stack trace: 
org.apache.commons.configuration.CombinedConfiguration.invalidate(CombinedConfiguration.java:474)
org.apache.commons.configuration.CombinedConfiguration.configurationChanged(CombinedConfiguration.java:488)
org.apache.commons.configuration.event.EventSource.fireEvent(EventSource.java:249)
org.apache.commons.configuration.AbstractFileConfiguration.fireEvent(AbstractFileConfiguration.java:911)
org.apache.commons.configuration.AbstractFileConfiguration.reload(AbstractFileConfiguration.java:828)
   - locked java.lang.&lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;@127e34c
org.apache.commons.configuration.AbstractFileConfiguration.isEmpty(AbstractFileConfiguration.java:927)
org.apache.commons.configuration.reloading.ManagedReloadingStrategy.refresh(ManagedReloadingStrategy.java:91)
com.gsx.properties.PropertyProviderImpl.reset(PropertyProviderImpl.java:203)
   - locked java.lang.&lt;span class=&quot;code-object&quot;&gt;Class&lt;/span&gt;@109bcda
org.apache.jsp.test.testPropertyProvider_jsp._jspService(testPropertyProvider_jsp.java:60)
org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
javax.servlet.http.HttpServlet.service(HttpServlet.java:717)
org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:374)
org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:342)
org.apache.jasper.servlet.JspServlet.service(JspServlet.java:267)
javax.servlet.http.HttpServlet.service(HttpServlet.java:717)
org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)


Name: http-10980-6
State: BLOCKED on java.lang.&lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;@127e34c owned by: http-10980-1
Total blocked: 115  Total waited: 2

Stack trace: 
org.apache.commons.configuration.AbstractFileConfiguration.reload(AbstractFileConfiguration.java:814)
org.apache.commons.configuration.AbstractFileConfiguration.getKeys(AbstractFileConfiguration.java:939)
org.apache.commons.configuration.ConfigurationUtils.copy(ConfigurationUtils.java:139)
org.apache.commons.configuration.ConfigurationUtils.convertToHierarchical(ConfigurationUtils.java:199)
org.apache.commons.configuration.CombinedConfiguration
$ConfigData.getTransformedRoot(CombinedConfiguration.java:794)
org.apache.commons.configuration.CombinedConfiguration.constructCombinedNode(CombinedConfiguration.java:653)
org.apache.commons.configuration.CombinedConfiguration.getRootNode(CombinedConfiguration.java:504)
   - locked
org.apache.commons.configuration.tree.OverrideCombiner@8511bb
org.apache.commons.configuration.HierarchicalConfiguration.fetchNodeList(HierarchicalConfiguration.java:925)
org.apache.commons.configuration.HierarchicalConfiguration.getProperty(HierarchicalConfiguration.java:327)
org.apache.commons.configuration.CombinedConfiguration.getProperty(CombinedConfiguration.java:578)
org.apache.commons.configuration.AbstractConfiguration.resolveContainerStore(AbstractConfiguration.java:1155)
org.apache.commons.configuration.AbstractConfiguration.getString(AbstractConfiguration.java:1034)
org.apache.jsp.test.testPropertyProvider_jsp._jspService(testPropertyProvider_jsp.java:69)
org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
javax.servlet.http.HttpServlet.service(HttpServlet.java:717)
org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:374)
org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:342)
org.apache.jasper.servlet.JspServlet.service(JspServlet.java:267)
javax.servlet.http.HttpServlet.service(HttpServlet.java:717)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</description>
                <environment></environment>
        <key id="12407513">CONFIGURATION-344</key>
            <summary>Deadlock during refresh properties</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="2" iconUrl="https://issues.apache.org/jira/images/icons/priorities/critical.png">Critical</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="oliver.heger@t-online.de">Oliver Heger</assignee>
                                    <reporter username="palko">Pavel Savara</reporter>
                        <labels>
                    </labels>
                <created>Thu, 30 Oct 2008 11:46:39 +0000</created>
                <updated>Sat, 26 Sep 2009 14:52:35 +0000</updated>
                            <resolved>Sat, 8 Nov 2008 15:53:53 +0000</resolved>
                                    <version>1.5</version>
                                    <fixVersion>1.6</fixVersion>
                                    <component>Events &amp; Notifications</component>
                    <component>File reloading</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12643957" author="palko" created="Thu, 30 Oct 2008 12:49:21 +0000"  >&lt;p&gt;Here is my quick dirty fix, &lt;br/&gt;
Because getNodeCombiner() is public method i can grab lock in my code first before try to do reloading.&lt;/p&gt;

&lt;p&gt;synchronized (combinedConfiguration.getNodeCombiner())&lt;/p&gt;
{
 //do the reloading 
}

&lt;p&gt;It means locks are grabbed always in the same order so deadlock can&apos;t happen.&lt;/p&gt;

&lt;p&gt;Best &lt;br/&gt;
Pavel&lt;/p&gt;</comment>
                            <comment id="12645329" author="oliver.heger@t-online.de" created="Wed, 5 Nov 2008 21:28:42 +0000"  >&lt;p&gt;This is indeed a classic deadlock scenario. I can reproduce the problem with a unit test.&lt;/p&gt;

&lt;p&gt;While testing I found another problem related to reloading strategies. I created &lt;a href=&quot;https://issues.apache.org/jira/browse/CONFIGURATION-347&quot; title=&quot;Iterating over the keys of a file-based configuration can cause a ConcurrentModificationException&quot; class=&quot;issue-link&quot; data-issue-key=&quot;CONFIGURATION-347&quot;&gt;&lt;del&gt;CONFIGURATION-347&lt;/del&gt;&lt;/a&gt; for this issue.&lt;/p&gt;</comment>
                            <comment id="12645991" author="oliver.heger@t-online.de" created="Sat, 8 Nov 2008 15:53:53 +0000"  >&lt;p&gt;A fix was applied to trunk in revision 712401.&lt;/p&gt;

&lt;p&gt;So far, accessing the root node of the combined configuration was synchronized because it had to be re-constructed if something had changed. This fix removes this synchronization and - to ensure proper visibility - adds the &lt;b&gt;volatile&lt;/b&gt; modifier to the root node field. If now multiple threads want to access the combined configuration, there may be a race condition causing the root node to be constructed multiple times. However, this does not impact the results of queries or have other undesired side effects.&lt;/p&gt;

&lt;p&gt;When testing I found out that reloading operations are indeed problematic when multiple threads are involved. The unit test case uses a synthetic reloading strategy that forces a reload on every access. &lt;tt&gt;AbstractFileConfiguration&lt;/tt&gt; overrides all access methods to ensure that &lt;tt&gt;reload()&lt;/tt&gt; is invoked as in the following example:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt; getProperty(&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; key)
    {
        reload();
        &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;super&lt;/span&gt;.getProperty(key);
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If there are multiple concurrent reloads or property accesses in sequence - as in the test I created -, the following race condition can happen:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;One thread executes &lt;tt&gt;reload()&lt;/tt&gt; and then is going to enter &lt;tt&gt;getProperty()&lt;/tt&gt;.&lt;/li&gt;
	&lt;li&gt;Another thread wants to read a property and enters &lt;tt&gt;reload()&lt;/tt&gt;. Because &lt;tt&gt;reload()&lt;/tt&gt; is guarded by a lock, the thread has to wait.&lt;/li&gt;
	&lt;li&gt;As soon as the first thread leaves &lt;tt&gt;reload()&lt;/tt&gt; the second can proceed and initiates the reload operation.&lt;/li&gt;
	&lt;li&gt;While trying to read a property the first thread sees an invalid state because a reload operation is in progress.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;To get my test running I changed the implementation of &lt;tt&gt;getProperty()&lt;/tt&gt; in the following way:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt; getProperty(&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; key)
    {
        &lt;span class=&quot;code-keyword&quot;&gt;synchronized&lt;/span&gt; (reloadLock)
        {
            reload();
            &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;super&lt;/span&gt;.getProperty(key);
        }
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;So the whole property read operation is now guarded by the lock. To be on the safe side this change would have to be applied for the other methods, too. But I think, the architecture of the reloading implementation should better be re-worked in the next major release. Note that it is very unlikely that multiple reloads happen in short intervals because the available reloading strategies have a refresh delay.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12428678">CONFIGURATION-390</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 5 Nov 2008 21:28:42 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>33968</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            8 years, 4 weeks, 5 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0l78f:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>121822</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>