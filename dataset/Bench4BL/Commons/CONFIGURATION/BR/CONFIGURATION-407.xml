<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Thu Dec 01 20:06:58 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/CONFIGURATION-407/CONFIGURATION-407.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[CONFIGURATION-407] HierarchicalINIConfiguration can throw an exception if the global section is accessed concurrently</title>
                <link>https://issues.apache.org/jira/browse/CONFIGURATION-407</link>
                <project id="12310467" key="CONFIGURATION">Commons Configuration</project>
                    <description>&lt;p&gt;If the global section of a hierarchical INI configuration is requested, a new ViewNode is created which becomes the root node of a new configuration for the global section. Nodes representing properties of the global section are added to this ViewNode. This operation temporarily changes the parent node of these nodes which may cause problems if the method is called by multiple threads concurrently. Because access to a section is a read-only operation, this should be thread-safe.&lt;/p&gt;

&lt;p&gt;The probability that this error happens is pretty low IMO. Therefore it should be hard to create a unit test.&lt;/p&gt;

&lt;p&gt;The issue can be fixed by synchronizing the add operation to the ViewNode.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12455537">CONFIGURATION-407</key>
            <summary>HierarchicalINIConfiguration can throw an exception if the global section is accessed concurrently</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="oliver.heger@t-online.de">Oliver Heger</assignee>
                                    <reporter username="oliver.heger@t-online.de">Oliver Heger</reporter>
                        <labels>
                    </labels>
                <created>Sat, 6 Feb 2010 17:04:32 +0000</created>
                <updated>Thu, 8 Sep 2011 09:20:06 +0000</updated>
                            <resolved>Mon, 8 Feb 2010 21:04:22 +0000</resolved>
                                    <version>1.6</version>
                                    <fixVersion>1.7</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12830730" author="oliver.heger@t-online.de" created="Sun, 7 Feb 2010 17:15:45 +0000"  >&lt;p&gt;Actually even an IllegalStateException can be thrown by the &lt;tt&gt;DefaultConfigurationNode&lt;/tt&gt; class because the node is changed while it is assigned a parent node.&lt;/p&gt;</comment>
                            <comment id="12830775" author="sebb@apache.org" created="Sun, 7 Feb 2010 21:39:31 +0000"  >&lt;p&gt;Thread-safety means more than just synchronising changes to variables - threads that read the variable need to synch. on the same lock in order to be sure of seeing the updated value.&lt;/p&gt;</comment>
                            <comment id="12831114" author="oliver.heger@t-online.de" created="Mon, 8 Feb 2010 20:55:41 +0000"  >&lt;p&gt;Of course, you are right. The Configuration implementations are typically not thread-safe. However, it is intended that read-only access can be performed concurrently.&lt;/p&gt;

&lt;p&gt;So I am going to change the subject of this ticket.&lt;/p&gt;</comment>
                            <comment id="12831119" author="oliver.heger@t-online.de" created="Mon, 8 Feb 2010 21:04:22 +0000"  >&lt;p&gt;Fixed in subversion in revision 907793.&lt;/p&gt;</comment>
                            <comment id="12831176" author="sebb@apache.org" created="Mon, 8 Feb 2010 22:54:13 +0000"  >&lt;p&gt;If the same INIConfiguration instance is shared between threads, and one updates the shared config, then in the absence of synchronization, the other threads won&apos;t necessarily see the updated values. This is because the JVM is allowed to cache values in both the writer and reader threads.&lt;/p&gt;

&lt;p&gt;In order to ensure that cached values are correctly published, some form on synch. is needed. &lt;br/&gt;
For example, the reader has to synch. on the same object as the writer.&lt;br/&gt;
Or one can use volatile.&lt;/p&gt;

&lt;p&gt;Or, for example the configuration can be created in one thread, which then starts other threads that read it. Thread.start() acts as the lock in this case.&lt;br/&gt;
But if the writer thread subsequently changes the shared state, additional synch. will be needed to guarantee safe publication to the existing threads.&lt;/p&gt;

&lt;p&gt;By the way, the test case does not appear to test changes to the global INIConfiguration.&lt;/p&gt;</comment>
                            <comment id="12831635" author="oliver.heger@t-online.de" created="Tue, 9 Feb 2010 19:59:35 +0000"  >&lt;p&gt;With regard to concurrent access most Configuration implementations behave similar to Java collections: it is intended that they can be read concurrently by multiple threads; however, if one thread updates the configuration, the developer has to ensure proper synchronization. This is documented in the user&apos;s guide (&lt;a href=&quot;http://commons.apache.org/configuration/userguide/overview.html#Threading_issues&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://commons.apache.org/configuration/userguide/overview.html#Threading_issues&lt;/a&gt;) and should also be stated in the Javadocs of at least the configuration base classes.&lt;/p&gt;

&lt;p&gt;The issue this ticket is about is somewhat special because here the implementation of a logic read method did temporarily change the status of the configuration object. So synchronization was needed to make sure that this method can be called concurrently. But updates by another thread are still not supported. Therefore the tests do not update the data in the configuration.&lt;/p&gt;</comment>
                            <comment id="12831679" author="sebb@apache.org" created="Tue, 9 Feb 2010 21:33:01 +0000"  >&lt;p&gt;I think the user guide needs to be a lot clearer about what manual synch. is required. What should the reader threads synchronize on?&lt;/p&gt;

&lt;p&gt;Thread-safety and correct publication is only guaranteed if the writer and reader threads use the &lt;b&gt;same&lt;/b&gt; lock, so the reader thread needs to know what lock to use.&lt;/p&gt;</comment>
                            <comment id="12832183" author="oliver.heger@t-online.de" created="Wed, 10 Feb 2010 20:35:28 +0000"  >&lt;p&gt;Good points. It is probably best to open a new ticket for documentation improvements related to threading issues.&lt;/p&gt;

&lt;p&gt;I think, if there are threads that update the configuration, reader and writer threads should use the Configuration object itself as lock. Someday we might provide wrapper implementations that automatically synchronize access to configuration objects, analoguously to the functionality provided by Collections.synchronizedCollection(). But that&apos;s another story.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sun, 7 Feb 2010 21:39:31 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>61966</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            6 years, 43 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0l6lr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>121720</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>