<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun Nov 20 01:02:50 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/MATH-367/MATH-367.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[MATH-367] AbstractRealVector.sparseIterator fails when vector has exactly one non-zero entry</title>
                <link>https://issues.apache.org/jira/browse/MATH-367</link>
                <project id="12310485" key="MATH">Commons Math</project>
                    <description>&lt;p&gt;The following program:&lt;br/&gt;
===&lt;br/&gt;
import java.util.Iterator;&lt;br/&gt;
import org.apache.commons.math.linear.*;&lt;/p&gt;

&lt;p&gt;public class SparseIteratorTester&lt;br/&gt;
{&lt;br/&gt;
    public static void main(String[] args) {&lt;br/&gt;
        double vdata[] = &lt;/p&gt;
{ 0.0, 1.0, 0.0 }
&lt;p&gt;;&lt;br/&gt;
        RealVector v = new ArrayRealVector(vdata);&lt;br/&gt;
        Iterator&amp;lt;RealVector.Entry&amp;gt; iter = v.sparseIterator();&lt;br/&gt;
        while(iter.hasNext()) &lt;/p&gt;
{
            RealVector.Entry entry = iter.next();
            System.out.printf(&quot;%d: %f\n&quot;, entry.getIndex(), entry.getValue());
        }
&lt;p&gt;   &lt;br/&gt;
    }       &lt;br/&gt;
} &lt;br/&gt;
===&lt;br/&gt;
generates this output:&lt;/p&gt;

&lt;p&gt;1: 1.000000&lt;br/&gt;
Exception in thread &quot;main&quot; java.lang.ArrayIndexOutOfBoundsException: -1&lt;br/&gt;
	at org.apache.commons.math.linear.ArrayRealVector.getEntry(ArrayRealVector.java:995)&lt;br/&gt;
	at org.apache.commons.math.linear.AbstractRealVector$EntryImpl.getValue(AbstractRealVector.java:850)&lt;br/&gt;
	at test.SparseIteratorTester.main(SparseIteratorTester.java:13)&lt;br/&gt;
===&lt;/p&gt;

&lt;p&gt;This patch fixes it, and simplifies AbstractRealVector.SparseEntryIterator  (sorry, i don&apos;t see any form entry for attaching a file)&lt;br/&gt;
===&lt;br/&gt;
Index: src/main/java/org/apache/commons/math/linear/AbstractRealVector.java&lt;br/&gt;
===================================================================&lt;br/&gt;
&amp;#8212; src/main/java/org/apache/commons/math/linear/AbstractRealVector.java	(revision 936985)&lt;br/&gt;
+++ src/main/java/org/apache/commons/math/linear/AbstractRealVector.java	(working copy)&lt;br/&gt;
@@ -18,6 +18,7 @@&lt;br/&gt;
 package org.apache.commons.math.linear;&lt;/p&gt;

&lt;p&gt; import java.util.Iterator;&lt;br/&gt;
+import java.util.NoSuchElementException;&lt;/p&gt;

&lt;p&gt; import org.apache.commons.math.FunctionEvaluationException;&lt;br/&gt;
 import org.apache.commons.math.MathRuntimeException;&lt;br/&gt;
@@ -875,40 +876,25 @@&lt;br/&gt;
         /** Dimension of the vector. */&lt;br/&gt;
         private final int dim;&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;/** Temporary entry (reused on each call to 
{@link #next()}
&lt;p&gt;. */&lt;/p&gt;&lt;/li&gt;
	&lt;li&gt;private EntryImpl tmp = new EntryImpl();&lt;br/&gt;
-&lt;/li&gt;
	&lt;li&gt;/** Current entry. */&lt;br/&gt;
+        /** Last entry returned by #next(). */&lt;br/&gt;
         private EntryImpl current;&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;/** Next entry. */&lt;br/&gt;
+        /** Next entry for #next() to return. */&lt;br/&gt;
         private EntryImpl next;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;         /** Simple constructor. */&lt;br/&gt;
         protected SparseEntryIterator() {&lt;br/&gt;
             dim = getDimension();&lt;br/&gt;
             current = new EntryImpl();&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;if (current.getValue() == 0) 
{
-                advance(current);
-            }&lt;/li&gt;
	&lt;li&gt;if(current.getIndex() &amp;gt;= 0)
{
-                // There is at least one non-zero entry
-                next = new EntryImpl();
-                next.setIndex(current.getIndex());
+            next = new EntryImpl();
+            if(next.getValue() == 0)
                 advance(next);
-            }
&lt;p&gt; else &lt;/p&gt;
{
-                // The vector consists of only zero entries, so deny having a next
-                current = null;
-            }
&lt;p&gt;         }&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;/** Advance an entry up to the next non null one.&lt;br/&gt;
+        /** Advance an entry up to the next nonzero value.&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
	&lt;li&gt;@param e entry to advance&lt;br/&gt;
          */&lt;br/&gt;
         protected void advance(EntryImpl e) {&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;if (e == null) 
{
-                return;
-            }
&lt;p&gt;             do &lt;/p&gt;
{
                 e.setIndex(e.getIndex() + 1);
             }
&lt;p&gt; while (e.getIndex() &amp;lt; dim &amp;amp;&amp;amp; e.getValue() == 0);&lt;br/&gt;
@@ -919,22 +905,17 @@&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;         /** &lt;/p&gt;
{@inheritDoc} */&lt;br/&gt;
         public boolean hasNext() {
-            return current != null;
+            return next.getIndex() &amp;gt;= 0;
         }&lt;br/&gt;
 &lt;br/&gt;
         /** {@inheritDoc}
&lt;p&gt; */&lt;br/&gt;
         public Entry next() {&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;tmp.setIndex(current.getIndex());&lt;/li&gt;
	&lt;li&gt;if (next != null) {&lt;/li&gt;
	&lt;li&gt;current.setIndex(next.getIndex());&lt;/li&gt;
	&lt;li&gt;advance(next);&lt;/li&gt;
	&lt;li&gt;if (next.getIndex() &amp;lt; 0) 
{
-                    next = null;
-                }&lt;/li&gt;
	&lt;li&gt;} else 
{
-                current = null;
-            }&lt;/li&gt;
	&lt;li&gt;return tmp;&lt;br/&gt;
+            int index = next.getIndex();&lt;br/&gt;
+            if(index &amp;lt; 0)&lt;br/&gt;
+                throw new NoSuchElementException();&lt;br/&gt;
+            current.setIndex(index);&lt;br/&gt;
+            advance(next);&lt;br/&gt;
+            return current;&lt;br/&gt;
         }&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;         /** &lt;/p&gt;
{@inheritDoc}
&lt;p&gt; */&lt;/p&gt;</description>
                <environment></environment>
        <key id="12462804">MATH-367</key>
            <summary>AbstractRealVector.sparseIterator fails when vector has exactly one non-zero entry</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="billbarker">Bill Barker</assignee>
                                    <reporter username="ashuang">Albert Huang</reporter>
                        <labels>
                    </labels>
                <created>Thu, 22 Apr 2010 18:31:06 +0000</created>
                <updated>Wed, 23 Mar 2011 20:03:42 +0000</updated>
                            <resolved>Mon, 10 May 2010 01:17:14 +0000</resolved>
                                    <version>2.1</version>
                    <version>2.2</version>
                                    <fixVersion>2.2</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12859943" author="ashuang" created="Thu, 22 Apr 2010 18:32:07 +0000"  >&lt;p&gt;patch fixing the bug&lt;/p&gt;</comment>
                            <comment id="12865641" author="billbarker" created="Mon, 10 May 2010 01:17:14 +0000"  >&lt;p&gt;I&apos;ve applied your patch (with a couple of style tweaks).  It should be available in the next release of commons-math.&lt;/p&gt;

&lt;p&gt;Thank you for your contribution.&lt;/p&gt;</comment>
                            <comment id="13010336" author="luc" created="Wed, 23 Mar 2011 20:03:42 +0000"  >&lt;p&gt;Closing issue as it was included in version 2.2, which has been released&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12442607" name="AbstractRealVector_sparseIterator_patch.txt" size="3012" author="ashuang" created="Thu, 22 Apr 2010 18:32:07 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 10 May 2010 01:17:14 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>34143</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            5 years, 35 weeks, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0ruwn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>160651</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>