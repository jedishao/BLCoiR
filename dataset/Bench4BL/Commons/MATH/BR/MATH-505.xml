<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Nov 18 20:18:33 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/MATH-505/MATH-505.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[MATH-505] TestUtils is thread-hostile</title>
                <link>https://issues.apache.org/jira/browse/MATH-505</link>
                <project id="12310485" key="MATH">Commons Math</project>
                    <description>&lt;p&gt;TestUtils has several mutable static fields which are not synchronised, or volatile.&lt;/p&gt;

&lt;p&gt;If one of the fields is updated by thread A, there is no guarantee that thread B will see the full update - it may see a partially updated object.&lt;/p&gt;

&lt;p&gt;Furthermore, at least some of the static fields reference a mutable object, which can be changed whilst another thread is using it.&lt;/p&gt;

&lt;p&gt;As far as I can tell, this class must only ever be used by a single thread otherwise the results will be unpredictable.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12497270">MATH-505</key>
            <summary>TestUtils is thread-hostile</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="sebb@apache.org">Sebb</assignee>
                                    <reporter username="sebb@apache.org">Sebb</reporter>
                        <labels>
                    </labels>
                <created>Tue, 1 Feb 2011 00:28:56 +0000</created>
                <updated>Sat, 24 Mar 2012 16:16:40 +0000</updated>
                            <resolved>Tue, 1 Feb 2011 18:58:30 +0000</resolved>
                                    <version>1.2</version>
                    <version>2.0</version>
                    <version>2.1</version>
                                    <fixVersion>3.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12988978" author="psteitz" created="Tue, 1 Feb 2011 00:49:14 +0000"  >&lt;p&gt;What fields, exactly?&lt;/p&gt;</comment>
                            <comment id="12988980" author="sebb@apache.org" created="Tue, 1 Feb 2011 01:01:44 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
/** Singleton TTest instance using &lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt; implementation. */
&lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; TTest tTest = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; TTestImpl();

/** Singleton ChiSquareTest instance using &lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt; implementation. */
&lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; ChiSquareTest chiSquareTest =
        &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ChiSquareTestImpl();

/** Singleton ChiSquareTest instance using &lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt; implementation. */
&lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; UnknownDistributionChiSquareTest unknownDistributionChiSquareTest =
        &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ChiSquareTestImpl();

/** Singleton OneWayAnova instance using &lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt; implementation. */
&lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; OneWayAnova oneWayAnova =
        &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; OneWayAnovaImpl();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;All of the above may be changed by set methods. There is no synch.&lt;/p&gt;</comment>
                            <comment id="12988986" author="psteitz" created="Tue, 1 Feb 2011 01:12:36 +0000"  >&lt;p&gt;OK, I was looking at the wrong TestUtils &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;The reason for this strange-looking setup is to allow the implementations to be pluggable at runtime.  &quot;Hostile&quot; is a harsh word, but this class is certainly &lt;b&gt;not&lt;/b&gt; threadsafe.  Ideas / patches to achieve the design goal with less &quot;hostility&quot; would be appreciated.&lt;/p&gt;

&lt;p&gt;I would have to double-check, but I don&apos;t think that there is any test instance state used by the methods in this class. &lt;/p&gt;</comment>
                            <comment id="12989013" author="sebb@apache.org" created="Tue, 1 Feb 2011 02:33:29 +0000"  >&lt;p&gt;By thread-hostile, I mean that it is not possible in general for two different threads to use the class safely.&lt;br/&gt;
If one thread changes any of the static fields, there is no way of knowing how the methods called by the other thread will behave. This is partly because the values are not safely published currently, but even if they were, the threads don&apos;t know what settings will be used as they can be changed at any time by another thread.&lt;/p&gt;

&lt;p&gt;In general, any class which relies on mutable static state for its behaviour is thread-hostile.&lt;br/&gt;
The shared state cannot simultaneously satisfy two threads needing different behaviour.&lt;/p&gt;

&lt;p&gt;I think the only safe way for two threads to use the class as it stands is if they both synchronize on the class.&lt;br/&gt;
This will ensure safe publication of any field changes, and enforce serial usage which can guarantee the setting that will be used (but the lock will have to be held for the set call as well).&lt;/p&gt;

&lt;p&gt;ChiSquareTestImpl has a non-final instance field which means its value won&apos;t necessarily be safely published.&lt;br/&gt;
The field also has a setter which could be invoked by one thread while another was using it.&lt;/p&gt;

&lt;p&gt;TTestImpl is immutable (has no fields), and OneWayAnovaImpl can be made immutable, but other implementations of the interfaces might exist which are not immutable.&lt;/p&gt;

&lt;p&gt;The simplest way to make the class thread-safe would be to convert all the methods and fields from static to instance, but I don&apos;t know if that is acceptable.&lt;/p&gt;</comment>
                            <comment id="12989039" author="psteitz" created="Tue, 1 Feb 2011 05:14:52 +0000"  >&lt;p&gt;Making the methods instance sort of defeats the purpose of the class.  None of the instance data in any of the static singletons is actually used or depended on by the methods of this class.  You are correct though that if one thread changes the impl for one of the singletons while another is using the class, the other could see a different than expected impl.  I think the practical likelihood of this is pretty much nil, as it is hard to imagine an application supplying two different implementations for the tests and wanting different threads to use different impls.  Personally, I would be happy just documenting the fact that the class is not threadsafe and if concurrent threads want to plug in different implementations, they need to synchronize on the class.  If this is not acceptable, my next preference would be to remove the pluggability - i.e., make the singletons final or get rid of them altogether, creating instances as needed for static method calls.  There is no initialization overhead creating the test classes.&lt;/p&gt;</comment>
                            <comment id="12989071" author="joehni" created="Tue, 1 Feb 2011 07:15:44 +0000"  >&lt;p&gt;@Phil: Please also keep in mind that M3 supports now (currently optional) parallel execution and it might be no longer a proper assumption that all tests are executed serially.&lt;/p&gt;</comment>
                            <comment id="12989188" author="sebb@apache.org" created="Tue, 1 Feb 2011 12:53:41 +0000"  >&lt;p&gt;There is another possible option, which would be to fix the default implementations, and create new static methods that took an extra parameter for the implementation to be used.&lt;/p&gt;

&lt;p&gt;At present, changes to the static fields are not guaranteed to be published correctly. Making them volatile would fix this, but would not help with concurrent access.&lt;/p&gt;</comment>
                            <comment id="12989232" author="psteitz" created="Tue, 1 Feb 2011 15:02:19 +0000"  >&lt;p&gt;Thanks, Joerg.  There should be no problems with the unit tests unless and until we introduce different tests that actually test the pluggability.  &lt;/p&gt;

&lt;p&gt;I thought about the additional parameter option, Sebb; but that again defeats the purpose of this &quot;convenience class&quot; - you might as well just instantiate the implementation and use it.&lt;/p&gt;

&lt;p&gt;I think the best solution is to just make the fields final and drop the getters and setters.  This is consistent with StatUtils.  So we should document the &quot;hostility&quot; issues in 2.2 and deprecate there and drop in 3.0.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 1 Feb 2011 00:49:14 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>150623</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            5 years, 42 weeks, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0ru3j:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>160520</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>