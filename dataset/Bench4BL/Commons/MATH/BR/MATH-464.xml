<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Nov 18 20:23:53 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/MATH-464/MATH-464.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[MATH-464] LegendreGaussIntegrator ignores defaultMaximalIterationCount and does 38 million iterations</title>
                <link>https://issues.apache.org/jira/browse/MATH-464</link>
                <project id="12310485" key="MATH">Commons Math</project>
                    <description>&lt;p&gt;The following code results in count = 37801710 which is effectively an infinite loop for typical functions we are using&lt;br/&gt;
(in GeoGebra)&lt;/p&gt;

&lt;p&gt;The argument defaultMaximalIterationCount = 100 is being ignored&lt;/p&gt;

&lt;p&gt;This is the version we are using:&lt;br/&gt;
&lt;a href=&quot;http://www.geogebra.org/trac/browser/trunk/geogebra/org/apache/commons/math/analysis/integration/LegendreGaussIntegrator.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.geogebra.org/trac/browser/trunk/geogebra/org/apache/commons/math/analysis/integration/LegendreGaussIntegrator.java&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    	LegendreGaussIntegrator gauss = new LegendreGaussIntegrator(5, 100);&lt;/p&gt;

&lt;p&gt;	try &lt;/p&gt;
{
		double result = gauss.integrate(new testFun(), -10, 0.32462367623786328);
	}
&lt;p&gt; catch (Exception ee) &lt;/p&gt;
{
		ee.printStackTrace();
	}



&lt;p&gt;class testFun implements UnivariateRealFunction {&lt;/p&gt;

&lt;p&gt;    public double value(double x) throws FunctionEvaluationException &lt;/p&gt;
{
    	count ++;
        if (x&amp;gt;=0 &amp;amp;&amp;amp; x&amp;lt;=5) return 0.2; else return 0;
    }

&lt;p&gt;}&lt;/p&gt;</description>
                <environment></environment>
        <key id="12494345">MATH-464</key>
            <summary>LegendreGaussIntegrator ignores defaultMaximalIterationCount and does 38 million iterations</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="2" iconUrl="https://issues.apache.org/jira/images/icons/priorities/critical.png">Critical</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="murkle">Michael Borcherds</reporter>
                        <labels>
                    </labels>
                <created>Fri, 31 Dec 2010 07:00:42 +0000</created>
                <updated>Sat, 24 Mar 2012 16:16:48 +0000</updated>
                            <resolved>Tue, 23 Aug 2011 22:37:41 +0000</resolved>
                                    <version>2.1</version>
                                    <fixVersion>3.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                    <timeoriginalestimate seconds="10800">3h</timeoriginalestimate>
                            <timeestimate seconds="10800">3h</timeestimate>
                                        <comments>
                            <comment id="12981497" author="psteitz" created="Thu, 13 Jan 2011 21:37:15 +0000"  >&lt;p&gt;Thanks for reporting this.&lt;/p&gt;

&lt;p&gt;The problem here is not with the iteration count.  In the example above, only 26 iterations are executed and the method returns the correct value.  What is causing the number of function evaluations to be so large is that each iteration involves multiple function evaluations.   I need to dig more deeply into the algorithm to determine what (if anything) the problem is, but what is causing the high number of function evaluations is the following&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-comment&quot;&gt;// prepare next iteration
&lt;/span&gt;&lt;span class=&quot;code-object&quot;&gt;double&lt;/span&gt; ratio = FastMath.min(4, FastMath.pow(delta / limit, 0.5 / abscissas.length));
n = FastMath.max((&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;) (ratio * n), n + 1);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In the example, delta / limit becomes large, causing n to increase rapidly.  As n increases, the number of function evaluations increases.&lt;/p&gt;</comment>
                            <comment id="12981731" author="psteitz" created="Fri, 14 Jan 2011 12:06:14 +0000"  >&lt;p&gt;I am now thinking that this is not a bug, but a consequence of the fact that the integrand in the example is not at all well-approximated by a polynomial.  With a small-enough stepsize, the algorithm does converge, but requiring the large number of function evaluations above.  Here are some stepsize values for the example and the associated absolute error:&lt;/p&gt;

&lt;p&gt;n 8 error 0.05738431110184819&lt;br/&gt;
n 28 error 0.027423287634332688&lt;br/&gt;
n 100 error 8.62162720248888E-5&lt;br/&gt;
n 249 error 5.308122631570711E-4&lt;br/&gt;
n 650 error 4.3582615516528367E-4&lt;br/&gt;
n 1641 error 2.519984967931377E-4&lt;br/&gt;
n 3829 error 5.838605030586419E-5&lt;br/&gt;
...&lt;br/&gt;
 n 1102593 error 6.71416523906343E-8&lt;/p&gt;

&lt;p&gt;The last entry is from the last (26th) iteration.  I haven&apos;t verified the rationale for the updating formula for n above, but it does appear warranted in this case to increase n quickly as large n (= small stepsize) is required to get a decent estimate of the integral using Gaussian quadrature.&lt;/p&gt;</comment>
                            <comment id="12981754" author="luc" created="Fri, 14 Jan 2011 13:40:51 +0000"  >&lt;p&gt;Perhaps we should also provide higher order formulas, using either a fixed set of precomputed constants or a way to compute the coefficients for any order.&lt;/p&gt;</comment>
                            <comment id="12982133" author="psteitz" created="Sat, 15 Jan 2011 16:56:44 +0000"  >&lt;p&gt;Moving to 3.0.  I don&apos;t think this is a bug, but points to a couple of possible enhancements:&lt;/p&gt;

&lt;p&gt;1) higher order formulas (+0 on this suggestion from Luc - IMO the example and others like it are not suitable for Legendre-Gauss)&lt;br/&gt;
2) bound on the number of function evaluations (I vaguely recall us talking about this elsewhere, but can&apos;t find the reference.  If anyone else can, pls add.)&lt;/p&gt;</comment>
                            <comment id="13017945" author="luc" created="Sat, 9 Apr 2011 19:48:23 +0000"  >&lt;p&gt;We restarted a thread about this a few days after the previous comment on this issue.&lt;br/&gt;
The thread can be read here: &lt;a href=&quot;http://markmail.org/thread/rnazrggnnuehz4qv&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://markmail.org/thread/rnazrggnnuehz4qv&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I think adding maxEvaluations while still preserving the existing maxIterations would be fine.&lt;/p&gt;</comment>
                            <comment id="13068347" author="luc" created="Wed, 20 Jul 2011 13:04:47 +0000"  >&lt;p&gt;Coming back to this issue.&lt;/p&gt;

&lt;p&gt;I would propose to follow the same pattern we used for root solvers: adding a maxEval parameter in the top level integrate interface declaration. So we would have the same kind of configuration, with tolerances set at integrator/solver level and maxEval and function pointer passed at integrate/solve method call.&lt;/p&gt;

&lt;p&gt;Since we are just in the phase we change interfaces, this would be a good time to add this parameter.&lt;/p&gt;

&lt;p&gt;Does this seems reasonable ?&lt;/p&gt;</comment>
                            <comment id="13083502" author="psteitz" created="Thu, 11 Aug 2011 20:36:21 +0000"  >&lt;p&gt;+1 for your suggestion, Luc.  Lets try to get this into 3.0.&lt;/p&gt;</comment>
                            <comment id="13089832" author="luc" created="Tue, 23 Aug 2011 22:37:41 +0000"  >&lt;p&gt;Fixed in subversion repository as of r1160914.&lt;/p&gt;

&lt;p&gt;The API of the integrators has been changed for consistency with solvers API. Now the main convergence parameters are set in the constructor and remain fixed, but a maximal number of function evaluation must be provided at each call to the integration method.&lt;/p&gt;

&lt;p&gt;Thanks for the report&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 13 Jan 2011 21:37:15 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>63983</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            5 years, 13 weeks, 2 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0rubz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>160558</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>