<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun Nov 20 00:28:01 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/MATH-828/MATH-828.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[MATH-828] Not expected UnboundedSolutionException</title>
                <link>https://issues.apache.org/jira/browse/MATH-828</link>
                <project id="12310485" key="MATH">Commons Math</project>
                    <description>&lt;p&gt;SimplexSolver throws UnboundedSolutionException when trying to solve minimization linear programming problem. The number of exception thrown depends on the number of variables.&lt;/p&gt;

&lt;p&gt;In order to see that behavior of SimplexSolver first try to run JUnit test setting a final variable ENTITIES_COUNT = 2 and that will give almost good result and then set it to 15 and you&apos;ll get a massive of unbounded exceptions.&lt;br/&gt;
First iteration is runned with predefined set of input data with which the Solver gives back an appropriate result.&lt;/p&gt;

&lt;p&gt;The problem itself is well tested by it&apos;s authors (mathematicians who I believe know what they developed) using Matlab 10 with no unbounded solutions on the same rules of creatnig random variables values.&lt;/p&gt;

&lt;p&gt;What is strange to me is the dependence of the number of UnboundedSolutionException exceptions on the number of variables in the problem.&lt;/p&gt;

&lt;p&gt;The problem is formulated as&lt;br/&gt;
min(1*t + 0*L) (for every r-th subject)&lt;br/&gt;
s.t.&lt;br/&gt;
-q(r) + QL &amp;gt;= 0&lt;br/&gt;
x(r)t - XL &amp;gt;= 0&lt;br/&gt;
L &amp;gt;= 0&lt;br/&gt;
where &lt;br/&gt;
r = 1..R, &lt;br/&gt;
L = &lt;/p&gt;
{l(1), l(2), ..., l(R)}
&lt;p&gt; (vector of R rows and 1 column),&lt;br/&gt;
Q - coefficients matrix MxR&lt;br/&gt;
X - coefficients matrix NxR &lt;/p&gt;</description>
                <environment>&lt;p&gt;Intel Core i5-2300 Windows XP SP3&lt;/p&gt;</environment>
        <key id="12599477">MATH-828</key>
            <summary>Not expected UnboundedSolutionException</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="tn">Thomas Neidhart</assignee>
                                    <reporter username="alexeyslepov">Alexey Slepov</reporter>
                        <labels>
                            <label>linear</label>
                            <label>math</label>
                            <label>programming</label>
                    </labels>
                <created>Thu, 19 Jul 2012 15:07:29 +0000</created>
                <updated>Mon, 4 Mar 2013 18:53:39 +0000</updated>
                            <resolved>Sun, 5 Aug 2012 16:33:40 +0000</resolved>
                                    <version>3.0</version>
                                    <fixVersion>3.1</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="13418345" author="alexeyslepov" created="Thu, 19 Jul 2012 15:09:02 +0000"  >&lt;p&gt;ApacheSimplexWrapperTest.java is the entry point&lt;br/&gt;
ApacheSimplexWrapper.java is the main class&lt;/p&gt;

&lt;p&gt;commons-math3-3.0.jar is that same Apache Math 3 Lib I use&lt;/p&gt;

&lt;p&gt;Source code contatins come auxiliary method, almost all for printing. Just run ApacheSimplexWrapperTest.java with a debugger and run straight forward to the line 160 in ApacheSimplexWrapper.java where things happen&lt;/p&gt;</comment>
                            <comment id="13418356" author="alexeyslepov" created="Thu, 19 Jul 2012 15:19:28 +0000"  >&lt;p&gt;And there is one more strange thing I see. Solutions of the problem that are not unbounded give value of t = 1 every single time while they are supposed to be within &lt;span class=&quot;error&quot;&gt;&amp;#91;0, 1&amp;#93;&lt;/span&gt;. E.g. in the predifend variables values case in the first iteration t1 is 1 and t2 is 0.25 (see Test #1)&lt;/p&gt;</comment>
                            <comment id="13418468" author="erans" created="Thu, 19 Jul 2012 17:24:24 +0000"  >&lt;p&gt;Did you test with a recent development snapshot?&lt;/p&gt;</comment>
                            <comment id="13418591" author="tn" created="Thu, 19 Jul 2012 19:18:36 +0000"  >&lt;p&gt;Hi Alexey,&lt;/p&gt;

&lt;p&gt;I have looked at your updated test case, and my observation is as follows:&lt;/p&gt;

&lt;p&gt;You create lots of constraints (L &amp;gt;= 0) that are unnecessary as the solver is already configured to restrict variables to non-negative values.&lt;/p&gt;

&lt;p&gt;I also think you use the objective function in a wrong way. It is defined as:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;c1*x1 + ... cn*xn + d
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;so at index 0 you have the coefficient for the first variable, .... and the last index is for the constant term. Now you use something called theta, which you put on index 0 which is wrong imho.&lt;/p&gt;

&lt;p&gt;If I remove all the unnecessary constraints, and move the theta variable to the end of the objective function vector, the tests run through successfully.&lt;/p&gt;

&lt;p&gt;Thomas&lt;/p&gt;</comment>
                            <comment id="13418595" author="tn" created="Thu, 19 Jul 2012 19:20:19 +0000"  >&lt;p&gt;I close this issue also as invalid, as there is nothing wrong with the solver itself. You may also ask questions regarding the use of the simplex solver on the commons-user mailinglist.&lt;/p&gt;

&lt;p&gt;Thomas&lt;/p&gt;</comment>
                            <comment id="13419013" author="alexeyslepov" created="Fri, 20 Jul 2012 09:00:22 +0000"  >&lt;p&gt;Thomas, thanks for reference that the solver is already configured to restrict variables to non-negative values. That signally decreased time the solver needed to find solution as much as decreased the number of UnboundedSolutionExceptions.&lt;/p&gt;

&lt;p&gt;As to the objective, there is a misunderstanding I believe.&lt;br/&gt;
I use the definition of the objective as it&apos;s declared in &lt;a href=&quot;http://commons.apache.org/math/apidocs/org/apache/commons/math/optimization/linear/LinearObjectiveFunction.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://commons.apache.org/math/apidocs/org/apache/commons/math/optimization/linear/LinearObjectiveFunction.html&lt;/a&gt;&lt;br/&gt;
and theta is x1 and there are R+1 variables. R is the number of objects the omtimum is to find for (ENTITIES_COUNT) that is equal to the number of lambdas l&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/information.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;. And as it shown in the very first test of the JUnit test where Q = &lt;span class=&quot;error&quot;&gt;&amp;#91;1,2&amp;#93;&lt;/span&gt;, X = &lt;span class=&quot;error&quot;&gt;&amp;#91;2,1&amp;#93;&lt;/span&gt; and L = T&lt;span class=&quot;error&quot;&gt;&amp;#91;l1, l2&amp;#93;&lt;/span&gt; the solver gives an expected result. That is the indicator that equations are written properly. In other words for every single of N entities there has to be an objective with N + 1 variables. For the case of 2 entities the 3 dimension space is used to build a surface that has it&apos;s theta or x(1) coordinate set to minimum, for the case of 3 entities the 4 dimension space is used to build a shape that has it&apos;s theta or x(1) coordinate set to minimum and etc.&lt;/p&gt;

&lt;p&gt;Here is how it looks for the simplest case (JUnit test #0)&lt;/p&gt;

&lt;p&gt;Model name: DEA problem&lt;br/&gt;
                 t       L1       L2 &lt;br/&gt;
Minimize         1        0        0 &lt;br/&gt;
R1               0        2        1 &amp;gt;=        1&lt;br/&gt;
R2               2       -1       -2 &amp;gt;=        0&lt;br/&gt;
R3               0        1        0 &amp;gt;=        0&lt;br/&gt;
R4               0        0        1 &amp;gt;=        0&lt;br/&gt;
Type          Real     Real     Real &lt;br/&gt;
upbo           Inf      Inf      Inf &lt;br/&gt;
lowbo            0        0        0 &lt;/p&gt;

&lt;p&gt;the objective is to be 0.25 and theta = 0.25 and L1 = 0.5, L2 = 0&lt;br/&gt;
The solver gives the same result for the case.&lt;br/&gt;
But only I add more entities to find minimum for as the same add more lambdas the solver gives back wrong answer, unbounded solution or theta greater than 1 (that is wrong due to the problem condition)&lt;/p&gt;

&lt;p&gt;I&apos;m sure it&apos;s been really too early to close the issue &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/sad.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; &lt;/p&gt;</comment>
                            <comment id="13419490" author="tn" created="Fri, 20 Jul 2012 19:37:30 +0000"  >&lt;p&gt;Hi Alexey,&lt;/p&gt;

&lt;p&gt;you are right, I was too quick to draw a conclusion, the way you setup the problem is indeed correct.&lt;/p&gt;

&lt;p&gt;What I have seen is that you use a very small maxUlps setting in your solver. The default it 10 and should work better atm. I will further look into it, it seems to be related to numerical instabilities.&lt;/p&gt;

&lt;p&gt;Solving the same problems with glpk seems to be more robust, which maybe due to the scaling that is applied there to improve numerical properties of the constraint matrix.&lt;/p&gt;</comment>
                            <comment id="13420518" author="alexeyslepov" created="Mon, 23 Jul 2012 09:12:30 +0000"  >&lt;p&gt;Thank you Thomas for reopenning and your confirmation that I use math3 properly. I&apos;ll play around with maxUIps setting and will try GLPK that I&apos;ve heard about but haven&apos;t tryed yet.&lt;/p&gt;

&lt;p&gt;Gilles am I right thinking that I need to use SVN to get 3.1 (r12317576)&lt;br/&gt;
svn checkout &lt;a href=&quot;http://svn.apache.org/repos/asf/commons/proper/math/trunk&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/commons/proper/math/trunk&lt;/a&gt; commons-math3&lt;br/&gt;
?&lt;br/&gt;
or if I&apos;m wrong please refer me to the proper link.&lt;br/&gt;
Thanks&lt;/p&gt;</comment>
                            <comment id="13420526" author="erans" created="Mon, 23 Jul 2012 09:34:42 +0000"  >&lt;blockquote&gt;&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;...&amp;#93;&lt;/span&gt; I need to use SVN to get 3.1 &lt;span class=&quot;error&quot;&gt;&amp;#91;...&amp;#93;&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The link refers to the development branch (it&apos;s not yet 3.1).&lt;br/&gt;
Yes, that&apos;s the way to get the up-to-date version of the code.&lt;/p&gt;

&lt;p&gt;If you don&apos;t want to compile the code (which requires the &quot;maven&quot; software), you could also download a snapshot JAR:&lt;br/&gt;
 &lt;a href=&quot;https://repository.apache.org/content/repositories/snapshots/org/apache/commons/commons-math3/3.1-SNAPSHOT/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://repository.apache.org/content/repositories/snapshots/org/apache/commons/commons-math3/3.1-SNAPSHOT/&lt;/a&gt;&lt;/p&gt;
</comment>
                            <comment id="13420534" author="alexeyslepov" created="Mon, 23 Jul 2012 10:02:44 +0000"  >&lt;p&gt;Now with 3.1-SNAPSHOT things are going better. Number of unbounded exceptions and unexpected theta values (&amp;gt; 1) are fewer versus math 3.0.&lt;br/&gt;
Now the picture of failures and successes for&lt;br/&gt;
25 entities (i.e. 25 + 1 variables) with 7 constraint equations, 3 for -q(r) + QL &amp;gt;= 0 and 4 for x(r)*t - XL &amp;gt;= 0&lt;br/&gt;
looks like&lt;/p&gt;

&lt;p&gt;Iteration 1 of 64&lt;br/&gt;
Iteration 2 of 64&lt;br/&gt;
Iteration 3 of 64&lt;br/&gt;
Iteration 4 of 64&lt;br/&gt;
Iteration 5 of 64&lt;br/&gt;
EXCEPTION: illegal state: maximal count (32,768) exceeded&lt;br/&gt;
Iteration 6 of 64&lt;br/&gt;
Iteration 7 of 64&lt;br/&gt;
EXCEPTION: illegal state: maximal count (32,768) exceeded&lt;br/&gt;
Iteration 8 of 64&lt;br/&gt;
Iteration 9 of 64&lt;br/&gt;
Iteration 10 of 64&lt;br/&gt;
Iteration 11 of 64&lt;br/&gt;
Iteration 12 of 64&lt;br/&gt;
Iteration 13 of 64&lt;br/&gt;
Iteration 14 of 64&lt;br/&gt;
Iteration 15 of 64&lt;br/&gt;
Iteration 16 of 64&lt;br/&gt;
Iteration 17 of 64&lt;br/&gt;
Iteration 18 of 64&lt;br/&gt;
Iteration 19 of 64&lt;br/&gt;
Iteration 20 of 64&lt;br/&gt;
EXCEPTION: illegal state: maximal count (32,768) exceeded&lt;br/&gt;
Iteration 21 of 64&lt;br/&gt;
Iteration 22 of 64&lt;br/&gt;
Iteration 23 of 64&lt;br/&gt;
EXCEPTION: illegal state: maximal count (32,768) exceeded&lt;br/&gt;
Iteration 24 of 64&lt;br/&gt;
Iteration 25 of 64&lt;br/&gt;
Iteration 26 of 64&lt;br/&gt;
EXCEPTION: unbounded solution&lt;br/&gt;
Iteration 27 of 64&lt;br/&gt;
Iteration 28 of 64&lt;br/&gt;
Iteration 29 of 64&lt;br/&gt;
Iteration 30 of 64&lt;br/&gt;
Iteration 31 of 64&lt;br/&gt;
Iteration 32 of 64&lt;br/&gt;
Iteration 33 of 64&lt;br/&gt;
EXCEPTION: illegal state: maximal count (32,768) exceeded&lt;br/&gt;
Iteration 34 of 64&lt;br/&gt;
EXCEPTION: illegal state: maximal count (32,768) exceeded&lt;br/&gt;
Iteration 35 of 64&lt;br/&gt;
Iteration 36 of 64&lt;br/&gt;
Iteration 37 of 64&lt;br/&gt;
EXCEPTION: illegal state: maximal count (32,768) exceeded&lt;br/&gt;
Iteration 38 of 64&lt;br/&gt;
Iteration 39 of 64&lt;br/&gt;
EXCEPTION: illegal state: maximal count (32,768) exceeded&lt;br/&gt;
Iteration 40 of 64&lt;br/&gt;
Iteration 41 of 64&lt;br/&gt;
Iteration 42 of 64&lt;br/&gt;
Iteration 43 of 64&lt;br/&gt;
Iteration 44 of 64&lt;br/&gt;
Iteration 45 of 64&lt;br/&gt;
EXCEPTION: illegal state: maximal count (32,768) exceeded&lt;br/&gt;
Iteration 46 of 64&lt;br/&gt;
Iteration 47 of 64&lt;br/&gt;
Iteration 48 of 64&lt;br/&gt;
Iteration 49 of 64&lt;br/&gt;
Iteration 50 of 64&lt;br/&gt;
Iteration 51 of 64&lt;br/&gt;
Iteration 52 of 64&lt;br/&gt;
Iteration 53 of 64&lt;br/&gt;
Iteration 54 of 64&lt;br/&gt;
Iteration 55 of 64&lt;br/&gt;
Iteration 56 of 64&lt;br/&gt;
Iteration 57 of 64&lt;br/&gt;
Iteration 58 of 64&lt;br/&gt;
Iteration 59 of 64&lt;br/&gt;
Iteration 60 of 64&lt;br/&gt;
Iteration 61 of 64&lt;br/&gt;
Iteration 62 of 64&lt;br/&gt;
EXCEPTION: illegal state: maximal count (32,768) exceeded&lt;br/&gt;
Iteration 63 of 64&lt;br/&gt;
Iteration 64 of 64&lt;/p&gt;

&lt;p&gt;for the code&lt;br/&gt;
SimplexSolver solver = new SimplexSolver(epsilon, 15);&lt;br/&gt;
try&lt;br/&gt;
{&lt;br/&gt;
	solver.setMaxIterations(32768);&lt;br/&gt;
	PointValuePair optimum = solver.optimize(objectiveFunction, constraints, GoalType.MINIMIZE, true);&lt;br/&gt;
...&lt;/p&gt;

&lt;p&gt;It&apos;s much better but it&apos;s still to risky to use math 3 to solve problems of this kind in real-world projects.&lt;/p&gt;</comment>
                            <comment id="13422151" author="alexeyslepov" created="Wed, 25 Jul 2012 10:46:24 +0000"  >&lt;p&gt;I&apos;ve made several launches of the program with different values. Here is the result&lt;br/&gt;
These&lt;br/&gt;
final int INPUT_ARGUMENTS_COUNT = 4;&lt;br/&gt;
final int OUTPUT_ARGUMENTS_COUNT = 3;&lt;br/&gt;
final int MIN_ARGUMENT_VALUE = 1;&lt;br/&gt;
final int MAX_ARGUMENT_VALUE = 100;&lt;br/&gt;
final int ITERATIONS_COUNT = 512;&lt;br/&gt;
and&lt;br/&gt;
maxIterationsCount = 65536;&lt;br/&gt;
stay the same over all experiments&lt;/p&gt;


&lt;p&gt;Experiment 1&lt;br/&gt;
final int ENTITIES_COUNT = 20;&lt;br/&gt;
final double EPSILON = 1E-5;&lt;br/&gt;
final boolean IS_INTEGER = false;&lt;br/&gt;
/*&lt;br/&gt;
IS_INTEGER is using in the source code as&lt;br/&gt;
value = MIN_ARGUMENT_VALUE + rand.nextInt(MAX_ARGUMENT_VALUE);&lt;br/&gt;
if(!IS_INTEGER)&lt;/p&gt;
{
     value += rand.nextDouble();
}
&lt;p&gt;where value is an entity&apos; coefficient value that is a cell of Q and X matrices&lt;br/&gt;
*/&lt;br/&gt;
gives&lt;br/&gt;
13 unbounded solutions of 512 iterations&lt;br/&gt;
0 nofeasible solutions of 512 iterations&lt;br/&gt;
34 maxcount exceeded exception of 512 iterations&lt;br/&gt;
Total 47.0 failures of 512 iterations ( = 0.091796875 of 1)&lt;/p&gt;

&lt;p&gt;Experiment 2&lt;br/&gt;
final int ENTITIES_COUNT = 20;&lt;br/&gt;
final double EPSILON = 1E-8;&lt;br/&gt;
final boolean IS_INTEGER = false;&lt;br/&gt;
gives&lt;br/&gt;
13 unbounded solutions of 512 iterations&lt;br/&gt;
0 nofeasible solutions of 512 iterations&lt;br/&gt;
37 maxcount exceeded exception of 512 iterations&lt;br/&gt;
Total 50.0 failures of 512 iterations ( = 0.09765625 of 1)&lt;/p&gt;

&lt;p&gt;Experiment 3&lt;br/&gt;
final int ENTITIES_COUNT = 20;&lt;br/&gt;
final double EPSILON = 1E-8;&lt;br/&gt;
final boolean IS_INTEGER = true;&lt;br/&gt;
gives&lt;br/&gt;
11 unbounded solutions of 512 iterations&lt;br/&gt;
3 nofeasible solutions of 512 iterations&lt;br/&gt;
33 maxcount exceeded exception of 512 iterations&lt;br/&gt;
Total 47.0 failures of 512 iterations ( = 0.091796875 of 1)&lt;/p&gt;

&lt;p&gt;Experiment 4&lt;br/&gt;
final int ENTITIES_COUNT = 15;&lt;br/&gt;
final double EPSILON = 1E-8;&lt;br/&gt;
final boolean IS_INTEGER = false;&lt;br/&gt;
gives&lt;br/&gt;
10 unbounded solutions of 512 iterations&lt;br/&gt;
0 nofeasible solutions of 512 iterations&lt;br/&gt;
18 maxcount exceeded exception of 512 iterations&lt;br/&gt;
Total 28.0 failures of 512 iterations ( = 0.0546875 of 1)&lt;/p&gt;

&lt;p&gt;Experiment 5&lt;br/&gt;
final int ENTITIES_COUNT = 10;&lt;br/&gt;
final double EPSILON = 1E-8;&lt;br/&gt;
final boolean IS_INTEGER = false;&lt;br/&gt;
gives&lt;br/&gt;
7 unbounded solutions of 512 iterations&lt;br/&gt;
1 nofeasible solutions of 512 iterations&lt;br/&gt;
16 maxcount exceeded exception of 512 iterations&lt;br/&gt;
Total 24.0 failures of 512 iterations ( = 0.046875 of 1)&lt;/p&gt;

&lt;p&gt;Experiment 6&lt;br/&gt;
final int ENTITIES_COUNT = 5;&lt;br/&gt;
final double EPSILON = 1E-8;&lt;br/&gt;
final boolean IS_INTEGER = false;&lt;br/&gt;
gives&lt;br/&gt;
3 unbounded solutions of 512 iterations&lt;br/&gt;
0 nofeasible solutions of 512 iterations&lt;br/&gt;
0 maxcount exceeded exception of 512 iterations&lt;br/&gt;
Total 3.0 failures of 512 iterations ( = 0.005859375 of 1)&lt;/p&gt;


&lt;p&gt;As you can see the most influence to the amount of failures gives the number of variables. When there are 5 of them the amount of failure is about a half of a precent which is satisfyingly. When there are 10 or more variables the amount of failures becomes unacceptable.&lt;/p&gt;

&lt;p&gt;Please pay attention to the dependence of the amount of failures on the number of variables that is shown through experiments 3, 4, 5, 6&lt;br/&gt;
variables     failures&lt;br/&gt;
20            47&lt;br/&gt;
15            28&lt;br/&gt;
10            24&lt;br/&gt;
5             3&lt;br/&gt;
These failures numbers would change from one experiment launch to another of course but not much, +/- 2 failures&lt;/p&gt;</comment>
                            <comment id="13423874" author="alexeyslepov" created="Fri, 27 Jul 2012 13:47:56 +0000"  >&lt;p&gt;Another parameter I&apos;ve playd around with is maxUlps&lt;br/&gt;
As far as I see it&apos;s Precision.equals(double x, double y, int maxUlps) where maxUlps is used&lt;/p&gt;

&lt;p&gt;  public static boolean equals(double x, double y, int maxUlps) {&lt;br/&gt;
        long xInt = Double.doubleToLongBits&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/error.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;;&lt;br/&gt;
        long yInt = Double.doubleToLongBits&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/thumbs_up.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;;&lt;/p&gt;

&lt;p&gt;        // Make lexicographically ordered as a two&apos;s-complement integer.&lt;br/&gt;
        if (xInt &amp;lt; 0) &lt;/p&gt;
{
            xInt = SGN_MASK - xInt;
        }
&lt;p&gt;        if (yInt &amp;lt; 0) &lt;/p&gt;
{
            yInt = SGN_MASK - yInt;
        }

&lt;p&gt;        final boolean isEqual = FastMath.abs(xInt - yInt) &amp;lt;= maxUlps;&lt;/p&gt;

&lt;p&gt;        return isEqual &amp;amp;&amp;amp; !Double.isNaN&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/error.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; &amp;amp;&amp;amp; !Double.isNaN&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/thumbs_up.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;;&lt;br/&gt;
    }&lt;/p&gt;

&lt;p&gt;I&apos;ve made several more experiments. Notice that on each iteration &lt;/p&gt;

&lt;p&gt;SimplexSolver solver = new SimplexSolver(epsilon, maxUlps);&lt;br/&gt;
		try&lt;br/&gt;
		{&lt;br/&gt;
			solver.setMaxIterations(maxIterationsCount);&lt;br/&gt;
			PointValuePair optimum = solver.optimize(objectiveFunction, constraints, GoalType.MINIMIZE, true);&lt;/p&gt;

&lt;p&gt;code is called for each entity. I.e. when 1024 iterations there are 1024*ENTITIES_COUNT = 1024*15 calls of new instances of SimplexSolver&lt;br/&gt;
Sum of input and output arguments is equal to number of variables - 1. In this case there were 8 variables for the objective function.&lt;/p&gt;

&lt;p&gt;These below are results of experiments with different maxUlps values&lt;/p&gt;

&lt;p&gt;15 entities, 4 input arguments, 3 output arguments, epsilon = 1.0E-8, maxUlps = 0&lt;br/&gt;
8 unbounded solutions of 1024 iterations ( = 0.0078125 of 1)&lt;br/&gt;
0 nofeasible solutions of 1024 iterations ( = 0.0 of 1)&lt;br/&gt;
48 maxcount exceeded exception of 1024 iterations ( = 0.046875 of 1)&lt;br/&gt;
Total 56.0 failures of 1024 iterations ( = 0.0546875 of 1)&lt;/p&gt;

&lt;p&gt;15 entities, 4 input arguments, 3 output arguments, epsilon = 1.0E-8, maxUlps = 2&lt;br/&gt;
13 unbounded solutions of 1024 iterations ( = 0.0126953125 of 1)&lt;br/&gt;
0 nofeasible solutions of 1024 iterations ( = 0.0 of 1)&lt;br/&gt;
67 maxcount exceeded exception of 1024 iterations ( = 0.0654296875 of 1)&lt;br/&gt;
Total 80.0 failures of 1024 iterations ( = 0.078125 of 1)&lt;/p&gt;

&lt;p&gt;15 entities, 4 input arguments, 3 output arguments, epsilon = 1.0E-8, maxUlps = 4&lt;br/&gt;
16 unbounded solutions of 1024 iterations ( = 0.015625 of 1)&lt;br/&gt;
1 nofeasible solutions of 1024 iterations ( = 9.765625E-4 of 1)&lt;br/&gt;
45 maxcount exceeded exception of 1024 iterations ( = 0.0439453125 of 1)&lt;br/&gt;
Total 62.0 failures of 1024 iterations ( = 0.060546875 of 1)&lt;/p&gt;

&lt;p&gt;15 entities, 4 input arguments, 3 output arguments, epsilon = 1.0E-8, maxUlps = 6&lt;br/&gt;
21 unbounded solutions of 1024 iterations ( = 0.0205078125 of 1)&lt;br/&gt;
0 nofeasible solutions of 1024 iterations ( = 0.0 of 1)&lt;br/&gt;
50 maxcount exceeded exception of 1024 iterations ( = 0.048828125 of 1)&lt;br/&gt;
Total 71.0 failures of 1024 iterations ( = 0.0693359375 of 1)&lt;/p&gt;

&lt;p&gt;15 entities, 4 input arguments, 3 output arguments, epsilon = 1.0E-8, maxUlps = 8&lt;br/&gt;
13 unbounded solutions of 1024 iterations ( = 0.0126953125 of 1)&lt;br/&gt;
1 nofeasible solutions of 1024 iterations ( = 9.765625E-4 of 1)&lt;br/&gt;
39 maxcount exceeded exception of 1024 iterations ( = 0.0380859375 of 1)&lt;br/&gt;
Total 53.0 failures of 1024 iterations ( = 0.0517578125 of 1)&lt;/p&gt;

&lt;p&gt;15 entities, 4 input arguments, 3 output arguments, epsilon = 1.0E-8, maxUlps = 25&lt;br/&gt;
24 unbounded solutions of 1024 iterations ( = 0.0234375 of 1)&lt;br/&gt;
1 nofeasible solutions of 1024 iterations ( = 9.765625E-4 of 1)&lt;br/&gt;
44 maxcount exceeded exception of 1024 iterations ( = 0.04296875 of 1)&lt;br/&gt;
Total 69.0 failures of 1024 iterations ( = 0.0673828125 of 1)&lt;/p&gt;

&lt;p&gt;15 entities, 4 input arguments, 3 output arguments, epsilon = 1.0E-8, maxUlps = 30&lt;br/&gt;
19 unbounded solutions of 1024 iterations ( = 0.0185546875 of 1)&lt;br/&gt;
2 nofeasible solutions of 1024 iterations ( = 0.001953125 of 1)&lt;br/&gt;
43 maxcount exceeded exception of 1024 iterations ( = 0.0419921875 of 1)&lt;br/&gt;
Total 64.0 failures of 1024 iterations ( = 0.0625 of 1)&lt;/p&gt;

&lt;p&gt;15 entities, 4 input arguments, 3 output arguments, epsilon = 1.0E-8, maxUlps = 35&lt;br/&gt;
15 unbounded solutions of 1024 iterations ( = 0.0146484375 of 1)&lt;br/&gt;
1 nofeasible solutions of 1024 iterations ( = 9.765625E-4 of 1)&lt;br/&gt;
36 maxcount exceeded exception of 1024 iterations ( = 0.03515625 of 1)&lt;br/&gt;
Total 52.0 failures of 1024 iterations ( = 0.05078125 of 1)&lt;/p&gt;

&lt;p&gt;15 entities, 4 input arguments, 3 output arguments, epsilon = 1.0E-8, maxUlps = 40&lt;br/&gt;
33 unbounded solutions of 1024 iterations ( = 0.0322265625 of 1)&lt;br/&gt;
1 nofeasible solutions of 1024 iterations ( = 9.765625E-4 of 1)&lt;br/&gt;
44 maxcount exceeded exception of 1024 iterations ( = 0.04296875 of 1)&lt;br/&gt;
Total 78.0 failures of 1024 iterations ( = 0.076171875 of 1)&lt;/p&gt;

&lt;p&gt;It seems that maxUlps gives not much to the state of the problem.&lt;br/&gt;
I used &lt;a href=&quot;https://repository.apache.org/content/repositories/snapshots/org/apache/commons/commons-math3/3.1-SNAPSHOT/commons-math3-3.1-20120726.144152-154.jar&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://repository.apache.org/content/repositories/snapshots/org/apache/commons/commons-math3/3.1-SNAPSHOT/commons-math3-3.1-20120726.144152-154.jar&lt;/a&gt; SNAPSHOT for this expirement set&lt;/p&gt;</comment>
                            <comment id="13423889" author="erans" created="Fri, 27 Jul 2012 14:09:07 +0000"  >&lt;p&gt;Lines 74-78 in &lt;tt&gt;SimplexSolver&lt;/tt&gt; look strange:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (Precision.compareTo(entry, minValue, maxUlps) &amp;lt; 0) {
    minValue = entry;
    minPos = i;
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Its seems like the &quot;minValue&quot; will not really be most negative negative coefficient, as claimed in the doc.&lt;br/&gt;
The larger &quot;maxUlps&quot;, the most likely it will not be, in line with what you observe...&lt;/p&gt;</comment>
                            <comment id="13424375" author="tn" created="Sat, 28 Jul 2012 16:42:56 +0000"  >&lt;p&gt;In r1366707, I committed the following changes to the SimplexSolver:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;do not use maxUlps in getPivotColumn and getPivotRow when trying to find a minimum&lt;br/&gt;
   this is contra-productive, and the check should be strict&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;implement Bland&apos;s rule to prevent cycling when selecting the pivot row in case of multiple candidates&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;to improve numerical stability, introduce a CUTOFF_THRESHOLD (currently 1e-12) to zero-out&lt;br/&gt;
   values that are smaller than this threshold in SimplexTableau.subtractRow&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;With these changes your tests run through without any errors. Could you please verify yourself and confirm.&lt;/p&gt;

&lt;p&gt;Thanks, &lt;/p&gt;

&lt;p&gt;Thomas&lt;/p&gt;</comment>
                            <comment id="13424762" author="alexeyslepov" created="Mon, 30 Jul 2012 08:53:48 +0000"  >&lt;p&gt;Thank you very much, Thomas! Now it works well! &lt;/p&gt;

&lt;p&gt;5 entities, 4 input arguments, 3 output arguments, epsilon = 1.0E-6, maxUlps = 10&lt;br/&gt;
0 unbounded solutions of 1024 iterations ( = 0.0 of 1)&lt;br/&gt;
0 nofeasible solutions of 1024 iterations ( = 0.0 of 1)&lt;br/&gt;
0 maxcount exceeded exception of 1024 iterations ( = 0.0 of 1)&lt;br/&gt;
Total 0.0 failures of 1024 iterations ( = 0.0 of 1)&lt;/p&gt;

&lt;p&gt;10 entities, 4 input arguments, 3 output arguments, epsilon = 1.0E-6, maxUlps = 10&lt;br/&gt;
0 unbounded solutions of 1024 iterations ( = 0.0 of 1)&lt;br/&gt;
0 nofeasible solutions of 1024 iterations ( = 0.0 of 1)&lt;br/&gt;
0 maxcount exceeded exception of 1024 iterations ( = 0.0 of 1)&lt;br/&gt;
Total 0.0 failures of 1024 iterations ( = 0.0 of 1)&lt;/p&gt;

&lt;p&gt;15 entities, 4 input arguments, 3 output arguments, epsilon = 1.0E-6, maxUlps = 10&lt;br/&gt;
0 unbounded solutions of 1024 iterations ( = 0.0 of 1)&lt;br/&gt;
0 nofeasible solutions of 1024 iterations ( = 0.0 of 1)&lt;br/&gt;
0 maxcount exceeded exception of 1024 iterations ( = 0.0 of 1)&lt;br/&gt;
Total 0.0 failures of 1024 iterations ( = 0.0 of 1)&lt;/p&gt;

&lt;p&gt;20 entities, 4 input arguments, 3 output arguments, epsilon = 1.0E-6, maxUlps = 10&lt;br/&gt;
0 unbounded solutions of 1024 iterations ( = 0.0 of 1)&lt;br/&gt;
0 nofeasible solutions of 1024 iterations ( = 0.0 of 1)&lt;br/&gt;
2 maxcount exceeded exception of 1024 iterations ( = 0.001953125 of 1)&lt;br/&gt;
Total 2.0 failures of 1024 iterations ( = 0.001953125 of 1)&lt;/p&gt;

&lt;p&gt;25 entities, 4 input arguments, 3 output arguments, epsilon = 1.0E-6, maxUlps = 10&lt;br/&gt;
0 unbounded solutions of 1024 iterations ( = 0.0 of 1)&lt;br/&gt;
0 nofeasible solutions of 1024 iterations ( = 0.0 of 1)&lt;br/&gt;
2 maxcount exceeded exception of 1024 iterations ( = 0.001953125 of 1)&lt;br/&gt;
Total 2.0 failures of 1024 iterations ( = 0.001953125 of 1)&lt;/p&gt;

&lt;p&gt;30 entities, 4 input arguments, 3 output arguments, epsilon = 1.0E-6, maxUlps = 10&lt;br/&gt;
0 unbounded solutions of 1024 iterations ( = 0.0 of 1)&lt;br/&gt;
0 nofeasible solutions of 1024 iterations ( = 0.0 of 1)&lt;br/&gt;
3 maxcount exceeded exception of 1024 iterations ( = 0.0029296875 of 1)&lt;br/&gt;
Total 3.0 failures of 1024 iterations ( = 0.0029296875 of 1)&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://repository.apache.org/content/repositories/snapshots/org/apache/commons/commons-math3/3.1-SNAPSHOT/commons-math3-3.1-20120729.124827-157.jar&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://repository.apache.org/content/repositories/snapshots/org/apache/commons/commons-math3/3.1-SNAPSHOT/commons-math3-3.1-20120729.124827-157.jar&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13424847" author="tn" created="Mon, 30 Jul 2012 13:24:58 +0000"  >&lt;p&gt;Thanks for the feedback, I will further investigate the remaining maxcount exceptions.&lt;br/&gt;
In my dev environment I mainly tested with 15 entities.&lt;/p&gt;</comment>
                            <comment id="13425154" author="tn" created="Mon, 30 Jul 2012 19:45:06 +0000"  >&lt;p&gt;I further investigated the remaining problems and came up with an empirical heuristic:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;If we have not found a solution after half of maxIterations, ignore Bland&apos;s rule and revert to the top-most row&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I did extensive tests with your provided test case and did not receive any exceptions anymore.&lt;/p&gt;</comment>
                            <comment id="13425638" author="alexeyslepov" created="Tue, 31 Jul 2012 09:38:09 +0000"  >&lt;p&gt;I confirm that those new improvements erased errors were remaining.&lt;br/&gt;
Tests of&lt;br/&gt;
&lt;a href=&quot;https://repository.apache.org/content/repositories/snapshots/org/apache/commons/commons-math3/3.1-SNAPSHOT/commons-math3-3.1-20120730.205101-159.jar&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://repository.apache.org/content/repositories/snapshots/org/apache/commons/commons-math3/3.1-SNAPSHOT/commons-math3-3.1-20120730.205101-159.jar&lt;/a&gt;&lt;br/&gt;
gives&lt;/p&gt;

&lt;p&gt;15 entities, 4 input arguments, 3 output arguments, epsilon = 1.0E-8&lt;br/&gt;
0 unbounded solutions of 1024 iterations ( = 0.0 of 1)&lt;br/&gt;
0 nofeasible solutions of 1024 iterations ( = 0.0 of 1)&lt;br/&gt;
0 maxcount exceeded exception of 1024 iterations ( = 0.0 of 1)&lt;br/&gt;
Total 0.0 failures of 1024 iterations ( = 0.0 of 1)&lt;/p&gt;

&lt;p&gt;25 entities, 4 input arguments, 3 output arguments, epsilon = 1.0E-8&lt;br/&gt;
0 unbounded solutions of 1024 iterations ( = 0.0 of 1)&lt;br/&gt;
0 nofeasible solutions of 1024 iterations ( = 0.0 of 1)&lt;br/&gt;
0 maxcount exceeded exception of 1024 iterations ( = 0.0 of 1)&lt;br/&gt;
Total 0.0 failures of 1024 iterations ( = 0.0 of 1)&lt;/p&gt;

&lt;p&gt;35 entities, 4 input arguments, 3 output arguments, epsilon = 1.0E-8&lt;br/&gt;
0 unbounded solutions of 1024 iterations ( = 0.0 of 1)&lt;br/&gt;
0 nofeasible solutions of 1024 iterations ( = 0.0 of 1)&lt;br/&gt;
0 maxcount exceeded exception of 1024 iterations ( = 0.0 of 1)&lt;br/&gt;
Total 0.0 failures of 1024 iterations ( = 0.0 of 1)&lt;/p&gt;

&lt;p&gt;Excellent! Thank you, Thomas!&lt;/p&gt;</comment>
                            <comment id="13426926" author="tn" created="Wed, 1 Aug 2012 21:38:48 +0000"  >&lt;p&gt;Hmm, I am no so sure if the last fix is the right way to go. I will leave this issue open and will investigate more on the topic.&lt;/p&gt;</comment>
                            <comment id="13427211" author="alexeyslepov" created="Thu, 2 Aug 2012 09:45:22 +0000"  >&lt;p&gt;What can go wrong with the last fix?&lt;/p&gt;</comment>
                            <comment id="13427252" author="tn" created="Thu, 2 Aug 2012 11:52:58 +0000"  >&lt;p&gt;The first fix introduced Bland&apos;s rule to prevent cycling. In fact cycling still occurs, thats why I added the additional heuristic.&lt;br/&gt;
We need to better understand why cycling still occurs with Bland&apos;s rule and better fix this problem, than trying to circumvent it with a rule like it is implemented now.&lt;/p&gt;

&lt;p&gt;It should hopefully not affect you, as with the latest version your problems seem to work pretty well, but I want a more general solution. The current fix may break for other type of problems.&lt;/p&gt;</comment>
                            <comment id="13427277" author="erans" created="Thu, 2 Aug 2012 12:51:05 +0000"  >&lt;p&gt;Hi Thomas.&lt;/p&gt;

&lt;p&gt;Wouldn&apos;t it be clearer (cf. description and subject of this issue) to open a new issue for the problem which you identified (cycling) together with a test case that induces it?&lt;br/&gt;
The new issue can reference this report so that the history can be recovered easily.&lt;/p&gt;

&lt;p&gt;This will allow to resolve this issue, which accurately reflects its state from the perspective of the problem raised.&lt;/p&gt;</comment>
                            <comment id="13427914" author="tn" created="Fri, 3 Aug 2012 09:01:13 +0000"  >&lt;p&gt;Hi Gilles,&lt;/p&gt;

&lt;p&gt;the cycling problem has been fixed (+ test case) but in a way that may be very specific to the problem definition of Alexey.&lt;br/&gt;
But I am fine with closing this issue and creating a new one to further investigate the issue.&lt;/p&gt;

&lt;p&gt;Thomas&lt;/p&gt;</comment>
                            <comment id="13427918" author="alexeyslepov" created="Fri, 3 Aug 2012 09:17:18 +0000"  >&lt;p&gt;Thomas, when you&apos;ll open a new thread for further investigation of the issue, post here a link to that thread, please&lt;/p&gt;</comment>
                            <comment id="13428876" author="tn" created="Sun, 5 Aug 2012 16:39:47 +0000"  >&lt;p&gt;Hi Alexey,&lt;/p&gt;

&lt;p&gt;I linked the newly created issue to this one.&lt;/p&gt;

&lt;p&gt;Thomas&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12601503">MATH-842</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12537184" name="ApacheSimplexWrapper.java" size="14120" author="alexeyslepov" created="Thu, 19 Jul 2012 15:09:02 +0000"/>
                            <attachment id="12537185" name="ApacheSimplexWrapperTest.java" size="9734" author="alexeyslepov" created="Thu, 19 Jul 2012 15:09:02 +0000"/>
                            <attachment id="12537183" name="Entity.java" size="2343" author="alexeyslepov" created="Thu, 19 Jul 2012 15:09:02 +0000"/>
                            <attachment id="12537186" name="commons-math3-3.0.jar" size="1285617" author="alexeyslepov" created="Thu, 19 Jul 2012 15:09:02 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 19 Jul 2012 17:24:24 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>292289</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            4 years, 15 weeks, 6 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0rt2f:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>160353</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>