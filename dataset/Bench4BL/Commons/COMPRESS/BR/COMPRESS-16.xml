<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Thu Dec 01 20:32:51 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/COMPRESS-16/COMPRESS-16.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[COMPRESS-16] unable to extract a TAR file that contains an entry which is 10 GB in size</title>
                <link>https://issues.apache.org/jira/browse/COMPRESS-16</link>
                <project id="12310904" key="COMPRESS">Commons Compress</project>
                    <description>&lt;p&gt;I made a TAR file which contains a file entry where the file is 10 GB in size.&lt;/p&gt;

&lt;p&gt;When I attempt to extract the file using TarInputStream, it fails with the following stack trace:&lt;/p&gt;

&lt;p&gt;	java.io.IOException: unexpected EOF with 24064 bytes unread&lt;br/&gt;
		at org.apache.commons.compress.archivers.tar.TarInputStream.read(TarInputStream.java:348)&lt;br/&gt;
		at org.apache.commons.compress.archivers.tar.TarInputStream.copyEntryContents(TarInputStream.java:388)&lt;/p&gt;

&lt;p&gt;So, TarInputStream does not seem to support large (&amp;gt; 8 GB?) files.&lt;/p&gt;

&lt;p&gt;Here is something else to note: I created that TAR file using TarOutputStream , which did not complain when asked to write a 10 GB file into the TAR file, so I assume that TarOutputStream has no file size limits?  That, or does it silently create corrupted TAR files (which would be the worst situation of all...)?&lt;/p&gt;</description>
                <environment>&lt;p&gt;I am using win xp sp3, but this should be platform independent.&lt;/p&gt;</environment>
        <key id="12414499">COMPRESS-16</key>
            <summary>unable to extract a TAR file that contains an entry which is 10 GB in size</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="bbatman">Sam Smith</reporter>
                        <labels>
                    </labels>
                <created>Tue, 10 Feb 2009 16:16:26 +0000</created>
                <updated>Thu, 2 May 2013 02:29:21 +0000</updated>
                            <resolved>Thu, 1 Mar 2012 11:52:30 +0000</resolved>
                                                    <fixVersion>1.4</fixVersion>
                                    <component>Archivers</component>
                        <due></due>
                            <votes>2</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="12672306" author="bodewig" created="Tue, 10 Feb 2009 16:30:10 +0000"  >&lt;p&gt;what does a native tar command think of the archive?&lt;/p&gt;

&lt;p&gt;I.e. what does &quot;tar tf your-archive.tar&quot; say?&lt;/p&gt;
</comment>
                            <comment id="12672456" author="bbatman" created="Tue, 10 Feb 2009 23:47:42 +0000"  >&lt;p&gt;&amp;gt; what does a native tar command think of the archive?&lt;br/&gt;
&amp;gt;&lt;br/&gt;
&amp;gt; I.e. what does &quot;tar tf your-archive.tar&quot; say?&lt;/p&gt;

&lt;p&gt;OK, I just re-executed that test, using a new build of commons-compress (revision 743098, that I checked out a few hours ago).  I also first changed my code to use TarArchiveInputStream/TarArchiveOutputStream.&lt;/p&gt;

&lt;p&gt;I get the same behavior: TarArchiveOutputStream writes the 10 GiB TAR file, and then TarArchiveInputStream chokes when attempting to read it:&lt;br/&gt;
    java.io.IOException: unexpected EOF with 24064 bytes unread&lt;br/&gt;
        at org.apache.commons.compress.archivers.tar.TarArchiveInputStream.read(TarArchiveInputStream.java:339)&lt;br/&gt;
        at org.apache.commons.compress.archivers.tar.TarArchiveInputStream.copyEntryContents(TarArchiveInputStream.java:379)&lt;/p&gt;

&lt;p&gt;BUT TarArchiveOutputStream must be silently writing corrupt data, because 2 native code TAR programs bomb on it:&lt;/p&gt;

&lt;p&gt;1) I tried extracting with jzip 1.3, but it immediately fails with an error dialog&lt;/p&gt;

&lt;p&gt;2) I have cygwin installed, so I opened a bash shell and tried your recommended &quot;tar tf your-archive.tar&quot; command, and it failed with this output:&lt;/p&gt;

&lt;p&gt;$ tar tf tarFile#3.tar&lt;br/&gt;
test_archive_extract_fileSizeLimit_shouldPass_dir#1/&lt;br/&gt;
test_archive_extract_fileSizeLimit_shouldPass_dir#1/dataFile#2_length10737418239.txt&lt;br/&gt;
tar: Skipping to next header&lt;br/&gt;
tar: Error exit delayed from previous errors&lt;/p&gt;

&lt;p&gt;Probably not very useful of output, but it does seems to prove that TarArchiveOutputStreammust be buggy too.&lt;/p&gt;</comment>
                            <comment id="12672684" author="bodewig" created="Wed, 11 Feb 2009 17:19:39 +0000"  >&lt;p&gt;This is the result I expected, unfortunately.&lt;/p&gt;

&lt;p&gt;I&apos;m not familiar enough with the tar format (yet), so I&apos;m not even sure one can have files that big inside the format we currently use (yes, I know your issue &lt;a href=&quot;https://issues.apache.org/jira/browse/COMPRESS-17&quot; title=&quot;TAR format unspecified&quot; class=&quot;issue-link&quot; data-issue-key=&quot;COMPRESS-17&quot;&gt;&lt;del&gt;SANDBOX-282&lt;/del&gt;&lt;/a&gt;).&lt;/p&gt;</comment>
                            <comment id="12683344" author="cgrobmeier" created="Thu, 19 Mar 2009 06:47:33 +0000"  >&lt;p&gt;If the TAR Format is specified, we will know if this one is a bug or a new feature &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="12694081" author="sebb@apache.org" created="Tue, 31 Mar 2009 12:23:17 +0000"  >&lt;p&gt;BTW, &lt;a href=&quot;https://issues.apache.org/jira/browse/COMPRESS-17&quot; title=&quot;TAR format unspecified&quot; class=&quot;issue-link&quot; data-issue-key=&quot;COMPRESS-17&quot;&gt;&lt;del&gt;SANDBOX-282&lt;/del&gt;&lt;/a&gt; is &lt;a href=&quot;https://issues.apache.org/jira/browse/COMPRESS-17&quot; title=&quot;TAR format unspecified&quot; class=&quot;issue-link&quot; data-issue-key=&quot;COMPRESS-17&quot;&gt;&lt;del&gt;COMPRESS-17&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="12694095" author="sebb@apache.org" created="Tue, 31 Mar 2009 12:55:20 +0000"  >&lt;p&gt;According to &lt;a href=&quot;http://en.wikipedia.org/wiki/Tar_(file_format&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://en.wikipedia.org/wiki/Tar_(file_format&lt;/a&gt;) the original tar format supports a maximum of 8GB, because the size is a maximum of 11 octal digits.&lt;/p&gt;

&lt;p&gt;77777777777 (octal)  = 8_589_934_591(decimal)&lt;/p&gt;

&lt;p&gt;There are extensions that allow longer files.&lt;/p&gt;

&lt;p&gt;Unless and until the code can be fixed to handle longer files, it should throw an error if the user tries to create an overlong entry.&lt;/p&gt;

&lt;p&gt;8GB should be enough for most purposes!&lt;/p&gt;</comment>
                            <comment id="12694225" author="sebb@apache.org" created="Tue, 31 Mar 2009 19:29:42 +0000"  >&lt;p&gt;Added a check for illegal file size:&lt;/p&gt;

&lt;p&gt;URL: &lt;a href=&quot;http://svn.apache.org/viewvc?rev=760566&amp;amp;view=rev&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewvc?rev=760566&amp;amp;view=rev&lt;/a&gt;&lt;br/&gt;
Log:&lt;br/&gt;
Reject illegal sizes&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;
	&lt;ul&gt;
		&lt;li&gt;THIS IS A TEMPORARY MEASURE - if Posix tar can be implemented, the upper limit can be removed.&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12705630" author="wartelld" created="Mon, 4 May 2009 15:45:01 +0000"  >&lt;p&gt;I had same problem.&lt;/p&gt;

&lt;p&gt;I found this fellow that has really figured it out.  He has added what appears to be full GNU tar support to the ice.tar package.&lt;br/&gt;
&lt;a href=&quot;http://www.mayerdan.com/2005/03/java_tar_and_problems.php&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.mayerdan.com/2005/03/java_tar_and_problems.php&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;FYI ice tar was the original public domain source that ant&apos;s tar support was adapted from&lt;/p&gt;

&lt;p&gt;!! Attaching a patch against ant 1.7.1 that supports GNU tar extension. !!  It Would be REALLY REALLY nice to at least get this patch incorporated into  ant!  Thanks!&lt;/p&gt;

&lt;p&gt;It was huge priority for me to have support for writing tar files with entries &amp;gt; 8GB files.  So I added only that element of GNU tar.  This is for writing only not reading.&lt;/p&gt;

&lt;p&gt;If you go the link above you can get a patched version of ice tar from him here:&lt;br/&gt;
&lt;a href=&quot;http://www.bandddesigns.com/ml/arch/javatar-2.5.zip&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.bandddesigns.com/ml/arch/javatar-2.5.zip&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This fellow Dan Mayer looks to have added full GNU support including multi-part tar files and verification.  Since ANT tar is very similar to ice tar which was its ancestor it should be feasible to port all of his work to ant&apos;s tar.&lt;/p&gt;

&lt;p&gt;Regards,&lt;br/&gt;
-David Wartell&lt;br/&gt;
-R1Soft&lt;/p&gt;
</comment>
                            <comment id="12705631" author="wartelld" created="Mon, 4 May 2009 15:46:12 +0000"  >&lt;p&gt;Patch for ant 1.7.1 to add support for WRITING entries &amp;gt; 8GB+ per GNU tar&lt;/p&gt;</comment>
                            <comment id="12705637" author="cgrobmeier" created="Mon, 4 May 2009 16:01:44 +0000"  >&lt;p&gt;Based on the ant patch by David Wartell I created a compress-patch.&lt;br/&gt;
I didn&apos;t commit it till I got it tested - if somebody has &amp;gt; 8 gig files around, please help with testing &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;
</comment>
                            <comment id="12706006" author="bodewig" created="Tue, 5 May 2009 12:02:05 +0000"  >&lt;p&gt;Two things to note:&lt;/p&gt;

&lt;p&gt;Ant doesn&apos;t use commons-compress and I wouldn&apos;t expect it to do so, I&apos;ve opened a separate issue over there &lt;a href=&quot;https://issues.apache.org/bugzilla/show_bug.cgi?id=47153&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/bugzilla/show_bug.cgi?id=47153&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;javatar supports the GNU way of dealing with large files, but I wouldn&apos;t be surprised if other tar variants did it in a different way, so it may be a good idea to make handling of large files configurable just like the handling of long file names is.  That way if we add POSIX tar support later, we can plug in a different strategy.&lt;/p&gt;</comment>
                            <comment id="12874564" author="sebb@apache.org" created="Wed, 2 Jun 2010 12:30:20 +0000"  >&lt;p&gt;There are other ways of supporting large files - e.g. PAX interchange format.&lt;/p&gt;

&lt;p&gt;Compress needs to support reading large files as well - this is a bit simpler as far as the API is concerned, because one can autodetect the format that has been used.&lt;/p&gt;

&lt;p&gt;I agree that the output format needs to be configurable.&lt;/p&gt;

&lt;p&gt;BTW, there are bugs in both the patches:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;GNU format sets only the high-order bit of byte&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt; - not the whole byte&lt;/li&gt;
	&lt;li&gt;The Javadoc is wrong, as it refers to parsing rather than formatting the number.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13157915" author="kodis" created="Sun, 27 Nov 2011 15:29:09 +0000"  >&lt;p&gt;I&apos;ve attached two patch files against commons-compress-1.3-src which add support for reading (patch 0001) and writing (patch 0002) tar archives which contain files larger than the 8GB limit imposed by the use of a 12 character octal size field in the tar header.&lt;/p&gt;

&lt;p&gt;I&apos;ve followed the approach taken by the GNU tar utility: for files larger than the 8GB limit, continue to use the same size field, but switch to a binary size representation, noting this change by detecting (on read) or setting (on write) the most significant bit of the first byte of the size field.&lt;/p&gt;

&lt;p&gt;Tar archives written in this format are correctly processed by at least GNU tar (used primarily on Linux), BSD tar (used on Mac OS-X as well as the BSDs), and 7-Zip (used primarily on Windows).&lt;/p&gt;</comment>
                            <comment id="13162702" author="bodewig" created="Mon, 5 Dec 2011 09:59:38 +0000"  >&lt;p&gt;Read-support for the GNU version is in with svn revision 1210386&lt;/p&gt;

&lt;p&gt;Before I look into write support I&apos;ll need to reshuffle a few things so we can&lt;br/&gt;
have testcases.  The current run-it Maven profile is not really sufficient as it&lt;br/&gt;
would mean you&apos;d have to run all ZIP ITs as well.&lt;/p&gt;</comment>
                            <comment id="13163681" author="kodis" created="Tue, 6 Dec 2011 16:28:26 +0000"  >&lt;p&gt;Patch 0004 is a one-character change which corrects an error in patch 0002.&lt;/p&gt;

&lt;p&gt;The expression representing the largest value that an eleven-digit octal number can contain must be forced to a long integer value, as otherwise it overflows the limits of an int and evaluates to zero.&lt;/p&gt;</comment>
                            <comment id="13164349" author="bodewig" created="Wed, 7 Dec 2011 12:15:29 +0000"  >&lt;p&gt;writing such entries has been split out as &lt;a href=&quot;https://issues.apache.org/jira/browse/COMPRESS-165&quot; title=&quot;Support writing entries &amp;gt; 8GiB in tar&quot; class=&quot;issue-link&quot; data-issue-key=&quot;COMPRESS-165&quot;&gt;&lt;del&gt;COMPRESS-165&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;With svn revision 1211405 I have added tests that prove the tar package now understands both the star/GNU/BSD variant as well as the POSIX/PAX one.&lt;/p&gt;</comment>
                            <comment id="13212703" author="sebb@apache.org" created="Tue, 21 Feb 2012 16:21:55 +0000"  >&lt;p&gt;I&apos;m not sure the treatment of the leading byte is correct.&lt;/p&gt;

&lt;p&gt;star &lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; says that the value can be 0x80 or 0xFF.&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; &lt;a href=&quot;http://cdrecord.berlios.de/private/man/star/star.4.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://cdrecord.berlios.de/private/man/star/star.4.html&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13212741" author="bodewig" created="Tue, 21 Feb 2012 17:06:37 +0000"  >&lt;p&gt;Sorry, I saw &lt;a href=&quot;https://issues.apache.org/jira/browse/COMPRESS-177&quot; title=&quot;TarArchiveInputStream rejects valid TAR file&quot; class=&quot;issue-link&quot; data-issue-key=&quot;COMPRESS-177&quot;&gt;&lt;del&gt;COMPRESS-177&lt;/del&gt;&lt;/a&gt; but am too busy to look into it right now.&lt;/p&gt;

&lt;p&gt;The test in TarUtils only checks whether the most significant bit is set, it doesn&apos;t check the actual value of the first byte so 0xFF should be detected as well.  I haven&apos;t checked whether the end result is a negative number, though.&lt;/p&gt;</comment>
                            <comment id="13212801" author="kodis" created="Tue, 21 Feb 2012 18:54:45 +0000"  >&lt;p&gt;I believe that only the most significant bit of the first byte is used to signal a binary length field.  This is what GNU tar does, and seems to match both the Wikipedia description of the tar file format (&lt;a href=&quot;http://en.wikipedia.org/wiki/Tar_%28file_format%29&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://en.wikipedia.org/wiki/Tar_%28file_format%29&lt;/a&gt;) and the star man page referenced previously.  &lt;/p&gt;

&lt;p&gt;Wikipedia claims:&lt;/p&gt;

&lt;p&gt;&quot;To overcome this limitation, star in 2001 introduced a base-256 coding that is indicated by setting the high-order bit of the leftmost byte of a numeric field. GNU-tar and BSD-tar followed this idea.&quot;&lt;/p&gt;

&lt;p&gt;While the star man page says that:&lt;/p&gt;

&lt;p&gt;    &quot;Star implements  a  vendor  specific  (and  thus  non-POSIX)&lt;br/&gt;
     extension  to  put  bigger  numbers into the numeric fields.&lt;br/&gt;
     This is done by using a base 256 coding.  The top bit of the&lt;br/&gt;
     first character in the appropriate 8 character or 12 charac-&lt;br/&gt;
     ter field is set to flag non octal coding.  If base 256 cod-&lt;br/&gt;
     ing  is  in  use,  then all remaining characters are used to&lt;br/&gt;
     code the number. This results in 7  base  256  digits  in  8&lt;br/&gt;
     character  fields  and in 11 base 256 digits in 12 character&lt;br/&gt;
     fields.  All base 256 numbers are two&apos;s complement  numbers.&lt;br/&gt;
     A base 256 number in a 8 character field may hold 56 bits, a&lt;br/&gt;
     base 256 number in a 12 character field may  hold  88  bits.&lt;br/&gt;
     This  may  extended to 64 bits for 8 character fields and to&lt;br/&gt;
     95 bits for 12 character fields. For a negative  number  the&lt;br/&gt;
     first  character  currently  is set to a value of 255 (all 8&lt;br/&gt;
     bits are set).&lt;/p&gt;

&lt;p&gt;Since we don&apos;t have to worry about negative values when dealing with file sizes, I believe that the current patch is correct as it stands, at least up to the size allowed by Java&apos;s 64 bit signed long integers.&lt;/p&gt;</comment>
                            <comment id="13212857" author="sebb@apache.org" created="Tue, 21 Feb 2012 19:59:43 +0000"  >&lt;p&gt;The code currently does the following:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; val = buffer[offset] &amp;amp; 0x7f;
&lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; i = 1; i &amp;lt; length; i++) {
 &lt;span class=&quot;code-comment&quot;&gt;// check &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; val overflow removed here
&lt;/span&gt;    val = (val &amp;lt;&amp;lt; 8) + (buffer[offset + i] &amp;amp; 0xff);
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;So the lower 7 bits of the first byte are included in the number.&lt;/p&gt;

&lt;p&gt;With the current implementation, it is not possible to encode/decode a negative number.&lt;/p&gt;

&lt;p&gt;This is OK for lengths, but would obviously cause a problem for any field that can be negative.&lt;br/&gt;
According to the star doc the time fields can potentially be negative.&lt;/p&gt;

&lt;p&gt;Maybe what the star doc means is that certain fields are allowed to contain negative numbers, in which case the first byte is all ones, but for fields that are unsigned the lower 7 bits are treated as part of the rest of the number.&lt;/p&gt;

&lt;p&gt;In which case, the current parse method is OK so long as it is only used for unsigned fields.&lt;/p&gt;</comment>
                            <comment id="13213217" author="cowwoc" created="Wed, 22 Feb 2012 02:55:12 +0000"  >&lt;p&gt;I get the feeling that both this issue and &lt;a href=&quot;https://issues.apache.org/jira/browse/COMPRESS-177&quot; title=&quot;TarArchiveInputStream rejects valid TAR file&quot; class=&quot;issue-link&quot; data-issue-key=&quot;COMPRESS-177&quot;&gt;&lt;del&gt;COMPRESS-177&lt;/del&gt;&lt;/a&gt; need a superset issue for supporting star extensions.&lt;/p&gt;</comment>
                            <comment id="13217123" author="bodewig" created="Mon, 27 Feb 2012 09:15:35 +0000"  >&lt;p&gt;I plan to look up what the GNU tar implementation does, may take a few days, though.&lt;/p&gt;

&lt;p&gt;I agree with Gili this issue has by now outgrown &lt;a href=&quot;https://issues.apache.org/jira/browse/COMPRESS-16&quot; title=&quot;unable to extract a TAR file that contains an entry which is 10 GB in size&quot; class=&quot;issue-link&quot; data-issue-key=&quot;COMPRESS-16&quot;&gt;&lt;del&gt;COMPRESS-16&lt;/del&gt;&lt;/a&gt; as it specifically only dealt with lengths.  OTOH it is not restricted to star either, if we start supporting &quot;bigger numbers&quot; for group or date, we should support star as well as PAX.&lt;/p&gt;</comment>
                            <comment id="13218088" author="bodewig" created="Tue, 28 Feb 2012 11:56:22 +0000"  >&lt;p&gt;Our code is wrong.&lt;/p&gt;

&lt;p&gt;to_chars in src/create.c in GNU tar only uses the remaining bytes and sets the first one to 255 or 128 for negative/positive numbers.  Negative numbers only occur in time fields where we don&apos;t support anything non-octal ATM anyway, so this isn&apos;t a real problem right now.  It becomes one if we support star/GNU tar/POSIX dialects for the other numeric fields as well.  This would be required for &lt;a href=&quot;https://issues.apache.org/jira/browse/COMPRESS-177&quot; title=&quot;TarArchiveInputStream rejects valid TAR file&quot; class=&quot;issue-link&quot; data-issue-key=&quot;COMPRESS-177&quot;&gt;&lt;del&gt;COMPRESS-177&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I suggest to broaden and reopen &lt;a href=&quot;https://issues.apache.org/jira/browse/COMPRESS-177&quot; title=&quot;TarArchiveInputStream rejects valid TAR file&quot; class=&quot;issue-link&quot; data-issue-key=&quot;COMPRESS-177&quot;&gt;&lt;del&gt;COMPRESS-177&lt;/del&gt;&lt;/a&gt; to something like &quot;extend STAR/POSIX support to all numeric fields&quot; or alternatively create a new issue and close this one again.&lt;/p&gt;</comment>
                            <comment id="13219977" author="bodewig" created="Thu, 1 Mar 2012 11:52:30 +0000"  >&lt;p&gt;The specific issue (file size) has been fixed, I&apos;ve created &lt;a href=&quot;https://issues.apache.org/jira/browse/COMPRESS-182&quot; title=&quot;Support big or even negative numbers in all numeric TAR headers&quot; class=&quot;issue-link&quot; data-issue-key=&quot;COMPRESS-182&quot;&gt;&lt;del&gt;COMPRESS-182&lt;/del&gt;&lt;/a&gt; for the rest.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10032">
                    <name>Blocker</name>
                                                                <inwardlinks description="is blocked by">
                                        <issuelink>
            <issuekey id="12478322">COMPRESS-121</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12543365">COMPRESS-177</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10001">
                    <name>dependent</name>
                                            <outwardlinks description="depends upon">
                                        <issuelink>
            <issuekey id="12414514">COMPRESS-17</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12505249" name="0001-Accept-GNU-tar-files-with-entries-over-8GB-in-size.patch" size="4270" author="kodis" created="Sun, 27 Nov 2011 15:20:16 +0000"/>
                            <attachment id="12505250" name="0002-Allow-creating-tar-archives-with-files-over-8GB.patch" size="2204" author="kodis" created="Sun, 27 Nov 2011 15:20:16 +0000"/>
                            <attachment id="12506276" name="0004-Prefer-octal-over-binary-size-representation.patch" size="1224" author="kodis" created="Tue, 6 Dec 2011 16:28:26 +0000"/>
                            <attachment id="12407159" name="ant-8GB-tar.patch" size="2217" author="wartelld" created="Mon, 4 May 2009 15:46:12 +0000"/>
                            <attachment id="12407161" name="patch-for-compress.txt" size="2232" author="cgrobmeier" created="Mon, 4 May 2009 16:01:44 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 10 Feb 2009 16:30:10 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>67262</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            4 years, 40 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0b4dj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>62821</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>