<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Thu Dec 01 20:34:33 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/COMPRESS-206/COMPRESS-206.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[COMPRESS-206] TarArchiveOutputStream sometimes writes garbage beyond the end of the archive</title>
                <link>https://issues.apache.org/jira/browse/COMPRESS-206</link>
                <project id="12310904" key="COMPRESS">Commons Compress</project>
                    <description>&lt;p&gt;For some combinations of file lengths, the archive created by TarArchiveOutputStream writes garbage beyond the end of the TAR stream. TarArchiveInputStream can still read the stream without problems, but it does not read beyond the garbage. This is problematic for my use case because I write a checksum &lt;em&gt;after&lt;/em&gt; the TAR content. If I then try to read the checksum back, I read garbage instead.&lt;/p&gt;

&lt;p&gt;Functional impact:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;TarArchiveInputStream is asymmetrical with respect to TarArchiveOutputStream, in the sense that TarArchiveInputStream does not read everything that was written by TarArchiveOutputStream.&lt;/li&gt;
	&lt;li&gt;The content is unnecessarily large. The garbage is totally unnecessarily large: ~10K overhead compared to Linux command-line tar.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;This symptom is remarkably similar to #&lt;a href=&quot;https://issues.apache.org/jira/browse/COMPRESS-81&quot; title=&quot;TarOutputStream can leave garbage at the end of the archive&quot; class=&quot;issue-link&quot; data-issue-key=&quot;COMPRESS-81&quot;&gt;&lt;del&gt;COMPRESS-81&lt;/del&gt;&lt;/a&gt;, which is supposedly fixed since 1.1. Except for the fact that this issue still exists... I&apos;ve tested this with 1.0 and 1.4.1.&lt;/p&gt;</description>
                <environment>&lt;p&gt;Linux x86&lt;/p&gt;</environment>
        <key id="12613265">COMPRESS-206</key>
            <summary>TarArchiveOutputStream sometimes writes garbage beyond the end of the archive</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="peterdm">Peter De Maeyer</reporter>
                        <labels>
                    </labels>
                <created>Wed, 24 Oct 2012 10:09:02 +0000</created>
                <updated>Sun, 20 Jan 2013 19:11:58 +0000</updated>
                            <resolved>Sun, 20 Jan 2013 19:11:58 +0000</resolved>
                                    <version>1.0</version>
                    <version>1.4.1</version>
                                    <fixVersion>1.5</fixVersion>
                                    <component>Compressors</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="13483113" author="peterdm" created="Wed, 24 Oct 2012 10:09:57 +0000"  >&lt;p&gt;Attached a stand-alone junit test illustrating the problem.&lt;/p&gt;</comment>
                            <comment id="13483185" author="peterdm" created="Wed, 24 Oct 2012 12:50:57 +0000"  >&lt;p&gt;I think the root cause is that TarArchiveInputStream stops reading the input stream once it hits the first EOF record. Any lingering records after that are left unconsumed. It would be best to consume these as well.&lt;/p&gt;

&lt;p&gt;In &lt;tt&gt;TarArchiveInputStream.getRecord()&lt;/tt&gt;, I suggest to replace&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
} &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (buffer.isEOFRecord(headerBuf)) {
  hasHitEOF = &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;;
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;with&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
} &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (buffer.isEOFRecord(headerBuf)) {
  &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; (buffer.readRecord() != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) { &lt;span class=&quot;code-comment&quot;&gt;// Consume any lingering records
&lt;/span&gt;    ;
  }
  hasHitEOF = &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;;
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This fixes the test. It doesn&apos;t seem to break any other tests either, although I did not run all of them because they take a long time and I didn&apos;t have the patience.&lt;/p&gt;</comment>
                            <comment id="13483223" author="garydgregory" created="Wed, 24 Oct 2012 13:39:33 +0000"  >&lt;p&gt;If you take care of your relationship with patience and package the test and fix into an SVN diff patch file, the likelihood of this issue being addressed quickly will increase tremendously!&lt;/p&gt;</comment>
                            <comment id="13484385" author="peterdm" created="Thu, 25 Oct 2012 19:14:07 +0000"  >&lt;p&gt;I&apos;ve attached a patch.&lt;/p&gt;

&lt;p&gt;Note that both the test and fix turned out slightly different (but even better &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;).&lt;/p&gt;</comment>
                            <comment id="13540866" author="bodewig" created="Sat, 29 Dec 2012 11:36:07 +0000"  >&lt;p&gt;AFAICT the patch addresses &lt;a href=&quot;https://issues.apache.org/jira/browse/COMPRESS-202&quot; title=&quot;Document EOF behavior of TarArchiveInputStream&quot; class=&quot;issue-link&quot; data-issue-key=&quot;COMPRESS-202&quot;&gt;&lt;del&gt;COMPRESS-202&lt;/del&gt;&lt;/a&gt; in a way but doesn&apos;t deal with what you call &quot;garbage&quot; written at the end.  Does TarArchiveOutputStream still write garbage or did you only think it would because input stream didn&apos;t read the EOF block(s)?&lt;/p&gt;</comment>
                            <comment id="13541107" author="peterdm" created="Sun, 30 Dec 2012 17:05:52 +0000"  >&lt;p&gt;Indeed, TarArchiveOutputStream does not write garbage as such. Initially I thought the second EOF block was &quot;garbage&quot;. When I dug into the code I understood that the second EOF block was intentional. I then realized that the actual problem was that TarArchiveInputStream did not read back the second EOF block.&lt;/p&gt;

&lt;p&gt;Anyway, the point is that there is a unit test illustrating my use case, and the patch fixes it. &lt;a href=&quot;https://issues.apache.org/jira/browse/COMPRESS-202&quot; title=&quot;Document EOF behavior of TarArchiveInputStream&quot; class=&quot;issue-link&quot; data-issue-key=&quot;COMPRESS-202&quot;&gt;&lt;del&gt;COMPRESS-202&lt;/del&gt;&lt;/a&gt; is merely about documentation, but my patch really fixes &lt;em&gt;behavior&lt;/em&gt;. So I would argue that my patch does a lot more than just address &lt;a href=&quot;https://issues.apache.org/jira/browse/COMPRESS-202&quot; title=&quot;Document EOF behavior of TarArchiveInputStream&quot; class=&quot;issue-link&quot; data-issue-key=&quot;COMPRESS-202&quot;&gt;&lt;del&gt;COMPRESS-202&lt;/del&gt;&lt;/a&gt;...&lt;/p&gt;

&lt;p&gt;Rephrasing the issue: &quot;TarArchiveOutputStream sometimes writes bytes at the end of the archive which are never consumed by TarArchiveInputStream&quot;.&lt;/p&gt;</comment>
                            <comment id="13541349" author="bodewig" created="Mon, 31 Dec 2012 11:51:48 +0000"  >&lt;p&gt;I didn&apos;t mean to imply this was a duplicate of 202 or anything like that, but rather that your patch provides one alternative to fix &lt;a href=&quot;https://issues.apache.org/jira/browse/COMPRESS-202&quot; title=&quot;Document EOF behavior of TarArchiveInputStream&quot; class=&quot;issue-link&quot; data-issue-key=&quot;COMPRESS-202&quot;&gt;&lt;del&gt;COMPRESS-202&lt;/del&gt;&lt;/a&gt; beyond &quot;just&quot; documenting the behavior.  We&apos;ll need to discuss on the dev list how we want to solve it, but for the sake of getting more opinions I&apos;ll wait a few days until people are back from their holiday time-outs.&lt;/p&gt;

&lt;p&gt;Given tar record reading may be willing to consume non-tar inputs, we may need to be more careful there.  I&apos;ll need to look into the tar dialect documentations a bit more to see what we might need to accept as part of the archive once the first EOF-record has been found.&lt;/p&gt;</comment>
                            <comment id="13558344" author="bodewig" created="Sun, 20 Jan 2013 19:11:58 +0000"  >&lt;p&gt;fixed the tar case with scvn revision 1435913 - the other archive formats have similar issues and will be addressed later.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12550836" name="COMPRESS-206.patch" size="4339" author="peterdm" created="Thu, 25 Oct 2012 19:14:07 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 24 Oct 2012 13:39:33 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>250726</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            3 years, 45 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0b0fr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>62181</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>