<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Thu Dec 01 20:36:50 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/COMPRESS-174/COMPRESS-174.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[COMPRESS-174] BZip2CompressorInputStream doesn&apos;t handle being given a wrong-format compressed file</title>
                <link>https://issues.apache.org/jira/browse/COMPRESS-174</link>
                <project id="12310904" key="COMPRESS">Commons Compress</project>
                    <description>&lt;p&gt;When reading a file through BZip2CompressorInputStream, and the user selects a file of the wrong type (such as ZIP or GZIP), the read blows up with a strange ArrayIndexOutOfBoundException, instead of reporting immediately that the input data is of the wrong format.&lt;/p&gt;

&lt;p&gt;The Bzip2Compressor should be able to identify whether a stream is of BZip2 format or not, and immediately reject it with a meaningful exception (example: &quot;ProtocolException: not a BZip2 compressed file&quot;).&lt;/p&gt;

&lt;p&gt;Alternatively, are there functions in commons-compress that can identify the compression type of an InputStream by inspection?&lt;/p&gt;

&lt;p&gt;Example stack trace when using a ZIP input file:&lt;/p&gt;

&lt;p&gt;Exception in thread &quot;OSM Decompressor&quot; java.lang.ArrayIndexOutOfBoundsException: 900000 &lt;br/&gt;
        at org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream.getAndMoveToFrontDecode(BZip2CompressorInputStream.java:688) &lt;br/&gt;
        at org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream.initBlock(BZip2CompressorInputStream.java:322) &lt;br/&gt;
        at org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream.setupNoRandPartA(BZip2CompressorInputStream.java:880) &lt;br/&gt;
        at org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream.setupNoRandPartB(BZip2CompressorInputStream.java:936) &lt;br/&gt;
        at org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream.read0(BZip2CompressorInputStream.java:228) &lt;br/&gt;
        at org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream.read(BZip2CompressorInputStream.java:180) &lt;br/&gt;
        at java.io.InputStream.read(InputStream.java:82) &lt;br/&gt;
        at org.ka2ddo.yaac.osm.OsmXmlSegmenter$1.run(OsmXmlSegmenter.java:129) &lt;br/&gt;
        at java.lang.Thread.run(Thread.java:680) &lt;/p&gt;
</description>
                <environment>&lt;p&gt;Linux and Windows&lt;/p&gt;</environment>
        <key id="12540672">COMPRESS-174</key>
            <summary>BZip2CompressorInputStream doesn&apos;t handle being given a wrong-format compressed file</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="apavlin">Andrew Pavlin</reporter>
                        <labels>
                    </labels>
                <created>Wed, 1 Feb 2012 04:08:38 +0000</created>
                <updated>Fri, 18 Apr 2014 13:49:45 +0000</updated>
                            <resolved>Fri, 18 Apr 2014 13:39:47 +0000</resolved>
                                    <version>1.3</version>
                                                    <component>Compressors</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="13214199" author="sebb@apache.org" created="Thu, 23 Feb 2012 02:08:42 +0000"  >&lt;p&gt;The method CompressorStreamFactory.createCompressorInputStream(InputStream) can be used to autodetect the compression type.&lt;/p&gt;</comment>
                            <comment id="13428904" author="jukkaz" created="Sun, 5 Aug 2012 19:56:56 +0000"  >&lt;p&gt;Resolving as Not A Problem based on the existing CompressorStreamFactory functionality mentioned above by Sebb.&lt;/p&gt;</comment>
                            <comment id="13973175" author="darabos" created="Thu, 17 Apr 2014 17:40:21 +0000"  >&lt;p&gt;BZip2CompressorInputStream.read() throws IOException. I expected getting an IOException for corrupted files, not ArrayIndexOutOfBoundsException. What do you think about re-opening this?&lt;/p&gt;</comment>
                            <comment id="13974058" author="bodewig" created="Fri, 18 Apr 2014 13:25:29 +0000"  >&lt;p&gt;Hmm, the original report was about trying to read from a stream that&apos;s not in fact a bzip2 stream - are you talking about the same thing Daniel?&lt;/p&gt;

&lt;p&gt;By now the init method called by the constructor should fail with an IOException when handed such a stream.  I&apos;ll write a unit test for feeding a zip file to BZip2InputStream.&lt;/p&gt;</comment>
                            <comment id="13974066" author="darabos" created="Fri, 18 Apr 2014 13:32:58 +0000"  >&lt;p&gt;I get the same stack trace, but I&apos;m not entirely sure it is the same issue. I&apos;m still getting ArrayIndexOutOfBoundsException after using CompressorStreamFactory, so I think my file is in fact BZ2 compressed, just corrupted. Unfortunately it&apos;s one file out of a thousand in a distributed system. I&apos;ll report back when I&apos;ve narrowed down the problem. I&apos;m using commons-compress-1.8, so I&apos;ll also try with 1.9 or trunk. Thanks!&lt;/p&gt;</comment>
                            <comment id="13974080" author="bodewig" created="Fri, 18 Apr 2014 13:39:31 +0000"  >&lt;p&gt;added a test with svn revision 1588467 - and I&apos;m a bit surprised.  The test throws the expected IOException but from searching through the code it should have done so for many years and even in 1.3.  Unfortunately we&apos;ve never really tried to understand the problem back then.&lt;/p&gt;

&lt;p&gt;I&apos;ll re-close the bug.  &lt;/p&gt;

&lt;p&gt;Daniel, if you somehow manage to pass by the format check performed inside the constructor with a stream that&apos;s not a BZIP2 stream, then please reopen this issue with more information.  If you are talking about a corrupted BZIP2 stream then please create a new issue and provide a stacktrace so we get something to work from.&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="13974090" author="bodewig" created="Fri, 18 Apr 2014 13:49:45 +0000"  >&lt;p&gt;Compress 1.9 won&apos;t make any difference, the code hasn&apos;t changed.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 23 Feb 2012 02:08:42 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>226067</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            2 years, 32 weeks, 6 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0thb3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>170113</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>