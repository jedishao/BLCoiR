<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Thu Dec 01 20:38:19 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/COMPRESS-277/COMPRESS-277.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[COMPRESS-277] IOUtils.skip does not work as advertised</title>
                <link>https://issues.apache.org/jira/browse/COMPRESS-277</link>
                <project id="12310904" key="COMPRESS">Commons Compress</project>
                    <description>&lt;p&gt;I am trying to feed a TarInputStream from a CipherInputStream.&lt;br/&gt;
It does not work, because IOUtils.skip() does not adhere to the contract it claims in javadoc:&lt;/p&gt;

&lt;p&gt;&quot;     * &amp;lt;p&amp;gt;This method will only skip less than the requested number of&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;bytes if the end of the input stream has been reached.&amp;lt;/p&amp;gt;&quot;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;However it does:&lt;/p&gt;

&lt;p&gt;            long skipped = input.skip(numToSkip);&lt;br/&gt;
            if (skipped == 0) &lt;/p&gt;
{
                break;
            }

&lt;p&gt;And the input stream javadoc says:&lt;/p&gt;

&lt;p&gt;&quot;     * This may result from any of a number of conditions; reaching end of file&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;before &amp;lt;code&amp;gt;n&amp;lt;/code&amp;gt; bytes have been skipped is only one possibility.&quot;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;In the case of CipherInputStream, it stops at the end of each byte buffer.&lt;/p&gt;

&lt;p&gt;If you check the IOUtils from colleagues at commons-io, they have considered this case in IOUtils.skip() where they use a read to skip through the stream.&lt;br/&gt;
An optimized version could combine trying to skip, then read then trying to skip again.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12707918">COMPRESS-277</key>
            <summary>IOUtils.skip does not work as advertised</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="fabianlange">Fabian Lange</reporter>
                        <labels>
                    </labels>
                <created>Fri, 11 Apr 2014 11:07:56 +0000</created>
                <updated>Wed, 7 May 2014 15:37:14 +0000</updated>
                            <resolved>Sat, 12 Apr 2014 17:06:45 +0000</resolved>
                                    <version>1.8</version>
                                    <fixVersion>1.8.1</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="13966452" author="ebourg" created="Fri, 11 Apr 2014 12:23:58 +0000"  >&lt;p&gt;Thank you Fabian, note that IOUtils is only used by commons-compress to avoid a dependency on commons-io. As such it&apos;s more an internal class than something supposed to be used by anyone. You should use the version from commons-io instead.&lt;/p&gt;</comment>
                            <comment id="13966453" author="fabianlange" created="Fri, 11 Apr 2014 12:27:17 +0000"  >&lt;p&gt;Hi Emmanuel,&lt;br/&gt;
I am using the commons-io version. But commons-compress is not, which makes all of its internal usage broken. &lt;br/&gt;
I could open individual bugs on all the streams, but I thought you would rather like to be pointed at the root cause of the problems&lt;/p&gt;

&lt;p&gt;Fabian&lt;/p&gt;</comment>
                            <comment id="13966458" author="ebourg" created="Fri, 11 Apr 2014 12:49:40 +0000"  >&lt;p&gt;We&apos;ll fix that, thank you for the report.&lt;/p&gt;</comment>
                            <comment id="13967585" author="bodewig" created="Sat, 12 Apr 2014 17:06:45 +0000"  >&lt;p&gt;should be fixed with svn revision 1586879&lt;/p&gt;</comment>
                            <comment id="13967590" author="fabianlange" created="Sat, 12 Apr 2014 17:26:01 +0000"  >&lt;p&gt;Hello Stefan,&lt;br/&gt;
I can confirm the fix is working for us.&lt;br/&gt;
From the code you could optimize it a bit more like commons-io IOUtils does. They only allocate the byte array once in a static field. You do not need to guard it against multithreaded access, because the contents is not used, thus may be garbage by concurrent writes.&lt;/p&gt;</comment>
                            <comment id="13967725" author="bodewig" created="Sun, 13 Apr 2014 04:07:34 +0000"  >&lt;p&gt;Yes, you are right.&lt;/p&gt;

&lt;p&gt;I didn&apos;t use a shared array because I didn&apos;t want to introduce any form of thread  control - I completely missed the fact that there is no harm in concurrent writes to the array.&lt;/p&gt;

&lt;p&gt;svn revision 1586919&lt;/p&gt;</comment>
                            <comment id="13980742" author="fabianlange" created="Fri, 25 Apr 2014 06:50:06 +0000"  >&lt;p&gt;Hi Beluga,&lt;/p&gt;

&lt;p&gt;You are not correct. Buffering the Cipher Input stream will not work. Because the BIS will also only invoke skip on the CIS. CIS will always only skip a maximum of 512 bytes. This would leave the BIS with the same problem: It is not  at the correct position.&lt;/p&gt;

&lt;p&gt;A client cannot &quot;skip an entry manually&quot;. How would we &quot;modify&quot; getNextTarEntry() to use IOUtils#skip?&lt;/p&gt;

&lt;p&gt;If compress would not use the now corrected implementation of skip, then the API methods like getNextTar() entry would be broken, which is why i opened the ticket in the first place.&lt;/p&gt;</comment>
                            <comment id="13980879" author="bodewig" created="Fri, 25 Apr 2014 11:01:00 +0000"  >&lt;p&gt;The problem is with things like consumeRemainderOfLastBlock or skipRecordPadding which really need to consume all remaining data, even with a BufferedReader this is not guaranteed to work as skip may return 0 all the time.&lt;/p&gt;</comment>
                            <comment id="13980950" author="fabianlange" created="Fri, 25 Apr 2014 12:28:48 +0000"  >&lt;p&gt;That doesn&apos;t make sense.&lt;br/&gt;
The semantics of getNextEntry are so that it will seek you to the next entry. &lt;br/&gt;
compare to JDK ZipInputStream:&lt;/p&gt;

&lt;p&gt;    /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Reads the next ZIP file entry and positions the stream at the&lt;/li&gt;
	&lt;li&gt;beginning of the entry data.&lt;/li&gt;
	&lt;li&gt;@return the next ZIP file entry, or null if there are no more entries&lt;/li&gt;
	&lt;li&gt;@exception ZipException if a ZIP file error has occurred&lt;/li&gt;
	&lt;li&gt;@exception IOException if an I/O error has occurred&lt;br/&gt;
     */&lt;br/&gt;
    public ZipEntry getNextEntry() throws IOException {&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;Also, why should the user now need to care about seeking the next entry? it just doesnt make sense for me.&lt;/p&gt;


&lt;p&gt;The defined api and code are fine! Its just that it was buggy in the case skip did not skip as much as expected. That has been fixed, and I don&apos;t see a reason to hijack this Ticket to completely change the semantics of the API.&lt;/p&gt;</comment>
                            <comment id="13981769" author="belugabehr" created="Fri, 25 Apr 2014 23:34:29 +0000"  >&lt;p&gt;For anyone following this conversation, some of Fabian&apos;s comment may seem out of context because he was addressing my comments.  I redacted (deleted) them as they were based on erroneous information I was working off of.  My apologies.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 11 Apr 2014 12:23:58 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>386241</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            2 years, 31 weeks, 5 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1ujdb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>386506</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>