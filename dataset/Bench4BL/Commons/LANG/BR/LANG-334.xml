<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Wed Nov 30 23:21:31 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LANG-334/LANG-334.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[LANG-334] Enum is not thread-safe</title>
                <link>https://issues.apache.org/jira/browse/LANG-334</link>
                <project id="12310481" key="LANG">Commons Lang</project>
                    <description>&lt;p&gt;Enum uses no synchronization. Even if you assume that instances are only declared statically, the cEnumClasses map is global and can be written to when a thread triggers static initialization of B.class while some other thread is doing getEnumList(A.class). Unsynchronized access of a map undergoing mutation is not thread-safe.&lt;/p&gt;

&lt;p&gt;This isn&apos;t theoretical. We&apos;re seeing ValuedEnum.getEnum(X.class, 0) return null after returning the correct value over 100,000 times, and then return the correct value again on the next invocation.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12369325">LANG-334</key>
            <summary>Enum is not thread-safe</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="sclafani">Michael Sclafani</reporter>
                        <labels>
                    </labels>
                <created>Mon, 14 May 2007 22:30:59 +0000</created>
                <updated>Wed, 5 Sep 2007 10:14:06 +0000</updated>
                            <resolved>Wed, 5 Sep 2007 10:14:06 +0000</resolved>
                                                    <fixVersion>2.4</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12499391" author="bayard" created="Sun, 27 May 2007 06:43:18 +0000"  >&lt;p&gt;Fix for 2.3.1. First step, write a test.&lt;/p&gt;</comment>
                            <comment id="12501959" author="bayard" created="Wed, 6 Jun 2007 15:24:05 +0000"  >&lt;p&gt;I made an attempt at a test, but it couldn&apos;t replicate the issue. &lt;/p&gt;</comment>
                            <comment id="12502098" author="sclafani" created="Wed, 6 Jun 2007 20:56:03 +0000"  >&lt;p&gt;Well, the bug description refers to two enum classes, but your test only uses one enum class, so I&apos;m completely unsurprised you didn&apos;t replicate the problem.&lt;/p&gt;

&lt;p&gt;The bug is caused by one thread calling getEnum(A.class, 0) while another thread is initializing B.class, and those two threads are excuting in such a way that the first thread is reading the cEnumClasses map while the second thread is modifying the same map by registering the mapping for B.class. If you use only one enum class, the bug won&apos;t be seen. If you use two enum classes, but statically reference them so that both classes are initialized before getEnum() is called, no bug. If you use two classes, or ten classes, or 10000 classes, but fail to overlap the threads reading the map and writing the map in just the right (or wrong) way, no bug.&lt;/p&gt;

&lt;p&gt;Unit testing isn&apos;t a great approach for testing synchronization problems since it&apos;s impossible for the test to control the execution order, especially when the bug requires actual concurrency. This bug cropped up when we started using new multi-core hardware. I could write a unit test for you, but I wouldn&apos;t expect it to fail unless you had identical hardware and software.&lt;/p&gt;</comment>
                            <comment id="12502107" author="bayard" created="Wed, 6 Jun 2007 21:14:14 +0000"  >&lt;p&gt;Sorry for missing the two class bit.  I&apos;m not looking for a unit test, just a way to replicate the issue so that a fix can be created. &lt;/p&gt;

&lt;p&gt;Failing that, find time to sit and think hard &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="12502119" author="sclafani" created="Wed, 6 Jun 2007 21:30:50 +0000"  >&lt;p&gt;I think it will be sufficient to simply use Collections.synchronizedMap() to wrap the map instance that is assigned to cEnumClasses.&lt;/p&gt;</comment>
                            <comment id="12502464" author="bayard" created="Thu, 7 Jun 2007 18:40:50 +0000"  >&lt;p&gt;I agree - but I really hate solving things without being able to show there was a problem and then confirming that the problem no longer appears. &lt;/p&gt;

&lt;p&gt;Did this change fix the symptoms you were seeing in your system?&lt;/p&gt;</comment>
                            <comment id="12502481" author="sclafani" created="Thu, 7 Jun 2007 19:14:15 +0000"  >&lt;p&gt;Sadly, it was much easier for us to use a common subclass that provided synchronization between the constructor and all the static accessors than it was get set up to build our own version of the package, then distribute and install it. So a different form a serialization did fix it.&lt;/p&gt;

&lt;p&gt;I understand your discomfort in dealing with race conditions since I&apos;ve had to deal with solving them myself many, many times, but I don&apos;t know of any practical solution other than reasoning about the temporal logic of the code.&lt;/p&gt;</comment>
                            <comment id="12516136" author="jason.madden@riskmetrics.com" created="Sat, 28 Jul 2007 04:13:59 +0000"  >&lt;p&gt;We have also encountered the issue of thread safety in the Enum  &lt;br/&gt;
class. In our case, it shows up when running in a application server  &lt;br/&gt;
where there are many threads and other applications are loading  &lt;br/&gt;
classes at arbitrary times.&lt;/p&gt;

&lt;p&gt;I&apos;ve attached the patch that we are using which seems to correct this  &lt;br/&gt;
issue for us. Rather than synchronize all access to the cEnumClasses  &lt;br/&gt;
map (which seems like it would be rather expensive and highly  &lt;br/&gt;
contended), we adopted a copy-on-write approach that only involves  &lt;br/&gt;
synchronization when new classes are loaded.&lt;/p&gt;</comment>
                            <comment id="12518640" author="bayard" created="Thu, 9 Aug 2007 07:03:18 +0000"  >&lt;p&gt;It&apos;s great that you&apos;ve got a fix working in production Jason, the patch seems good to me.&lt;/p&gt;

&lt;p&gt;Any thoughts Michael? I like the simplicity of using synchronizedMap, but the copy-on-write optimization seems attractive.&lt;/p&gt;

&lt;p&gt;And yeah... I&apos;ve given up trying to replicate this &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; I&apos;d need to be using something like cglib so I could generate new enum subclasses by the thousand and see if it hits the race condition that way.&lt;/p&gt;</comment>
                            <comment id="12525051" author="bayard" created="Wed, 5 Sep 2007 10:14:06 +0000"  >&lt;p&gt;I&apos;ve applied Jason&apos;s patch to enums.Enum and enum.Enum. Many thanks to both of you for working on this issue.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12362719" name="334.patch" size="1872" author="jason.madden@riskmetrics.com" created="Sat, 28 Jul 2007 04:14:17 +0000"/>
                            <attachment id="12359088" name="EnumPlay.java" size="1511" author="bayard" created="Wed, 6 Jun 2007 15:24:05 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sun, 27 May 2007 06:43:18 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>147247</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            9 years, 14 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0d687:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>74785</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>