<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Thu Dec 01 20:20:17 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/CSV-96/CSV-96.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[CSV-96] CSVRecord does not verify that the length of the header mapping matches the number of values</title>
                <link>https://issues.apache.org/jira/browse/CSV-96</link>
                <project id="12313222" key="CSV">Commons CSV</project>
                    <description>&lt;p&gt;CSVRecord does not verify that the size of the header mapping matches the number of values. The following test will produce a ArrayOutOfBoundsException:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
@Test
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void testInvalidHeaderTooLong() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; Exception {
   &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; CSVParser parser = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; CSVParser(&lt;span class=&quot;code-quote&quot;&gt;&quot;a,b&quot;&lt;/span&gt;, CSVFormat.newBuilder().withHeader(&lt;span class=&quot;code-quote&quot;&gt;&quot;A&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;B&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;C&quot;&lt;/span&gt;).build());
   &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; CSVRecord record = parser.iterator().next();
   record.get(&lt;span class=&quot;code-quote&quot;&gt;&quot;C&quot;&lt;/span&gt;);
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</description>
                <environment></environment>
        <key id="12638072">CSV-96</key>
            <summary>CSVRecord does not verify that the length of the header mapping matches the number of values</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="britter">Benedikt Ritter</reporter>
                        <labels>
                    </labels>
                <created>Wed, 20 Mar 2013 20:17:38 +0000</created>
                <updated>Thu, 14 Aug 2014 20:06:24 +0000</updated>
                            <resolved>Mon, 24 Jun 2013 06:27:09 +0000</resolved>
                                    <version>1.0</version>
                                    <fixVersion>1.0</fixVersion>
                                    <component>Parser</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="13608135" author="britter" created="Wed, 20 Mar 2013 20:23:01 +0000"  >&lt;p&gt;I&apos;m not sure if CSVRecord&apos;s ctor is the right place for checking if the header mapping length is correct. This may lead to a lot of over head because everytime a CSVRecord is created we would have to do something like:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt;(mappings != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; mapping.size() != values.length) {
   &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; Exception
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;For very big files, this may be an issue. Would be better to just test this when the first record is created by the parser.&lt;/p&gt;</comment>
                            <comment id="13615468" author="garydgregory" created="Wed, 27 Mar 2013 16:37:52 +0000"  >&lt;p&gt;So is this a matter of which exception to throw?&lt;/p&gt;</comment>
                            <comment id="13616121" author="britter" created="Thu, 28 Mar 2013 07:45:51 +0000"  >&lt;p&gt;From a user PoV a meaningful exception should be thrown - so yes this is partly related to which exception should be thrown. This could for example be an IllegalStateException with a message like &quot;Header mapping does not match actual record length.&quot;&lt;/p&gt;

&lt;p&gt;The question is, if it is sufficient to catch &lt;tt&gt;ArrayOutOfBoundsException&lt;/tt&gt; and throw ISE? What if the header mapping is shorter than the record? IMHO this is also an illegal state but it will not be detected by a try-catch-block that catches AOOBE.&lt;/p&gt;</comment>
                            <comment id="13616134" author="ebourg" created="Thu, 28 Mar 2013 08:20:59 +0000"  >&lt;p&gt;We have to be careful about the performance impact. Any additional test in the main iteration loop is undesirable.&lt;/p&gt;</comment>
                            <comment id="13616224" author="garydgregory" created="Thu, 28 Mar 2013 13:03:54 +0000"  >&lt;p&gt;How about this then:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    /**
     * Creates a &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; record.
     * 
     * @param values not &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;
     * @param mapping may be &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;
     * @param comment may be &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;
     * @param recordNumber record number, not the line number
     */
    CSVRecord(&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;[] values, &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; Map&amp;lt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;, &lt;span class=&quot;code-object&quot;&gt;Integer&lt;/span&gt;&amp;gt; mapping,
            &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; comment, &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; recordNumber) {
        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (mapping != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; values.length != mapping.size()) {
            &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; IllegalArgumentException(&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;.format(
                    &lt;span class=&quot;code-quote&quot;&gt;&quot;Expected record length (%,d) to match header length (%,d) &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; record %,d&quot;&lt;/span&gt;, values.length,
                    mapping.size(), recordNumber));
        }
        &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.recordNumber = recordNumber;
        &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.values = values;
        &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.mapping = mapping;
        &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.comment = comment;
    }

&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13616234" author="garydgregory" created="Thu, 28 Mar 2013 13:23:48 +0000"  >&lt;p&gt;@Emmanuel Point taken, but I would be more concerned about code that runs once per column value, instead of once per record. &lt;/p&gt;

&lt;p&gt;The code above causes this test to fail: org.apache.commons.csv.CSVParserTest.testMappedButNotSetAsOutlook2007ContactExport() so we can forget about this kind of test unless we want to add a strict vs. lenient option.&lt;/p&gt;

&lt;p&gt;I&apos;m inclined to leave the code as is for now. Adding a check on column access would mean that in most cases, when the data is correctly formatted, you&apos;d pay for the size check twice, once in our code to throw an exception and another in the JRE/JVM when the array is accessed (which is imagine is very fast).&lt;/p&gt;
</comment>
                            <comment id="13616244" author="ebourg" created="Thu, 28 Mar 2013 13:37:00 +0000"  >&lt;p&gt;I can&apos;t check this in detail now, but I would just advise leaving out strong checks to not compromise the performance.&lt;/p&gt;

&lt;p&gt;The consistency of the record with the header could be checked afterward by a isConsistent() method on the record called by the user.&lt;/p&gt;</comment>
                            <comment id="13616252" author="garydgregory" created="Thu, 28 Mar 2013 13:48:27 +0000"  >&lt;p&gt;So would you have the method return a boolean or throw an exception?&lt;/p&gt;</comment>
                            <comment id="13616268" author="ebourg" created="Thu, 28 Mar 2013 14:08:02 +0000"  >&lt;p&gt;Good question. If the consistency is checked during the parsing I believe a try catch block inside the loop would be more expensive than a simple if. So I would for the boolean.&lt;/p&gt;</comment>
                            <comment id="13616272" author="britter" created="Thu, 28 Mar 2013 14:10:28 +0000"  >&lt;p&gt;How about checking this in CSVParser? We could initialize a lexer, get the first record, check this record against the header and reset the Reader afterwards (this has to happen in CSVParser ctor). This way we would do the test only once (and not for every record). There will be only minimal impact on performance.&lt;/p&gt;</comment>
                            <comment id="13616282" author="ebourg" created="Thu, 28 Mar 2013 14:20:54 +0000"  >&lt;p&gt;You would still have to check if the record is the first one. That&apos;s an additional check for every record.&lt;/p&gt;</comment>
                            <comment id="13616284" author="garydgregory" created="Thu, 28 Mar 2013 14:25:12 +0000"  >&lt;p&gt;I&apos;ve added EB&apos;s suggestion for a CSVRecord#isConsistent() method:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;commit -m &quot;[CSV-96] CSVRecord does not verify that the length of the header mapping matches the number of values.&quot; C:/svn/org/apache/commons/trunks-proper/csv/src/test/java/org/apache/commons/csv/CSVParserTest.java C:/svn/org/apache/commons/trunks-proper/csv/src/main/java/org/apache/commons/csv/CSVRecord.java
    Sending        C:/svn/org/apache/commons/trunks-proper/csv/src/main/java/org/apache/commons/csv/CSVRecord.java
    Sending        C:/svn/org/apache/commons/trunks-proper/csv/src/test/java/org/apache/commons/csv/CSVParserTest.java
    Transmitting file data ...
    Committed revision 1462110.
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13616288" author="garydgregory" created="Thu, 28 Mar 2013 14:27:06 +0000"  >&lt;p&gt;@BR: You have to check each record. How could you not and avoid the exception? I think the exception is OK. In the Excel example from the unit test, it is up to the call site to know how funky the input can be.&lt;/p&gt;</comment>
                            <comment id="13616300" author="britter" created="Thu, 28 Mar 2013 14:34:29 +0000"  >&lt;blockquote&gt;
&lt;p&gt;@BR: You have to check each record. How could you not and avoid the exception? I think the exception is OK. In the Excel example from the unit test, it is up to the call site to know how funky the input can be.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;You mean if the length of the first record is correct but subsequent records have a different length?&lt;/p&gt;</comment>
                            <comment id="13616310" author="garydgregory" created="Thu, 28 Mar 2013 14:49:45 +0000"  >&lt;p&gt;Right, each record is independent.&lt;/p&gt;</comment>
                            <comment id="13691728" author="britter" created="Mon, 24 Jun 2013 06:27:09 +0000"  >&lt;p&gt;Has been fixed by wrapping the ArrayOutOfBoundsException into an IllegalArgumentException.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 27 Mar 2013 16:37:52 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>318550</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            3 years, 23 weeks, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1iyr3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>318891</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>