<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Thu Dec 01 19:07:59 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/CODEC-108/CODEC-108.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[CODEC-108] Base64 encoding issue for larger avi files</title>
                <link>https://issues.apache.org/jira/browse/CODEC-108</link>
                <project id="12310464" key="CODEC">Commons Codec</project>
                    <description>&lt;p&gt;I am using base64.encode/decode for xml files..it works fine with smaller files. But, when i try to encode larger avi files using Base64 encoder..it reduces file size. &lt;/p&gt;

&lt;p&gt;Could you please tell me, why its happening ??&lt;/p&gt;</description>
                <environment></environment>
        <key id="12495449">CODEC-108</key>
            <summary>Base64 encoding issue for larger avi files</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="amitsharma551">Amit Sharma</reporter>
                        <labels>
                    </labels>
                <created>Thu, 13 Jan 2011 02:24:22 +0000</created>
                <updated>Thu, 10 Nov 2011 18:10:03 +0000</updated>
                            <resolved>Thu, 13 Jan 2011 08:08:56 +0000</resolved>
                                    <version>1.4</version>
                                                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12981094" author="ggregory@seagullsw.com" created="Thu, 13 Jan 2011 02:32:22 +0000"  >&lt;p&gt;Can you post a unit test patch that demonstrates an example of your issue?&lt;/p&gt;</comment>
                            <comment id="12981096" author="amitsharma551" created="Thu, 13 Jan 2011 02:39:47 +0000"  >&lt;p&gt;private String getInputData(String inputDataFile2) {&lt;/p&gt;

&lt;p&gt;		 String tempStr = null;&lt;br/&gt;
		 String finalString = null;&lt;br/&gt;
		 BufferedReader br = null;&lt;br/&gt;
		 InputStream  inputStream = null;&lt;br/&gt;
		 StringBuffer buff = new StringBuffer();&lt;br/&gt;
		try{&lt;br/&gt;
		 System.out.println(&quot;inputDataFile2 is: &quot;+inputDataFile2);&lt;br/&gt;
		 inputStream = this.getClass().getClassLoader().getResourceAsStream(inputDataFile2);&lt;br/&gt;
		 br = new BufferedReader(new InputStreamReader(inputStream));&lt;br/&gt;
		 while ((tempStr = br.readLine()) != null)&lt;/p&gt;
{
			 buff.append(tempStr);
			    //buff.setLength(0);
			    //buff = null; 
			}

&lt;p&gt;		} catch (Exception e) &lt;/p&gt;
{
			System.out.println(&quot;cannot read file&quot;);
			}
&lt;p&gt; finally {&lt;br/&gt;
			try &lt;/p&gt;
{
				inputStream.close();
				br.close();
			}
&lt;p&gt; catch (IOException e) &lt;/p&gt;
{
				e.printStackTrace();
			}
&lt;p&gt;		}&lt;br/&gt;
		finalString = buff.toString();&lt;br/&gt;
		buff.setLength(0);&lt;br/&gt;
		buff = null;&lt;br/&gt;
		return finalString;&lt;br/&gt;
	}&lt;/p&gt;

&lt;p&gt;mimeData.setByteArrayValue(Base64.encodeBase64(inputData.getBytes(), false));&lt;/p&gt;

&lt;p&gt;conversion is not appropiatly done....file getting reducing while decoding it.....do we need to apply some other way of encoding ?&lt;/p&gt;</comment>
                            <comment id="12981097" author="amitsharma551" created="Thu, 13 Jan 2011 02:41:49 +0000"  >&lt;p&gt;After encoding above file which is of 500 MB...i m decoding using base64.decode(byte[])...&lt;/p&gt;

&lt;p&gt;It recieved with file size 80 MB....&lt;/p&gt;


&lt;p&gt;My questions, is there any issues with encoding avi/mp3 files ? Because it works correct with smaller files.....&lt;/p&gt;</comment>
                            <comment id="12981124" author="ggregory@seagullsw.com" created="Thu, 13 Jan 2011 04:14:55 +0000"  >&lt;p&gt;The best way to proceed is to provide a unit test that anyone can run.&lt;/p&gt;</comment>
                            <comment id="12981135" author="amitsharma551" created="Thu, 13 Jan 2011 05:46:28 +0000"  >&lt;p&gt;What do you mean by Unit test???&lt;/p&gt;</comment>
                            <comment id="12981136" author="amitsharma551" created="Thu, 13 Jan 2011 05:50:02 +0000"  >&lt;p&gt;Please find the main class which i m trying to run. You can run with any larger file (more than 100 MB)&lt;/p&gt;</comment>
                            <comment id="12981167" author="jochen@apache.org" created="Thu, 13 Jan 2011 08:08:56 +0000"  >&lt;p&gt;Your example is one of the ugliest pieces of code that I&apos;ve ever seen. And yet you believe there is an error in the code you are using ...&lt;/p&gt;

&lt;p&gt;Let&apos;s start with the fact that you must not use BufferedReader, readLine() etc. for reading AVI files. These are binary files. Hence they must be read through an InputStream, and only an InputStream.&lt;/p&gt;

&lt;p&gt;Let&apos;s continue with the fact that you are using Base64.encode(byte[]) repeatedly in a loop: That method is supposed to encode a &lt;b&gt;complete block&lt;/b&gt; all in one go. You can of course use it more than once and concatenate the data, as you do. However, the result of Base64.decode() on the same data will always be the first block only.&lt;/p&gt;

&lt;p&gt;As the next thing let us question whether you really should use base64 encoding for files of that size. I am quite certain that there would be better possibilities.&lt;/p&gt;

&lt;p&gt;Finally I suggest that you are using Commons Codec 1.4, preferrably the Base64OutputStream, which allows you to read bytes from the input file and write them to an output file as bytes too.&lt;/p&gt;

&lt;p&gt;Please, &lt;b&gt;don&apos;t&lt;/b&gt; use this Jira issue for further conversation on your problems. This is the bug tracker and not a support forum. The mailing list commons users is meant for that.&lt;/p&gt;


</comment>
                    </comments>
                    <attachments>
                            <attachment id="12468223" name="PutServiceSizeTest.java" size="8702" author="amitsharma551" created="Thu, 13 Jan 2011 05:50:02 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 13 Jan 2011 02:32:22 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>110413</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            5 years, 47 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0ep5z:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>83839</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>