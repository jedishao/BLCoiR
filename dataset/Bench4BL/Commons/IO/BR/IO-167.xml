<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun Nov 20 17:31:52 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/IO-167/IO-167.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[IO-167] Fix case-insensitive string handling</title>
                <link>https://issues.apache.org/jira/browse/IO-167</link>
                <project id="12310477" key="IO">Commons IO</project>
                    <description>&lt;p&gt;Case-insensitive operations are currently platform-dependent, please see &lt;a href=&quot;http://www.nabble.com/Re%3A-Common-Bugs-p14931921s177.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;Common Bug #3&lt;/a&gt; for details.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12394798">IO-167</key>
            <summary>Fix case-insensitive string handling</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="niallp">Niall Pemberton</assignee>
                                    <reporter username="bentmann">Benjamin Bentmann</reporter>
                        <labels>
                    </labels>
                <created>Fri, 25 Apr 2008 12:48:02 +0000</created>
                <updated>Fri, 22 Aug 2008 07:36:53 +0000</updated>
                            <resolved>Fri, 30 May 2008 19:13:38 +0000</resolved>
                                    <version>1.4</version>
                                    <fixVersion>2.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12599608" author="niallp" created="Sat, 24 May 2008 15:26:56 +0000"  >&lt;p&gt;I think we should close this as WONTFIX&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;I don&apos;t believe the FileSystemUtils changes will make any difference to their operation&lt;/li&gt;
	&lt;li&gt;the package-private  IOCase convertCase() method is only used by the FilenameUtils&apos;s wildcardMatch() method - it seems wrong to me to hard-code English in principle&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12599611" author="bentmann" created="Sat, 24 May 2008 17:07:24 +0000"  >&lt;blockquote&gt;&lt;p&gt;I don&apos;t believe the FileSystemUtils changes will make any difference to their operation&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I&apos;m not sure whether you did not read my mentioned mail post or it just wasn&apos;t clear enough, so I will try to explain again. The correctness of &lt;tt&gt;FileSystemUtils&lt;/tt&gt; depends on its capability to correctly detect the underlying OS. This detection is based on recognition of known OS names which - for resiliency - is intended to be case-insensitive. If you&apos;re familar with the Unicode standard, you will remember that character casing for Non-English languages is a non-trivial thing. As just one example, the Turkish language defines the lower case form of &quot;I&quot; to be &quot;&#305;&quot; (dotless i). In other words, if a JVM runs on the Turkish locale and the system property &quot;os.name&quot; returns &quot;IRIX&quot;, &quot;UNIX&quot;, &quot;MPE/IX&quot; or &quot;SOLARIS&quot;, the unpatched &lt;tt&gt;FileSystemUtils&lt;/tt&gt; will not detect the OS. As a consequence, &lt;tt&gt;freeSpaceOs()&lt;/tt&gt; fails with an exception.&lt;/p&gt;

&lt;p&gt;So when you doubt the patch will make a difference to the operation, is that because you believe the outlined preconditions will never occur or because an exception doesn&apos;t make a difference to you?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;the package-private IOCase convertCase() method is only used by the FilenameUtils&apos;s wildcardMatch() method&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Just one question for my own understanding: Is &lt;tt&gt;wildcardMatch()&lt;/tt&gt; meant to be platform-dependent? In other words, would it be considered correct for the method if a call with argument &lt;tt&gt;IOCase.INSENSITIVE&lt;/tt&gt; returns different matches based on the user&apos;s locale?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;it seems wrong to me to hard-code English in principle&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&quot;believe&quot;, &quot;seems&quot;... with all respect, correctness is nothing about a gut feeling. I have no problems if somebody proves me wrong, but such a proof must be based on specs, APIs or otherwise authorative materials.&lt;/p&gt;

&lt;p&gt;From the API docs for &lt;a href=&quot;http://java.sun.com/javase/6/docs/api/java/lang/String.html#toLowerCase()&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;&lt;tt&gt;String.toLowerCase()&lt;/tt&gt;&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;To obtain correct results for locale insensitive strings, use toLowerCase(Locale.ENGLISH)&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I believe that file names should be understood as locale insensitive strings, as a matter of interoperability, but that assumption might be wrong.&lt;/p&gt;

&lt;p&gt;Using the English locale for the case conversion will not limit the code to ASCII characters, if this was your concern. It will merely fix the behavior of &lt;tt&gt;String.to*erCase()&lt;/tt&gt; to platform-independent conversion rules. If you look at the source code for &lt;tt&gt;to*erCase()&lt;/tt&gt; you will notice that is has an &lt;tt&gt;if&lt;/tt&gt; for the languages &quot;tr&quot;, &quot;az&quot; and &quot;lt&quot;. The selection of Locale.ENGLISH is quite arbitrary, Locale.GERMAN or Locale.FRENCH will equally work well, the key point is to avoid the &lt;tt&gt;if&lt;/tt&gt; regardless of the user&apos;s locale.&lt;/p&gt;

&lt;p&gt;Back to Unicode, case conversions can be defined in terms of isolated 1:1 character mappings or context-sensitive m:n mappings matching some written language. In most cases (e.g. when you don&apos;t want to produce text for human consumption), Java codes seeks for platform-independence which implies locale-independence. Unicode offers this via the 1:1 character mappings, available via &lt;tt&gt;Character.to*erCase()&lt;/tt&gt; and &lt;tt&gt;String.equalsIgnoreCase()&lt;/tt&gt;. If one wants to approximate this behavior using &lt;tt&gt;String.to*erCase()&lt;/tt&gt;, one must lock the locale.&lt;/p&gt;</comment>
                            <comment id="12599612" author="bentmann" created="Sat, 24 May 2008 17:19:19 +0000"  >&lt;p&gt;Here&apos;s a slightly extended version of the patch which can reveal the defect in &lt;tt&gt;FileSystemUtils&lt;/tt&gt;. Although it properly failed for me &quot;mvn test&quot; with the unpatched &lt;tt&gt;FileSystemUtils&lt;/tt&gt;, I would recommend to run the test individually to make sure nothing triggers the static initialization of &lt;tt&gt;FileSystemUtils&lt;/tt&gt; before the static initializer in the test class is run. This patch is not meant as a replacement for my previous patch but should merely serve for illustration purposes.&lt;/p&gt;</comment>
                            <comment id="12599664" author="bentmann" created="Sun, 25 May 2008 09:10:48 +0000"  >&lt;blockquote&gt;&lt;p&gt;Is &lt;tt&gt;wildcardMatch()&lt;/tt&gt; meant to be platform-dependent?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;If yes, my first patch is still not sufficiently fixing the problem. To catch up with the behavior of &lt;tt&gt;String.equalsIgnoreCase()&lt;/tt&gt;, one needs to consider both the lower case and the upper case form of a character. New patch with extended unit test.&lt;/p&gt;</comment>
                            <comment id="12599676" author="sebb@apache.org" created="Sun, 25 May 2008 11:42:38 +0000"  >&lt;p&gt;It looks odd that the patch for convertCase() upcases and then downcases the characters.&lt;br/&gt;
Might be an idea to add a comment to the patch explaining that this is necessary to agree with String.equalsIgnoreCase().&lt;/p&gt;

&lt;p&gt;I agree that that FileSystemUtils needs to use Locale.ENGLISH for OS name comparisons.&lt;/p&gt;

&lt;p&gt;As to whether wildcardMatch() should be platform-dependent or independent, there are probably use-cases for both.&lt;br/&gt;
But whatever is decided - maybe have two versions? - the Javadoc needs to make it clear (and it needs to work in Turkey!)&lt;/p&gt;</comment>
                            <comment id="12599677" author="bentmann" created="Sun, 25 May 2008 12:00:38 +0000"  >&lt;blockquote&gt;&lt;p&gt;Might be an idea to add a comment to the patch explaining that this is necessary to agree with String.equalsIgnoreCase().&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I agree, these are the subtle things that are good to document. From the Javadoc of the method (latest patch):&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
* &amp;lt;strong&amp;gt;Note:&amp;lt;/strong&amp;gt; The &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; value of &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; method does not necessarily match
* the &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; value from {@link &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;#toLowerCase()}. Instead, the &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; value is
* constructed to guarantee the following condition: &amp;lt;code&amp;gt;str1.equalsIgnoreCase(str2)&amp;lt;/code&amp;gt;
* &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; and only &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; &amp;lt;code&amp;gt;convertCase(str1).equals(convertCase(str2))&amp;lt;/code&amp;gt;.
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;You could move this down into this method body, if it helps to catch the eye. But ultimatively, the unit test covers this code path, omitting either transformation to lower or upper case will fail the test.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;As to whether wildcardMatch() should be platform-dependent or independent, there are probably use-cases for both.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;To advocate for the platform-independence, this is the use case I have in mind: Consider an open-source project with a world-wide operating dev community. Let&apos;s in particular assume that some Turkish developers participate. Let&apos;s say this project has some license file hanging around in their sources, named &quot;LICENSE&quot;. This license should be picked up by some wildcard-based pattern, e.g. &quot;license&quot;. As the case of the file name is usually quite irrelevant for the distro, people might want to do case-insensitive wildcard matching here. Now, for our Turkish team-mates the file name match fails.&lt;/p&gt;</comment>
                            <comment id="12599679" author="sebb@apache.org" created="Sun, 25 May 2008 12:18:49 +0000"  >&lt;blockquote&gt;&lt;p&gt;You could move this down into this method body, if it helps to catch the eye.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I think the comment needs to remain in the Javadoc.&lt;br/&gt;
The upcase/downcase line needs a separate comment to say that this is effectively how String.ignoreCase() has to do it to cope with odd Locales.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;LICENSE use case&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Good example. Wish I could think of a good example for a platform-dependent use-case, but I feel sure that someone will need it ...&lt;/p&gt;</comment>
                            <comment id="12599682" author="bentmann" created="Sun, 25 May 2008 12:32:34 +0000"  >&lt;blockquote&gt;&lt;p&gt;Wish I could think of a good example for a platform-dependent use-case, but I feel sure that someone will need it ...&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;You&apos;re perfectly right, just because one cannot spontaneouly think up a use-case doesn&apos;t mean there is none. My only wish is that the behavior of &lt;tt&gt;IOCase.INSENSITIVE&lt;/tt&gt; is changed to be locale-independent as proposed. Basically because I consider this the major use-case which people had implicitly in mind when they used this matching in existing code. To support the other use-case: What about simply adding a new &lt;tt&gt;IOCase.INSENSITIVE_LOCALE_AWARE&lt;/tt&gt; or something?&lt;/p&gt;</comment>
                            <comment id="12601085" author="niallp" created="Fri, 30 May 2008 11:12:12 +0000"  >&lt;p&gt;Benjamin, thanks for the explanation, I have applied the FileSystemUtils part of the patch:&lt;br/&gt;
    &lt;a href=&quot;http://svn.apache.org/viewvc?view=rev&amp;amp;revision=661646&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewvc?view=rev&amp;amp;revision=661646&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;gt; Is wildcardMatch() meant to be platform-dependent?&lt;/p&gt;

&lt;p&gt;I wasn&apos;t around when the IOCase functionality was developed, so I don&apos;t know the original intent and I guess that the issue wasn&apos;t even considered. AFAIK, in all the other places its used, its used in conjunction with String&apos;s equalsIgnoreCase() so IMO I think we should make it consistent with that.&lt;/p&gt;</comment>
                            <comment id="12601165" author="niallp" created="Fri, 30 May 2008 15:18:09 +0000"  >&lt;p&gt;Heres my suggestion to change wildcard matching:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;add a new checkIndexOf() method to IOCase&lt;/li&gt;
	&lt;li&gt;change the FilenameUtils wildcardMatch() method to use IOCase&apos;s checkRegionMatches() and checkIndexOf() method which use String&apos;s underlying regionMatches() method &lt;a href=&quot;http://tinyurl.com/252m3k&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://tinyurl.com/252m3k&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12601197" author="bentmann" created="Fri, 30 May 2008 17:05:04 +0000"  >&lt;blockquote&gt;&lt;p&gt;add a new checkIndexOf() method to IOCase&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Extending &lt;tt&gt;IOCase&lt;/tt&gt; in this way seems consequent to me. I have only some minor wishes remaining:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Add a @since tag to the newly added method&lt;/li&gt;
	&lt;li&gt;Extend the &lt;tt&gt;IOCaseTestCase&lt;/tt&gt; to check for proper handling of case-insensitivity with Non-ASCIIs and guard against regressions of this issue.  You should be able to simply copy the code from &lt;tt&gt;FilenameUtilsWildcardTestCase.testLocaleIndependence()&lt;/tt&gt; (which is hopefully integrated nevertheless) around and change one or two lines to test &lt;tt&gt;checkIndexOf()&lt;/tt&gt;.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Niall&apos;s patch in place, &lt;tt&gt;IOCase.convertCase()&lt;/tt&gt; seems unused and could be deleted.&lt;/p&gt;</comment>
                            <comment id="12601226" author="niallp" created="Fri, 30 May 2008 19:13:38 +0000"  >&lt;p&gt;Fixed &lt;a href=&quot;http://svn.apache.org/viewvc?view=rev&amp;amp;revision=661822&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewvc?view=rev&amp;amp;revision=661822&lt;/a&gt;&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12382721" name="IO-167-a.patch" size="4818" author="bentmann" created="Sat, 24 May 2008 17:19:19 +0000"/>
                            <attachment id="12383118" name="IO-167-checkIndexOf.patch" size="7361" author="niallp" created="Fri, 30 May 2008 15:18:09 +0000"/>
                            <attachment id="12382733" name="IO-167.patch" size="5566" author="bentmann" created="Sun, 25 May 2008 09:10:48 +0000"/>
                            <attachment id="12380930" name="IO-167.patch" size="4467" author="bentmann" created="Fri, 25 Apr 2008 12:48:36 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sat, 24 May 2008 15:26:56 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>139603</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            8 years, 26 weeks, 1 day ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0b15j:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>62299</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>