<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun Nov 20 15:26:31 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/IO-357/IO-357.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[IO-357] [Tailer] InterruptedException while the thead is sleeping is silently ignored</title>
                <link>https://issues.apache.org/jira/browse/IO-357</link>
                <project id="12310477" key="IO">Commons IO</project>
                    <description>&lt;p&gt;The implementation of org.apache.commons.io.input.Tailer silently ignores interruptions while sleeping (in two places).&lt;/p&gt;

&lt;p&gt;Source snippet:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
360	                    &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
361	                        &lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.sleep(delayMillis);
362	                    } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (InterruptedException e) {
363	                    }
...
425	                &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
426	                    &lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.sleep(delayMillis);
427	                } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (InterruptedException e) {
428	                }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This is an inappropriate behavior, since it prevents controlled shutdown by a container.&lt;/p&gt;

&lt;p&gt;This may be rectified in one of these ways:&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;Declare the method as &quot;throws InterruptedException&quot; and re-throw the InterruptedException, after possibly performing come cleanup, or removing the catch clause entirely. This will ensure that a thread interruption (possibly caused by the forced shutdown by a container) will cause processing to stop, and shutdown to proceed. Problem: Requires backwards incompatible change to method signature.&lt;/li&gt;
	&lt;li&gt;Treat an interrupt as an alternate way of signalling the Tailer to stop, by calling &lt;tt&gt;stop()&lt;/tt&gt; in the catch clause.&lt;/li&gt;
	&lt;li&gt;Reassert the interrupted state of the thread by calling &lt;tt&gt;Thread.currentThread.interrupt()&lt;/tt&gt; to be able to detect the interruption at a later stage.&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;For reference, please refer to these resources about handling thread interruption:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.ibm.com/developerworks/java/library/j-jtp05236/index.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.ibm.com/developerworks/java/library/j-jtp05236/index.html&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;Java Concurrency in Practice &lt;a href=&quot;http://www.javaconcurrencyinpractice.com/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.javaconcurrencyinpractice.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
                <environment></environment>
        <key id="12617027">IO-357</key>
            <summary>[Tailer] InterruptedException while the thead is sleeping is silently ignored</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="mortenh">Morten Hattesen</reporter>
                        <labels>
                    </labels>
                <created>Tue, 20 Nov 2012 23:46:10 +0000</created>
                <updated>Tue, 8 Nov 2016 17:59:02 +0000</updated>
                            <resolved>Thu, 22 Nov 2012 00:36:35 +0000</resolved>
                                    <version>2.4</version>
                                    <fixVersion>2.5</fixVersion>
                                    <component>Streams/Writers</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="13501633" author="garydgregory" created="Wed, 21 Nov 2012 01:24:20 +0000"  >&lt;p&gt;Well, (2) sounds pretty good.&lt;/p&gt;

&lt;p&gt;Any other thoughts?&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;Index: src/main/java/org/apache/commons/io/input/Tailer.java
===================================================================
--- src/main/java/org/apache/commons/io/input/Tailer.java	(revision 1402268)
+++ src/main/java/org/apache/commons/io/input/Tailer.java	(working copy)
@@ -360,6 +360,7 @@
                     try {
                         Thread.sleep(delayMillis);
                     } catch (InterruptedException e) {
+                        stop();
                     }
                 } else {
                     // The current position in the file
@@ -425,6 +426,7 @@
                 try {
                     Thread.sleep(delayMillis);
                 } catch (InterruptedException e) {
+                    stop();
                 }
                 if (getRun() &amp;amp;&amp;amp; reOpen) {
                     reader = new RandomAccessFile(file, RAF_MODE);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13501639" author="mortenh" created="Wed, 21 Nov 2012 01:35:37 +0000"  >&lt;p&gt;That would definitely do the job.&lt;/p&gt;

&lt;p&gt;The only minor issue would be that the calling thread would have no way of knowing that the Tailer was  stopped by interruption, but I honestly don&apos;t see any situation where that would cause a major issue at all.&lt;/p&gt;

&lt;p&gt;It should be considered to also call &lt;tt&gt;listener.handle(e)&lt;/tt&gt; prior to calling &lt;tt&gt;stop()&lt;/tt&gt;, which would at least  give the listener a chance to discover the interruption, and possibly perform some logging etc.&lt;/p&gt;</comment>
                            <comment id="13501648" author="mortenh" created="Wed, 21 Nov 2012 01:48:40 +0000"  >&lt;p&gt;Having had another look at the code, you might also consider simply removing the two &lt;tt&gt;InterruptedException&lt;/tt&gt; catch blocks, letting the surrounding catch block handle the &lt;tt&gt;InterruptException&lt;/tt&gt;. That would exit the &lt;tt&gt;while&lt;/tt&gt; loop, not requiring a call to &lt;tt&gt;stop()&lt;/tt&gt;, and notifying the listener about the interruption:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
435	        } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (Exception e) {
436	            &lt;span class=&quot;code-comment&quot;&gt;// Handles InterruptedException, too
&lt;/span&gt;437	            listener.handle(e);
438	
439	        } &lt;span class=&quot;code-keyword&quot;&gt;finally&lt;/span&gt; {
440	            IOUtils.closeQuietly(reader);
441	        }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;As always, the code is complete, when there is no more code to be removed &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;
</comment>
                            <comment id="13501655" author="charles_honton@intuit.com" created="Wed, 21 Nov 2012 01:58:19 +0000"  >&lt;p&gt;To allow calling Threads to know Tailer was stopped by interruption, use both options 2 and 3 from above:&lt;/p&gt;

&lt;p&gt;@@ -360,6 +360,7 @@&lt;br/&gt;
                     try &lt;/p&gt;
{
                         Thread.sleep(delayMillis);
                     }
&lt;p&gt; catch (InterruptedException e) &lt;/p&gt;
{
+                        stop();
+                        Thread.currentThread().interrupt();
                     }
&lt;p&gt;                 } else {&lt;br/&gt;
                     // The current position in the file&lt;br/&gt;
@@ -425,6 +426,7 @@&lt;br/&gt;
                 try &lt;/p&gt;
{
                     Thread.sleep(delayMillis);
                 }
&lt;p&gt; catch (InterruptedException e) &lt;/p&gt;
{
+                    stop();
+                    Thread.currentThread().interrupt();
                 }</comment>
                            <comment id="13501689" author="garydgregory" created="Wed, 21 Nov 2012 03:35:09 +0000"  >&lt;p&gt;Hm, I like the simplicity of handing the IE at the higher level like this (and also letting a user be able to find out about the IE):&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;Index: src/main/java/org/apache/commons/io/input/Tailer.java
===================================================================
--- src/main/java/org/apache/commons/io/input/Tailer.java	(revision 1411980)
+++ src/main/java/org/apache/commons/io/input/Tailer.java	(working copy)
@@ -356,10 +356,7 @@
                     listener.fileNotFound();
                 }
                 if (reader == null) {
-                    try {
-                        Thread.sleep(delayMillis);
-                    } catch (InterruptedException e) {
-                    }
+                    Thread.sleep(delayMillis);
                 } else {
                     // The current position in the file
                     position = end ? file.length() : 0;
@@ -410,17 +407,19 @@
                 if (reOpen) {
                     IOUtils.closeQuietly(reader);
                 }
-                try {
-                    Thread.sleep(delayMillis);
-                } catch (InterruptedException e) {
-                }
+                Thread.sleep(delayMillis);
                 if (getRun() &amp;amp;&amp;amp; reOpen) {
                     reader = new RandomAccessFile(file, RAF_MODE);
                     reader.seek(position);
                 }
             }
-        } catch (Exception e) {
+        } catch (InterruptedException e) {            
             listener.handle(e);
+            stop();
+            Thread.currentThread().interrupt();
+        } catch (Exception e) {            
+            listener.handle(e);
+            stop();
         } finally {
             IOUtils.closeQuietly(reader);
         }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This based on the latest from trunk.&lt;/p&gt;</comment>
                            <comment id="13501721" author="mortenh" created="Wed, 21 Nov 2012 06:31:26 +0000"  >&lt;p&gt;Looks good to me!&lt;/p&gt;</comment>
                            <comment id="13502017" author="sebb@apache.org" created="Wed, 21 Nov 2012 14:46:49 +0000"  >&lt;p&gt;AFAICT there&apos;s no point calling stop outside the run loop, because the flag won&apos;t be checked.&lt;/p&gt;

&lt;p&gt;Also InterruptedException is an instance of Exception; no point in having a separate catch unless the code is different.&lt;/p&gt;

&lt;p&gt;So in fact the only change required would be to remove the catch blocks after Thread.sleep().&lt;/p&gt;</comment>
                            <comment id="13502032" author="garydgregory" created="Wed, 21 Nov 2012 15:11:14 +0000"  >&lt;p&gt;&quot;AFAICT there&apos;s no point calling stop outside the run loop, because the flag won&apos;t be checked.&quot;&lt;/p&gt;

&lt;p&gt;I added a call to stop() to play nice with &lt;a href=&quot;https://issues.apache.org/jira/browse/IO-345&quot; title=&quot;Supply a hook method allowing Tailer actively determining stop condition&quot; class=&quot;issue-link&quot; data-issue-key=&quot;IO-345&quot;&gt;&lt;del&gt;IO-345&lt;/del&gt;&lt;/a&gt;: Supply a hook method allowing Tailer actively determining stop condition.&lt;/p&gt;

&lt;p&gt;This lets a Tailer subclass (as requested in &lt;a href=&quot;https://issues.apache.org/jira/browse/IO-345&quot; title=&quot;Supply a hook method allowing Tailer actively determining stop condition&quot; class=&quot;issue-link&quot; data-issue-key=&quot;IO-345&quot;&gt;&lt;del&gt;IO-345&lt;/del&gt;&lt;/a&gt;) access the run value.&lt;/p&gt;


&lt;p&gt;&quot;Also InterruptedException is an instance of Exception; no point in having a separate catch unless the code is different.&quot;&lt;/p&gt;

&lt;p&gt;The code in the two catche clauses &lt;em&gt;is&lt;/em&gt; different. For InterruptedException, interrupt() is called.&lt;/p&gt;

&lt;p&gt;It is more obvious like this: &lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;Index: src/main/java/org/apache/commons/io/input/Tailer.java
===================================================================
--- src/main/java/org/apache/commons/io/input/Tailer.java	(revision 1411980)
+++ src/main/java/org/apache/commons/io/input/Tailer.java	(working copy)
@@ -356,10 +356,7 @@
                     listener.fileNotFound();
                 }
                 if (reader == null) {
-                    try {
-                        Thread.sleep(delayMillis);
-                    } catch (InterruptedException e) {
-                    }
+                    Thread.sleep(delayMillis);
                 } else {
                     // The current position in the file
                     position = end ? file.length() : 0;
@@ -410,22 +407,27 @@
                 if (reOpen) {
                     IOUtils.closeQuietly(reader);
                 }
-                try {
-                    Thread.sleep(delayMillis);
-                } catch (InterruptedException e) {
-                }
+                Thread.sleep(delayMillis);
                 if (getRun() &amp;amp;&amp;amp; reOpen) {
                     reader = new RandomAccessFile(file, RAF_MODE);
                     reader.seek(position);
                 }
             }
-        } catch (Exception e) {
-            listener.handle(e);
+        } catch (InterruptedException e) {            
+            stop(e);
+            Thread.currentThread().interrupt();
+        } catch (Exception e) {            
+            stop(e);
         } finally {
             IOUtils.closeQuietly(reader);
         }
     }
 
+    private void stop(Exception e) {
+        listener.handle(e);
+        stop();
+    }
+
     /**
      * Allows the tailer to complete its current loop and return.
      */
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13502033" author="garydgregory" created="Wed, 21 Nov 2012 15:11:14 +0000"  >&lt;p&gt;&quot;AFAICT there&apos;s no point calling stop outside the run loop, because the flag won&apos;t be checked.&quot;&lt;/p&gt;

&lt;p&gt;I added a call to stop() to play nice with &lt;a href=&quot;https://issues.apache.org/jira/browse/IO-345&quot; title=&quot;Supply a hook method allowing Tailer actively determining stop condition&quot; class=&quot;issue-link&quot; data-issue-key=&quot;IO-345&quot;&gt;&lt;del&gt;IO-345&lt;/del&gt;&lt;/a&gt;: Supply a hook method allowing Tailer actively determining stop condition.&lt;/p&gt;

&lt;p&gt;This lets a Tailer subclass (as requested in &lt;a href=&quot;https://issues.apache.org/jira/browse/IO-345&quot; title=&quot;Supply a hook method allowing Tailer actively determining stop condition&quot; class=&quot;issue-link&quot; data-issue-key=&quot;IO-345&quot;&gt;&lt;del&gt;IO-345&lt;/del&gt;&lt;/a&gt;) access the run value.&lt;/p&gt;


&lt;p&gt;&quot;Also InterruptedException is an instance of Exception; no point in having a separate catch unless the code is different.&quot;&lt;/p&gt;

&lt;p&gt;The code in the two catche clauses &lt;em&gt;is&lt;/em&gt; different. For InterruptedException, interrupt() is called.&lt;/p&gt;

&lt;p&gt;It is more obvious like this: &lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;Index: src/main/java/org/apache/commons/io/input/Tailer.java
===================================================================
--- src/main/java/org/apache/commons/io/input/Tailer.java	(revision 1411980)
+++ src/main/java/org/apache/commons/io/input/Tailer.java	(working copy)
@@ -356,10 +356,7 @@
                     listener.fileNotFound();
                 }
                 if (reader == null) {
-                    try {
-                        Thread.sleep(delayMillis);
-                    } catch (InterruptedException e) {
-                    }
+                    Thread.sleep(delayMillis);
                 } else {
                     // The current position in the file
                     position = end ? file.length() : 0;
@@ -410,22 +407,27 @@
                 if (reOpen) {
                     IOUtils.closeQuietly(reader);
                 }
-                try {
-                    Thread.sleep(delayMillis);
-                } catch (InterruptedException e) {
-                }
+                Thread.sleep(delayMillis);
                 if (getRun() &amp;amp;&amp;amp; reOpen) {
                     reader = new RandomAccessFile(file, RAF_MODE);
                     reader.seek(position);
                 }
             }
-        } catch (Exception e) {
-            listener.handle(e);
+        } catch (InterruptedException e) {            
+            stop(e);
+            Thread.currentThread().interrupt();
+        } catch (Exception e) {            
+            stop(e);
         } finally {
             IOUtils.closeQuietly(reader);
         }
     }
 
+    private void stop(Exception e) {
+        listener.handle(e);
+        stop();
+    }
+
     /**
      * Allows the tailer to complete its current loop and return.
      */
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13502036" author="charles_honton@intuit.com" created="Wed, 21 Nov 2012 15:17:38 +0000"  >&lt;p&gt;InterruptedException should reset the interrupt condition before calling listener.handle(e).&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
-        } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (Exception e) {
+        } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (InterruptedException e) {            
+            &lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.currentThread().interrupt();
             listener.handle(e);
+        } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (Exception e) {            
+            listener.handle(e);
         } &lt;span class=&quot;code-keyword&quot;&gt;finally&lt;/span&gt; {
             IOUtils.closeQuietly(reader);
         }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;or&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
         } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (Exception e) {
+            &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt;(e &lt;span class=&quot;code-keyword&quot;&gt;instanceof&lt;/span&gt; InterruptedException) {            
+                &lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.currentThread().interrupt();
+            }
             listener.handle(e);
         } &lt;span class=&quot;code-keyword&quot;&gt;finally&lt;/span&gt; {
             IOUtils.closeQuietly(reader);
         }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13502079" author="garydgregory" created="Wed, 21 Nov 2012 15:55:57 +0000"  >&lt;p&gt;Or like this:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
Index: src/main/java/org/apache/commons/io/input/Tailer.java
===================================================================
--- src/main/java/org/apache/commons/io/input/Tailer.java	(revision 1411980)
+++ src/main/java/org/apache/commons/io/input/Tailer.java	(working copy)
@@ -356,10 +356,7 @@
                     listener.fileNotFound();
                 }
                 &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (reader == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
-                    &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
-                        &lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.sleep(delayMillis);
-                    } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (InterruptedException e) {
-                    }
+                    &lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.sleep(delayMillis);
                 } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; {
                     &lt;span class=&quot;code-comment&quot;&gt;// The current position in the file
&lt;/span&gt;                     position = end ? file.length() : 0;
@@ -410,22 +407,27 @@
                 &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (reOpen) {
                     IOUtils.closeQuietly(reader);
                 }
-                &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
-                    &lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.sleep(delayMillis);
-                } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (InterruptedException e) {
-                }
+                &lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.sleep(delayMillis);
                 &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (getRun() &amp;amp;&amp;amp; reOpen) {
                     reader = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; RandomAccessFile(file, RAF_MODE);
                     reader.seek(position);
                 }
             }
-        } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (Exception e) {
-            listener.handle(e);
+        } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (InterruptedException e) {            
+            &lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.currentThread().interrupt();
+            stop(e);
+        } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (Exception e) {            
+            stop(e);
         } &lt;span class=&quot;code-keyword&quot;&gt;finally&lt;/span&gt; {
             IOUtils.closeQuietly(reader);
         }
     }
 
+    &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; void stop(Exception e) {
+        listener.handle(e);
+        stop();
+    }
+
     /**
      * Allows the tailer to complete its current loop and &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt;.
      */
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13502486" author="garydgregory" created="Thu, 22 Nov 2012 00:36:35 +0000"  >&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;commit -m &quot;[IO-358][Tailer] InterruptedException while the thread is sleeping is silently ignored.&quot; C:/svn/org/apache/commons/trunks-proper/io/src/test/java/org/apache/commons/io/input/TailerTest.java C:/svn/org/apache/commons/trunks-proper/io/src/main/java/org/apache/commons/io/input/Tailer.java C:/svn/org/apache/commons/trunks-proper/io/src/changes/changes.xml
    Sending        C:/svn/org/apache/commons/trunks-proper/io/src/changes/changes.xml
    Sending        C:/svn/org/apache/commons/trunks-proper/io/src/main/java/org/apache/commons/io/input/Tailer.java
    Sending        C:/svn/org/apache/commons/trunks-proper/io/src/test/java/org/apache/commons/io/input/TailerTest.java
    Transmitting file data ...
    Committed revision 1412391.
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 21 Nov 2012 01:24:20 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>258952</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            4 years, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0l62n:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>121634</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>