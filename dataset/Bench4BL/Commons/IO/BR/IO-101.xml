<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Thu Dec 01 18:48:43 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/IO-101/IO-101.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[IO-101] The method EndianUtils.writeSwappedDouble() and EndianUtils.readSwappedDouble() do not match!</title>
                <link>https://issues.apache.org/jira/browse/IO-101</link>
                <project id="12310477" key="IO">Commons IO</project>
                    <description>&lt;p&gt;Code:&lt;/p&gt;

&lt;p&gt;public static void main(String[] args) {&lt;/p&gt;

&lt;p&gt;		double[] tests = new double[] &lt;/p&gt;
{34.345, -345.5645, 545.12, 10.043, 7.123456789123}
&lt;p&gt;;&lt;br/&gt;
		for (int i = 0; i&amp;lt; tests.length ;i++) &lt;/p&gt;
{
			byte[] buffer = new byte[8];			
			EndianUtils.writeSwappedDouble(buffer, 0, tests[i]);
			double val = EndianUtils.readSwappedDouble(buffer, 0);
			System.out.println(val);	
		}

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;Result:&lt;br/&gt;
34.344969482421874&lt;br/&gt;
-345.5645&lt;br/&gt;
545.11951171875&lt;br/&gt;
10.043&lt;br/&gt;
7.123456789123&lt;/p&gt;

&lt;p&gt;Note:&lt;br/&gt;
In my opinion the values shouldn&apos;t be changed at all.&lt;/p&gt;</description>
                <environment>&lt;p&gt;I was running Windows XP SP2 and using Commons IO 1.2, Java 1.5 update 9 when I got this problem.&lt;/p&gt;</environment>
        <key id="12357696">IO-101</key>
            <summary>The method EndianUtils.writeSwappedDouble() and EndianUtils.readSwappedDouble() do not match!</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="2" iconUrl="https://issues.apache.org/jira/images/icons/priorities/critical.png">Critical</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="zepinto">Jos&#233; Pinto</reporter>
                        <labels>
                    </labels>
                <created>Mon, 4 Dec 2006 20:49:18 +0000</created>
                <updated>Fri, 9 Mar 2007 20:38:24 +0000</updated>
                            <resolved>Sat, 9 Dec 2006 00:32:26 +0000</resolved>
                                    <version>1.2</version>
                                    <fixVersion>1.3</fixVersion>
                                    <component>Streams/Writers</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12455456" author="bayard" created="Mon, 4 Dec 2006 23:40:41 +0000"  >&lt;p&gt;Assigning for looking at in 1.4. Looks like we&apos;re having classic data loss due to the data type, so might not be a simple fix.&lt;/p&gt;

&lt;p&gt;A unit test should be very easy to create from Jos&#233;&apos;s data above.&lt;/p&gt;</comment>
                            <comment id="12455586" author="zepinto" created="Tue, 5 Dec 2006 11:11:17 +0000"  >&lt;p&gt;I tried using the java.nio Buffer for the same purpose and it worked as expected. Maybe we should look for differences in the code.&lt;/p&gt;</comment>
                            <comment id="12455776" author="bayard" created="Tue, 5 Dec 2006 22:09:52 +0000"  >&lt;p&gt;Yup. The code is based on two things - the Double.longBitsToDouble pair of methods and the readSwappedLong pair of methods. The former pass with your data (yay JDK!), but the latter fail; so this bug is in the Long methods. Will keep investigating.&lt;/p&gt;</comment>
                            <comment id="12455796" author="bayard" created="Tue, 5 Dec 2006 23:36:56 +0000"  >&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;That has to be the most annoying thing.... I&amp;#39;d done a beautiful write up as I worked through this and the damn machine froze... I&amp;#39;d got used to that not being a problem&amp;#93;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Anyways....&lt;/p&gt;

&lt;p&gt;Your first double of 34.345 leads to the following input and output when passed through writeSwapped and readSwapped:&lt;/p&gt;

&lt;p&gt;4630030446347063132 is 0x40412C28,F5C28F5C&lt;br/&gt;
4630030442052095836 is 0x40412C27,F5C28F5C&lt;/p&gt;

&lt;p&gt;Output of writeXxx is&lt;/p&gt;

&lt;p&gt;92, -113, -62, -11, 40, 44, 65, 64 which is:&lt;br/&gt;
5C,   8F,  C2,  F5, 28, 2C, 41, 40&lt;/p&gt;

&lt;p&gt;so by inspection that&apos;s correct. So the problem is in the readSwapped method.&lt;/p&gt;

&lt;p&gt;In readSwapped we get two longs, a high and a low. The high is 1078012968, which is 0x40412C28. So that&apos;s good.&lt;br/&gt;
The low is -171798692. The negative is a bit worrisome there. According to OS X Calculator it should be 4123168604, &lt;br/&gt;
which I can confirm as that gives the correct answer when added to (high &amp;lt;&amp;lt; 32).&lt;/p&gt;

&lt;p&gt;Looking at the calculation of the low long, we get four numbers that are added together: &lt;/p&gt;

&lt;p&gt;92, 36608, 12713984, -184549376&lt;/p&gt;

&lt;p&gt;Again the negative is worrisome. Assuming it is incorrect and the others are correct, it should be 4110417920.&lt;br/&gt;
This is a big number, so I bet we have an int which is wrapping. Changing the line from:&lt;/p&gt;

&lt;p&gt;( data[ offset + 3 ] &amp;amp; 0xff ) &amp;lt;&amp;lt; 24;&lt;/p&gt;

&lt;p&gt;to &lt;/p&gt;

&lt;p&gt;( (long) ( data[ offset + 3 ] &amp;amp; 0xff )) &amp;lt;&amp;lt; 24;&lt;/p&gt;

&lt;p&gt;gives the correct answer. Shifting 0xff by 8, 16 and 24, only 24 goes over the top. So I think we only need this on the two &apos;&amp;lt;&amp;lt; 24&apos; lines.&lt;/p&gt;</comment>
                            <comment id="12455799" author="bayard" created="Tue, 5 Dec 2006 23:41:18 +0000"  >&lt;p&gt;Patch and bugfix for this issue.&lt;/p&gt;</comment>
                            <comment id="12455800" author="bayard" created="Tue, 5 Dec 2006 23:41:49 +0000"  >&lt;p&gt;Moving the fix version up to 1.3 because I think it&apos;s good to go in 1.3, but I don&apos;t want to charge in committing it without consensus.&lt;/p&gt;</comment>
                            <comment id="12455804" author="zepinto" created="Tue, 5 Dec 2006 23:50:08 +0000"  >&lt;p&gt;Thanks Henri!&lt;br/&gt;
I also think this should be fixed as soon as possible because it&apos;s a very difficult problem to track. I noticed only because I was reading latitudes and longitudes from little endian byte streams...&lt;/p&gt;</comment>
                            <comment id="12455826" author="bayard" created="Wed, 6 Dec 2006 00:25:39 +0000"  >&lt;p&gt;svn ci -m &quot;Committing my patch from #&lt;a href=&quot;https://issues.apache.org/jira/browse/IO-101&quot; title=&quot;The method EndianUtils.writeSwappedDouble() and EndianUtils.readSwappedDouble() do not match!&quot; class=&quot;issue-link&quot; data-issue-key=&quot;IO-101&quot;&gt;&lt;del&gt;IO-101&lt;/del&gt;&lt;/a&gt;, fixing an &amp;lt;int&amp;gt; overrun in readSwappedLong. Many thanks to Jos&#233; Pinto for finding this&quot; src/&lt;/p&gt;

&lt;p&gt;Sending        src/java/org/apache/commons/io/EndianUtils.java&lt;br/&gt;
Sending        src/test/org/apache/commons/io/EndianUtilsTest.java&lt;br/&gt;
Transmitting file data ..&lt;br/&gt;
Committed revision 482841.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;It&apos;ll be available in the nightly build tonight Jos&#233;, and in IO 1.3 which should get released sometime this month (&lt;a href=&quot;https://issues.apache.org/jira/browse/IO-99&quot; title=&quot;FileCleaner thread never ends and cause memory leak in AS&quot; class=&quot;issue-link&quot; data-issue-key=&quot;IO-99&quot;&gt;&lt;del&gt;IO-99&lt;/del&gt;&lt;/a&gt; willing).&lt;/p&gt;</comment>
                            <comment id="12456131" author="bob.michel" created="Wed, 6 Dec 2006 17:34:20 +0000"  >&lt;p&gt;Henri,&lt;/p&gt;

&lt;p&gt;I came across this bug just yesterday and saw your patch today.  Separately, I had come up with an alternate fix which you might want to consider.&lt;/p&gt;

&lt;p&gt;The older code fails whenever the byte at offset+3 is negative.  The int isn&apos;t wrapping, but it is extending the sign when the int is cast up to long.  The sign extension is what needs to be clipped.&lt;/p&gt;

&lt;p&gt;The byte at offset+7 is not affected, because the variable it enters (high) is shifted left 32, obliterating the sign bit.&lt;/p&gt;

&lt;p&gt;The current solution converts the byte at offset+3 to a long, which fixes this but will silently upcast the other bytes to long to accomplish the additions.  I suspect the original author had intended to do all the swapping in ints for performance reasons.   (If performance wasn&apos;t an issue, this method could be done in a single line.)  I&apos;m guessing that the casts to long and the addition on the last line shoud be the only 64-bit operations.&lt;/p&gt;

&lt;p&gt;My alternative:&lt;/p&gt;

&lt;p&gt;    public static long readSwappedLong(byte[] data, int offset) &lt;/p&gt;
{
        int low = (
            ( ( data[ offset + 0 ] &amp;amp; 0xff ) &amp;lt;&amp;lt; 0 ) +
            ( ( data[ offset + 1 ] &amp;amp; 0xff ) &amp;lt;&amp;lt; 8 ) +
            ( ( data[ offset + 2 ] &amp;amp; 0xff ) &amp;lt;&amp;lt; 16 ) +
            ( ( data[ offset + 3 ] &amp;amp; 0xff ) &amp;lt;&amp;lt; 24 ) );
        int high = (
            ( ( data[ offset + 4 ] &amp;amp; 0xff ) &amp;lt;&amp;lt; 0 ) +
            ( ( data[ offset + 5 ] &amp;amp; 0xff ) &amp;lt;&amp;lt; 8 ) +
            ( ( data[ offset + 6 ] &amp;amp; 0xff ) &amp;lt;&amp;lt; 16 ) +
            ( ( data[ offset + 7 ] &amp;amp; 0xff ) &amp;lt;&amp;lt; 24 ) );
        return ((long)high &amp;lt;&amp;lt; 32) + (0xffffffffL &amp;amp; low);
    }

&lt;p&gt;This solution indicates (a little more clearly?) that the original two statements are 32-bit ops and the last statement is the 64-bit work. &lt;/p&gt;

&lt;p&gt;FYI, I used this test to demonstrate the problem locally:&lt;/p&gt;

&lt;p&gt;    public static void main(String[] args) {&lt;/p&gt;

&lt;p&gt;        byte[] buffer = &lt;/p&gt;
{
                0, 0, 0, -1, 1, 2, 3, 4
        }
&lt;p&gt;;&lt;br/&gt;
        long val = EndianUtils.readSwappedLong(buffer, 0);&lt;br/&gt;
        ByteBuffer bb = ByteBuffer.allocate(8);&lt;br/&gt;
        bb.putLong(val);&lt;br/&gt;
        bb.flip();&lt;br/&gt;
        for (int i = 0; i &amp;lt; 8; i++) &lt;/p&gt;
{
            System.out.println(bb.get() + &quot; &quot;);
        }
&lt;p&gt;        System.out.println();&lt;/p&gt;

&lt;p&gt;    }&lt;/p&gt;</comment>
                            <comment id="12456190" author="bayard" created="Wed, 6 Dec 2006 20:08:46 +0000"  >&lt;p&gt;Consider Robert&apos;s change to the patch &lt;span class=&quot;error&quot;&gt;&amp;#91;sounds good to me&amp;#93;&lt;/span&gt;&lt;/p&gt;</comment>
                            <comment id="12457025" author="bayard" created="Sat, 9 Dec 2006 00:32:26 +0000"  >&lt;p&gt;Thanks Robert, &lt;/p&gt;

&lt;p&gt;I&apos;ve made that change.&lt;/p&gt;

&lt;p&gt;svn ci -m &quot;Applying Robert Michel&apos;s more correct patch for #&lt;a href=&quot;https://issues.apache.org/jira/browse/IO-101&quot; title=&quot;The method EndianUtils.writeSwappedDouble() and EndianUtils.readSwappedDouble() do not match!&quot; class=&quot;issue-link&quot; data-issue-key=&quot;IO-101&quot;&gt;&lt;del&gt;IO-101&lt;/del&gt;&lt;/a&gt;. &quot;&lt;br/&gt;
Sending        src/java/org/apache/commons/io/EndianUtils.java&lt;br/&gt;
Transmitting file data .&lt;br/&gt;
Committed revision 484864.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12346487" name="IO-101.patch" size="2068" author="bayard" created="Tue, 5 Dec 2006 23:41:18 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 4 Dec 2006 23:40:41 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>40296</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            10 years, 5 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0smhb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>165119</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>