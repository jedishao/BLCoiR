<!-- 
RSS generated by JIRA (7.2.3#72005-sha1:73be91d2b96fc29303a7eb6820acf420e5d0ed65) at Tue Dec 06 13:06:28 EST 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.jboss.org/si/jira.issueviews:issue-xml/WFLY-6173/WFLY-6173.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>JBoss Issue Tracker</title>
    <link>https://issues.jboss.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>7.2.3</version>
        <build-number>72005</build-number>
        <build-date>06-10-2016</build-date>
    </build-info>

<item>
            <title>[WFLY-6173] Classes not unloaded after undeployment</title>
                <link>https://issues.jboss.org/browse/WFLY-6173</link>
                <project id="12313721" key="WFLY">WildFly</project>
                    <description>&lt;p&gt;I deployed a small web application with one single JSF and one managed bean, accessed the page and then undeployed the application. I found the classes of this application had never been unloaded via monitoring with Java VistualVM, also using &apos;-XX:+TraceClassUnloading&apos; JVM option proved the classes not unloaded. &lt;br/&gt;
Then checking the heap dump of it, I found there were instance for each enum item (the managed bean has one enum type field, which is always initialized when the managed bean constructed) and one array instance including these enum instances.&lt;br/&gt;
Please refer to the attachment for the same application. I started to verify the classloader memory leak issue because we found hot redeployment of our real application swallow some memory each time, then after lots of redeployment the server was short of memories.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12603477">WFLY-6173</key>
            <summary>Classes not unloaded after undeployment</summary>
                <type id="1" iconUrl="https://issues.jboss.org/secure/viewavatar?size=xsmall&amp;avatarId=13263&amp;avatarType=issuetype">Bug</type>
                                            <priority id="1" iconUrl="https://issues.jboss.org/images/icons/priorities/blocker.svg">Blocker</priority>
                        <status id="5" iconUrl="https://issues.jboss.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="3">Duplicate Issue</resolution>
                                        <assignee username="mkouba">Martin Kouba</assignee>
                                    <reporter username="joeydaowang">Joey Wang</reporter>
                        <labels>
                    </labels>
                <created>Wed, 10 Feb 2016 22:34:55 -0500</created>
                <updated>Thu, 27 Oct 2016 02:27:35 -0400</updated>
                            <resolved>Tue, 24 May 2016 12:35:12 -0400</resolved>
                                    <version>8.2.0.Final</version>
                    <version>10.0.0.Final</version>
                                                    <component>CDI / Weld</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>11</watches>
                                                                <comments>
                            <comment id="13161511" author="jaikiran" created="Wed, 10 Feb 2016 23:02:38 -0500"  >&lt;p&gt;Can you try this against the latest released WildFly 10.0.0.Final &lt;a href=&quot;http://wildfly.org/downloads/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://wildfly.org/downloads/&lt;/a&gt; and see if it&apos;s fixed there? &lt;/p&gt;</comment>
                            <comment id="13162005" author="joeydaowang" created="Thu, 11 Feb 2016 21:48:11 -0500"  >&lt;p&gt;&lt;a href=&quot;https://issues.jboss.org/secure/ViewProfile.jspa?name=jaikiran&quot; class=&quot;user-hover&quot; rel=&quot;jaikiran&quot;&gt;jaikiran pai&lt;/a&gt;, the issue can be reproduced in WildFly 10.0.0.Final as well.&lt;/p&gt;</comment>
                            <comment id="13190869" author="joeydaowang" created="Tue, 12 Apr 2016 20:23:53 -0400"  >&lt;p&gt;Any updates please &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.jboss.org/images/icons/emoticons/smile.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;.&lt;/p&gt;</comment>
                            <comment id="13240905" author="jaikiran" created="Mon, 23 May 2016 01:42:39 -0400"  >&lt;p&gt;Just had a quick look. This is reproducible against latest WildFly upstream code too. This appears to be a bug in the weld integration deployment process in the WildFly code. There&apos;s the org.jboss.as.weld.WeldModuleResourceLoader to which application classes get added but never get removed from that resource loader. The WeldModuleResourceLoader in itself get held on through some other integration classes like the WeldDeployment which goes all the way to the Weld implementation&apos;s service registry.&lt;/p&gt;

&lt;p&gt;I think this is something that either &lt;a href=&quot;https://issues.jboss.org/secure/ViewProfile.jspa?name=jharting&quot; class=&quot;user-hover&quot; rel=&quot;jharting&quot;&gt;Jozef Hartinger&lt;/a&gt; or &lt;a href=&quot;https://issues.jboss.org/secure/ViewProfile.jspa?name=swd847&quot; class=&quot;user-hover&quot; rel=&quot;swd847&quot;&gt;Stuart Douglas&lt;/a&gt; might be able to help with. Building, deploying and accessing the attached application from a browser and then undeploying it, easily reproduces the problem. I then did a jmap dump and used jhat to find the references.&lt;/p&gt;

</comment>
                            <comment id="13241109" author="mkouba" created="Mon, 23 May 2016 08:31:53 -0400"  >&lt;p&gt;&lt;a href=&quot;https://issues.jboss.org/secure/ViewProfile.jspa?name=joeydaowang&quot; class=&quot;user-hover&quot; rel=&quot;joeydaowang&quot;&gt;Joey Wang&lt;/a&gt; &lt;a href=&quot;https://issues.jboss.org/secure/ViewProfile.jspa?name=jaikiran&quot; class=&quot;user-hover&quot; rel=&quot;jaikiran&quot;&gt;jaikiran pai&lt;/a&gt; Hi guys, I&apos;ve tried the reproducer and it seems the leak only occurs when Omnifaces JSF library is used. &lt;tt&gt;WeldModuleResourceLoader&lt;/tt&gt; is a regular per-module (per-BeanManager) service which does not require any cleanup after undeploy. The problematic class is &lt;tt&gt;org.omnifaces.config.BeanManager&lt;/tt&gt; - this enum holds a reference to one of the webapp&apos;s &lt;tt&gt;BeanManager&lt;/tt&gt;. We should probably idenfity all the GC roots first.&lt;/p&gt;</comment>
                            <comment id="13241138" author="mkouba" created="Mon, 23 May 2016 09:22:46 -0400"  >&lt;p&gt;&lt;a href=&quot;https://issues.jboss.org/browse/WFLY-6347&quot; title=&quot;org.jboss.el.cache.BeanPropertiesCache leaks memory in static void clear(ClassLoader classLoader)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;WFLY-6347&quot;&gt;&lt;del&gt;WFLY-6347&lt;/del&gt;&lt;/a&gt; seems to be related. I&apos;ve tried the reproducer on master branch and the &lt;tt&gt;BeanPropertiesCache&lt;/tt&gt; is no longer a GC root. &lt;/p&gt;</comment>
                            <comment id="13241430" author="mkouba" created="Tue, 24 May 2016 02:59:21 -0400"  >&lt;p&gt;To sum it up:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;undeploy does not necessarily mean class unloading - it depends on JVM settings (&lt;tt&gt;-XX:MaxMetaspaceSize&lt;/tt&gt; and friends for Java8)&lt;/li&gt;
	&lt;li&gt;I&apos;ve verified that after 50 deploy/undeploy cycles of the attached reproducer (and using &lt;tt&gt;-XX:MaxMetaspaceSize=128m&lt;/tt&gt;):
	&lt;ul&gt;
		&lt;li&gt;for WildFly 10.0.0.Final &quot;java.lang.OutOfMemoryError: Metaspace&quot; occurs&lt;/li&gt;
		&lt;li&gt;for WildFly 10.1.0-SNAPSHOT (fix for &lt;a href=&quot;https://issues.jboss.org/browse/WFLY-6347&quot; title=&quot;org.jboss.el.cache.BeanPropertiesCache leaks memory in static void clear(ClassLoader classLoader)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;WFLY-6347&quot;&gt;&lt;del&gt;WFLY-6347&lt;/del&gt;&lt;/a&gt; merged) no OOM error occurs (metaspace is garbage collected)&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;After examining the heap dump I&apos;ve identified the &lt;tt&gt;org.jboss.el.cache.BeanPropertiesCache&lt;/tt&gt; as &lt;b&gt;the root cause&lt;/b&gt;. In this case, it keeps a hard reference to the &lt;tt&gt;person.joey.test.TestClientBean&lt;/tt&gt; class, thus effectively blocking the relevant &lt;tt&gt;ModuleClassLoader&lt;/tt&gt; from GC. Enum values are treated similarly to static constants - i.e. it&apos;s not garbage collected unless the class loader of the owner class is. That&apos;s why &lt;tt&gt;person.joey.test.RequestType&lt;/tt&gt; values remain in memory. OmniFaces only amplifies the impact - as mentioned above, it holds a reference to a BeanManager.&lt;/p&gt;

&lt;p&gt;I think we can resolve/close this issue.&lt;/p&gt;</comment>
                            <comment id="13243966" author="mkouba" created="Fri, 27 May 2016 07:48:50 -0400"  >&lt;p&gt;I&apos;ve also created an OmniFaces issue: &lt;a href=&quot;https://github.com/omnifaces/omnifaces/issues/256&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/omnifaces/omnifaces/issues/256&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13287774" author="joeydaowang" created="Fri, 2 Sep 2016 00:47:02 -0400"  >&lt;p&gt;&lt;a href=&quot;https://issues.jboss.org/secure/ViewProfile.jspa?name=mkouba&quot; class=&quot;user-hover&quot; rel=&quot;mkouba&quot;&gt;Martin Kouba&lt;/a&gt;, thanks for the fix.&lt;br/&gt;
Unfortunately I found some other memory leak after undeployment. Please try to deploy  &lt;span class=&quot;nobr&quot;&gt;&lt;a href=&quot;https://issues.jboss.org/secure/attachment/12409020/12409020_memory-leak_New.zip&quot; title=&quot;memory-leak_New.zip attached to WFLY-6173&quot;&gt;memory-leak_New.zip&lt;sup&gt;&lt;img class=&quot;rendericon&quot; src=&quot;https://issues.jboss.org/images/icons/link_attachment_7.gif&quot; height=&quot;7&quot; width=&quot;7&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/span&gt; to Wildfly 10.1.0.Final, access url &lt;a href=&quot;http://[WF&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://[WF&lt;/a&gt; host]/memoryLeak/webresources/user. Undeploy the application, found class instances of &apos;person.joey.test.UserType&apos; still in memory.&lt;br/&gt;
I used SQL Server 2014 as DB server to reproduce this issue, but I guess it doesn&apos;t matter which DB server is used. Please let me know if you need more information.&lt;/p&gt;</comment>
                            <comment id="13287841" author="mkouba" created="Fri, 2 Sep 2016 04:20:14 -0400"  >&lt;p&gt;&lt;a href=&quot;https://issues.jboss.org/secure/ViewProfile.jspa?name=joeydaowang&quot; class=&quot;user-hover&quot; rel=&quot;joeydaowang&quot;&gt;Joey Wang&lt;/a&gt; Thanks for report. It looks like the next issue completely unrelated to CDI/Weld subsystem. My colleague Tomas Remes created &lt;a href=&quot;https://issues.jboss.org/browse/JBEAP-5854&quot; title=&quot;Memory leak when doing deploy/undeploy app using REST and JPA&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JBEAP-5854&quot;&gt;&lt;del&gt;JBEAP-5854&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="13305853" author="davidmaes" created="Wed, 12 Oct 2016 03:33:58 -0400"  >&lt;p&gt;Hello &lt;a href=&quot;https://issues.jboss.org/secure/ViewProfile.jspa?name=mkouba&quot; class=&quot;user-hover&quot; rel=&quot;mkouba&quot;&gt;Martin Kouba&lt;/a&gt;,&lt;/p&gt;

&lt;p&gt;Our development team is using wildfly 10.1.0 for the moment. &lt;br/&gt;
We are having the same issue described here. After multiple deploys/undeploys our server crashes with een OOM exception. The &quot;fix version&quot; field for this issue has not yet been set. But I&apos;m guessing it was fixed in the 10.1.0 release. The changelog of this release did not contain the bug.&lt;/p&gt;

&lt;p&gt;If this issue was resolved in the 10.1.0 release then I am guessing we are having another cause for the OOM. If so we will investigate and log an issue here.&lt;/p&gt;

&lt;p&gt; Greetings,&lt;/p&gt;

&lt;p&gt;David &lt;/p&gt;</comment>
                            <comment id="13305857" author="tremes" created="Wed, 12 Oct 2016 03:42:14 -0400"  >&lt;p&gt;Hi,&lt;br/&gt;
In 10.1.0.Final there is &lt;a href=&quot;https://issues.jboss.org/browse/WFLY-7037&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.jboss.org/browse/WFLY-7037&lt;/a&gt;. So maybe this could cause the problem.&lt;/p&gt;</comment>
                            <comment id="13305859" author="mkouba" created="Wed, 12 Oct 2016 03:44:11 -0400"  >&lt;p&gt;&lt;a href=&quot;https://issues.jboss.org/secure/ViewProfile.jspa?name=davidmaes&quot; class=&quot;user-hover&quot; rel=&quot;davidmaes&quot;&gt;David Maes&lt;/a&gt; The first problem with &lt;tt&gt;org.jboss.el.cache.BeanPropertiesCache&lt;/tt&gt; was fixed in 10.1.0 (see also &lt;a href=&quot;https://issues.jboss.org/browse/WFLY-6347&quot; title=&quot;org.jboss.el.cache.BeanPropertiesCache leaks memory in static void clear(ClassLoader classLoader)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;WFLY-6347&quot;&gt;&lt;del&gt;WFLY-6347&lt;/del&gt;&lt;/a&gt;). But the other issue with &lt;tt&gt;com.fasterxml.jackson.databind.util.ClassUtil#sCached&lt;/tt&gt; is fixed in 11.0.0.Alpha1 (see also &lt;a href=&quot;https://issues.jboss.org/browse/WFLY-7037&quot; title=&quot;Memory leak when doing deploy/undeploy app using REST and JPA&quot; class=&quot;issue-link&quot; data-issue-key=&quot;WFLY-7037&quot;&gt;&lt;del&gt;WFLY-7037&lt;/del&gt;&lt;/a&gt;). Neither of these issues is caused by CDI/Weld.&lt;/p&gt;</comment>
                            <comment id="13305870" author="davidmaes" created="Wed, 12 Oct 2016 04:03:08 -0400"  >&lt;p&gt;&lt;a href=&quot;https://issues.jboss.org/secure/ViewProfile.jspa?name=mkouba&quot; class=&quot;user-hover&quot; rel=&quot;mkouba&quot;&gt;Martin Kouba&lt;/a&gt; thank you for the quick reply.&lt;br/&gt;
Our memory issue will probably not be caused by the jackson problem. So I think we&apos;ll have to do some investigation on our own. &lt;/p&gt;</comment>
                            <comment id="13312730" author="davidmaes" created="Thu, 27 Oct 2016 02:24:03 -0400"  >&lt;p&gt;Hey &lt;a href=&quot;https://issues.jboss.org/secure/ViewProfile.jspa?name=mkouba&quot; class=&quot;user-hover&quot; rel=&quot;mkouba&quot;&gt;Martin Kouba&lt;/a&gt;,&lt;/p&gt;

&lt;p&gt;I have done some investigating and I have a question. I viewed the heap dump off the application. Specifically the class loaders. I included the image of 2 separate heap dumps. The second heap dump is after a redeploy. As you can see a ModuleClassLoader was added but none were removed. Is this normal behaviour or is something fishy going on there.&lt;/p&gt;

&lt;p&gt; &lt;span class=&quot;image-wrap&quot; style=&quot;&quot;&gt;&lt;a id=&quot;12411374_thumb&quot; href=&quot;https://issues.jboss.org/secure/attachment/12411374/12411374_Screen+Shot+2016-10-27+at+08.04.12.png&quot; title=&quot;Screen Shot 2016-10-27 at 08.04.12.png&quot; file-preview-type=&quot;image&quot; file-preview-id=&quot;12411374&quot; file-preview-title=&quot;Screen Shot 2016-10-27 at 08.04.12.png&quot;&gt;&lt;img src=&quot;https://issues.jboss.org/secure/thumbnail/12411374/_thumb_12411374.png&quot; style=&quot;border: 0px solid black&quot; /&gt;&lt;/a&gt;&lt;/span&gt;  &lt;span class=&quot;image-wrap&quot; style=&quot;&quot;&gt;&lt;a id=&quot;12411375_thumb&quot; href=&quot;https://issues.jboss.org/secure/attachment/12411375/12411375_Screen+Shot+2016-10-27+at+08.15.27.png&quot; title=&quot;Screen Shot 2016-10-27 at 08.15.27.png&quot; file-preview-type=&quot;image&quot; file-preview-id=&quot;12411375&quot; file-preview-title=&quot;Screen Shot 2016-10-27 at 08.15.27.png&quot;&gt;&lt;img src=&quot;https://issues.jboss.org/secure/thumbnail/12411375/_thumb_12411375.png&quot; style=&quot;border: 0px solid black&quot; /&gt;&lt;/a&gt;&lt;/span&gt; &lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310120">
                    <name>Cloners</name>
                                                                <inwardlinks description="cloned to">
                                        <issuelink>
            <issuekey id="12627543">JBEAP-4683</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="12310001">
                    <name>Related</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12609910">WFLY-6347</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12648572">WFLY-7037</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="12310221">
                    <name>Sequence</name>
                                                                <inwardlinks description="is followed up by">
                                        <issuelink>
            <issuekey id="12648262">JBEAP-5854</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10011">
                    <name>Superset</name>
                                                                <inwardlinks description="is incorporated by">
                                        <issuelink>
            <issuekey id="12627543">JBEAP-4683</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12411374" name="Screen Shot 2016-10-27 at 08.04.12.png" size="157421" author="davidmaes" created="Thu, 27 Oct 2016 02:23:50 -0400"/>
                            <attachment id="12411375" name="Screen Shot 2016-10-27 at 08.15.27.png" size="163755" author="davidmaes" created="Thu, 27 Oct 2016 02:24:12 -0400"/>
                            <attachment id="12397748" name="memory-leak.zip" size="12873" author="joeydaowang" created="Wed, 10 Feb 2016 22:34:50 -0500"/>
                            <attachment id="12409020" name="memory-leak_New.zip" size="106268" author="joeydaowang" created="Fri, 2 Sep 2016 00:42:01 -0400"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
customfield id="customfield_12310641" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Number of attachments</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310640" key="com.atlassian.jira.toolkit:comments">
                        <customfieldname>Number of comments</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>15.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311940" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1|i01evz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310840" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>