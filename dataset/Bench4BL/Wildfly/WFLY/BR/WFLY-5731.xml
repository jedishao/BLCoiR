<!-- 
RSS generated by JIRA (7.2.3#72005-sha1:73be91d2b96fc29303a7eb6820acf420e5d0ed65) at Tue Dec 06 13:49:14 EST 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.jboss.org/si/jira.issueviews:issue-xml/WFLY-5731/WFLY-5731.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>JBoss Issue Tracker</title>
    <link>https://issues.jboss.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>7.2.3</version>
        <build-number>72005</build-number>
        <build-date>06-10-2016</build-date>
    </build-info>

<item>
            <title>[WFLY-5731] PollSelectorImpl&apos;s FD leak for asyncServlet</title>
                <link>https://issues.jboss.org/browse/WFLY-5731</link>
                <project id="12313721" key="WFLY">WildFly</project>
                    <description>&lt;p&gt;AsyncServlet doGet() like this: &lt;/p&gt;

&lt;p&gt;    protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws     ServletException, IOException &lt;/p&gt;
{
		resp.setContentType(&quot;text/html;charset=UTF-8&quot;);
		AsyncContext ctx = req.startAsync();
		new Thread(new Executor(ctx)).start();
	}
&lt;p&gt;public class Executor implements Runnable {&lt;br/&gt;
		private AsyncContext ctx = null;&lt;/p&gt;

&lt;p&gt;		public Executor(AsyncContext ctx) &lt;/p&gt;
{
			this.ctx = ctx;
		}
&lt;p&gt;		public void run() {&lt;br/&gt;
			try &lt;/p&gt;
{
				char[] data = new char[1024 * 1024 * 1];
				PrintWriter out = ctx.getResponse().getWriter();
				out.write(data);
				out.flush();
				ctx.complete();
			}
&lt;p&gt; catch (Exception e) &lt;/p&gt;
{
				e.printStackTrace();
			}
&lt;p&gt;		}&lt;br/&gt;
do request this Servlet some times , run linux cmd :&lt;br/&gt;
lsof -p &lt;span class=&quot;error&quot;&gt;&amp;#91;JAVAPID&amp;#93;&lt;/span&gt;|grep pipe|wc -l&lt;br/&gt;
this number increases by two every one request,but never decrease! when this number up to OS&apos;s open file limit everything is not OK.&lt;/p&gt;</description>
                <environment>&lt;p&gt;OS:Red Hat Enterprise Linux Server release 5.5 (Tikanga) &lt;br/&gt;
MW:wildfly-8.1.0.Final&lt;br/&gt;
JDK:&lt;br/&gt;
java version &quot;1.7.0_25&quot;&lt;br/&gt;
Java(TM) SE Runtime Environment (build 1.7.0_25-b15)&lt;br/&gt;
Java HotSpot(TM) 64-Bit Server VM (build 23.25-b01, mixed mode)&lt;/p&gt;</environment>
        <key id="12594094">WFLY-5731</key>
            <summary>PollSelectorImpl&apos;s FD leak for asyncServlet</summary>
                <type id="1" iconUrl="https://issues.jboss.org/secure/viewavatar?size=xsmall&amp;avatarId=13263&amp;avatarType=issuetype">Bug</type>
                                            <priority id="2" iconUrl="https://issues.jboss.org/images/icons/priorities/critical.svg">Critical</priority>
                        <status id="5" iconUrl="https://issues.jboss.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Done</resolution>
                                        <assignee username="swd847">Stuart Douglas</assignee>
                                    <reporter username="chanlehero_sn">&#28009; &#38472;</reporter>
                        <labels>
                    </labels>
                <created>Wed, 25 Nov 2015 09:48:55 -0500</created>
                <updated>Mon, 7 Dec 2015 22:55:11 -0500</updated>
                            <resolved>Mon, 7 Dec 2015 22:55:11 -0500</resolved>
                                    <version>8.1.0.Final</version>
                                    <fixVersion>10.0.0.CR5</fixVersion>
                                    <component>Web (Undertow)</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="13133825" author="ctomc" created="Wed, 25 Nov 2015 09:49:45 -0500"  >&lt;p&gt;This should be fixed in WildFly 9,&lt;br/&gt;
can you test with 9, or even better with latest 10.0.CR4&lt;/p&gt;</comment>
                            <comment id="13134001" author="swd847" created="Wed, 25 Nov 2015 22:30:16 -0500"  >&lt;p&gt;Looks like a duplicate of &lt;a href=&quot;https://issues.jboss.org/browse/WFLY-4397&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.jboss.org/browse/WFLY-4397&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13134003" author="chanlehero_sn" created="Wed, 25 Nov 2015 22:45:14 -0500"  >&lt;p&gt;we have tried both wildfly9.0.2 and 10.0.CR4, it seems nothing changed. &lt;br/&gt;
I think This leak&apos;s reason maybe that:&lt;br/&gt;
When the thread writing this big data, output writer writes go beyond it&apos;s buffer size, then it creates a PollSelectorImpl and wait until  this buffer available. After response Data writes successfully, this thread will be GCed by JVM, PollSelectorImpl also be GCed.&lt;br/&gt;
 PollSelectorImpl have create two FD but Never close them.&lt;/p&gt;</comment>
                            <comment id="13134004" author="swd847" created="Wed, 25 Nov 2015 22:48:44 -0500"  >&lt;p&gt;Ah, this is because XNIO caches the poll selector in a ThreadLocal. If you use an ExecutorService or some other fixed thread pool you will not have the issue. It still should be GCed at some point though.&lt;/p&gt;</comment>
                            <comment id="13134005" author="swd847" created="Wed, 25 Nov 2015 22:53:01 -0500"  >&lt;p&gt;&lt;a href=&quot;https://issues.jboss.org/secure/ViewProfile.jspa?name=dmlloyd&quot; class=&quot;user-hover&quot; rel=&quot;dmlloyd&quot;&gt;David Lloyd&lt;/a&gt; it looks like PollSelectorImpl has no finalize(), so if blocking IO is done from a short lived thread the FD will leak.&lt;/p&gt;</comment>
                            <comment id="13134006" author="swd847" created="Wed, 25 Nov 2015 22:57:59 -0500"  >&lt;p&gt;This XNIO commit may fix the problem: &lt;a href=&quot;https://github.com/xnio/xnio/compare/3.x...stuartwdouglas:finalize?expand=1&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/xnio/xnio/compare/3.x...stuartwdouglas:finalize?expand=1&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Unfortunately if you create and destroy a lot of threads very quickly it may be that GC cannot keep up and you will run out of FD&apos;s anyway. You are much better off using some kind of thread pool, as it will perform much better anyway.&lt;/p&gt;</comment>
                            <comment id="13138121" author="swd847" created="Mon, 7 Dec 2015 22:55:11 -0500"  >&lt;p&gt;The update to XNIO 3.3.3.Final should have fixed this. &lt;/p&gt;

&lt;p&gt;Note that you can still run out if you create and destroy a lot of threads in a very short period of time, as the Garbage collector may not be able to keep up. In general you will get way better performance with a thread pool anyway.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12395352" name="DemoServlet.java" size="1761" author="chanlehero_sn" created="Wed, 25 Nov 2015 09:48:04 -0500"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
customfield id="customfield_12310641" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Number of attachments</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310640" key="com.atlassian.jira.toolkit:comments">
                        <customfieldname>Number of comments</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>7.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311940" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1|hzzwdj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310840" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_12310183" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Steps to Reproduce</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>
&lt;p&gt;Create a new thread in AsyncServlet then writer big data into response, Then request this servlet repeatedly,Then run linux cmd :&lt;br/&gt;
lsof -p &lt;span class=&quot;error&quot;&gt;&amp;#91;JAVAPID&amp;#93;&lt;/span&gt;|grep pipe|wc -l&lt;br/&gt;
you will see this number increasesd,but not never decrease&lt;/p&gt;</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            </customfields>
    </item>
</channel>
</rss>