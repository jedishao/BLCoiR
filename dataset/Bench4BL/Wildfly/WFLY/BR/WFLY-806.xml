<!-- 
RSS generated by JIRA (7.2.3#72005-sha1:73be91d2b96fc29303a7eb6820acf420e5d0ed65) at Tue Dec 06 15:56:29 EST 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.jboss.org/si/jira.issueviews:issue-xml/WFLY-806/WFLY-806.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>JBoss Issue Tracker</title>
    <link>https://issues.jboss.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>7.2.3</version>
        <build-number>72005</build-number>
        <build-date>06-10-2016</build-date>
    </build-info>

<item>
            <title>[WFLY-806] acceptor and poller threads not destroyed when reloading</title>
                <link>https://issues.jboss.org/browse/WFLY-806</link>
                <project id="12313721" key="WFLY">WildFly</project>
                    <description>&lt;p&gt;I&apos;m testing the reload operation. At some point the server becomes unresponsive. One of the reasons is&lt;/p&gt;

&lt;p&gt;14:39:17,452 INFO  &lt;span class=&quot;error&quot;&gt;&amp;#91;org.jboss.as&amp;#93;&lt;/span&gt; (Controller Boot Thread) JBAS015874: JBoss AS 8.0.0.Alpha1-SNAPSHOT &quot;TBD&quot; started in 240ms - Started 144 of 181 services (55 services are lazy, passive or on-demand)&lt;br/&gt;
14:39:17,452 ERROR &lt;span class=&quot;error&quot;&gt;&amp;#91;stderr&amp;#93;&lt;/span&gt; (Controller Boot Thread) Controller Boot Thread releasing lock on 565478949&lt;br/&gt;
14:39:17,713 ERROR &lt;span class=&quot;error&quot;&gt;&amp;#91;org.xnio.listener&amp;#93;&lt;/span&gt; (Remoting &quot;fedorka:MANAGEMENT&quot; read-1) A channel event listener threw an exception: java.lang.OutOfMemoryError: unable to create new native thread&lt;br/&gt;
	at java.lang.Thread.start0(Native Method) &lt;span class=&quot;error&quot;&gt;&amp;#91;rt.jar:1.7.0_13&amp;#93;&lt;/span&gt;&lt;br/&gt;
	at java.lang.Thread.start(Thread.java:691) &lt;span class=&quot;error&quot;&gt;&amp;#91;rt.jar:1.7.0_13&amp;#93;&lt;/span&gt;&lt;br/&gt;
	at java.util.concurrent.ThreadPoolExecutor.addWorker(ThreadPoolExecutor.java:949) &lt;span class=&quot;error&quot;&gt;&amp;#91;rt.jar:1.7.0_13&amp;#93;&lt;/span&gt;&lt;br/&gt;
	at java.util.concurrent.ThreadPoolExecutor.execute(ThreadPoolExecutor.java:1360) &lt;span class=&quot;error&quot;&gt;&amp;#91;rt.jar:1.7.0_13&amp;#93;&lt;/span&gt;&lt;br/&gt;
	at org.xnio.XnioWorker.execute(XnioWorker.java:724) &lt;span class=&quot;error&quot;&gt;&amp;#91;xnio-api-3.1.0.Beta9.jar:3.1.0.Beta9&amp;#93;&lt;/span&gt;&lt;br/&gt;
	at org.jboss.remoting3.remote.RemoteReadListener.handleEvent(RemoteReadListener.java:218) &lt;span class=&quot;error&quot;&gt;&amp;#91;jboss-remoting-3.2.15.GA.jar:3.2.15.GA&amp;#93;&lt;/span&gt;&lt;br/&gt;
	at org.jboss.remoting3.remote.RemoteReadListener.handleEvent(RemoteReadListener.java:45) &lt;span class=&quot;error&quot;&gt;&amp;#91;jboss-remoting-3.2.15.GA.jar:3.2.15.GA&amp;#93;&lt;/span&gt;&lt;br/&gt;
	at org.xnio.ChannelListeners.invokeChannelListener(ChannelListeners.java:91) &lt;span class=&quot;error&quot;&gt;&amp;#91;xnio-api-3.1.0.Beta9.jar:3.1.0.Beta9&amp;#93;&lt;/span&gt;&lt;br/&gt;
	at org.xnio.channels.TranslatingSuspendableChannel.handleReadable(TranslatingSuspendableChannel.java:195) &lt;span class=&quot;error&quot;&gt;&amp;#91;xnio-api-3.1.0.Beta9.jar:3.1.0.Beta9&amp;#93;&lt;/span&gt;&lt;br/&gt;
	at org.xnio.channels.TranslatingSuspendableChannel$1.handleEvent(TranslatingSuspendableChannel.java:109) &lt;span class=&quot;error&quot;&gt;&amp;#91;xnio-api-3.1.0.Beta9.jar:3.1.0.Beta9&amp;#93;&lt;/span&gt;&lt;br/&gt;
	at org.xnio.ChannelListeners.invokeChannelListener(ChannelListeners.java:91) &lt;span class=&quot;error&quot;&gt;&amp;#91;xnio-api-3.1.0.Beta9.jar:3.1.0.Beta9&amp;#93;&lt;/span&gt;&lt;br/&gt;
	at org.xnio.ChannelListeners$DelegatingChannelListener.handleEvent(ChannelListeners.java:1052) &lt;span class=&quot;error&quot;&gt;&amp;#91;xnio-api-3.1.0.Beta9.jar:3.1.0.Beta9&amp;#93;&lt;/span&gt;&lt;br/&gt;
	at org.xnio.ChannelListeners.invokeChannelListener(ChannelListeners.java:91) &lt;span class=&quot;error&quot;&gt;&amp;#91;xnio-api-3.1.0.Beta9.jar:3.1.0.Beta9&amp;#93;&lt;/span&gt;&lt;br/&gt;
	at org.xnio.conduits.ReadReadyHandler$ChannelListenerHandler.readReady(ReadReadyHandler.java:61) &lt;span class=&quot;error&quot;&gt;&amp;#91;xnio-api-3.1.0.Beta9.jar:3.1.0.Beta9&amp;#93;&lt;/span&gt;&lt;br/&gt;
	at org.xnio.nio.NioSocketConduit.handleReady(NioSocketConduit.java:85)&lt;br/&gt;
	at org.xnio.nio.WorkerThread.run(WorkerThread.java:518)&lt;/p&gt;

&lt;p&gt;And if look at the thread dump of the server process, I see lots of acceptor and poller threads. See the attached thread dump.&lt;/p&gt;</description>
                <environment>&lt;p&gt;Fedora 18&lt;br/&gt;
java version &quot;1.7.0_13&quot;&lt;br/&gt;
Java(TM) SE Runtime Environment (build 1.7.0_13-b20)&lt;br/&gt;
Java HotSpot(TM) 64-Bit Server VM (build 23.7-b01, mixed mode)&lt;/p&gt;</environment>
        <key id="12488062">WFLY-806</key>
            <summary>acceptor and poller threads not destroyed when reloading</summary>
                <type id="1" iconUrl="https://issues.jboss.org/secure/viewavatar?size=xsmall&amp;avatarId=13263&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.jboss.org/images/icons/priorities/major.svg">Major</priority>
                        <status id="5" iconUrl="https://issues.jboss.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Done</resolution>
                                        <assignee username="rmaucher">Remy Maucherat</assignee>
                                    <reporter username="aloubyansky">Alexey Loubyansky</reporter>
                        <labels>
                    </labels>
                <created>Tue, 26 Mar 2013 11:20:47 -0400</created>
                <updated>Thu, 4 Sep 2014 09:51:59 -0400</updated>
                            <resolved>Mon, 10 Feb 2014 09:21:08 -0500</resolved>
                                                    <fixVersion>8.0.0.Final</fixVersion>
                                    <component>Remoting</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>9</watches>
                                                                <comments>
                            <comment id="12763252" author="dmlloyd" created="Tue, 26 Mar 2013 11:51:00 -0400"  >&lt;p&gt;Sorry, my mistake.&lt;/p&gt;</comment>
                            <comment id="12763253" author="jfclere" created="Tue, 26 Mar 2013 11:58:50 -0400"  >&lt;p&gt;it seems there are too many http-/127.0.0.1:8080-* threads in the thread-dump&lt;/p&gt;</comment>
                            <comment id="12763263" author="rmaucher" created="Tue, 26 Mar 2013 12:17:44 -0400"  >&lt;p&gt;&quot;Reload operation&quot; means stopping and starting repeatedly the web subsystem ?&lt;/p&gt;</comment>
                            <comment id="12763267" author="jfclere" created="Tue, 26 Mar 2013 12:23:13 -0400"  >&lt;p&gt;it reloads the whole AS. That is the command :reload when using bin/jboss-cli.sh&lt;/p&gt;</comment>
                            <comment id="12763268" author="aloubyansky" created="Tue, 26 Mar 2013 12:23:28 -0400"  >&lt;p&gt;The whole server. Standalone in this case.&lt;/p&gt;

&lt;p&gt;Actually, I used the reload cli command, which does the following:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;send the :reload operation request to the controller;&lt;/li&gt;
	&lt;li&gt;wait for the current connection to the controller to close (as part of the server shutdown);&lt;/li&gt;
	&lt;li&gt;establish a new connection to the reloaded server;&lt;/li&gt;
	&lt;li&gt;return control to the client.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;And the client would execute the reload command again, over and over.&lt;/p&gt;</comment>
                            <comment id="12763272" author="aloubyansky" created="Tue, 26 Mar 2013 12:46:10 -0400"  >&lt;p&gt;It looks like the issue affects not only the Web but the jacorb-based component.&lt;/p&gt;

&lt;p&gt;&quot;AOMRemoval&quot; daemon prio=10 tid=0x00007f44c4268800 nid=0x44c7 waiting on condition &lt;span class=&quot;error&quot;&gt;&amp;#91;0x00007f446b4b5000&amp;#93;&lt;/span&gt;&lt;br/&gt;
   java.lang.Thread.State: WAITING (parking)&lt;br/&gt;
        at sun.misc.Unsafe.park(Native Method)&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;parking to wait for  &amp;lt;0x00000000fca5d7b0&amp;gt; (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)&lt;br/&gt;
        at java.util.concurrent.locks.LockSupport.park(LockSupport.java:186)&lt;br/&gt;
        at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2043)&lt;br/&gt;
        at java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:442)&lt;br/&gt;
        at org.jacorb.poa.AOM$1.run(AOM.java:120)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;At the thread dump I&apos;m looking now, which is not the one attached, there are 255 AOMRemoval threads and a bit less but still more than 200 Web threads.&lt;/p&gt;</comment>
                            <comment id="12763286" author="rmaucher" created="Tue, 26 Mar 2013 13:53:29 -0400"  >&lt;p&gt;Ok, even if you keep all the service instances around (like, here, WebConnectorService), I don&apos;t know why it causes problems since its start method creates a new connector instance (and stop drops it).&lt;/p&gt;</comment>
                            <comment id="12790690" author="zittermann" created="Thu, 18 Jul 2013 08:24:52 -0400"  >&lt;p&gt;We had an similar issue with an application which is using corba in AS7. AOMRemoval threads where not tidied up after desroying the POA. This was causing an java.lang.OutOfMemoryError. I created a patch and sent a pull request to JacORB-Team.&lt;/p&gt;</comment>
                            <comment id="12943029" author="ctomc" created="Mon, 10 Feb 2014 09:21:08 -0500"  >&lt;p&gt;This should be fixed or at least it should behave differently given that now XNIO workers are configured in one place (IO subsystem) and other subsystems just use it.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12361566" name="server_thread_dump.txt" size="240001" author="aloubyansky" created="Tue, 26 Mar 2013 11:23:59 -0400"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
customfield id="customfield_12310641" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Number of attachments</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310640" key="com.atlassian.jira.toolkit:comments">
                        <customfieldname>Number of comments</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311940" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1|hzgazb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310840" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>155567</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>