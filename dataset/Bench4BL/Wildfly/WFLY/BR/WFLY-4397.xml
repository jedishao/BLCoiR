<!-- 
RSS generated by JIRA (7.2.3#72005-sha1:73be91d2b96fc29303a7eb6820acf420e5d0ed65) at Tue Dec 06 12:17:19 EST 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.jboss.org/si/jira.issueviews:issue-xml/WFLY-4397/WFLY-4397.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>JBoss Issue Tracker</title>
    <link>https://issues.jboss.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>7.2.3</version>
        <build-number>72005</build-number>
        <build-date>06-10-2016</build-date>
    </build-info>

<item>
            <title>[WFLY-4397] WildFly.8.1.0.Final&apos;s Asynchronous servlets cause connection leak</title>
                <link>https://issues.jboss.org/browse/WFLY-4397</link>
                <project id="12313721" key="WFLY">WildFly</project>
                    <description>&lt;p&gt;Recently, I used Asynchronous servlets and AsyncListeners on my project.But when it runs on WildFly.8.1.0.Final,a problem appeared as following:&lt;/p&gt;

&lt;p&gt;2015-01-10 10:08:40,936 ERROR &lt;span class=&quot;error&quot;&gt;&amp;#91;org.jboss.as.server.deployment.scanner&amp;#93;&lt;/span&gt; (DeploymentScanner-threads - 2) JBAS015004: Caught exception writing deployment marker file /opt/jboss/standalone/deployments/OpenESBHttp_full_prd.war.isundeploying: java.io.FileNotFoundException: /opt/jboss/standalone/deployments/OpenESBHttp_full_prd.war.isundeploying (Too many open files)  &lt;br/&gt;
at java.io.FileOutputStream.open(Native Method) &lt;span class=&quot;error&quot;&gt;&amp;#91;rt.jar:1.7.0_25&amp;#93;&lt;/span&gt;  &lt;br/&gt;
at java.io.FileOutputStream.&amp;lt;init&amp;gt;(FileOutputStream.java:212) &lt;span class=&quot;error&quot;&gt;&amp;#91;rt.jar:1.7.0_25&amp;#93;&lt;/span&gt;  &lt;br/&gt;
at java.io.FileOutputStream.&amp;lt;init&amp;gt;(FileOutputStream.java:165) &lt;span class=&quot;error&quot;&gt;&amp;#91;rt.jar:1.7.0_25&amp;#93;&lt;/span&gt;  &lt;br/&gt;
at org.jboss.as.server.deployment.scanner.FileSystemDeploymentService.createMarkerFile(FileSystemDeploymentService.java:984) &lt;span class=&quot;error&quot;&gt;&amp;#91;wildfly-deployment-scanner-8.1.0.Final.jar:8.1.0.Final&amp;#93;&lt;/span&gt;  &lt;br/&gt;
at org.jboss.as.server.deployment.scanner.FileSystemDeploymentService.access$2800(FileSystemDeploymentService.java:83) &lt;span class=&quot;error&quot;&gt;&amp;#91;wildfly-deployment-scanner-8.1.0.Final.jar:8.1.0.Final&amp;#93;&lt;/span&gt;  &lt;br/&gt;
at org.jboss.as.server.deployment.scanner.FileSystemDeploymentService$ScannerTask.recordInProgress(FileSystemDeploymentService.java:1044) &lt;span class=&quot;error&quot;&gt;&amp;#91;wildfly-deployment-scanner-8.1.0.Final.jar:8.1.0.Final&amp;#93;&lt;/span&gt;  &lt;br/&gt;
at org.jboss.as.server.deployment.scanner.FileSystemDeploymentService.scan(FileSystemDeploymentService.java:431) &lt;span class=&quot;error&quot;&gt;&amp;#91;wildfly-deployment-scanner-8.1.0.Final.jar:8.1.0.Final&amp;#93;&lt;/span&gt;  &lt;br/&gt;
at org.jboss.as.server.deployment.scanner.FileSystemDeploymentService$DeploymentScanRunnable.run(FileSystemDeploymentService.java:147) &lt;span class=&quot;error&quot;&gt;&amp;#91;wildfly-deployment-scanner-8.1.0.Final.jar:8.1.0.Final&amp;#93;&lt;/span&gt;  &lt;br/&gt;
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471) &lt;span class=&quot;error&quot;&gt;&amp;#91;rt.jar:1.7.0_25&amp;#93;&lt;/span&gt;  &lt;br/&gt;
at java.util.concurrent.FutureTask$Sync.innerRunAndReset(FutureTask.java:351) &lt;span class=&quot;error&quot;&gt;&amp;#91;rt.jar:1.7.0_25&amp;#93;&lt;/span&gt;  &lt;br/&gt;
at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:178) &lt;span class=&quot;error&quot;&gt;&amp;#91;rt.jar:1.7.0_25&amp;#93;&lt;/span&gt;  &lt;br/&gt;
at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:178) &lt;span class=&quot;error&quot;&gt;&amp;#91;rt.jar:1.7.0_25&amp;#93;&lt;/span&gt;  &lt;br/&gt;
at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) &lt;span class=&quot;error&quot;&gt;&amp;#91;rt.jar:1.7.0_25&amp;#93;&lt;/span&gt;  &lt;br/&gt;
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145) &lt;span class=&quot;error&quot;&gt;&amp;#91;rt.jar:1.7.0_25&amp;#93;&lt;/span&gt;  &lt;br/&gt;
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615) &lt;span class=&quot;error&quot;&gt;&amp;#91;rt.jar:1.7.0_25&amp;#93;&lt;/span&gt;  &lt;br/&gt;
at java.lang.Thread.run(Thread.java:724) &lt;span class=&quot;error&quot;&gt;&amp;#91;rt.jar:1.7.0_25&amp;#93;&lt;/span&gt;  &lt;br/&gt;
at org.jboss.threads.JBossThread.run(JBossThread.java:122) &lt;span class=&quot;error&quot;&gt;&amp;#91;jboss-threads-2.1.1.Final.jar:2.1.1.Final&amp;#93;&lt;/span&gt;  &lt;/p&gt;

&lt;p&gt;2015-01-10 10:08:41,329 INFO &lt;span class=&quot;error&quot;&gt;&amp;#91;org.wildfly.extension.undertow&amp;#93;&lt;/span&gt; (MSC service thread 1-5) JBAS017535: Unregistered web context: /ServiceWeb  &lt;br/&gt;
2015-01-10 10:08:41,481 INFO &lt;span class=&quot;error&quot;&gt;&amp;#91;net.sf.json.xml.XMLSerializer&amp;#93;&lt;/span&gt; (HttpServiceHandler-50543) Using default type string  &lt;br/&gt;
2015-01-10 10:08:42,225 INFO &lt;span class=&quot;error&quot;&gt;&amp;#91;org.hibernate.validator.internal.util.Version&amp;#93;&lt;/span&gt; (MSC service thread 1-3)   &lt;br/&gt;
2015-01-10 10:08:43,504 INFO &lt;span class=&quot;error&quot;&gt;&amp;#91;org.jboss.as.server.deployment&amp;#93;&lt;/span&gt; (MSC service thread 1-3) JBAS015877: Stopped deployment OpenESBHttp_full_prd.war (runtime-name: OpenESBHttp_full_prd.war) in 2373ms  &lt;/p&gt;

&lt;p&gt;From this server log,we can see that there is &quot;Too open many files&quot; problem.and on the WildFly&#8216;s manager console,we can see that my project was undeployed.When i used command &quot;lsof -p pid | wc -l&quot; to find the count of open file-hander, 50000 open file,because there were a lot of &quot;can&apos;t identify protocol&quot; as following:&lt;br/&gt;
java 25625 jbossuser 460u sock 0,6 0t0 62184686 can&apos;t identify protocol  &lt;br/&gt;
java 25625 jbossuser 461u sock 0,6 0t0 62170175 can&apos;t identify protocol  &lt;br/&gt;
java 25625 jbossuser 462u sock 0,6 0t0 62159509 can&apos;t identify protocol  &lt;br/&gt;
java 25625 jbossuser 463u sock 0,6 0t0 62193366 can&apos;t identify protocol  &lt;br/&gt;
java 25625 jbossuser 464u sock 0,6 0t0 62181816 can&apos;t identify protocol  &lt;br/&gt;
java 25625 jbossuser 465u sock 0,6 0t0 62159028 can&apos;t identify protocol  &lt;br/&gt;
java 25625 jbossuser 466u sock 0,6 0t0 62181150 can&apos;t identify protocol  &lt;br/&gt;
java 25625 jbossuser 467u sock 0,6 0t0 62165298 can&apos;t identify protocol  &lt;br/&gt;
java 25625 jbossuser 468u sock 0,6 0t0 62181859 can&apos;t identify protocol  &lt;br/&gt;
java 25625 jbossuser 469u sock 0,6 0t0 62155350 can&apos;t identify protocol  &lt;br/&gt;
java 25625 jbossuser 470u sock 0,6 0t0 62184687 can&apos;t identify protocol  &lt;br/&gt;
java 25625 jbossuser 471u sock 0,6 0t0 62150063 can&apos;t identify protocol  &lt;br/&gt;
java 25625 jbossuser 472u IPv4 70228479 0t0 TCP lesbprdapp16:webcache-&amp;gt;192.168.53.177:23420 (ESTABLISHED)  &lt;/p&gt;

&lt;p&gt;So i know there maybe occur connection leak on WildFly, and i made a test as follow:&lt;br/&gt;
I use apache&apos;s jmeter to test this project,i use 50 users to request it,then use &quot;lsof -p pid | can&apos;t identify protocol | wc -l&quot; to find is there have &#8220;can&apos;t identify protocol&#8221;,the number is 0.But when i stop the request,there appeared lots of &quot;can&apos;t identify protocol&quot;,the same phenomenon appeared on wildfly-9.0.0.Alpha1 and wildfly-8.2.0.Final but not appeared on tomcat.So i&apos;m doubt that this is wildfly&apos;s bug,Is there anyony encounter this problem and tell me how to solve it.&lt;/p&gt;

&lt;p&gt;Moreover, i found a issue is like above problem:&lt;br/&gt;
&lt;a href=&quot;https://issues.jboss.org/browse/WFLY-3652&quot; title=&quot;Network connection leak&quot; class=&quot;issue-link&quot; data-issue-key=&quot;WFLY-3652&quot;&gt;&lt;del&gt;WFLY-3652&lt;/del&gt;&lt;/a&gt; Network connection leak - JBoss Issue Tracker&lt;/p&gt;

&lt;p&gt;but don&apos;t think they are the same probem,because it say the problem alrendy was fixed in wildfly-9.0.0.Alpha1,but above problem wasn&apos;t fixed when i test my project on wildfly-9.0.0.Alpha1.&lt;/p&gt;

&lt;p&gt;Who can help me solve this problem? thanks!&lt;/p&gt;</description>
                <environment>&lt;p&gt;Java(TM) SE Runtime Environment (build 1.7.0_25)&lt;/p&gt;</environment>
        <key id="12564584">WFLY-4397</key>
            <summary>WildFly.8.1.0.Final&apos;s Asynchronous servlets cause connection leak</summary>
                <type id="1" iconUrl="https://issues.jboss.org/secure/viewavatar?size=xsmall&amp;avatarId=13263&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.jboss.org/images/icons/priorities/major.svg">Major</priority>
                        <status id="6" iconUrl="https://issues.jboss.org/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="3">Duplicate Issue</resolution>
                                        <assignee username="swd847">Stuart Douglas</assignee>
                                    <reporter username="hai_feng">Wind Wild</reporter>
                        <labels>
                    </labels>
                <created>Mon, 2 Mar 2015 06:43:15 -0500</created>
                <updated>Mon, 9 Mar 2015 08:05:55 -0400</updated>
                            <resolved>Mon, 9 Mar 2015 08:05:55 -0400</resolved>
                                    <version>8.1.0.Final</version>
                    <version>8.2.0.Final</version>
                    <version>9.0.0.Alpha1</version>
                                                    <component>Web (Undertow)</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                <comments>
                            <comment id="13045159" author="ctomc" created="Mon, 2 Mar 2015 06:44:54 -0500"  >&lt;p&gt;can you reproduce it in wildfly 8.2?&lt;/p&gt;</comment>
                            <comment id="13045160" author="hai_feng" created="Mon, 2 Mar 2015 06:45:10 -0500"  >&lt;p&gt;My test project as following:&lt;/p&gt;


&lt;p&gt;import java.io.IOException;&lt;br/&gt;
import java.io.PrintWriter;&lt;br/&gt;
import java.util.Date;&lt;br/&gt;
import javax.servlet.AsyncContext;&lt;br/&gt;
import javax.servlet.AsyncEvent;&lt;br/&gt;
import javax.servlet.AsyncListener;&lt;br/&gt;
import javax.servlet.ServletException;&lt;br/&gt;
import javax.servlet.annotation.WebServlet;&lt;br/&gt;
import javax.servlet.http.HttpServlet;&lt;br/&gt;
import javax.servlet.http.HttpServletRequest;&lt;br/&gt;
import javax.servlet.http.HttpServletResponse;&lt;/p&gt;

&lt;p&gt;@WebServlet(urlPatterns=&quot;/asyncDemoServlet&quot;,asyncSupported=true)&lt;br/&gt;
public class AsyncDemoServlet extends HttpServlet {&lt;br/&gt;
	private static final long serialVersionUID = 1L;&lt;br/&gt;
	@Override&lt;br/&gt;
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {&lt;br/&gt;
		response.setContentType(&quot;text/html;charset=UTF-8&quot;);&lt;br/&gt;
        PrintWriter out = response.getWriter();&lt;br/&gt;
        out.println(&quot;Servlet start&#65306;&quot; + new Date() + &quot;.&quot;);&lt;br/&gt;
        out.flush();&lt;/p&gt;


&lt;p&gt;        AsyncContext ctx = request.startAsync();&lt;br/&gt;
        new Thread(new Executor(ctx)).start();&lt;/p&gt;

&lt;p&gt;        out.println(&quot;Servlet end&#65306;&quot; + new Date() + &quot;.&quot;);&lt;br/&gt;
        ctx.addListener(new AsyncListener() {			&lt;br/&gt;
			@Override&lt;br/&gt;
			public void onComplete(AsyncEvent event) throws IOException &lt;/p&gt;
{
				System.out.println(&quot;request end&#65306;&quot;+new Date());
				
			}

&lt;p&gt;			@Override&lt;br/&gt;
			public void onError(AsyncEvent arg0) throws IOException &lt;/p&gt;
{
				// TODO Auto-generated method stub
				
			}&lt;br/&gt;
&lt;br/&gt;
			@Override&lt;br/&gt;
			public void onStartAsync(AsyncEvent arg0) throws IOException {
				// TODO Auto-generated method stub
				
			}

&lt;p&gt;			@Override&lt;br/&gt;
			public void onTimeout(AsyncEvent arg0) throws IOException &lt;/p&gt;
{
				// TODO Auto-generated method stub
				
			}
&lt;p&gt;		});&lt;br/&gt;
        out.flush();&lt;/p&gt;

&lt;p&gt;	}&lt;br/&gt;
	@Override&lt;br/&gt;
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &lt;/p&gt;
{
		doGet(request, response);
	}
&lt;p&gt;	public class Executor implements Runnable {&lt;br/&gt;
	    private AsyncContext ctx = null;&lt;br/&gt;
	    public Executor(AsyncContext ctx)&lt;/p&gt;
{
	        this.ctx = ctx;
	    }

&lt;p&gt;	    public void run(){&lt;br/&gt;
	        try &lt;/p&gt;
{
	            
	            Thread.sleep(10000);
	            PrintWriter out = ctx.getResponse().getWriter();
	            out.println(&quot;async end&#65306;&quot; + new Date() + &quot;.&quot;);
	            out.flush();
	            ctx.complete();
	        }
&lt;p&gt; catch (Exception e) &lt;/p&gt;
{
	            e.printStackTrace();
	        }
&lt;p&gt;	    }&lt;br/&gt;
	}&lt;br/&gt;
}&lt;/p&gt;</comment>
                            <comment id="13045163" author="hai_feng" created="Mon, 2 Mar 2015 06:49:35 -0500"  >&lt;p&gt;Hi,Tomaz Cerar &lt;br/&gt;
I test it on wildfly.8.2,the same problem.&lt;/p&gt;</comment>
                            <comment id="13046000" author="swd847" created="Wed, 4 Mar 2015 00:50:10 -0500"  >&lt;p&gt;I just tried this out and can&apos;t reproduce it. Can you share the jmeter script you are using?&lt;/p&gt;</comment>
                            <comment id="13047337" author="hai_feng" created="Mon, 9 Mar 2015 07:32:07 -0400"  >&lt;p&gt;Hi,Stuart Douglas&lt;br/&gt;
Thanks for your reply firstly.&lt;br/&gt;
My  jmeter script as following:&lt;/p&gt;


&lt;p&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;&lt;br/&gt;
&amp;lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.6&quot; jmeter=&quot;2.11 r1554548&quot;&amp;gt;&lt;br/&gt;
  &amp;lt;hashTree&amp;gt;&lt;br/&gt;
    &amp;lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&amp;gt;&lt;br/&gt;
      &amp;lt;stringProp name=&quot;TestPlan.comments&quot;&amp;gt;&amp;lt;/stringProp&amp;gt;&lt;br/&gt;
      &amp;lt;boolProp name=&quot;TestPlan.functional_mode&quot;&amp;gt;false&amp;lt;/boolProp&amp;gt;&lt;br/&gt;
      &amp;lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&amp;gt;false&amp;lt;/boolProp&amp;gt;&lt;br/&gt;
      &amp;lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&amp;gt;&lt;br/&gt;
        &amp;lt;collectionProp name=&quot;Arguments.arguments&quot;/&amp;gt;&lt;br/&gt;
      &amp;lt;/elementProp&amp;gt;&lt;br/&gt;
      &amp;lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&amp;gt;&amp;lt;/stringProp&amp;gt;&lt;br/&gt;
    &amp;lt;/TestPlan&amp;gt;&lt;br/&gt;
    &amp;lt;hashTree&amp;gt;&lt;br/&gt;
      &amp;lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&amp;gt;&lt;br/&gt;
        &amp;lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&amp;gt;continue&amp;lt;/stringProp&amp;gt;&lt;br/&gt;
        &amp;lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&amp;gt;&lt;br/&gt;
          &amp;lt;boolProp name=&quot;LoopController.continue_forever&quot;&amp;gt;false&amp;lt;/boolProp&amp;gt;&lt;br/&gt;
          &amp;lt;intProp name=&quot;LoopController.loops&quot;&amp;gt;-1&amp;lt;/intProp&amp;gt;&lt;br/&gt;
        &amp;lt;/elementProp&amp;gt;&lt;br/&gt;
        &amp;lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&amp;gt;50&amp;lt;/stringProp&amp;gt;&lt;br/&gt;
        &amp;lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&amp;gt;&amp;lt;/stringProp&amp;gt;&lt;br/&gt;
        &amp;lt;longProp name=&quot;ThreadGroup.start_time&quot;&amp;gt;1425010031000&amp;lt;/longProp&amp;gt;&lt;br/&gt;
        &amp;lt;longProp name=&quot;ThreadGroup.end_time&quot;&amp;gt;1425010031000&amp;lt;/longProp&amp;gt;&lt;br/&gt;
        &amp;lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&amp;gt;false&amp;lt;/boolProp&amp;gt;&lt;br/&gt;
        &amp;lt;stringProp name=&quot;ThreadGroup.duration&quot;&amp;gt;&amp;lt;/stringProp&amp;gt;&lt;br/&gt;
        &amp;lt;stringProp name=&quot;ThreadGroup.delay&quot;&amp;gt;&amp;lt;/stringProp&amp;gt;&lt;br/&gt;
      &amp;lt;/ThreadGroup&amp;gt;&lt;br/&gt;
      &amp;lt;hashTree&amp;gt;&lt;br/&gt;
        &amp;lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&amp;gt;&lt;br/&gt;
          &amp;lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot; guiclass=&quot;HTTPArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&amp;gt;&lt;br/&gt;
            &amp;lt;collectionProp name=&quot;Arguments.arguments&quot;/&amp;gt;&lt;br/&gt;
          &amp;lt;/elementProp&amp;gt;&lt;br/&gt;
          &amp;lt;stringProp name=&quot;HTTPSampler.domain&quot;&amp;gt;10.19.220.172&amp;lt;/stringProp&amp;gt;&lt;br/&gt;
          &amp;lt;stringProp name=&quot;HTTPSampler.port&quot;&amp;gt;8080&amp;lt;/stringProp&amp;gt;&lt;br/&gt;
          &amp;lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&amp;gt;&amp;lt;/stringProp&amp;gt;&lt;br/&gt;
          &amp;lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&amp;gt;&amp;lt;/stringProp&amp;gt;&lt;br/&gt;
          &amp;lt;stringProp name=&quot;HTTPSampler.protocol&quot;&amp;gt;&amp;lt;/stringProp&amp;gt;&lt;br/&gt;
          &amp;lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&amp;gt;&amp;lt;/stringProp&amp;gt;&lt;br/&gt;
          &amp;lt;stringProp name=&quot;HTTPSampler.path&quot;&amp;gt;/payload/asyncDemoServlet&amp;lt;/stringProp&amp;gt;&lt;br/&gt;
          &amp;lt;stringProp name=&quot;HTTPSampler.method&quot;&amp;gt;GET&amp;lt;/stringProp&amp;gt;&lt;br/&gt;
          &amp;lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&amp;gt;true&amp;lt;/boolProp&amp;gt;&lt;br/&gt;
          &amp;lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&amp;gt;false&amp;lt;/boolProp&amp;gt;&lt;br/&gt;
          &amp;lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&amp;gt;true&amp;lt;/boolProp&amp;gt;&lt;br/&gt;
          &amp;lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&amp;gt;false&amp;lt;/boolProp&amp;gt;&lt;br/&gt;
          &amp;lt;boolProp name=&quot;HTTPSampler.monitor&quot;&amp;gt;false&amp;lt;/boolProp&amp;gt;&lt;br/&gt;
          &amp;lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&amp;gt;&amp;lt;/stringProp&amp;gt;&lt;br/&gt;
        &amp;lt;/HTTPSamplerProxy&amp;gt;&lt;br/&gt;
        &amp;lt;hashTree/&amp;gt;&lt;br/&gt;
        &amp;lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;true&quot;&amp;gt;&lt;br/&gt;
          &amp;lt;boolProp name=&quot;ResultCollector.error_logging&quot;&amp;gt;false&amp;lt;/boolProp&amp;gt;&lt;br/&gt;
          &amp;lt;objProp&amp;gt;&lt;br/&gt;
            &amp;lt;name&amp;gt;saveConfig&amp;lt;/name&amp;gt;&lt;br/&gt;
            &amp;lt;value class=&quot;SampleSaveConfiguration&quot;&amp;gt;&lt;br/&gt;
              &amp;lt;time&amp;gt;true&amp;lt;/time&amp;gt;&lt;br/&gt;
              &amp;lt;latency&amp;gt;true&amp;lt;/latency&amp;gt;&lt;br/&gt;
              &amp;lt;timestamp&amp;gt;true&amp;lt;/timestamp&amp;gt;&lt;br/&gt;
              &amp;lt;success&amp;gt;true&amp;lt;/success&amp;gt;&lt;br/&gt;
              &amp;lt;label&amp;gt;true&amp;lt;/label&amp;gt;&lt;br/&gt;
              &amp;lt;code&amp;gt;true&amp;lt;/code&amp;gt;&lt;br/&gt;
              &amp;lt;message&amp;gt;true&amp;lt;/message&amp;gt;&lt;br/&gt;
              &amp;lt;threadName&amp;gt;true&amp;lt;/threadName&amp;gt;&lt;br/&gt;
              &amp;lt;dataType&amp;gt;true&amp;lt;/dataType&amp;gt;&lt;br/&gt;
              &amp;lt;encoding&amp;gt;false&amp;lt;/encoding&amp;gt;&lt;br/&gt;
              &amp;lt;assertions&amp;gt;true&amp;lt;/assertions&amp;gt;&lt;br/&gt;
              &amp;lt;subresults&amp;gt;true&amp;lt;/subresults&amp;gt;&lt;br/&gt;
              &amp;lt;responseData&amp;gt;false&amp;lt;/responseData&amp;gt;&lt;br/&gt;
              &amp;lt;samplerData&amp;gt;false&amp;lt;/samplerData&amp;gt;&lt;br/&gt;
              &amp;lt;xml&amp;gt;false&amp;lt;/xml&amp;gt;&lt;br/&gt;
              &amp;lt;fieldNames&amp;gt;false&amp;lt;/fieldNames&amp;gt;&lt;br/&gt;
              &amp;lt;responseHeaders&amp;gt;false&amp;lt;/responseHeaders&amp;gt;&lt;br/&gt;
              &amp;lt;requestHeaders&amp;gt;false&amp;lt;/requestHeaders&amp;gt;&lt;br/&gt;
              &amp;lt;responseDataOnError&amp;gt;false&amp;lt;/responseDataOnError&amp;gt;&lt;br/&gt;
              &amp;lt;saveAssertionResultsFailureMessage&amp;gt;false&amp;lt;/saveAssertionResultsFailureMessage&amp;gt;&lt;br/&gt;
              &amp;lt;assertionsResultsToSave&amp;gt;0&amp;lt;/assertionsResultsToSave&amp;gt;&lt;br/&gt;
              &amp;lt;bytes&amp;gt;true&amp;lt;/bytes&amp;gt;&lt;br/&gt;
            &amp;lt;/value&amp;gt;&lt;br/&gt;
          &amp;lt;/objProp&amp;gt;&lt;br/&gt;
          &amp;lt;stringProp name=&quot;filename&quot;&amp;gt;&amp;lt;/stringProp&amp;gt;&lt;br/&gt;
        &amp;lt;/ResultCollector&amp;gt;&lt;br/&gt;
        &amp;lt;hashTree/&amp;gt;&lt;br/&gt;
        &amp;lt;ResultCollector guiclass=&quot;SummaryReport&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Summary Report&quot; enabled=&quot;true&quot;&amp;gt;&lt;br/&gt;
          &amp;lt;boolProp name=&quot;ResultCollector.error_logging&quot;&amp;gt;false&amp;lt;/boolProp&amp;gt;&lt;br/&gt;
          &amp;lt;objProp&amp;gt;&lt;br/&gt;
            &amp;lt;name&amp;gt;saveConfig&amp;lt;/name&amp;gt;&lt;br/&gt;
            &amp;lt;value class=&quot;SampleSaveConfiguration&quot;&amp;gt;&lt;br/&gt;
              &amp;lt;time&amp;gt;true&amp;lt;/time&amp;gt;&lt;br/&gt;
              &amp;lt;latency&amp;gt;true&amp;lt;/latency&amp;gt;&lt;br/&gt;
              &amp;lt;timestamp&amp;gt;true&amp;lt;/timestamp&amp;gt;&lt;br/&gt;
              &amp;lt;success&amp;gt;true&amp;lt;/success&amp;gt;&lt;br/&gt;
              &amp;lt;label&amp;gt;true&amp;lt;/label&amp;gt;&lt;br/&gt;
              &amp;lt;code&amp;gt;true&amp;lt;/code&amp;gt;&lt;br/&gt;
              &amp;lt;message&amp;gt;true&amp;lt;/message&amp;gt;&lt;br/&gt;
              &amp;lt;threadName&amp;gt;true&amp;lt;/threadName&amp;gt;&lt;br/&gt;
              &amp;lt;dataType&amp;gt;true&amp;lt;/dataType&amp;gt;&lt;br/&gt;
              &amp;lt;encoding&amp;gt;false&amp;lt;/encoding&amp;gt;&lt;br/&gt;
              &amp;lt;assertions&amp;gt;true&amp;lt;/assertions&amp;gt;&lt;br/&gt;
              &amp;lt;subresults&amp;gt;true&amp;lt;/subresults&amp;gt;&lt;br/&gt;
              &amp;lt;responseData&amp;gt;false&amp;lt;/responseData&amp;gt;&lt;br/&gt;
              &amp;lt;samplerData&amp;gt;false&amp;lt;/samplerData&amp;gt;&lt;br/&gt;
              &amp;lt;xml&amp;gt;false&amp;lt;/xml&amp;gt;&lt;br/&gt;
              &amp;lt;fieldNames&amp;gt;false&amp;lt;/fieldNames&amp;gt;&lt;br/&gt;
              &amp;lt;responseHeaders&amp;gt;false&amp;lt;/responseHeaders&amp;gt;&lt;br/&gt;
              &amp;lt;requestHeaders&amp;gt;false&amp;lt;/requestHeaders&amp;gt;&lt;br/&gt;
              &amp;lt;responseDataOnError&amp;gt;false&amp;lt;/responseDataOnError&amp;gt;&lt;br/&gt;
              &amp;lt;saveAssertionResultsFailureMessage&amp;gt;false&amp;lt;/saveAssertionResultsFailureMessage&amp;gt;&lt;br/&gt;
              &amp;lt;assertionsResultsToSave&amp;gt;0&amp;lt;/assertionsResultsToSave&amp;gt;&lt;br/&gt;
              &amp;lt;bytes&amp;gt;true&amp;lt;/bytes&amp;gt;&lt;br/&gt;
            &amp;lt;/value&amp;gt;&lt;br/&gt;
          &amp;lt;/objProp&amp;gt;&lt;br/&gt;
          &amp;lt;stringProp name=&quot;filename&quot;&amp;gt;&amp;lt;/stringProp&amp;gt;&lt;br/&gt;
        &amp;lt;/ResultCollector&amp;gt;&lt;br/&gt;
        &amp;lt;hashTree/&amp;gt;&lt;br/&gt;
        &amp;lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;true&quot;&amp;gt;&lt;br/&gt;
          &amp;lt;boolProp name=&quot;ResultCollector.error_logging&quot;&amp;gt;false&amp;lt;/boolProp&amp;gt;&lt;br/&gt;
          &amp;lt;objProp&amp;gt;&lt;br/&gt;
            &amp;lt;name&amp;gt;saveConfig&amp;lt;/name&amp;gt;&lt;br/&gt;
            &amp;lt;value class=&quot;SampleSaveConfiguration&quot;&amp;gt;&lt;br/&gt;
              &amp;lt;time&amp;gt;true&amp;lt;/time&amp;gt;&lt;br/&gt;
              &amp;lt;latency&amp;gt;true&amp;lt;/latency&amp;gt;&lt;br/&gt;
              &amp;lt;timestamp&amp;gt;true&amp;lt;/timestamp&amp;gt;&lt;br/&gt;
              &amp;lt;success&amp;gt;true&amp;lt;/success&amp;gt;&lt;br/&gt;
              &amp;lt;label&amp;gt;true&amp;lt;/label&amp;gt;&lt;br/&gt;
              &amp;lt;code&amp;gt;true&amp;lt;/code&amp;gt;&lt;br/&gt;
              &amp;lt;message&amp;gt;true&amp;lt;/message&amp;gt;&lt;br/&gt;
              &amp;lt;threadName&amp;gt;true&amp;lt;/threadName&amp;gt;&lt;br/&gt;
              &amp;lt;dataType&amp;gt;true&amp;lt;/dataType&amp;gt;&lt;br/&gt;
              &amp;lt;encoding&amp;gt;false&amp;lt;/encoding&amp;gt;&lt;br/&gt;
              &amp;lt;assertions&amp;gt;true&amp;lt;/assertions&amp;gt;&lt;br/&gt;
              &amp;lt;subresults&amp;gt;true&amp;lt;/subresults&amp;gt;&lt;br/&gt;
              &amp;lt;responseData&amp;gt;false&amp;lt;/responseData&amp;gt;&lt;br/&gt;
              &amp;lt;samplerData&amp;gt;false&amp;lt;/samplerData&amp;gt;&lt;br/&gt;
              &amp;lt;xml&amp;gt;false&amp;lt;/xml&amp;gt;&lt;br/&gt;
              &amp;lt;fieldNames&amp;gt;false&amp;lt;/fieldNames&amp;gt;&lt;br/&gt;
              &amp;lt;responseHeaders&amp;gt;false&amp;lt;/responseHeaders&amp;gt;&lt;br/&gt;
              &amp;lt;requestHeaders&amp;gt;false&amp;lt;/requestHeaders&amp;gt;&lt;br/&gt;
              &amp;lt;responseDataOnError&amp;gt;false&amp;lt;/responseDataOnError&amp;gt;&lt;br/&gt;
              &amp;lt;saveAssertionResultsFailureMessage&amp;gt;false&amp;lt;/saveAssertionResultsFailureMessage&amp;gt;&lt;br/&gt;
              &amp;lt;assertionsResultsToSave&amp;gt;0&amp;lt;/assertionsResultsToSave&amp;gt;&lt;br/&gt;
              &amp;lt;bytes&amp;gt;true&amp;lt;/bytes&amp;gt;&lt;br/&gt;
            &amp;lt;/value&amp;gt;&lt;br/&gt;
          &amp;lt;/objProp&amp;gt;&lt;br/&gt;
          &amp;lt;stringProp name=&quot;filename&quot;&amp;gt;&amp;lt;/stringProp&amp;gt;&lt;br/&gt;
        &amp;lt;/ResultCollector&amp;gt;&lt;br/&gt;
        &amp;lt;hashTree/&amp;gt;&lt;br/&gt;
      &amp;lt;/hashTree&amp;gt;&lt;br/&gt;
    &amp;lt;/hashTree&amp;gt;&lt;br/&gt;
  &amp;lt;/hashTree&amp;gt;&lt;br/&gt;
&amp;lt;/jmeterTestPlan&amp;gt;&lt;/p&gt;

&lt;p&gt;you can test again,when you stop the request,you can watch the file-hander use command &quot;lsof -p pid | can&apos;t identify protocol | wc -l&quot;,maybe you can see there are lots of &quot;can&apos;t identify protocol&quot;.&lt;/p&gt;

&lt;p&gt;I&apos;m looking forward to your reply,thank you!&lt;/p&gt;</comment>
                            <comment id="13047352" author="hai_feng" created="Mon, 9 Mar 2015 08:05:55 -0400"  >&lt;p&gt;Please view the new link:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.jboss.org/browse/WFLY-4413&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.jboss.org/browse/WFLY-4413&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;thanks!&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
customfield id="customfield_12310641" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Number of attachments</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310640" key="com.atlassian.jira.toolkit:comments">
                        <customfieldname>Number of comments</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>6.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311940" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1|hzva3z:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310840" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>