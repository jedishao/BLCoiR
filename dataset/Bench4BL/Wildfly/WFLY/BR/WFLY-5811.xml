<!-- 
RSS generated by JIRA (7.2.3#72005-sha1:73be91d2b96fc29303a7eb6820acf420e5d0ed65) at Tue Dec 06 12:08:23 EST 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.jboss.org/si/jira.issueviews:issue-xml/WFLY-5811/WFLY-5811.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>JBoss Issue Tracker</title>
    <link>https://issues.jboss.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>7.2.3</version>
        <build-number>72005</build-number>
        <build-date>06-10-2016</build-date>
    </build-info>

<item>
            <title>[WFLY-5811] Clustering performance regression in scenarios with ASYNC cache used</title>
                <link>https://issues.jboss.org/browse/WFLY-5811</link>
                <project id="12313721" key="WFLY">WildFly</project>
                    <description>&lt;p&gt;Our clustering write-heavy stress tests show a performance drop of 7.0.0.ER2 bits compared to 6.4.0 bits, when using ASYNC cache.&lt;/p&gt;

&lt;p&gt;Compare these results:&lt;/p&gt;

&lt;p&gt;stress-ejbremote-dist-async&lt;br/&gt;
7.0.0.ER2: &lt;a href=&quot;http://jenkins.mw.lab.eng.bos.redhat.com/hudson/job/eap-7x-stress-ejbremote-dist-async/6/artifact/report/graph-throughput.png&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;throughput&lt;/a&gt;&lt;br/&gt;
6.4.0.GA: &lt;a href=&quot;http://jenkins.mw.lab.eng.bos.redhat.com/hudson/job/eap-6x-stress-ejbremote-dist-async_noperf21/1/artifact/report/graph-throughput.png&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;throughput&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;stress-ejbremote-repl-async&lt;br/&gt;
7.0.0.ER2: &lt;a href=&quot;http://jenkins.mw.lab.eng.bos.redhat.com/hudson/job/eap-7x-stress-ejbremote-repl-async/4/artifact/report/graph-throughput.png&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;throughput&lt;/a&gt;&lt;br/&gt;
6.4.0.GA: &lt;a href=&quot;http://jenkins.mw.lab.eng.bos.redhat.com/hudson/job/eap-6x-stress-ejbremote-repl-async_noperf21/1/artifact/report/graph-throughput.png&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;throughput&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;stress-ejbservlet-repl-async&lt;br/&gt;
7.0.0.ER2: &lt;a href=&quot;http://jenkins.mw.lab.eng.bos.redhat.com/hudson/job/eap-7x-stress-ejbservlet-repl-async/3/artifact/report/graph-throughput.png&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;throughput&lt;/a&gt;&lt;br/&gt;
6.4.0.GA: &lt;a href=&quot;http://jenkins.mw.lab.eng.bos.redhat.com/hudson/job/eap-6x-stress-ejbservlet-repl-async_noperf21/2/artifact/report/graph-throughput.png&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;throughput&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;stress-session-repl-async&lt;br/&gt;
7.0.0.ER2: &lt;a href=&quot;http://jenkins.mw.lab.eng.bos.redhat.com/hudson/job/eap-7x-stress-session-repl-async/3/artifact/report/graph-throughput.png&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;throughput&lt;/a&gt;&lt;br/&gt;
6.4.0.GA: &lt;a href=&quot;http://jenkins.mw.lab.eng.bos.redhat.com/hudson/job/eap-6x-stress-session-repl-async_noperf21/1/artifact/report/graph-throughput.png&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;throughput&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;stress-session-dist-async&lt;br/&gt;
7.0.0.ER2: &lt;a href=&quot;http://jenkins.mw.lab.eng.bos.redhat.com/hudson/job/eap-7x-stress-session-dist-async/3/artifact/report/graph-throughput.png&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;throughput&lt;/a&gt;&lt;br/&gt;
6.4.0.GA: &lt;a href=&quot;http://jenkins.mw.lab.eng.bos.redhat.com/hudson/job/eap-6x-stress-session-dist-async_noperf21/1/artifact/report/graph-throughput.png&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;throughput&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Also, load scenarios, which use a stable load of 4000 sessions are affected.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12595769">WFLY-5811</key>
            <summary>Clustering performance regression in scenarios with ASYNC cache used</summary>
                <type id="1" iconUrl="https://issues.jboss.org/secure/viewavatar?size=xsmall&amp;avatarId=13263&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.jboss.org/images/icons/priorities/major.svg">Major</priority>
                        <status id="5" iconUrl="https://issues.jboss.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Done</resolution>
                                        <assignee username="pferraro">Paul Ferraro</assignee>
                                    <reporter username="mvinkler">Michal Vinkler</reporter>
                        <labels>
                    </labels>
                <created>Tue, 8 Dec 2015 09:13:04 -0500</created>
                <updated>Thu, 18 Aug 2016 23:49:46 -0400</updated>
                            <resolved>Fri, 12 Feb 2016 14:56:49 -0500</resolved>
                                                    <fixVersion>10.1.0.CR1</fixVersion>
                    <fixVersion>10.1.0.Final</fixVersion>
                                    <component>Clustering</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                <comments>
                            <comment id="13138481" author="pferraro" created="Tue, 8 Dec 2015 10:07:33 -0500"  >&lt;p&gt;It is easy to misinterpret ASYNC performance results.&lt;br/&gt;
These graphs do not indicate a performance regression.  On the contrary, the DIST_ASYNC ejbremote stress tests show equivalent performance, while the DIST_ASYNC session stress test indicate a welcome, but expected performance improvement.&lt;/p&gt;</comment>
                            <comment id="13160509" author="pferraro" created="Tue, 9 Feb 2016 14:40:13 -0500"  >&lt;p&gt;I&apos;m reopening this - as there are some yet unexplained performance concerns.&lt;/p&gt;</comment>
                            <comment id="13162436" author="matlach" created="Fri, 12 Feb 2016 14:15:32 -0500"  >&lt;p&gt;Hi &lt;a href=&quot;https://issues.jboss.org/secure/ViewProfile.jspa?name=pferraro&quot; class=&quot;user-hover&quot; rel=&quot;pferraro&quot;&gt;Paul Ferraro&lt;/a&gt;, we are currently doing performance testing around session replication (REPL_ASYNC) with Wildfly 8.2.1.Final and I was wondering if what we discovered could be related to this issue.&lt;/p&gt;

&lt;p&gt;One thing we do not understand is, even if we are using BATCH we are seeing in the TransactionCoordinator::commit method, multiple WriteCommand for the same key, i.e. for each &lt;span class=&quot;error&quot;&gt;&amp;#91;non-immutable&amp;#93;&lt;/span&gt; session get/setAttribute, one PutKeyValueCommand followed by n amount of ReplaceCommand. Shouldn&apos;t in batch mode everything be collapsed into one single PutKeyValueCommand?&lt;/p&gt;

&lt;p&gt;In Wildfly 10.0.0.Final, there&apos;s one notable difference, instead of having one PutKeyValueCommand followed by n ReplaceCommand we are only seeing multiple PutKeyValueCommand. But again, shouldn&apos;t that be all collapsed into one single PutKeyValueCommand?&lt;br/&gt;
Not collapsing the changes will for sure increase the amount of WriteCommand sent on the wire for basically nothing &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.jboss.org/images/icons/emoticons/help_16.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;. Sure we could enable JGroups compression in the protocol stack, though, I feel this is more a workaround than a potential fix.&lt;/p&gt;

&lt;p&gt;I did not have a deep comparison yet with EAP, though, it looks like the session storage strategy have changed between EAP and Wildfly. Could you confirm?&lt;br/&gt;
Could it be that in EAP, in the FineSessionAttributeStorage, the sessionData.getModifiedSessionAttributes() was already collapsing everything when trying to replicate attributes?&lt;/p&gt;

&lt;p&gt;Either case, could you share more information about your performance testing scenarios. I&apos;d like to see if we are potentially affected by the same issues.&lt;/p&gt;</comment>
                            <comment id="13162453" author="pferraro" created="Fri, 12 Feb 2016 14:56:39 -0500"  >&lt;p&gt;&lt;a href=&quot;https://issues.jboss.org/secure/ViewProfile.jspa?name=matlach&quot; class=&quot;user-hover&quot; rel=&quot;matlach&quot;&gt;Mathieu Lachance&lt;/a&gt; In WF10, you should only see multiple write commands when using ATTRIBUTE (a.k.a. fine) granularity (as we use a cache entry per attribute).  Otherwise, i.e. when using SESSION granularity, the resulting cache put only happens once per batch.  See:&lt;br/&gt;
&lt;a href=&quot;https://github.com/wildfly/wildfly/blob/master/clustering/web/infinispan/src/main/java/org/wildfly/clustering/web/infinispan/session/coarse/CoarseSessionAttributes.java#L66&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/wildfly/wildfly/blob/master/clustering/web/infinispan/src/main/java/org/wildfly/clustering/web/infinispan/session/coarse/CoarseSessionAttributes.java#L66&lt;/a&gt;&lt;br/&gt;
&lt;a href=&quot;https://github.com/wildfly/wildfly/blob/master/clustering/ee/infinispan/src/main/java/org/wildfly/clustering/ee/infinispan/CacheEntryMutator.java#L49&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/wildfly/wildfly/blob/master/clustering/ee/infinispan/src/main/java/org/wildfly/clustering/ee/infinispan/CacheEntryMutator.java#L49&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It&apos;s possible that this optimization didn&apos;t exist in 8.2.x - I honestly can&apos;t remember.  As far as EAP7 vs WF10 - there is no difference in behavior.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310120">
                    <name>Cloners</name>
                                            <outwardlinks description="cloned from">
                                        <issuelink>
            <issuekey id="12595768">JBEAP-2280</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10012">
                    <name>Dependency</name>
                                            <outwardlinks description="is blocked by">
                                        <issuelink>
            <issuekey id="12599157">WFLY-5981</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="org.jboss.labs.jira.plugin.jboss-custom-field-types-plugin:multiurl">
                        <customfieldname>Git Pull Request</customfieldname>
                        <customfieldvalues>
                            https://github.com/wildfly/wildfly/pull/8651
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12310641" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Number of attachments</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310640" key="com.atlassian.jira.toolkit:comments">
                        <customfieldname>Number of comments</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311940" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1|i006dz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310840" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>