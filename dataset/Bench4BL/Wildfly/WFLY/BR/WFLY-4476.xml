<!-- 
RSS generated by JIRA (7.2.3#72005-sha1:73be91d2b96fc29303a7eb6820acf420e5d0ed65) at Tue Dec 06 12:20:52 EST 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.jboss.org/si/jira.issueviews:issue-xml/WFLY-4476/WFLY-4476.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>JBoss Issue Tracker</title>
    <link>https://issues.jboss.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>7.2.3</version>
        <build-number>72005</build-number>
        <build-date>06-10-2016</build-date>
    </build-info>

<item>
            <title>[WFLY-4476] Unable to configure CXF socket timeout</title>
                <link>https://issues.jboss.org/browse/WFLY-4476</link>
                <project id="12313721" key="WFLY">WildFly</project>
                    <description>&lt;p&gt;Socket times out after 60 seconds when calling SAAJ webservices from a wildfly servlet. Wildfly uses CXF internally and CXF HTTP Conduit times out in 60 seconds by default. Cannot find a way to configure this timeout (Receive timeout) in standalone.xml file.&lt;/p&gt;

&lt;p&gt;Following line throws socket read time out exception&lt;br/&gt;
		    responseMsg = soapConn.call(soapMessage, wsdlLoc);&lt;/p&gt;

&lt;p&gt;Java Call is:&lt;br/&gt;
	private static String callWebService(String serviceName, &lt;br/&gt;
			String userName,&lt;br/&gt;
			org.w3c.dom.Document soapRequestDoc,&lt;br/&gt;
			String serviceType,&lt;br/&gt;
			String endPointAddress,&lt;br/&gt;
			String remoteClientAddress,&lt;br/&gt;
			String remoteClientHostname,&lt;br/&gt;
			String remoteClientUser,&lt;br/&gt;
			String clientApplicationId)&lt;br/&gt;
	throws SOAPException,java.io.IOException,CommunicationException&lt;br/&gt;
	{&lt;br/&gt;
		SOAPConnection soapConn = null;&lt;br/&gt;
		String wsdlLoc=endPointAddress;&lt;br/&gt;
		String resp = &quot;&quot;;&lt;br/&gt;
		MessageFactory msgFactory;&lt;br/&gt;
		SOAPFactory soapFactory;&lt;br/&gt;
		SOAPMessage soapMessage;&lt;br/&gt;
		SOAPConnectionFactory soapConnFactory;&lt;br/&gt;
		SOAPMessage responseMsg;&lt;/p&gt;

&lt;p&gt;		try&lt;/p&gt;
		{
			if (wsdlLoc == null)
				throw new SOAPException(&quot;Error: Endpoint address is NULL.&quot;);
			msgFactory = MessageFactory.newInstance();
			soapFactory = SOAPFactory.newInstance();
			soapMessage = msgFactory.createMessage();
            
			//Add headers
			addSoapHeaders(soapMessage,soapFactory,
					serviceType,userName,remoteClientAddress,remoteClientHostname,
					remoteClientUser,
					clientApplicationId);
			
			//Add Body			addBody(soapMessage,soapFactory,soapRequestDoc,serviceName);
		    		    
		    logger.debug(soapMessage);			
		    soapConnFactory = SOAPConnectionFactory.newInstance();
		    soapConn = soapConnFactory.createConnection();
		    logger.debug(&quot;Invoking service [&quot;+serviceName+
		    		&quot;] on WSDL [&quot;+
		    		wsdlLoc+&quot;] ...&quot;);		 
		    		    
		    responseMsg = soapConn.call(soapMessage, wsdlLoc);
		    logger.debug(&quot;Call completed [&quot;+serviceName+
		    		&quot;] on WSDL [&quot;+
		    		wsdlLoc+&quot;]!&quot;);
		    resp = processResponseMessageStringParser(responseMsg);
			logger.debug(&quot;Return Document [&quot; + resp + &quot;]&quot;);
		}
&lt;p&gt;		catch (SOAPException e)&lt;/p&gt;
		{
				logger.error(e);
				throw new CommunicationException(errorBuffer.toString());
		}
&lt;p&gt;		finally&lt;br/&gt;
		{&lt;br/&gt;
			try&lt;/p&gt;
			{
				if (soapConn != null)
					soapConn.close();
			}
&lt;p&gt;			catch (Exception e)&lt;/p&gt;
			{
				e.printStackTrace();
			}
&lt;p&gt;		}&lt;/p&gt;

&lt;p&gt;		return resp;&lt;br/&gt;
	}&lt;/p&gt;

&lt;p&gt;Exception thrown is:&lt;br/&gt;
javax.xml.soap.SOAPException: JBWS024004: SOAP message could not be sent&lt;br/&gt;
        at org.jboss.wsf.stack.cxf.saaj.SOAPConnectionImpl.call(SOAPConnectionImpl.java:124)&lt;br/&gt;
        at com.qwest.servlet.Client.callWebService(Client.java:225)&lt;br/&gt;
        at com.qwest.servlet.Client.call(Client.java:138)&lt;br/&gt;
        at com.qwest.servlet.TestServlet.doGet(TestServlet.java:73)&lt;br/&gt;
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:687)&lt;br/&gt;
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)&lt;br/&gt;
        at io.undertow.servlet.handlers.ServletHandler.handleRequest(ServletHandler.java:86)&lt;br/&gt;
        at io.undertow.servlet.handlers.security.ServletSecurityRoleHandler.handleRequest(ServletSecurityRoleHandler.java:62)&lt;br/&gt;
        at io.undertow.servlet.handlers.ServletDispatchingHandler.handleRequest(ServletDispatchingHandler.java:36)&lt;br/&gt;
        at org.wildfly.extension.undertow.security.SecurityContextAssociationHandler.handleRequest(SecurityContextAssociationHandler.java:78)&lt;br/&gt;
        at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)&lt;br/&gt;
        at io.undertow.servlet.handlers.security.SSLInformationAssociationHandler.handleRequest(SSLInformationAssociationHandler.java:131)&lt;br/&gt;
        at io.undertow.servlet.handlers.security.ServletAuthenticationCallHandler.handleRequest(ServletAuthenticationCallHandler.java:57)&lt;br/&gt;
        at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)&lt;br/&gt;
        at io.undertow.security.handlers.AbstractConfidentialityHandler.handleRequest(AbstractConfidentialityHandler.java:46)&lt;br/&gt;
        at io.undertow.servlet.handlers.security.ServletConfidentialityConstraintHandler.handleRequest(ServletConfidentialityConstraintHandler.java:64)&lt;br/&gt;
        at io.undertow.security.handlers.AuthenticationMechanismsHandler.handleRequest(AuthenticationMechanismsHandler.java:58)&lt;br/&gt;
        at io.undertow.servlet.handlers.security.CachedAuthenticatedSessionHandler.handleRequest(CachedAuthenticatedSessionHandler.java:70)&lt;br/&gt;
        at io.undertow.security.handlers.SecurityInitialHandler.handleRequest(SecurityInitialHandler.java:76)&lt;br/&gt;
        at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)&lt;br/&gt;
        at org.wildfly.extension.undertow.security.jacc.JACCContextIdHandler.handleRequest(JACCContextIdHandler.java:61)&lt;br/&gt;
        at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)&lt;br/&gt;
        at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)&lt;br/&gt;
        at io.undertow.servlet.handlers.ServletInitialHandler.handleFirstRequest(ServletInitialHandler.java:278)&lt;br/&gt;
        at io.undertow.servlet.handlers.ServletInitialHandler.dispatchRequest(ServletInitialHandler.java:255)&lt;br/&gt;
        at io.undertow.servlet.handlers.ServletInitialHandler.access$000(ServletInitialHandler.java:80)&lt;br/&gt;
        at io.undertow.servlet.handlers.ServletInitialHandler$1.handleRequest(ServletInitialHandler.java:174)&lt;br/&gt;
        at io.undertow.server.Connectors.executeRootHandler(Connectors.java:199)&lt;br/&gt;
        at io.undertow.server.HttpServerExchange$1.run(HttpServerExchange.java:774)&lt;br/&gt;
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)&lt;br/&gt;
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)&lt;br/&gt;
        at java.lang.Thread.run(Thread.java:745)&lt;br/&gt;
Caused by: java.net.SocketTimeoutException: SocketTimeoutException invoking &lt;a href=&quot;http://localhost:8080/TestWS/v2.0.0/TestServer?wsdl:&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://localhost:8080/TestWS/v2.0.0/TestServer?wsdl:&lt;/a&gt; Read timed out&lt;br/&gt;
        at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)&lt;br/&gt;
        at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)&lt;br/&gt;
        at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)&lt;br/&gt;
        at java.lang.reflect.Constructor.newInstance(Constructor.java:408)&lt;br/&gt;
        at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.mapException(HTTPConduit.java:1347)&lt;br/&gt;
        at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.close(HTTPConduit.java:1331)&lt;br/&gt;
        at org.apache.cxf.transport.AbstractConduit.close(AbstractConduit.java:56)&lt;br/&gt;
        at org.apache.cxf.transport.http.HTTPConduit.close(HTTPConduit.java:632)&lt;br/&gt;
        at org.jboss.wsf.stack.cxf.saaj.SOAPConnectionImpl.call(SOAPConnectionImpl.java:120)&lt;br/&gt;
        ... 31 more&lt;br/&gt;
Caused by: java.net.SocketTimeoutException: Read timed out&lt;br/&gt;
        at java.net.SocketInputStream.socketRead0(Native Method)&lt;br/&gt;
        at java.net.SocketInputStream.read(SocketInputStream.java:150)&lt;br/&gt;
        at java.net.SocketInputStream.read(SocketInputStream.java:121)&lt;br/&gt;
        at java.io.BufferedInputStream.fill(BufferedInputStream.java:246)&lt;br/&gt;
        at java.io.BufferedInputStream.read1(BufferedInputStream.java:286)&lt;br/&gt;
        at java.io.BufferedInputStream.read(BufferedInputStream.java:345)&lt;br/&gt;
        at sun.net.www.http.HttpClient.parseHTTPHeader(HttpClient.java:703)&lt;br/&gt;
        at sun.net.www.http.HttpClient.parseHTTP(HttpClient.java:647)&lt;br/&gt;
        at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1534)&lt;br/&gt;
        at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1439)&lt;br/&gt;
        at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:480)&lt;br/&gt;
        at org.apache.cxf.transport.http.URLConnectionHTTPConduit$URLConnectionWrappedOutputStream.getResponseCode(URLConnectionHTTPConduit.java:266)&lt;br/&gt;
        at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.handleResponseInternal(HTTPConduit.java:1545)&lt;br/&gt;
        at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.handleResponse(HTTPConduit.java:1515)&lt;br/&gt;
        at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.close(HTTPConduit.java:1318)&lt;/p&gt;</description>
                <environment>&lt;p&gt;Java8, Ubuntu Linux Desktop&lt;/p&gt;</environment>
        <key id="12567378">WFLY-4476</key>
            <summary>Unable to configure CXF socket timeout</summary>
                <type id="1" iconUrl="https://issues.jboss.org/secure/viewavatar?size=xsmall&amp;avatarId=13263&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.jboss.org/images/icons/priorities/major.svg">Major</priority>
                        <status id="5" iconUrl="https://issues.jboss.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Done</resolution>
                                        <assignee username="asoldano">Alessio Soldano</assignee>
                                    <reporter username="GeorgeMathias">George Mathias</reporter>
                        <labels>
                            <label>cxf</label>
                            <label>saaj</label>
                            <label>undertow</label>
                    </labels>
                <created>Tue, 31 Mar 2015 10:36:54 -0400</created>
                <updated>Tue, 28 Apr 2015 05:52:17 -0400</updated>
                            <resolved>Tue, 28 Apr 2015 05:52:17 -0400</resolved>
                                    <version>8.1.0.Final</version>
                    <version>8.2.0.Final</version>
                    <version>9.0.0.Beta2</version>
                                    <fixVersion>9.0.0.CR1</fixVersion>
                                    <component>Web Services</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="13055096" author="georgemathias" created="Tue, 31 Mar 2015 15:24:53 -0400"  >&lt;p&gt;From whatever research i have done, i could not find a way to override HTTPClientPolicy.receiveTimeout using standalone.xml. There is another issue that was opened that is similar to this is &lt;a href=&quot;https://issues.jboss.org/browse/TEIID-1432&quot; title=&quot;Getting SocketTimeout Exceptions on long running queries with CXF &quot; class=&quot;issue-link&quot; data-issue-key=&quot;TEIID-1432&quot;&gt;&lt;del&gt;TEIID-1432&lt;/del&gt;&lt;/a&gt;. These two could be related.&lt;/p&gt;</comment>
                            <comment id="13055433" author="georgemathias" created="Wed, 1 Apr 2015 14:08:34 -0400"  >&lt;p&gt;I was able to fix a workaround by changing receive timeout in apache-cxf source and rebuilding it for wildfly8.2&lt;/p&gt;</comment>
                            <comment id="13055434" author="georgemathias" created="Wed, 1 Apr 2015 14:09:27 -0400"  >&lt;p&gt;What would really help is to be able to supply http conduit settings to cxf from standalone.xml config file.&lt;/p&gt;</comment>
                            <comment id="13055453" author="asoldano" created="Wed, 1 Apr 2015 16:29:21 -0400"  >&lt;p&gt;I&apos;ll have a look at this jira in the next days; in the mean time, this looks related to &lt;a href=&quot;https://issues.jboss.org/browse/JBWS-3901&quot; title=&quot;Allow configuring default HTTP Conduit&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JBWS-3901&quot;&gt;&lt;del&gt;JBWS-3901&lt;/del&gt;&lt;/a&gt; and &lt;a href=&quot;https://issues.jboss.org/browse/JBWS-3626&quot; title=&quot;Ability to globally configure SSL settings for JAX-WS clients&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JBWS-3626&quot;&gt;JBWS-3626&lt;/a&gt;....&lt;/p&gt;</comment>
                            <comment id="13055843" author="asoldano" created="Thu, 2 Apr 2015 12:23:46 -0400"  >&lt;p&gt;This appears as a regression likely because in the past the JBossWS-CXF implementation of javax.xml.soap.SOAPConnection was not automatically resolved.&lt;br/&gt;
Anyway, the HTTPConduit is going to be configurable when the &lt;a href=&quot;https://issues.jboss.org/browse/JBWS-3901&quot; title=&quot;Allow configuring default HTTP Conduit&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JBWS-3901&quot;&gt;&lt;del&gt;JBWS-3901&lt;/del&gt;&lt;/a&gt; changes will be included in WildFly, that is after next Beta or CR release of JBossWS 5.&lt;/p&gt;</comment>
                            <comment id="13063142" author="asoldano" created="Tue, 28 Apr 2015 05:52:17 -0400"  >&lt;p&gt;Marking this as solved, JBossWS 5.0.0.Final has been included in WFLY master. See &lt;a href=&quot;https://docs.jboss.org/author/display/WFLY9/Apache+CXF+integration#ApacheCXFintegration-HTTPConduitconfiguration&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://docs.jboss.org/author/display/WFLY9/Apache+CXF+integration#ApacheCXFintegration-HTTPConduitconfiguration&lt;/a&gt; &lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10012">
                    <name>Dependency</name>
                                            <outwardlinks description="is blocked by">
                                        <issuelink>
            <issuekey id="12567424">JBWS-3901</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12567647">WFLY-4484</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310031" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Affects</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10021"><![CDATA[Compatibility/Configuration]]></customfieldvalue>
    <customfieldvalue key="10750"><![CDATA[User Experience]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310010" key="org.jboss.labs.jira.plugin.jboss-custom-field-types-plugin:multiurl">
                        <customfieldname>Forum Reference</customfieldname>
                        <customfieldvalues>
                            https://developer.jboss.org/thread/254124
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12310641" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Number of attachments</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310640" key="com.atlassian.jira.toolkit:comments">
                        <customfieldname>Number of comments</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>6.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311940" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1|hzvq0v:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310840" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_12310183" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Steps to Reproduce</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>&lt;p&gt;1. Deploy a webservice on any application server for e.g. on port localhost:8080. Start this application server.&lt;/p&gt;

&lt;p&gt;2. Create a simple HTTPServlet and call callWebService() method described above in Description using SAAJ api that calls the WSDL deployed to localhost:8080&lt;br/&gt;
2. Deploy a TestWeb.war on a wildly 8.2 Final on localhost:3080&lt;br/&gt;
3. Ensure webservice deployed on localhost:8080 takes longer than 60 seconds either by pausing programmatically. The way I did is by setting the breakpoint by running the application server from within myeclipse ide.&lt;br/&gt;
4. Now call the servlet deployed on localhost:3080 which calls the webservice.&lt;br/&gt;
5. The webservice call should time out in 60 seconds with an socket exception.&lt;/p&gt;</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_12310091" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Workaround Description</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>&lt;p&gt;Not yet. But going back to jboss7.1.1 Final. This works in Jboss7.1.1 but stopped working in wildfly8.1, wildfly 8.2 and wildfly 9.2BETA.&lt;/p&gt;</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>