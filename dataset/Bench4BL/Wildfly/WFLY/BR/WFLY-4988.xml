<!-- 
RSS generated by JIRA (7.2.3#72005-sha1:73be91d2b96fc29303a7eb6820acf420e5d0ed65) at Tue Dec 06 14:43:01 EST 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.jboss.org/si/jira.issueviews:issue-xml/WFLY-4988/WFLY-4988.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>JBoss Issue Tracker</title>
    <link>https://issues.jboss.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>7.2.3</version>
        <build-number>72005</build-number>
        <build-date>06-10-2016</build-date>
    </build-info>

<item>
            <title>[WFLY-4988] Can&apos;t load job from another jar inside ear</title>
                <link>https://issues.jboss.org/browse/WFLY-4988</link>
                <project id="12313721" key="WFLY">WildFly</project>
                    <description>&lt;p&gt;Prior to 1.1.0.Final I was able to load and start a batch job located in jar 1 from jar 2. Both jars were package inside an ear. Now with the latest introduction of spi resolver (JobXmlResolverService from wildfly 9) the service created for jar 2 have no jobXmlResolvers so the start method from JobOperator throws an javax.batch.operations.JobStartException: JBERET000601: Failed to get job xml file for job XXX.&lt;br/&gt;
According to the spec: &lt;br/&gt;
&quot;archive loader If the implementation-specific mechanism does fails to resolve a Job XML reference, then the batch runtime implementation must resolve the reference with an archive loader. The implementation must provide an archive loader that resolves the reference by looking up the reference from the META-INF/batch-jobs directory.&quot; I think that the implementation have to try to load jobs also in META-INF/batch-jobs dir.&lt;br/&gt;
Changes in the old behaviour was made due to Issue &lt;a href=&quot;https://issues.jboss.org/browse/JBERET-144&quot; title=&quot;Incorrect job XML loading order&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JBERET-144&quot;&gt;&lt;del&gt;JBERET-144&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;</description>
                <environment></environment>
        <key id="12578518">WFLY-4988</key>
            <summary>Can&apos;t load job from another jar inside ear</summary>
                <type id="1" iconUrl="https://issues.jboss.org/secure/viewavatar?size=xsmall&amp;avatarId=13263&amp;avatarType=issuetype">Bug</type>
                                            <priority id="2" iconUrl="https://issues.jboss.org/images/icons/priorities/critical.svg">Critical</priority>
                        <status id="5" iconUrl="https://issues.jboss.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Done</resolution>
                                        <assignee username="jamezp">James Perkins</assignee>
                                    <reporter username="danipiario">Daniele Pirola</reporter>
                        <labels>
                    </labels>
                <created>Sun, 19 Jul 2015 08:47:35 -0400</created>
                <updated>Tue, 15 Nov 2016 14:03:06 -0500</updated>
                            <resolved>Tue, 15 Nov 2016 14:03:06 -0500</resolved>
                                                    <fixVersion>11.0.0.Alpha1</fixVersion>
                                    <component>Batch</component>
                        <due></due>
                            <votes>4</votes>
                                    <watches>6</watches>
                                                                <comments>
                            <comment id="13090608" author="danipiario" created="Sun, 19 Jul 2015 09:11:23 -0400"  >&lt;p&gt;I think that the problem is inside BatchEnvironmentProcessor (wildfly-batch-9.0.0.Final).&lt;br/&gt;
For every module method deploy create the JobXmlResolverService to load batch jobs: if the module doesn&apos;t contain the META-INF/batch-jobs directory the module is treated like a non batch module and an empty resolver was created. However a batch module is also a module that have a batch.xml file inside META-INF directory. In my code the jar 2 have an empty batch.xml file and with wildfly-batch-8.2.0.Final code was fine and I was able to load jobs located in other jar module&lt;/p&gt;</comment>
                            <comment id="13090609" author="danipiario" created="Sun, 19 Jul 2015 09:53:07 -0400"  >&lt;p&gt;Ugly workaround:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;create an empty dir batch-jobs inside jar 2&lt;/li&gt;
	&lt;li&gt;create a file META-INF/services/org.jberet.spi.JobXmlResolver with one line org.jberet.tools.MetaInfBatchJobsJobXmlResolver&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;With this jobXmlResolvers variable inside JobXmlResolverService in not empty and the old behaviour is called&lt;/p&gt;</comment>
                            <comment id="13091866" author="jamezp" created="Wed, 22 Jul 2015 13:16:09 -0400"  >&lt;p&gt;If I understand this correctly you&apos;ve got two JAR&apos;s, &lt;tt&gt;dep1.jar&lt;/tt&gt; and &lt;tt&gt;dep2.jar&lt;/tt&gt;. In &lt;tt&gt;dep1.jar&lt;/tt&gt; you&apos;ve got job XML files defined in the &lt;tt&gt;dep1.jar/META-INF/batch-jobs&lt;/tt&gt; directory. In &lt;tt&gt;dep2.jar&lt;/tt&gt; you&apos;ve got an empty &lt;tt&gt;dep2.jar/META-INF/batch.xml&lt;/tt&gt; file. You also want to start batch jobs in &lt;tt&gt;dep1.jar&lt;/tt&gt; from &lt;tt&gt;dep2.jar&lt;/tt&gt;. Is that correct?&lt;/p&gt;
</comment>
                            <comment id="13091878" author="danipiario" created="Wed, 22 Jul 2015 13:58:21 -0400"  >&lt;p&gt;Yes it&apos;s correct&lt;/p&gt;</comment>
                            <comment id="13091881" author="jamezp" created="Wed, 22 Jul 2015 14:37:34 -0400"  >&lt;p&gt;So the issue is likely that &lt;tt&gt;dep2.jar&lt;/tt&gt; no longer has access to job XML files in the &lt;tt&gt;dep1.jar&lt;/tt&gt;. Adding the service &lt;tt&gt;org.jberet.tools.MetaInfBatchJobsJobXmlResolver&lt;/tt&gt; works because it uses the class path to find batch jobs. Jobs found there will not be manageable from the WildFly console.&lt;/p&gt;

&lt;p&gt;The question is should &lt;tt&gt;dep2.jar&lt;/tt&gt; have knowledge of configuration files in &lt;tt&gt;dep1.jar&lt;/tt&gt;. I&apos;m not sure where I fall on that. I&apos;d lean towards if you want batch jobs launched from &lt;tt&gt;dep2.jar&lt;/tt&gt; that&apos;s where the job XML files should exist.&lt;/p&gt;</comment>
                            <comment id="13091885" author="jamezp" created="Wed, 22 Jul 2015 14:53:48 -0400"  >&lt;p&gt;I guess what I&apos;m getting at is I need some convincing that configuration files should be shared across shared dependencies. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.jboss.org/images/icons/emoticons/smile.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13091895" author="danipiario" created="Wed, 22 Jul 2015 15:20:50 -0400"  >&lt;p&gt;I understand. In my project is a very common situation, I have many ejb jar packaged inside an ear and I have an ejb jar that start jobs with a quartz scheduler. I think that in this scenario Batch framework would have to be like an utility to start and manage jobs. &lt;br/&gt;
I don&apos;t know where I&apos;d find jobs in wildfly console, perhaps it will be a future panel where I can manage jobs or there is something already done?&lt;/p&gt;</comment>
                            <comment id="13091961" author="jamezp" created="Wed, 22 Jul 2015 20:21:50 -0400"  >&lt;p&gt;I&apos;m actually surprised quartz jobs work at all. It must copy over the contexts to the new threads some how.&lt;/p&gt;

&lt;p&gt;Anyway, I&apos;m just not sure how I feel about shared configuration files. I&apos;m definitely opened to being convinced it&apos;s a good idea. There&apos;s nothing in the spec that indicates to me they should or shouldn&apos;t be.&lt;/p&gt;

&lt;p&gt;I don&apos;t think it&apos;s available in the web console yet, but you can see jobs in CLI with &lt;tt&gt;deployment=your.ear/subdeployment=your_ejb.jar/subsystem=batch:read-resource(recursive=true, include-runtime=true)&lt;/tt&gt;.&lt;/p&gt;</comment>
                            <comment id="13092081" author="danipiario" created="Thu, 23 Jul 2015 05:24:42 -0400"  >&lt;p&gt;I&apos;m not able to see jobs in CLI because I suspect there is a bug in retrieving deployment and subdeployment information. Perhaps I have a not common installation but I think I didn&apos;t done nothing so strange. I have a domain controller (in host 1) and (currently) one slave host controller (in host 2). I have currently 3 server groups with one server for each started in both the 2 hosts, 1 ear installed per server. The ears deployed inside servers are naturally different (physical names) BUT must have the same deployment name because belong to the same lookup pattern inside my code. So I configured the different deployments to have the same runtime-name.&lt;br/&gt;
Now when I go to the wildfly console I don&apos;t see any subdeployment inside the deployment=my-physical-name.ear, I see this NPE inside log:&lt;/p&gt;

&lt;p&gt;2015-07-23 10:54:23,469 ERROR &lt;span class=&quot;error&quot;&gt;&amp;#91;org.jboss.as.controller.management-operation&amp;#93;&lt;/span&gt; (ServerService Thread Pool &amp;#8211; 154) WFLYCTL0013: Operation (&quot;read-attribute&quot;) failed - address: ([&lt;br/&gt;
    (&quot;deployment&quot; =&amp;gt; &quot;alploy-loyaltybe.ear&quot;),&lt;br/&gt;
    (&quot;subdeployment&quot; =&amp;gt; &quot;loyalty-bundle.jar&quot;),&lt;br/&gt;
    (&quot;subsystem&quot; =&amp;gt; &quot;batch&quot;),&lt;br/&gt;
    (&quot;job&quot; =&amp;gt; &quot;RESOURCE_BUNDLE_JOB&quot;)&lt;br/&gt;
]): java.lang.NullPointerException&lt;br/&gt;
        at org.wildfly.extension.batch.deployment.JobOperationStepHandler.execute(JobOperationStepHandler.java:45)&lt;br/&gt;
        at org.jboss.as.controller.operations.global.ReadAttributeHandler.doExecuteInternal(ReadAttributeHandler.java:174) &lt;span class=&quot;error&quot;&gt;&amp;#91;wildfly-controller-1.0.0.Final.jar:1.0.0.Final&amp;#93;&lt;/span&gt;&lt;br/&gt;
        at org.jboss.as.controller.operations.global.ReadAttributeHandler.doExecute(ReadAttributeHandler.java:137) &lt;span class=&quot;error&quot;&gt;&amp;#91;wildfly-controller-1.0.0.Final.jar:1.0.0.Final&amp;#93;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Notice that code tries to search the deployment with name alploy-loyaltybe.ear, the physical name of my ear but I debug and inside org.jboss.msc.service.ServiceContainerImpl the service is registered (correctly IMO) with the runtime-name of the ear.&lt;br/&gt;
This is of course not directly related with batch or jberet framework.&lt;/p&gt;</comment>
                            <comment id="13092308" author="jamezp" created="Thu, 23 Jul 2015 11:37:25 -0400"  >&lt;p&gt;Yeah that looks like a bug for sure. I&apos;m questioning whether I tested that in domain or not. I sometimes forget to test those kinds of things in domain mode.&lt;/p&gt;

&lt;p&gt;That said I don&apos;t think it should work at that address. It should only work I think at a server level. That&apos;s definitely something I need to sort out though. I&apos;ll file a new issue for that.&lt;/p&gt;</comment>
                            <comment id="13098722" author="ivan.ko" created="Sun, 16 Aug 2015 09:14:35 -0400"  >&lt;p&gt;Possibly not 100% related to same issue, but is very similar. Jar inside War file with batch job.&lt;br/&gt;
web.war&lt;br/&gt;
   WEB-INF &lt;br/&gt;
     classes&lt;br/&gt;
      META-INF&lt;br/&gt;
       batch.xml&lt;br/&gt;
     lib&lt;br/&gt;
       client.jar&lt;br/&gt;
         META-INF&lt;br/&gt;
           batch-jobs&lt;br/&gt;
              mybatch.xml&lt;br/&gt;
The project structure similar to this works just fine with Wildfly 8.0.0 Final. But throwing same stack trace when moved to &lt;br/&gt;
9.0.0 or 9.0.1 .&lt;br/&gt;
 This file structure works with newer Wildfly 9&lt;br/&gt;
   WEB-INF &lt;br/&gt;
     classes&lt;br/&gt;
      META-INF       &lt;br/&gt;
       batch.xml&lt;br/&gt;
       batch-jobs&lt;br/&gt;
       services&lt;br/&gt;
      org.jberet.spi.JobXmlResolver as suggested by Daniele.&lt;br/&gt;
     lib&lt;br/&gt;
       client.jar&lt;br/&gt;
         META-INF&lt;br/&gt;
           batch-jobs&lt;br/&gt;
              mybatch.xml&lt;br/&gt;
It works fine, but not the best solution at the mean time. Is there is any other working solution for the mean time? &lt;br/&gt;
THX &lt;/p&gt;


</comment>
                            <comment id="13321344" author="jamezp" created="Fri, 11 Nov 2016 13:26:34 -0500"  >&lt;p&gt;The pull request allows job XML files in a JAR in a WAR&apos;s `lib` directory to be resolved. It also allows all modules of an `EAR` to see job XML files in libraries in it&apos;s `lib` directory. Also `EAR` modules will be able to see job XML files in dependent modules.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310001">
                    <name>Related</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12658485">JBEAP-6777</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12658484">JBEAP-6776</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12579200">WFLY-4998</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="org.jboss.labs.jira.plugin.jboss-custom-field-types-plugin:multiurl">
                        <customfieldname>Git Pull Request</customfieldname>
                        <customfieldvalues>
                            https://github.com/wildfly/wildfly/pull/9376
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12310641" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Number of attachments</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310640" key="com.atlassian.jira.toolkit:comments">
                        <customfieldname>Number of comments</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>12.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311940" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1|hzxiqv:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310840" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>