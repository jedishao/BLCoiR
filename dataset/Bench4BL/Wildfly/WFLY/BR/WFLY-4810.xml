<!-- 
RSS generated by JIRA (7.2.3#72005-sha1:73be91d2b96fc29303a7eb6820acf420e5d0ed65) at Tue Dec 06 12:27:17 EST 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.jboss.org/si/jira.issueviews:issue-xml/WFLY-4810/WFLY-4810.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>JBoss Issue Tracker</title>
    <link>https://issues.jboss.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>7.2.3</version>
        <build-number>72005</build-number>
        <build-date>06-10-2016</build-date>
    </build-info>

<item>
            <title>[WFLY-4810] FormAuthenticationWebFailoverTestCase(SYNC-tcp) fails frequently</title>
                <link>https://issues.jboss.org/browse/WFLY-4810</link>
                <project id="12313721" key="WFLY">WildFly</project>
                    <description>&lt;p&gt;Seems to have been introduced by &lt;a href=&quot;https://github.com/wildfly/wildfly/pull/7507&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/wildfly/wildfly/pull/7507&lt;/a&gt;&lt;/p&gt;</description>
                <environment></environment>
        <key id="12575663">WFLY-4810</key>
            <summary>FormAuthenticationWebFailoverTestCase(SYNC-tcp) fails frequently</summary>
                <type id="1" iconUrl="https://issues.jboss.org/secure/viewavatar?size=xsmall&amp;avatarId=13263&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.jboss.org/images/icons/priorities/major.svg">Major</priority>
                        <status id="5" iconUrl="https://issues.jboss.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Done</resolution>
                                        <assignee username="pferraro">Paul Ferraro</assignee>
                                    <reporter username="swd847">Stuart Douglas</reporter>
                        <labels>
                    </labels>
                <created>Fri, 19 Jun 2015 06:51:45 -0400</created>
                <updated>Fri, 26 Jun 2015 23:29:44 -0400</updated>
                            <resolved>Fri, 26 Jun 2015 23:27:47 -0400</resolved>
                                                    <fixVersion>10.0.0.Alpha4</fixVersion>
                                    <component>Clustering</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="13081496" author="swd847" created="Fri, 19 Jun 2015 07:12:50 -0400"  >&lt;p&gt;It looks like this can be reproduced reliably by putting a thread.sleep() in io.undertow.security.impl.FormAuthenticationMechanism#sendChallenge(), just before the return statement. Basically I think there is a race with the response being returned and the cache data being committed. &lt;/p&gt;

&lt;p&gt;The client will see the response being done as soon as Undertow has served the page, however the request is not done on the server side until the call stack has returned. If the client immediately makes a second request it is possible for this request to hit the server before the first request is done from the servers point of view.&lt;/p&gt;

&lt;p&gt;I am not sure if there is much that can be done other than adding a short Thread.sleep() to the test to make sure the cache data is committed. &lt;/p&gt;
</comment>
                            <comment id="13081580" author="dmlloyd" created="Fri, 19 Jun 2015 09:15:38 -0400"  >&lt;p&gt;This sounds like a problem that might exist in the real world though.  Don&apos;t we want to ensure that any cache data is committed before we return the HTTP request?&lt;/p&gt;</comment>
                            <comment id="13081607" author="swd847" created="Fri, 19 Jun 2015 09:35:01 -0400"  >&lt;p&gt;It is actually pretty unlikely to be a problem in the real world for a few reasons:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;the network is much slower, which gives the request time to commit&lt;/li&gt;
	&lt;li&gt;the user takes some time to fill out the form and send the response&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;We could add some kind of &apos;flush&apos; method to the session I guess, and manually invoke it before returning the response, however in general terms this is hard to achieve. The response can be closed at pretty much any point, and after that happens it is still valid to modify the session. &lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="org.jboss.labs.jira.plugin.jboss-custom-field-types-plugin:multiurl">
                        <customfieldname>Git Pull Request</customfieldname>
                        <customfieldvalues>
                            https://github.com/wildfly/wildfly/pull/7650, https://github.com/wildfly/wildfly/pull/7634
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12310641" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Number of attachments</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310640" key="com.atlassian.jira.toolkit:comments">
                        <customfieldname>Number of comments</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311940" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1|hzx1gv:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310840" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>