<!-- 
RSS generated by JIRA (7.2.3#72005-sha1:73be91d2b96fc29303a7eb6820acf420e5d0ed65) at Tue Dec 06 15:28:28 EST 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.jboss.org/si/jira.issueviews:issue-xml/WFLY-5480/WFLY-5480.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>JBoss Issue Tracker</title>
    <link>https://issues.jboss.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>7.2.3</version>
        <build-number>72005</build-number>
        <build-date>06-10-2016</build-date>
    </build-info>

<item>
            <title>[WFLY-5480] SPEC JMS 2007 benchmark fails with AMQ214013: Failed to decode packet</title>
                <link>https://issues.jboss.org/browse/WFLY-5480</link>
                <project id="12313721" key="WFLY">WildFly</project>
                    <description>&lt;p&gt;But I have another problem, when I removed trace logs from config I&apos;m not able to run benchmark on localhost to the end, because clients starts getting :&lt;br/&gt;
AMQ214013: Failed to decode packet&lt;br/&gt;
java.lang.IndexOutOfBoundsException: readerIndex: 2130706436 (expected: 0 &amp;lt;= readerIndex &amp;lt;= writerIndex(2943))&lt;br/&gt;
at io.netty.buffer.AbstractByteBuf.readerIndex(AbstractByteBuf.java:73)&lt;br/&gt;
at io.netty.buffer.WrappedByteBuf.readerIndex(WrappedByteBuf.java:99)&lt;br/&gt;
at org.apache.activemq.artemis.core.buffers.impl.ChannelBufferWrapper.readerIndex(ChannelBufferWrapper.java:405)&lt;br/&gt;
at org.apache.activemq.artemis.core.message.impl.MessageImpl.decode(MessageImpl.java:1052)&lt;br/&gt;
at org.apache.activemq.artemis.core.message.impl.MessageImpl.decodeFromBuffer(MessageImpl.java:459)&lt;br/&gt;
at org.apache.activemq.artemis.core.protocol.core.impl.wireformat.SessionReceiveMessage.decode(SessionReceiveMessage.java:94)&lt;br/&gt;
at org.apache.activemq.artemis.core.protocol.ClientPacketDecoder.decode(ClientPacketDecoder.java:42)&lt;br/&gt;
at org.apache.activemq.artemis.core.protocol.core.impl.RemotingConnectionImpl.bufferReceived(RemotingConnectionImpl.java:371)&lt;br/&gt;
at org.apache.activemq.artemis.core.client.impl.ClientSessionFactoryImpl$DelegatingBufferHandler.bufferReceived(ClientSessionFactoryImpl.java:1374)&lt;br/&gt;
at org.apache.activemq.artemis.core.remoting.impl.netty.ActiveMQChannelHandler.channelRead(ActiveMQChannelHandler.java:73)&lt;br/&gt;
at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:339)&lt;br/&gt;
at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:324)&lt;br/&gt;
at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:242)&lt;br/&gt;
at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:339)&lt;br/&gt;
at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:324)&lt;br/&gt;
at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:847)&lt;br/&gt;
at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteCha&lt;br/&gt;
nnel.java:131)&lt;br/&gt;
at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:511)&lt;br/&gt;
at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:468)&lt;br/&gt;
at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:382)&lt;br/&gt;
at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:354)&lt;br/&gt;
at io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:111)&lt;br/&gt;
at java.lang.Thread.run(Thread.java:745)&lt;br/&gt;
and&lt;br/&gt;
Thread-9 (ActiveMQ-client-global-threads-1266561810): Uncaught exception.&lt;br/&gt;
java.lang.NumberFormatException: null&lt;br/&gt;
at java.lang.Integer.parseInt(Integer.java:542)&lt;br/&gt;
at java.lang.Integer.valueOf(Integer.java:766)&lt;br/&gt;
at org.apache.activemq.artemis.utils.TypedProperties.getIntProperty(TypedProperties.java:280)&lt;br/&gt;
at org.apache.activemq.artemis.core.message.impl.MessageImpl.getIntProperty(MessageImpl.java:811)&lt;br/&gt;
at org.apache.activemq.artemis.jms.client.ActiveMQMessage.getIntProperty(ActiveMQMessage.java:578)&lt;br/&gt;
at org.spec.jms.agents.SPECWorkerThread.receivedMessage(SPECWorkerThread.java:849)&lt;br/&gt;
at org.spec.jms.agents.SPECWorkerThread.onMessage(SPECWorkerThread.java:820)&lt;br/&gt;
at org.apache.activemq.artemis.jms.client.JMSMessageListenerWrapper.onMessage(JMSMessageListenerWrapper.java:100)&lt;br/&gt;
at org.apache.activemq.artemis.core.client.impl.ClientConsumerImpl.callOnMessage(ClientConsumerImpl.java:1089)&lt;br/&gt;
at org.apache.activemq.artemis.core.client.impl.ClientConsumerImpl.access$400(ClientConsumerImpl.java:47)&lt;br/&gt;
at org.apache.activemq.artemis.core.client.impl.ClientConsumerImpl$Runner.run(ClientConsumerImpl.java:1224)&lt;br/&gt;
at org.apache.activemq.artemis.utils.OrderedExecutorFactory$OrderedExecutor$1.run(OrderedExecutorFactory.java:105)&lt;br/&gt;
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)&lt;br/&gt;
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)&lt;br/&gt;
at java.lang.Thread.run(Thread.java:745)&lt;br/&gt;
Thread-3 (ActiveMQ-client-global-threads-1266561810): Uncaught exception.&lt;br/&gt;
javax.jms.IllegalStateException: AMQ119027: Could not find reference on consumer ID=0, messageId = 104,833 queue = 127\.0\.0\.1_VM1_SPAgent7_0.SP_CallForOffersEH_7_EHID_1PF0&lt;br/&gt;
at org.apache.activemq.artemis.core.protocol.core.impl.ChannelImpl.sendBlocking(ChannelImpl.java:410)&lt;br/&gt;
at org.apache.activemq.artemis.core.protocol.core.impl.ActiveMQSessionContext.sendACK(ActiveMQSessionContext.java:461)&lt;br/&gt;
at org.apache.activemq.artemis.core.client.impl.ClientSessionImpl.acknowledge(ClientSessionImpl.java:765)&lt;br/&gt;
at org.apache.activemq.artemis.core.client.impl.ClientConsumerImpl.doAck(ClientConsumerImpl.java:1212)&lt;br/&gt;
at org.apache.activemq.artemis.core.client.impl.ClientConsumerImpl.flushAcks(ClientConsumerImpl.java:830)&lt;br/&gt;
at org.apache.activemq.artemis.core.client.impl.ClientSessionImpl.flushAcks(ClientSessionImpl.java:1852)&lt;br/&gt;
at org.apache.activemq.artemis.core.client.impl.ClientSessionImpl.commit(ClientSessionImpl.java:501)&lt;br/&gt;
at org.apache.activemq.artemis.core.client.impl.DelegatingSession.commit(DelegatingSession.java:159)&lt;br/&gt;
at org.apache.activemq.artemis.jms.client.ActiveMQSession.commit(ActiveMQSession.java:218)&lt;br/&gt;
at org.spec.jms.eventhandler.sp.SP_CallForOffersEH.handleMessage(SP_CallForOffersEH.java:306)&lt;br/&gt;
at org.spec.jms.agents.SPECWorkerThread.onMessage(SPECWorkerThread.java:821)&lt;br/&gt;
at org.apache.activemq.artemis.jms.client.JMSMessageListenerWrapper.onMessage(JMSMessageListenerWrapper.java:100)&lt;br/&gt;
at org.apache.activemq.artemis.core.client.impl.ClientConsumerImpl.callOnMessage(ClientConsumerImpl.java:1089)&lt;br/&gt;
at org.apache.activemq.artemis.core.client.impl.ClientConsumerImpl.access$400(ClientConsumerImpl.java:47)&lt;br/&gt;
at org.apache.activemq.artemis.core.client.impl.ClientConsumerImpl$Runner.run(ClientConsumerImpl.java:1224)&lt;br/&gt;
at org.apache.activemq.artemis.utils.OrderedExecutorFactory$OrderedExecutor$1.run(OrderedExecutorFactory.java:105)&lt;br/&gt;
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)&lt;br/&gt;
at java.util.concurrent.ThreadPoolExecut&lt;/p&gt;</description>
                <environment></environment>
        <key id="12587816">WFLY-5480</key>
            <summary>SPEC JMS 2007 benchmark fails with AMQ214013: Failed to decode packet</summary>
                <type id="1" iconUrl="https://issues.jboss.org/secure/viewavatar?size=xsmall&amp;avatarId=13263&amp;avatarType=issuetype">Bug</type>
                                            <priority id="1" iconUrl="https://issues.jboss.org/images/icons/priorities/blocker.svg">Blocker</priority>
                        <status id="5" iconUrl="https://issues.jboss.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Done</resolution>
                                        <assignee username="jmesnil">Jeff Mesnil</assignee>
                                    <reporter username="okalman">Ond&#345;ej Kalman</reporter>
                        <labels>
                    </labels>
                <created>Tue, 6 Oct 2015 13:55:37 -0400</created>
                <updated>Tue, 26 Jan 2016 03:45:45 -0500</updated>
                            <resolved>Tue, 26 Jan 2016 03:45:45 -0500</resolved>
                                                    <fixVersion>10.0.0.Final</fixVersion>
                                    <component>JMS</component>
                        <due></due>
                            <votes>3</votes>
                                    <watches>12</watches>
                                                                <comments>
                            <comment id="13121957" author="flavia.rainone" created="Mon, 26 Oct 2015 10:06:43 -0400"  >&lt;p&gt;I found out the following: the bug is caused by a race condition, probably at org.apache.activemq.artemis.core.message.impl.MessageImpl.&lt;br/&gt;
If I put a breakpoint at the line that reads the problematic index (the line that reads the value of 2130706436), the index value is always read correctly with the breakpoint on (the read number varies, but is usually approximately 2280). Would the bug be on the server side, the client would always read an incorrect number no matter if there is a breakpoint or not.&lt;br/&gt;
Reading the code of MessageImpl, I saw that there is already some code synchronizing the access to the buffer to handle race conditions involving the problematic buffer... now I wonder if this bug is related.&lt;br/&gt;
At the MessagingImpl constructor:&lt;br/&gt;
     // This MUST be synchronized using the monitor on the other message to prevent it running concurrently&lt;br/&gt;
      // with getEncodedBuffer(), otherwise can introduce race condition when delivering concurrently to&lt;br/&gt;
      // many subscriptions and bridging to other nodes in a cluster&lt;br/&gt;
      synchronized (other) {&lt;br/&gt;
In case somebody is wondering what is end of body position about (the value that is sometimes read as being 2130706436), we can see a description at the line that encodes it:&lt;br/&gt;
   // Clebert: I&apos;ve started sending this on encoding due to conversions between protocols&lt;br/&gt;
         //          and making sure we are not losing the buffer start position between protocols&lt;br/&gt;
         this.endOfBodyPosition = bodySize;&lt;br/&gt;
A more deep investigation on the side of amq code will be need to find the cause of all this (I&apos;ll need to edit the code to dig deeper).&lt;/p&gt;

&lt;p&gt;Btw, I am using wildfly master to run the tests.&lt;/p&gt;</comment>
                            <comment id="13122215" author="flavia.rainone" created="Tue, 27 Oct 2015 03:47:10 -0400"  >&lt;p&gt;Using &lt;a href=&quot;https://github.com/clebertsuconic/activemq-artemis/tree/1.1.0-x&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/clebertsuconic/activemq-artemis/tree/1.1.0-x&lt;/a&gt; to run with wildfly (so I could add some prints to the code and make a deeper investigation) did not work... my local copy of wildfly won&apos;t build with it (I can&apos;t find a tag with the 1.1.0.wildfly-007 version of activemq-artemis, which is the version being used by my local copy of wildfly, that&apos;s why I tried using the branch above).&lt;/p&gt;</comment>
                            <comment id="13122640" author="clebert.suconic" created="Tue, 27 Oct 2015 13:28:30 -0400"  >&lt;p&gt;Flavia if you want to build 1.1.x on artemis, you will need this commit for wildfly:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/clebertsuconic/wildfly/commit/8af984c656440b039855303706ef663c567e2921&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/clebertsuconic/wildfly/commit/8af984c656440b039855303706ef663c567e2921&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13145417" author="okalman" created="Wed, 6 Jan 2016 08:19:16 -0500"  >&lt;p&gt;Hi, is there any progress with this issue?&lt;/p&gt;</comment>
                            <comment id="13146450" author="geturner" created="Fri, 8 Jan 2016 10:29:12 -0500"  >&lt;p&gt;Our project would REALLY like to see this fixed.  I was completely surprised to find that it was not fixed in the CR5 release.  This has plagued us since WF10 came out with this release of Artemis.  We experience this when two subscribers are on a topic and a large message is consumed.  Do you have a date when this will be fixed?  I have been looking for a way to cleanly embed AMQ in WF mainly because of this bug.&lt;/p&gt;</comment>
                            <comment id="13146729" author="mnovak" created="Sat, 9 Jan 2016 16:21:32 -0500"  >&lt;p&gt;&lt;a href=&quot;https://issues.jboss.org/secure/ViewProfile.jspa?name=gtexcalibur&quot; class=&quot;user-hover&quot; rel=&quot;gtexcalibur&quot;&gt;George Turner&lt;/a&gt; I tried to have 2 subscribers on topic receiving 1000 large messages but could not reproduce it. Could you share more details, please? A test or code of clients would help a lot.&lt;/p&gt;</comment>
                            <comment id="13146730" author="clebert.suconic" created="Sat, 9 Jan 2016 18:18:06 -0500"  >&lt;p&gt;This was likely caused by the lack of back pressure flow control. I would try again with 1.2.0 (or we also posted these changes into 1.1.0-wildfly fork). If this is still an issue we will take a look.&lt;/p&gt;</comment>
                            <comment id="13146735" author="geturner" created="Sun, 10 Jan 2016 08:39:54 -0500"  >&lt;p&gt;Here are the stack traces we get, this is from server.log&lt;/p&gt;

&lt;p&gt;2016-01-06 10:18:23,746 ERROR &lt;span class=&quot;error&quot;&gt;&amp;#91;org.apache.activemq.artemis.core.client&amp;#93;&lt;/span&gt; (Thread-211 (ActiveMQ-client-global-threads-915163478)) AMQ214013: Failed to decode packet: java.lang.IndexOutOfBoundsException: readerIndex: 2130706436 (expected: 0 &amp;lt;= readerIndex &amp;lt;= writerIndex(1068))&#160;&#160;&#160;&#160;&#160;&#160;&#160; at io.netty.buffer.AbstractByteBuf.readerIndex(AbstractByteBuf.java:73)&#160;&#160;&#160;&#160;&#160;&#160;&#160; at io.netty.buffer.WrappedByteBuf.readerIndex(WrappedByteBuf.java:99)&#160;&#160;&#160;&#160;&#160;&#160;&#160; at org.apache.activemq.artemis.core.buffers.impl.ChannelBufferWrapper.readerIndex(ChannelBufferWrapper.java:332)&#160;&#160;&#160;&#160;&#160;&#160;&#160; at org.apache.activemq.artemis.core.message.impl.MessageImpl.decode(MessageImpl.java:918)&#160;&#160;&#160;&#160;&#160;&#160;&#160; at org.apache.activemq.artemis.core.message.impl.MessageImpl.decodeFromBuffer(MessageImpl.java:408)&#160;&#160;&#160;&#160;&#160;&#160;&#160; at org.apache.activemq.artemis.core.protocol.core.impl.wireformat.SessionReceiveMessage.decode(SessionReceiveMessage.java:86)&#160;&#160;&#160;&#160;&#160;&#160;&#160; at org.apache.activemq.artemis.core.protocol.ClientPacketDecoder.decode(ClientPacketDecoder.java:41)&#160;&#160;&#160;&#160;&#160;&#160;&#160; at org.apache.activemq.artemis.core.protocol.core.impl.RemotingConnectionImpl.bufferReceived(RemotingConnectionImpl.java:324)&#160;&#160;&#160;&#160;&#160;&#160;&#160; at org.apache.activemq.artemis.core.client.impl.ClientSessionFactoryImpl$DelegatingBufferHandler.bufferReceived(ClientSessionFactoryImpl.java:1105)&#160;&#160;&#160;&#160;&#160;&#160;&#160; at org.apache.activemq.artemis.core.remoting.impl.invm.InVMConnection$1.run(InVMConnection.java:171)&#160;&#160;&#160;&#160;&#160;&#160;&#160; at org.apache.activemq.artemis.utils.OrderedExecutorFactory$OrderedExecutor$1.run(OrderedExecutorFactory.java:94)&#160;&#160;&#160;&#160;&#160;&#160;&#160; at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)&#160;&#160;&#160;&#160;&#160;&#160;&#160; at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)&#160;&#160;&#160;&#160;&#160;&#160;&#160; at java.lang.Thread.run(Thread.java:745)&lt;/p&gt;

&lt;p&gt;Here is from the client:&lt;/p&gt;

&lt;p&gt;20160106 10:17:33.463&#160;&#160; 75&#160;&#160;&#160;&#160;&#160; ERROR RemotingConnectionImpl bufferReceived&#160;&#160;&#160;&#160; AMQ214013: Failed to decode packetjava.lang.IndexOutOfBoundsException: readerIndex: 2130706436 (expected: 0 &amp;lt;= readerIndex &amp;lt;= writerIndex(729))&#160;&#160;&#160;&#160;&#160;&#160;&#160; at io.netty.buffer.AbstractByteBuf.readerIndex(AbstractByteBuf.java:73)&#160;&#160;&#160;&#160;&#160;&#160;&#160; at io.netty.buffer.WrappedByteBuf.readerIndex(WrappedByteBuf.java:99)&#160;&#160;&#160;&#160;&#160;&#160;&#160; at org.apache.activemq.artemis.core.buffers.impl.ChannelBufferWrapper.readerIndex(ChannelBufferWrapper.java:332)&#160;&#160;&#160;&#160;&#160;&#160;&#160; at org.apache.activemq.artemis.core.message.impl.MessageImpl.decode(MessageImpl.java:918)&#160;&#160;&#160;&#160;&#160;&#160;&#160; at org.apache.activemq.artemis.core.message.impl.MessageImpl.decodeFromBuffer(MessageImpl.java:408)&#160;&#160;&#160;&#160;&#160;&#160;&#160; at org.apache.activemq.artemis.core.protocol.core.impl.wireformat.SessionReceiveMessage.decode(SessionReceiveMessage.java:86)&#160;&#160;&#160;&#160;&#160;&#160;&#160; at org.apache.activemq.artemis.core.protocol.ClientPacketDecoder.decode(ClientPacketDecoder.java:41)&#160;&#160;&#160;&#160;&#160;&#160;&#160; at org.apache.activemq.artemis.core.protocol.core.impl.RemotingConnectionImpl.bufferReceived(RemotingConnectionImpl.java:324)&#160;&#160;&#160;&#160;&#160;&#160;&#160; at org.apache.activemq.artemis.core.client.impl.ClientSessionFactoryImpl$DelegatingBufferHandler.bufferReceived(ClientSessionFactoryImpl.java:1105)&#160;&#160;&#160;&#160;&#160;&#160;&#160; at org.apache.activemq.artemis.core.remoting.impl.netty.ActiveMQChannelHandler.channelRead(ActiveMQChannelHandler.java:68)&#160;&#160;&#160;&#160;&#160;&#160;&#160; at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:339)&#160;&#160;&#160;&#160;&#160;&#160;&#160; at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:324)&#160;&#160;&#160;&#160;&#160;&#160;&#160; at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:242)&#160;&#160;&#160;&#160;&#160;&#160;&#160; at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:339)&#160;&#160;&#160;&#160;&#160;&#160;&#160; at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:324)&#160;&#160;&#160;&#160;&#160;&#160;&#160; at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:847)&#160;&#160;&#160;&#160;&#160;&#160;&#160; at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:131)&#160;&#160;&#160;&#160;&#160;&#160;&#160; at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:511)&#160;&#160;&#160;&#160;&#160;&#160;&#160; at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:468)&#160;&#160;&#160;&#160;&#160;&#160;&#160; at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:382)&#160;&#160;&#160;&#160;&#160;&#160;&#160; at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:354)&#160;&#160;&#160;&#160;&#160;&#160;&#160; at io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:111)&#160;&#160;&#160;&#160;&#160;&#160;&#160; at java.lang.Thread.run(Thread.java:745)&lt;/p&gt;

&lt;p&gt;I would be glad to try the latest (or other) build to see if it is fixed, just provide download URL and meager update/replace instructions for the Artemis build.&lt;/p&gt;</comment>
                            <comment id="13146737" author="mnovak" created="Sun, 10 Jan 2016 11:54:13 -0500"  >&lt;p&gt;Thanks George for traces! What type of message do you send and what size? Do you have flow control set on connection factory?&lt;/p&gt;</comment>
                            <comment id="13147220" author="geturner" created="Mon, 11 Jan 2016 18:41:09 -0500"  >&lt;p&gt;Here is the messaging section from the standalone-full.xml.  I added &lt;span class=&quot;error&quot;&gt;&amp;#91;consumer-window-size=&amp;quot;10485760&amp;quot; producer-window-size=&amp;quot;10485760&amp;quot;&amp;#93;&lt;/span&gt; to the RemoteConnectionFactory and it did not seem to help.&lt;/p&gt;

&lt;p&gt;&amp;lt;subsystem xmlns=&quot;urn:jboss:domain:messaging-activemq:1.0&quot;&amp;gt;    &amp;lt;server name=&quot;default&quot; persistence-enabled=&quot;false&quot;&amp;gt;        &amp;lt;security enabled=&quot;false&quot;/&amp;gt;        &amp;lt;security-setting name=&quot;#&quot;&amp;gt;            &amp;lt;role name=&quot;guest&quot; send=&quot;true&quot; consume=&quot;true&quot; create-non-durable-queue=&quot;true&quot; delete-non-durable-queue=&quot;true&quot;/&amp;gt;        &amp;lt;/security-setting&amp;gt;        &amp;lt;address-setting name=&quot;#&quot; dead-letter-address=&quot;jms.queue.DLQ&quot; expiry-address=&quot;jms.queue.ExpiryQueue&quot; max-size-bytes=&quot;104857600&quot;                         page-size-bytes=&quot;2097152&quot; message-counter-history-day-limit=&quot;10&quot; address-full-policy=&quot;BLOCK&quot;/&amp;gt;        &amp;lt;http-connector name=&quot;http-connector&quot; socket-binding=&quot;http&quot; endpoint=&quot;http-acceptor&quot;/&amp;gt;        &amp;lt;http-connector name=&quot;http-connector-throughput&quot; socket-binding=&quot;http&quot; endpoint=&quot;http-acceptor-throughput&quot;&amp;gt;            &amp;lt;param name=&quot;batch-delay&quot; value=&quot;50&quot;/&amp;gt;        &amp;lt;/http-connector&amp;gt;        &amp;lt;in-vm-connector name=&quot;in-vm&quot; server-id=&quot;0&quot;/&amp;gt;        &amp;lt;http-acceptor name=&quot;http-acceptor&quot; http-listener=&quot;default&quot;/&amp;gt;        &amp;lt;http-acceptor name=&quot;http-acceptor-throughput&quot; http-listener=&quot;default&quot;&amp;gt;            &amp;lt;param name=&quot;batch-delay&quot; value=&quot;50&quot;/&amp;gt;            &amp;lt;param name=&quot;direct-deliver&quot; value=&quot;false&quot;/&amp;gt;        &amp;lt;/http-acceptor&amp;gt;        &amp;lt;in-vm-acceptor name=&quot;in-vm&quot; server-id=&quot;0&quot;/&amp;gt;        &amp;lt;jms-queue name=&quot;ExpiryQueue&quot; entries=&quot;java:/jms/queue/ExpiryQueue&quot;/&amp;gt;        &amp;lt;jms-queue name=&quot;DLQ&quot; entries=&quot;java:/jms/queue/DLQ&quot;/&amp;gt;        &amp;lt;jms-topic name=&quot;AtmosphericParameters&quot; entries=&quot;java:jboss/exported/topic/AtmosphericParameters&quot;/&amp;gt;        &amp;lt;jms-topic name=&quot;C2SimInput&quot; entries=&quot;java:jboss/exported/topic/C2SimInput&quot;/&amp;gt;        &amp;lt;jms-topic name=&quot;C2SimNotify&quot; entries=&quot;java:jboss/exported/topic/C2SimNotify&quot;/&amp;gt;        &amp;lt;jms-topic name=&quot;C2SimCatalogUpdate&quot; entries=&quot;java:jboss/exported/topic/C2SimCatalogUpdate&quot;/&amp;gt;        &amp;lt;jms-topic name=&quot;CalibrationThresholds&quot; entries=&quot;java:jboss/exported/topic/CalibrationThresholds&quot;/&amp;gt;&amp;lt;jms-topic name=&quot;TracksIn&quot; entries=&quot;java:jboss/exported/topic/TracksIn&quot;/&amp;gt;&amp;lt;jms-topic name=&quot;UncalibratedCuedSearchRequestMsg&quot; entries=&quot;java:jboss/exported/topic/UncalibratedCuedSearchRequestMsg&quot;/&amp;gt;&amp;lt;connection-factory name=&quot;InVmConnectionFactory&quot; connectors=&quot;in-vm&quot; entries=&quot;java:/ConnectionFactory&quot;/&amp;gt;&amp;lt;connection-factory name=&quot;RemoteConnectionFactory&quot; connectors=&quot;http-connector&quot; entries=&quot;java:jboss/exported/jms/RemoteConnectionFactory&quot;                    consumer-window-size=&quot;10485760&quot; producer-window-size=&quot;10485760&quot;/&amp;gt;&amp;lt;pooled-connection-factory name=&quot;activemq-ra&quot; transaction=&quot;xa&quot; connectors=&quot;in-vm&quot; entries=&quot;java:/JmsXA java:jboss/DefaultJMSConnectionFactory&quot;/&amp;gt;&lt;/p&gt;</comment>
                            <comment id="13147221" author="clebert.suconic" created="Mon, 11 Jan 2016 19:09:57 -0500"  >&lt;p&gt;you could build artemis/master and replace the jars within wildfly as a test. &lt;/p&gt;

&lt;p&gt;Or if you have access to building wildfly, you could download wildfly, and replace the version of artemis by 1.2.0 and give it a try.&lt;/p&gt;


&lt;p&gt;The best way though would be if you could help me replicate this issue (if you still see an issue).&lt;/p&gt;</comment>
                            <comment id="13147223" author="geturner" created="Mon, 11 Jan 2016 19:59:13 -0500"  >&lt;p&gt;I really don&apos;t have a simple way to replicate the issue.  This is a large program and I cannot &quot;share&quot; the code.  None of it is classified, but it is treated as &quot;For OfficialUseOnly&quot;.It took us quite a while after moving to WF10 to figure out that two processes on the same topic created the exception.  We have a &quot;DataLogger&quot; process that attaches to every topic and logs every message.  If we disable that process, we have ZERO errors.  When we were debugging, we saw a spot in the code (netty we think) that looked at the size of the message, and if it was too big, it was broken into smaller chunks, and the multiple consumers code broke there.  The other people who have commented on this bug also claimed it as a race condition when more than one client was consuming the same message.  I read the flow control documentation, and I am going to try some changes to see if I can get different results anywhere.&lt;/p&gt;</comment>
                            <comment id="13147225" author="clebert.suconic" created="Mon, 11 Jan 2016 20:14:05 -0500"  >&lt;p&gt;The Flow control thing I was mentioning was a feature we implemented on Artemis 1.2.0. it still not part of the Artemis fork for wildfly, regarding Network flow control. which is different from the credits from control implemented at artemis.&lt;/p&gt;

&lt;p&gt;Now reading Flavia&apos;s comments it seems suspicious.  can you try the latest Artemis (1.2.0) on Wildfly just for testing?&lt;/p&gt;</comment>
                            <comment id="13147230" author="clebert.suconic" created="Mon, 11 Jan 2016 20:42:01 -0500"  >&lt;p&gt;I want to do some refactoring and avoid the copy between MessageIMpl and the packet sending. But if you could provide some more information about how to replicate this.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;do you have clustering on messaging? (it doesn&apos;t seem relevant to your bug, right?)&lt;/li&gt;
	&lt;li&gt;how many active subscriptions?&lt;/li&gt;
	&lt;li&gt;how many messages sent? how you send them (transactionally, non transactionally?)&lt;/li&gt;
	&lt;li&gt;persistent messages?&lt;/li&gt;
	&lt;li&gt;avg size of the messages? (are they all the same size)&lt;/li&gt;
	&lt;li&gt;type of the messages (Text, Object, Binary)&lt;/li&gt;
	&lt;li&gt;what properties are you using (how many properties, what size of each property).&lt;/li&gt;
	&lt;li&gt;are all the subscriptions using the same size of the queues? what&apos;s the min / max /avg size of the subscription names? (and how many of them)?&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;If you provide me this info we may have a solution soon, in top of the small refactoring I want to make.&lt;/p&gt;</comment>
                            <comment id="13147231" author="clebert.suconic" created="Mon, 11 Jan 2016 20:43:28 -0500"  >&lt;p&gt;BTW: If the issue is the race, I don&apos;t think flow control is going to hellp you. give me some help on identifying your use case and we will do the best we can.&lt;/p&gt;</comment>
                            <comment id="13147232" author="geturner" created="Mon, 11 Jan 2016 20:48:45 -0500"  >&lt;p&gt;I just downloaded 1.2 and was getting ready to apply it to my current WF installation.  Should I hold off?&lt;br/&gt;
Answers:&lt;br/&gt;
We have no clustering enabled.&lt;br/&gt;
Normally only two to three subscribers per topic.&lt;br/&gt;
Non-transactional, non-durable, all Object, very few properties, type String usually, small strings&lt;br/&gt;
About 100 topics total.  Not sure what you mean on &quot;same size of the queues?&quot; or the subscription names?&lt;br/&gt;
Size of the messages (different topics, basically there is a topic per message class) range from fairly small (&amp;lt; 1k) to pretty big ( I don&apos;t have the numbers right now, but we have some with roughly 100 &quot;doubles&quot;)&lt;/p&gt;</comment>
                            <comment id="13147233" author="geturner" created="Mon, 11 Jan 2016 20:49:09 -0500"  >&lt;p&gt;Oh, non-persistent as well&lt;/p&gt;</comment>
                            <comment id="13147234" author="geturner" created="Mon, 11 Jan 2016 20:51:11 -0500"  >&lt;p&gt;Yes, setting consumer-window-size did not help.  set to -1 did not help, set to 1048576 did not help, set to 0 same exception, even hung one client&lt;/p&gt;</comment>
                            <comment id="13147235" author="geturner" created="Mon, 11 Jan 2016 20:56:41 -0500"  >&lt;p&gt;I guess I am not swapping 1.2 into my current install, as the wildfly specific jars for protocol and ra are not in the build.&lt;/p&gt;</comment>
                            <comment id="13147237" author="clebert.suconic" created="Mon, 11 Jan 2016 21:08:30 -0500"  >&lt;p&gt;&amp;gt;&amp;gt; (different topics, basically there is a topic per message class)&lt;/p&gt;

&lt;p&gt;what this means? you usually consume the message fairly quickly? is that what you mean?&lt;/p&gt;


&lt;p&gt;&amp;gt;&amp;gt;&amp;gt; Not sure what you mean on &quot;same size of the queues?&quot; or the subscription names?&lt;/p&gt;

&lt;p&gt;I meant.. what&apos;s the avg subscription name&apos;s size... say subs1, and subs1WithToastOnTop...  are you using different sizes on the subscriptions? I&quot;m just looking for use cases that could cause races or things like that before I write the test.&lt;/p&gt;


&lt;p&gt;&amp;gt; I just downloaded 1.2 and was getting ready to apply it to my current WF installation. Should I hold off?&lt;/p&gt;

&lt;p&gt;The best way would be you building wildfly:  &lt;a href=&quot;https://github.com/clebertsuconic/wildfly/tree/snapshot&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/clebertsuconic/wildfly/tree/snapshot&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;That is.. if you can... (optional at this point).&lt;/p&gt;



&lt;p&gt;We will need to run some tests tomorrow. &lt;/p&gt;

&lt;p&gt;BTW: do you use any IRC client? maybe we could benefit from instant chatting over IRC?&lt;/p&gt;
</comment>
                            <comment id="13147240" author="geturner" created="Mon, 11 Jan 2016 22:12:55 -0500"  >&lt;p&gt;I really don&apos;t know what you mean by subscription name or subscription names size.  Are you saying the &quot;topic&quot; name?&lt;br/&gt;
Also and FYI, this program went thru a lot of investigation on creating smaller messages because we thought we would be on a WAN and was worried about bandwidth, so several message classes implement Externalizable.  But the same code is used to read/write to files, and we have not seen any problems with that code.&lt;br/&gt;
We do not use any IRC clients.&lt;/p&gt;</comment>
                            <comment id="13147242" author="clebert.suconic" created="Mon, 11 Jan 2016 22:54:38 -0500"  >&lt;p&gt;I meant the topic subscription name. what name size are you using? are you diverging a lot on the name size?&lt;/p&gt;</comment>
                            <comment id="13147625" author="geturner" created="Tue, 12 Jan 2016 10:14:11 -0500"  >&lt;p&gt;We are not using durable, so we have no unique subscription names.&lt;/p&gt;</comment>
                            <comment id="13148417" author="clebert.suconic" created="Wed, 13 Jan 2016 19:12:23 -0500"  >&lt;p&gt;I can&apos;t hit this issue on any test I made.&lt;br/&gt;
SpecJMS is passing fine...&lt;/p&gt;


&lt;p&gt;if you build a snapshot of artemis from github, you could then build wildfly here:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/clebertsuconic/wildfly/tree/snapshot&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/clebertsuconic/wildfly/tree/snapshot&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;and give a try with our master on wildfly. (the produced wildfly under ./build/target will have artemis/master)&lt;/p&gt;




&lt;p&gt;if you still hit an issue, can you try isolating your issue on a reproduceable testcase? I am willing to help but I need your help to replicate the issue. You could create a small testcase that goes through the various message sizes you have... if I can reproduce this I&apos;m sure I can fix it quickly.. if you help us we will do it.&lt;/p&gt;</comment>
                            <comment id="13148421" author="geturner" created="Wed, 13 Jan 2016 19:24:33 -0500"  >&lt;p&gt;I am really not setup to build.  In the next few days I will try to create a test case.&lt;/p&gt;</comment>
                            <comment id="13148757" author="flavia.rainone" created="Thu, 14 Jan 2016 09:05:09 -0500"  >&lt;p&gt;Hey everyone. I&apos;m still digging this, and it appears that the problem is not related to netty, but to a race condition in Active MQ.&lt;br/&gt;
The server is sending the wrong size to the client, and the problem is not in the client side, but on the server. I&apos;ll keep you posted.&lt;/p&gt;</comment>
                            <comment id="13148821" author="geturner" created="Thu, 14 Jan 2016 09:54:23 -0500"  >&lt;p&gt;REALLY glad to hear this, cause creating a reproducible case in our baseline is tough.  Especially as I am seeing that it might be heavily related to the ObjectMessage itself.  Is what you found related to the that?&lt;/p&gt;</comment>
                            <comment id="13148899" author="clebert.suconic" created="Thu, 14 Jan 2016 10:44:50 -0500"  >&lt;p&gt;&lt;a href=&quot;https://issues.jboss.org/secure/ViewProfile.jspa?name=flavia.rainone&quot; class=&quot;user-hover&quot; rel=&quot;flavia.rainone&quot;&gt;Flavia Rainone&lt;/a&gt; we have done a lot of improvements on Artemis that are not still part of the EAP release. You should update Artemis to the latest 1.1.0-x snapshot when you run your tests. We ran SpecJMS sucessfully up to very high rates.. so it could be that this issue is fixed.&lt;/p&gt;


&lt;p&gt;&lt;a href=&quot;https://issues.jboss.org/secure/ViewProfile.jspa?name=geturner&quot; class=&quot;user-hover&quot; rel=&quot;geturner&quot;&gt;George Turner&lt;/a&gt; I can&apos;t hit this any longer.. even with SpecJMS. I&apos;m not saying it&apos;s fixed yet.. just I can&apos;t reproduce it. (so I have no idea how to fix it).&lt;/p&gt;

&lt;p&gt;If it is related to ObjectMessage.. it could be an environmental issue? Are you sure you don&apos;t have different versions of your Object Pay load?  Are you sure you&apos;re not using Large messages and your Thread dump is matching with the one on this thread?&lt;/p&gt;</comment>
                            <comment id="13148900" author="clebert.suconic" created="Thu, 14 Jan 2016 10:46:09 -0500"  >&lt;p&gt;George: Why don&apos;t you start sharing the thread dumps you have? it could be something slightly different that could help me identify it.&lt;/p&gt;</comment>
                            <comment id="13148911" author="geturner" created="Thu, 14 Jan 2016 10:59:26 -0500"  >&lt;p&gt;I am really confused.  Do you see each others comments?  Regardless, I am re-running our test with trace logging enabled to see if I can get more information.  To date, our stack trace has not changed AT ALL, so sending you copies of the same stack trace does neither of us any good.  I will respond soon with the results of the trace logging enabled.&lt;/p&gt;</comment>
                            <comment id="13148918" author="clebert.suconic" created="Thu, 14 Jan 2016 11:04:16 -0500"  >&lt;p&gt;George: This is an issue with the Wildfly integration.&lt;br/&gt;
Or anyone else willing to apply a workaround:&lt;/p&gt;

&lt;p&gt;I just realized that his issue is only with the HTTP Undertow Proxy:&lt;/p&gt;

&lt;p&gt;Wildfly is proxying everything through a single port. that means you talk to the main HTTP port, undertow will get the proxy, send it to the project under the umbrella (on this case ARtemis) and your client will then talk to Artemis through this undertow proxy.&lt;/p&gt;

&lt;p&gt;This issue here is only happening when running it through this HTTP Proxy. Which is a Wildfly feature being used with Artemis. This will be a blocker for the final wildfly release which is still being investigated.&lt;/p&gt;

&lt;p&gt;You were willing to replace Artemis by ActiveMQ5, so that sounds that you would be fine on using the Netty acceptors and connectors without the UnderTow proxy, as that&apos;s working fine with our tests.&lt;/p&gt;


&lt;p&gt;even if the bug is on artemis, it only happens through this integration. Our tests are indicating all fine if you use Netty connectors and acceptors directly.&lt;/p&gt;

&lt;p&gt;So, I suggest you change your server&apos;s config to use Netty acceptors and connectors for now, so your application would behave the same as talking to an artemis standalone.. at least until we fix this. &lt;/p&gt;

&lt;p&gt;if you need help on how to do that please open an user&apos;s thread on the wildfly forum (feel free to link it here so we can follow the discussion if you decide to do so)&lt;/p&gt;</comment>
                            <comment id="13148920" author="clebert.suconic" created="Thu, 14 Jan 2016 11:08:40 -0500"  >&lt;p&gt;George: in response to your last post, our response crossed.. the issue is only with the HTTP proxy. that&apos;s why I couldn&apos;t replicate it on artemis. We&apos;re still working on it.&lt;/p&gt;</comment>
                            <comment id="13148940" author="jason.greene" created="Thu, 14 Jan 2016 11:21:57 -0500"  >&lt;p&gt;&lt;a href=&quot;https://issues.jboss.org/secure/ViewProfile.jspa?name=clebert&quot; class=&quot;user-hover&quot; rel=&quot;clebert&quot;&gt;Clebert Suconic&lt;/a&gt; if you see the post above from &lt;a href=&quot;https://issues.jboss.org/secure/ViewProfile.jspa?name=mnovak&quot; class=&quot;user-hover&quot; rel=&quot;mnovak&quot;&gt;Miroslav Novak&lt;/a&gt; he&apos;s seeing it on netty connectors as well, but with the 010 build (same version as is in wildfly CR5)&lt;/p&gt;</comment>
                            <comment id="13148961" author="clebert.suconic" created="Thu, 14 Jan 2016 11:46:48 -0500"  >&lt;p&gt;&lt;a href=&quot;https://issues.jboss.org/secure/ViewProfile.jspa?name=jason.greene&quot; class=&quot;user-hover&quot; rel=&quot;jason.greene&quot;&gt;Jason Greene&lt;/a&gt; actually I talked to Miro before posting this. This only happens on HTTP proxy. it doesn&apos;t happen on Pure Netty.&lt;/p&gt;</comment>
                            <comment id="13148968" author="jason.greene" created="Thu, 14 Jan 2016 11:52:38 -0500"  >&lt;p&gt;(Update fixed name sorry!) &lt;a href=&quot;https://issues.jboss.org/secure/ViewProfile.jspa?name=clebert.suconic&quot; class=&quot;user-hover&quot; rel=&quot;clebert.suconic&quot;&gt;Clebert Suconic&lt;/a&gt; The bottom of his stack trace is: &lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;satellite(bash)&amp;#93;&lt;/span&gt; OUT &amp;gt;      &lt;span class=&quot;error&quot;&gt;&amp;#91;java&amp;#93;&lt;/span&gt; 	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:511)&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;satellite(bash)&amp;#93;&lt;/span&gt; OUT &amp;gt;      &lt;span class=&quot;error&quot;&gt;&amp;#91;java&amp;#93;&lt;/span&gt; 	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:468)&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;satellite(bash)&amp;#93;&lt;/span&gt; OUT &amp;gt;      &lt;span class=&quot;error&quot;&gt;&amp;#91;java&amp;#93;&lt;/span&gt; 	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:382)&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;satellite(bash)&amp;#93;&lt;/span&gt; OUT &amp;gt;      &lt;span class=&quot;error&quot;&gt;&amp;#91;java&amp;#93;&lt;/span&gt; 	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:354)&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;satellite(bash)&amp;#93;&lt;/span&gt; OUT &amp;gt;      &lt;span class=&quot;error&quot;&gt;&amp;#91;java&amp;#93;&lt;/span&gt; 	at io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:112)&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;satellite(bash)&amp;#93;&lt;/span&gt; OUT &amp;gt;      &lt;span class=&quot;error&quot;&gt;&amp;#91;java&amp;#93;&lt;/span&gt; 	at java.lang.Thread.run(Thread.java:745)&lt;/p&gt;</comment>
                            <comment id="13148971" author="clebert.suconic" created="Thu, 14 Jan 2016 11:53:43 -0500"  >&lt;p&gt;Although George was seeing this with inVM (from what I see on his stack traces).&lt;/p&gt;</comment>
                            <comment id="13148974" author="clebert.suconic" created="Thu, 14 Jan 2016 11:55:48 -0500"  >&lt;p&gt;&lt;a href=&quot;https://issues.jboss.org/secure/ViewProfile.jspa?name=jason.greene&quot; class=&quot;user-hover&quot; rel=&quot;jason.greene&quot;&gt;Jason Greene&lt;/a&gt; I&apos;m just referring to What Miro said.. that it didn&apos;t happen through the pure Netty build. It could be an intermittent thing.. but that&apos;s the information I had. We are still investigating this.. I was just suggesting a workaround to George based on what Miro told us. (We also ran SpecJMS sucessfully before we cut 010)&lt;/p&gt;</comment>
                            <comment id="13148985" author="jason.greene" created="Thu, 14 Jan 2016 12:08:08 -0500"  >&lt;p&gt;&lt;a href=&quot;https://issues.jboss.org/secure/ViewProfile.jspa?name=clebert.suconic&quot; class=&quot;user-hover&quot; rel=&quot;clebert.suconic&quot;&gt;Clebert Suconic&lt;/a&gt; Sure I was just pointing out there must be some confusion, because I just happened to notice that the stack trace that Miro posted shows netty being used. Not pointing fingers or trying to counteract the suggestion to try the other connector, just pointing it out to make tracking it down easier.&lt;/p&gt;</comment>
                            <comment id="13148986" author="geturner" created="Thu, 14 Jan 2016 12:09:30 -0500"  >&lt;p&gt;Ok, This all sounds good, not sure where to go from here.  We have to use &quot;http-remoting&quot;, and we are going to enable SSL on that very soon.  If there is a workaround that would temporarily resolve the problem and does not change the way our code is written, I would be interested.&lt;/p&gt;</comment>
                            <comment id="13148988" author="clebert.suconic" created="Thu, 14 Jan 2016 12:13:53 -0500"  >&lt;p&gt;&lt;a href=&quot;https://issues.jboss.org/secure/ViewProfile.jspa?name=jason.greene&quot; class=&quot;user-hover&quot; rel=&quot;jason.greene&quot;&gt;Jason Greene&lt;/a&gt; I didn&apos;t mean to react either.. &lt;/p&gt;

&lt;p&gt;I&apos;m still puzzled on what&apos;s going on. It would be great o have an easy way to reproduce this without requiring SpecJMS.&lt;/p&gt;</comment>
                            <comment id="13149038" author="flavia.rainone" created="Thu, 14 Jan 2016 14:08:36 -0500"  >&lt;p&gt;The wrong size number appears at position 13 of the buffer after the buffer is copied, at MessageImpl.getEncodedBuffer. This wrong size is sent to the client and causes the Exception seen in the description above.&lt;br/&gt;
This method, MessageImpl.getEncodedBuffer, is invoked concurrently by two separate threads, both are sending a SessionReceiveMessage to the client (SessionReceiveMessage.encode).&lt;br/&gt;
In one of the threads, the buffer is sent and usedBuffer is set to true. In the other thread, after checking that usedBuffer is true, a new copy of the buffer is taken. The problem is in the copied buffer. While the original buffer, right after the copy, still contains the correct size at position 13, the new buffer, the copy, contains a garbage int at position 13.&lt;br/&gt;
I am trying to find whereas the problem is in netty, responsible for doing the copy, or is a race condition involving another thread changing the buffer contents, even if temporarily, and causing the copy to go bad.&lt;br/&gt;
Maybe the messaging guys have a more specific opinion on what is causing this, let me know if that&apos;s the case.&lt;/p&gt;</comment>
                            <comment id="13149046" author="flavia.rainone" created="Thu, 14 Jan 2016 14:31:17 -0500"  >&lt;p&gt;Replacing MessageImpl.getEncodedBuffer implementation by:&lt;br/&gt;
{{ActiveMQBuffer copied = buff.copy(0, buff.capacity());&lt;br/&gt;
      copied.setIndex(0, endOfMessagePosition);&lt;br/&gt;
      buffer.setIndex(0, endOfMessagePosition);&lt;br/&gt;
      bufferUsed = true;&lt;br/&gt;
      ActiveMQBuffer oldBuffer = buffer;&lt;br/&gt;
      buffer = copied;&lt;br/&gt;
      return oldBuffer;}}&lt;br/&gt;
Makes the bug go away. With the code above, the buffer returned is not kept, meaning that there is no window of time where one thread is receiving the buffer and being able to perform operations on it while the other thread is still going to copy the buffer. The con of the above is that it is not a reasonable implementation for getEncodedBuffer, as it creates an extra copy for every encoded message.&lt;br/&gt;
Still, I think that this is an indicator that we are dealing with a race condition scenario here.&lt;/p&gt;</comment>
                            <comment id="13149054" author="flavia.rainone" created="Thu, 14 Jan 2016 14:55:43 -0500"  >&lt;p&gt;&lt;a href=&quot;https://issues.jboss.org/secure/ViewProfile.jspa?name=clebert&quot; class=&quot;user-hover&quot; rel=&quot;clebert&quot;&gt;Clebert Suconic&lt;/a&gt; I am running the tests with activeMQ updated, this is the project I&apos;m using: 	git://github.com/rh-messaging/jboss-activemq-artemis.git, branch jboss-1.1.0-x&lt;br/&gt;
I&apos;ve been updating regularly... just updated with the latest commits, and the error still occurs.&lt;/p&gt;</comment>
                            <comment id="13149281" author="flavia.rainone" created="Fri, 15 Jan 2016 06:42:59 -0500"  >&lt;p&gt;Just to keep the Jira updated, I sent to Clebert privately everything he needs to reproduce this issue. Now that we know that the copied buffer at MessageImpl.getEncodedBuffer is the culprit for the wrong buffer size, we are in position to have this issue solved.&lt;/p&gt;</comment>
                            <comment id="13150197" author="clebert.suconic" created="Mon, 18 Jan 2016 13:33:03 -0500"  >&lt;p&gt;ok, I have a reproducer now. I will need 1 or 2 days to fix this.&lt;/p&gt;</comment>
                            <comment id="13151356" author="jason.greene" created="Wed, 20 Jan 2016 13:41:00 -0500"  >&lt;p&gt;Assigned to Jeff who will coordinate the update into WildFly once Clebert&apos;s patch is available in an artemis release.&lt;/p&gt;</comment>
                            <comment id="13152740" author="clebert.suconic" created="Sat, 23 Jan 2016 00:33:23 -0500"  >&lt;p&gt;I am fixing this on Artemis as &lt;a href=&quot;https://issues.apache.org/jira/browse/ARTEMIS-357&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/ARTEMIS-357&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I don&apos;t think this is a simple race on the getEncoding(); it seems something more complex with netty buffers that would go away when returning copies.&lt;/p&gt;

&lt;p&gt;I am now copying the inner buffer to a pooled Buffer on the sending (which shouldn&apos;t be an issue since this buffer will be pooled). This will help me extend this later to only use pooled buffers on messages (which is a next step). I could be wrong on the race analysis but it would be simpler to fix it this way anyway than finding what would be moving the wrtierIndex after the getEncodedEbuffer() and leaking a non cloned buffer. A simpler implementation will do better there.&lt;/p&gt;</comment>
                            <comment id="13153481" author="jmesnil" created="Tue, 26 Jan 2016 03:45:45 -0500"  >&lt;p&gt;Upstream issue ARTMEMIS-357 is integrated in Artemis 1.1.0.wildfly-011&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310120">
                    <name>Cloners</name>
                                            <outwardlinks description="cloned from">
                                        <issuelink>
            <issuekey id="12587814">JBEAP-1270</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10012">
                    <name>Dependency</name>
                                            <outwardlinks description="is blocked by">
                                        <issuelink>
            <issuekey id="12599071">WFLY-5978</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="blocks">
                                        <issuelink>
            <issuekey id="12579043">WFLY-4994</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                                                                                                                <customfield id="customfield_12311243" key="org.jboss.labs.jira.plugin.cdw-plugin:cdwflagdevel">
                        <customfieldname>CDW devel_ack</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12311941" key="org.jboss.labs.jira.plugin.cdw-plugin:cdwflagdocs">
                        <customfieldname>CDW docs_ack</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311242" key="org.jboss.labs.jira.plugin.cdw-plugin:cdwflagpm">
                        <customfieldname>CDW pm_ack</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12311244" key="org.jboss.labs.jira.plugin.cdw-plugin:cdwflagqa">
                        <customfieldname>CDW qa_ack</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12311241" key="org.jboss.labs.jira.plugin.cdw-plugin:cdwflagrelease">
                        <customfieldname>CDW release</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310641" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Number of attachments</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310640" key="com.atlassian.jira.toolkit:comments">
                        <customfieldname>Number of comments</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>48.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311940" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1|hzywzb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310840" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_12310183" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Steps to Reproduce</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>&lt;p&gt;How to reproduce:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Download and unzip attached specjms2007.zip benchamark&lt;/li&gt;
	&lt;li&gt;set correct path to client libs in specjms2007/config/default.env&lt;/li&gt;
	&lt;li&gt;run ant clean jar in specjms2007/&lt;/li&gt;
	&lt;li&gt;start eap7 with one of attached configs&lt;/li&gt;
	&lt;li&gt;run ant describe jms-setup in  specjms2007/&lt;/li&gt;
	&lt;li&gt;run ant startController in  specjms2007/&lt;/li&gt;
	&lt;li&gt;run in second terminal  ant -d startSatellite -Dcontroller.host=127.0.0.1 -Dnode.name=127.0.0.1 in  specjms2007/&lt;/li&gt;
	&lt;li&gt;when benchmark finishes, check specjms-result.html in latest direcotry in specjms2007/output/  if test passes, big rectangle on top of web site should be completely green (no red)&lt;/li&gt;
	&lt;li&gt;if you want to change load edit org.spec.jms.horizontal.BASE in specjms2007/config/horizontal.properties&lt;/li&gt;
&lt;/ul&gt;
</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            </customfields>
    </item>
</channel>
</rss>