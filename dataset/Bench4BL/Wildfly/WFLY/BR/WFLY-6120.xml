<!-- 
RSS generated by JIRA (7.2.3#72005-sha1:73be91d2b96fc29303a7eb6820acf420e5d0ed65) at Tue Dec 06 13:10:19 EST 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.jboss.org/si/jira.issueviews:issue-xml/WFLY-6120/WFLY-6120.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>JBoss Issue Tracker</title>
    <link>https://issues.jboss.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>7.2.3</version>
        <build-number>72005</build-number>
        <build-date>06-10-2016</build-date>
    </build-info>

<item>
            <title>[WFLY-6120] SFSB PassivationTestCase fails to resolve XPC following passivation</title>
                <link>https://issues.jboss.org/browse/WFLY-6120</link>
                <project id="12313721" key="WFLY">WildFly</project>
                    <description>&lt;p&gt;javax.ejb.EJBException: WFLYJPA0030: Found extended persistence context in SFSB invocation call stack but that cannot be used because the transaction already has a transactional context associated with it.  This can be avoided by changing application code, either eliminate the extended persistence context or the transactional context.  See JPA spec 2.0 section 7.6.3.1.  Scoped persistence unit name=passivation-test.jar#main, persistence context already in transaction =ExtendedEntityManager &lt;a href=&quot;#main&quot;&gt;passivation-test.jar#main&lt;/a&gt;, extended persistence context =ExtendedEntityManager &lt;a href=&quot;#main&quot;&gt;passivation-test.jar#main&lt;/a&gt;.&lt;br/&gt;
	at org.jboss.as.jpa.container.ExtendedEntityManager.internalAssociateWithJtaTx(ExtendedEntityManager.java:149)&lt;br/&gt;
	at org.jboss.as.jpa.container.ExtendedEntityManager.getEntityManager(ExtendedEntityManager.java:129)&lt;br/&gt;
	at org.jboss.as.jpa.container.AbstractEntityManager.createQuery(AbstractEntityManager.java:444)&lt;br/&gt;
	at org.jboss.as.test.integration.ejb.stateful.passivation.TestPassivationBean.isPersistenceContextSame(TestPassivationBean.java:91)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&lt;br/&gt;
	at java.lang.reflect.Method.invoke(Method.java:498)&lt;br/&gt;
	at org.jboss.as.ee.component.ManagedReferenceMethodInterceptor.processInvocation(ManagedReferenceMethodInterceptor.java:52)&lt;br/&gt;
	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)&lt;br/&gt;
	at org.jboss.invocation.InterceptorContext$Invocation.proceed(InterceptorContext.java:437)&lt;br/&gt;
	at org.jboss.as.weld.ejb.Jsr299BindingsInterceptor.delegateInterception(Jsr299BindingsInterceptor.java:70)&lt;br/&gt;
	at org.jboss.as.weld.ejb.Jsr299BindingsInterceptor.doMethodInterception(Jsr299BindingsInterceptor.java:80)&lt;br/&gt;
	at org.jboss.as.weld.ejb.Jsr299BindingsInterceptor.processInvocation(Jsr299BindingsInterceptor.java:93)&lt;br/&gt;
	at org.jboss.as.ee.component.interceptors.UserInterceptorFactory$1.processInvocation(UserInterceptorFactory.java:63)&lt;br/&gt;
	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)&lt;br/&gt;
	at org.jboss.as.ejb3.component.invocationmetrics.ExecutionTimeInterceptor.processInvocation(ExecutionTimeInterceptor.java:43)&lt;br/&gt;
	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)&lt;br/&gt;
	at org.jboss.as.jpa.interceptor.SBInvocationInterceptor.processInvocation(SBInvocationInterceptor.java:47)&lt;br/&gt;
	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)&lt;br/&gt;
	at org.jboss.as.jpa.interceptor.SFSBInvocationInterceptor.processInvocation(SFSBInvocationInterceptor.java:57)&lt;br/&gt;
	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)&lt;br/&gt;
	at org.jboss.as.ejb3.component.stateful.StatefulSessionSynchronizationInterceptor.processInvocation(StatefulSessionSynchronizationInterceptor.java:125)&lt;br/&gt;
	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)&lt;br/&gt;
	at org.jboss.invocation.InterceptorContext$Invocation.proceed(InterceptorContext.java:437)&lt;br/&gt;
	at org.jboss.weld.ejb.AbstractEJBRequestScopeActivationInterceptor.aroundInvoke(AbstractEJBRequestScopeActivationInterceptor.java:64)&lt;br/&gt;
	at org.jboss.as.weld.ejb.EjbRequestScopeActivationInterceptor.processInvocation(EjbRequestScopeActivationInterceptor.java:83)&lt;br/&gt;
	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)&lt;br/&gt;
	at org.jboss.as.ee.concurrent.ConcurrentContextInterceptor.processInvocation(ConcurrentContextInterceptor.java:45)&lt;br/&gt;
	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)&lt;br/&gt;
	at org.jboss.invocation.InitialInterceptor.processInvocation(InitialInterceptor.java:21)&lt;br/&gt;
	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)&lt;br/&gt;
	at org.jboss.invocation.ChainedInterceptor.processInvocation(ChainedInterceptor.java:61)&lt;br/&gt;
	at org.jboss.as.ee.component.interceptors.ComponentDispatcherInterceptor.processInvocation(ComponentDispatcherInterceptor.java:52)&lt;br/&gt;
	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)&lt;br/&gt;
	at org.jboss.as.ejb3.component.stateful.StatefulComponentInstanceInterceptor.processInvocation(StatefulComponentInstanceInterceptor.java:65)&lt;br/&gt;
	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)&lt;br/&gt;
	at org.jboss.as.ejb3.tx.CMTTxInterceptor.invokeInOurTx(CMTTxInterceptor.java:275)&lt;br/&gt;
	at org.jboss.as.ejb3.tx.CMTTxInterceptor.required(CMTTxInterceptor.java:327)&lt;br/&gt;
	at org.jboss.as.ejb3.tx.CMTTxInterceptor.processInvocation(CMTTxInterceptor.java:239)&lt;br/&gt;
	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)&lt;br/&gt;
	at org.jboss.as.ejb3.remote.EJBRemoteTransactionPropagatingInterceptor.processInvocation(EJBRemoteTransactionPropagatingInterceptor.java:79)&lt;br/&gt;
	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)&lt;br/&gt;
	at org.jboss.as.ejb3.component.interceptors.CurrentInvocationContextInterceptor.processInvocation(CurrentInvocationContextInterceptor.java:41)&lt;br/&gt;
	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)&lt;br/&gt;
	at org.jboss.as.ejb3.component.invocationmetrics.WaitTimeInterceptor.processInvocation(WaitTimeInterceptor.java:43)&lt;br/&gt;
	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)&lt;br/&gt;
	at org.jboss.as.ejb3.security.SecurityContextInterceptor.processInvocation(SecurityContextInterceptor.java:100)&lt;br/&gt;
	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)&lt;br/&gt;
	at org.jboss.as.ejb3.component.interceptors.ShutDownInterceptorFactory$1.processInvocation(ShutDownInterceptorFactory.java:64)&lt;br/&gt;
	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)&lt;br/&gt;
	at org.jboss.as.ejb3.deployment.processors.EjbSuspendInterceptor.processInvocation(EjbSuspendInterceptor.java:44)&lt;br/&gt;
	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)&lt;br/&gt;
	at org.jboss.as.ejb3.component.interceptors.LoggingInterceptor.processInvocation(LoggingInterceptor.java:66)&lt;br/&gt;
	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)&lt;br/&gt;
	at org.jboss.as.ee.component.NamespaceContextInterceptor.processInvocation(NamespaceContextInterceptor.java:50)&lt;br/&gt;
	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)&lt;br/&gt;
	at org.jboss.as.ejb3.component.interceptors.AdditionalSetupInterceptor.processInvocation(AdditionalSetupInterceptor.java:54)&lt;br/&gt;
	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)&lt;br/&gt;
	at org.jboss.invocation.ContextClassLoaderInterceptor.processInvocation(ContextClassLoaderInterceptor.java:64)&lt;br/&gt;
	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)&lt;br/&gt;
	at org.jboss.invocation.InterceptorContext.run(InterceptorContext.java:356)&lt;br/&gt;
	at org.wildfly.security.manager.WildFlySecurityManager.doChecked(WildFlySecurityManager.java:636)&lt;br/&gt;
	at org.jboss.invocation.AccessCheckingInterceptor.processInvocation(AccessCheckingInterceptor.java:61)&lt;br/&gt;
	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)&lt;br/&gt;
	at org.jboss.invocation.InterceptorContext.run(InterceptorContext.java:356)&lt;br/&gt;
	at org.jboss.invocation.PrivilegedWithCombinerInterceptor.processInvocation(PrivilegedWithCombinerInterceptor.java:80)&lt;br/&gt;
	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)&lt;br/&gt;
	at org.jboss.invocation.ChainedInterceptor.processInvocation(ChainedInterceptor.java:61)&lt;br/&gt;
	at org.jboss.as.ee.component.ViewService$View.invoke(ViewService.java:195)&lt;br/&gt;
	at org.jboss.as.ejb3.remote.LocalEjbReceiver.processInvocation(LocalEjbReceiver.java:259)&lt;br/&gt;
	at org.jboss.ejb.client.EJBClientInvocationContext.sendRequest(EJBClientInvocationContext.java:184)&lt;br/&gt;
	at org.jboss.ejb.client.EJBObjectInterceptor.handleInvocation(EJBObjectInterceptor.java:58)&lt;br/&gt;
	at org.jboss.ejb.client.EJBClientInvocationContext.sendRequest(EJBClientInvocationContext.java:186)&lt;br/&gt;
	at org.jboss.ejb.client.EJBHomeInterceptor.handleInvocation(EJBHomeInterceptor.java:83)&lt;br/&gt;
	at org.jboss.ejb.client.EJBClientInvocationContext.sendRequest(EJBClientInvocationContext.java:186)&lt;br/&gt;
	at org.jboss.ejb.client.TransactionInterceptor.handleInvocation(TransactionInterceptor.java:42)&lt;br/&gt;
	at org.jboss.ejb.client.EJBClientInvocationContext.sendRequest(EJBClientInvocationContext.java:186)&lt;br/&gt;
	at org.jboss.ejb.client.ReceiverInterceptor.handleInvocation(ReceiverInterceptor.java:138)&lt;br/&gt;
	at org.jboss.ejb.client.EJBClientInvocationContext.sendRequest(EJBClientInvocationContext.java:186)&lt;br/&gt;
	at org.jboss.ejb.client.EJBInvocationHandler.sendRequestWithPossibleRetries(EJBInvocationHandler.java:255)&lt;br/&gt;
	at org.jboss.ejb.client.EJBInvocationHandler.doInvoke(EJBInvocationHandler.java:200)&lt;br/&gt;
	at org.jboss.ejb.client.EJBInvocationHandler.doInvoke(EJBInvocationHandler.java:183)&lt;br/&gt;
	at org.jboss.ejb.client.EJBInvocationHandler.invoke(EJBInvocationHandler.java:146)&lt;br/&gt;
	at com.sun.proxy.$Proxy72.isPersistenceContextSame(Unknown Source)&lt;br/&gt;
	at org.jboss.as.test.integration.ejb.stateful.passivation.PassivationTestCase.testPassivationMaxSize(PassivationTestCase.java:103)&lt;/p&gt;</description>
                <environment></environment>
        <key id="12602487">WFLY-6120</key>
            <summary>SFSB PassivationTestCase fails to resolve XPC following passivation</summary>
                <type id="1" iconUrl="https://issues.jboss.org/secure/viewavatar?size=xsmall&amp;avatarId=13263&amp;avatarType=issuetype">Bug</type>
                                            <priority id="1" iconUrl="https://issues.jboss.org/images/icons/priorities/blocker.svg">Blocker</priority>
                        <status id="5" iconUrl="https://issues.jboss.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Done</resolution>
                                        <assignee username="pferraro">Paul Ferraro</assignee>
                                    <reporter username="pferraro">Paul Ferraro</reporter>
                        <labels>
                    </labels>
                <created>Wed, 3 Feb 2016 16:37:15 -0500</created>
                <updated>Thu, 18 Aug 2016 23:49:46 -0400</updated>
                            <resolved>Thu, 18 Aug 2016 23:48:31 -0400</resolved>
                                    <version>10.0.0.Final</version>
                                    <fixVersion>10.1.0.CR1</fixVersion>
                    <fixVersion>10.1.0.Final</fixVersion>
                                    <component>JPA / Hibernate</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>4</watches>
                                                                <comments>
                            <comment id="13158841" author="smarlow" created="Thu, 4 Feb 2016 10:06:29 -0500"  >&lt;p&gt;Looks like we have two beans sharing the same extended persistence context and two concurrent threads passivating the XPC at the same time.  &lt;a href=&quot;https://gist.github.com/scottmarlow/71b55d7c05d2d214c195&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://gist.github.com/scottmarlow/71b55d7c05d2d214c195&lt;/a&gt; &lt;/p&gt;</comment>
                            <comment id="13158850" author="smarlow" created="Thu, 4 Feb 2016 10:18:58 -0500"  >&lt;p&gt;From the gist link mentioned in previous comment, it looks like we are passivating the two beans but passivation is occurring in different threads.&lt;/p&gt;</comment>
                            <comment id="13158872" author="smarlow" created="Thu, 4 Feb 2016 10:50:03 -0500"  >&lt;p&gt;I need to debug to see what is going on.  Each TestPassivationBean should have its own XPC instance.  The TestPassivationBean has a reference to a NestedBean, which shares the same XPC instance.  So, it might be okay that two threads are serializing the remote TestPassivationBean beans at the same time.  Now, that I understand the app, will debug &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.jboss.org/images/icons/emoticons/smile.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13158907" author="smarlow" created="Thu, 4 Feb 2016 11:45:37 -0500"  >&lt;p&gt;It seems like the TestPassivationBean is activated separately from the TestPassivationBean.nestledBean, which broke the XPC test.&lt;br/&gt;
Paul, did the rules change for how we manage EJB serialization groups with &lt;a href=&quot;https://github.com/wildfly/wildfly/commit/4ddf19a456c2834002fc1ce8d040d2873519975c&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/wildfly/wildfly/commit/4ddf19a456c2834002fc1ce8d040d2873519975c&lt;/a&gt;?&lt;/p&gt;

&lt;p&gt;Below comments are from IRC:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;lt;smarlow&amp;gt; one unexpected thing, when I set a breakpoint in TestPassivationBean.isPersistenceContextSame(), I saw that we deserialized one XPC on the call to TestPassivationBean and we deserialize another xpc on the first call to the nestledBean (made from TestPassivationBean).  It seems odd that we are deserializing the nestledBean on first use, instead I expect it to be deserialized with the TestPassivationBean bean&lt;br/&gt;
&amp;lt;smarlow&amp;gt; pferraro: ^&lt;br/&gt;
&amp;lt;smarlow&amp;gt; pferraro: looks like we set max-size=1, how does that impact passivatation/activation of groups of beans?&lt;br/&gt;
&amp;lt;smarlow&amp;gt; I assume max-size of one means one group of beans, instead of one bean.  its not like you can passivate the TestPassivationBean when it calls nested beans that it references&lt;/p&gt;&lt;/blockquote&gt;</comment>
                            <comment id="13281123" author="jason.greene" created="Thu, 18 Aug 2016 23:47:38 -0400"  >&lt;p&gt;Opening to update version&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310120">
                    <name>Cloners</name>
                                                                <inwardlinks description="cloned to">
                                        <issuelink>
            <issuekey id="12602715">JBEAP-3250</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="org.jboss.labs.jira.plugin.jboss-custom-field-types-plugin:multiurl">
                        <customfieldname>Git Pull Request</customfieldname>
                        <customfieldvalues>
                            https://github.com/wildfly/wildfly/pull/8661
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12310641" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Number of attachments</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310640" key="com.atlassian.jira.toolkit:comments">
                        <customfieldname>Number of comments</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311940" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1|i0190n:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310840" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>