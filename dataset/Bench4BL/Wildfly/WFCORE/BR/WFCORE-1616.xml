<!-- 
RSS generated by JIRA (7.2.3#72005-sha1:73be91d2b96fc29303a7eb6820acf420e5d0ed65) at Tue Dec 06 16:23:11 EST 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.jboss.org/si/jira.issueviews:issue-xml/WFCORE-1616/WFCORE-1616.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>JBoss Issue Tracker</title>
    <link>https://issues.jboss.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>7.2.3</version>
        <build-number>72005</build-number>
        <build-date>06-10-2016</build-date>
    </build-info>

<item>
            <title>[WFCORE-1616] ServerSuspendHandler tries to do step completion and rollback handling in a different thread</title>
                <link>https://issues.jboss.org/browse/WFCORE-1616</link>
                <project id="12315422" key="WFCORE">WildFly Core</project>
                    <description>&lt;p&gt;ServerSuspendHandler is calling OperationContext.completeStep() and passing in a rollback handler from a org.jboss.as.server.suspend.OperationListener that may be invoked by a different thread. The OperationContext is not intended to be invoked from multiple threads in this way. &lt;/p&gt;

&lt;p&gt;3 things can happen with this setup:&lt;/p&gt;

&lt;p&gt;1) There is no activity preventing suspend, so the suspend controller immediately calls back to the OperationListener on the thread that&apos;s handling the operation. So then things work fine.&lt;/p&gt;

&lt;p&gt;2) There is something that prevents synchronous suspend (i.e. user activity) so then the OperationListener gets invoked later by another thread. The completeStep call registers a rollback handler that will never get called because the op is already done. No harm, no foul unless the operation rolled back.&lt;/p&gt;

&lt;p&gt;3) Same as 2) but the OperationListener gets invoked later by another thread while the mgmt op is still executing and somehow something goes wrong, since AbstractOperationContext.Step is not written for concurrent modification.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12634167">WFCORE-1616</key>
            <summary>ServerSuspendHandler tries to do step completion and rollback handling in a different thread</summary>
                <type id="1" iconUrl="https://issues.jboss.org/secure/viewavatar?size=xsmall&amp;avatarId=13263&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.jboss.org/images/icons/priorities/major.svg">Major</priority>
                        <status id="5" iconUrl="https://issues.jboss.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Done</resolution>
                                        <assignee username="swd847">Stuart Douglas</assignee>
                                    <reporter username="brian.stansberry">Brian Stansberry</reporter>
                        <labels>
                    </labels>
                <created>Wed, 22 Jun 2016 15:28:45 -0400</created>
                <updated>Fri, 24 Jun 2016 11:37:52 -0400</updated>
                            <resolved>Fri, 24 Jun 2016 11:37:52 -0400</resolved>
                                                    <fixVersion>2.2.0.CR4</fixVersion>
                    <fixVersion>3.0.0.Alpha3</fixVersion>
                                    <component>Domain Management</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="13256024" author="brian.stansberry" created="Wed, 22 Jun 2016 15:34:49 -0400"  >&lt;p&gt;&lt;a href=&quot;https://github.com/bstansberry/wildfly-core/commit/f3ee7eea232c0517bf4be356fd65ed694833e231&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/bstansberry/wildfly-core/commit/f3ee7eea232c0517bf4be356fd65ed694833e231&lt;/a&gt; adds the missing standard assert that AbstractOperationContext uses on other methods to ensure that only valid threads are invoking on it. This will cause the 2) and 3) cases from the JIRA description to fail. &lt;a href=&quot;https://ci.wildfly.org/viewLog.html?buildId=19472&amp;amp;tab=buildResultsDiv&amp;amp;buildTypeId=WF_WildFlyCoreIntegrationExperiments&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://ci.wildfly.org/viewLog.html?buildId=19472&amp;amp;tab=buildResultsDiv&amp;amp;buildTypeId=WF_WildFlyCoreIntegrationExperiments&lt;/a&gt; is a test run that I expect to fail due to this.&lt;/p&gt;</comment>
                            <comment id="13256031" author="brian.stansberry" created="Wed, 22 Jun 2016 16:05:59 -0400"  >&lt;p&gt;&lt;a href=&quot;https://issues.jboss.org/secure/ViewProfile.jspa?name=swd847&quot; class=&quot;user-hover&quot; rel=&quot;swd847&quot;&gt;Stuart Douglas&lt;/a&gt; I&apos;m not sure what semantics you wanted here. Was it to have the management op block until suspend is done (however long that may be), and thus support rolling back regardless of how long suspend takes? Or was it to support rollback only for the 1) case, where the suspend is immediate?&lt;/p&gt;

&lt;p&gt;Blocking sounds better, although potentially indefinite blocking with the management lock held is a concern.&lt;/p&gt;</comment>
                            <comment id="13256061" author="swd847" created="Wed, 22 Jun 2016 17:53:46 -0400"  >&lt;p&gt;Blocking was definitely the intention, until shutdown the timeout param in this operation basically just means &apos;block until the server is suspended or this much time has elapsed&apos; as there is no shutdown op that will be invoked once the operation is complete.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="org.jboss.labs.jira.plugin.jboss-custom-field-types-plugin:multiurl">
                        <customfieldname>Git Pull Request</customfieldname>
                        <customfieldvalues>
                            https://github.com/wildfly/wildfly-core/pull/1631, https://github.com/wildfly/wildfly-core/pull/1630
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12310641" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Number of attachments</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310640" key="com.atlassian.jira.toolkit:comments">
                        <customfieldname>Number of comments</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311940" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1|i06ftz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310840" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>