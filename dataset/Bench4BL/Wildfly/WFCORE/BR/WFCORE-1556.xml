<!-- 
RSS generated by JIRA (7.2.3#72005-sha1:73be91d2b96fc29303a7eb6820acf420e5d0ed65) at Tue Dec 06 17:45:53 EST 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.jboss.org/si/jira.issueviews:issue-xml/WFCORE-1556/WFCORE-1556.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>JBoss Issue Tracker</title>
    <link>https://issues.jboss.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>7.2.3</version>
        <build-number>72005</build-number>
        <build-date>06-10-2016</build-date>
    </build-info>

<item>
            <title>[WFCORE-1556] Poor handling of &apos;required&apos;, &apos;nillable&apos; and &apos;alternatives&apos; in AttributeDefinition</title>
                <link>https://issues.jboss.org/browse/WFCORE-1556</link>
                <project id="12315422" key="WFCORE">WildFly Core</project>
                    <description>&lt;p&gt;The handling of the notions of &apos;required&apos; and &apos;nillable&apos; don&apos;t comply with the specs in &lt;a href=&quot;https://docs.jboss.org/author/display/WFLY/Description+of+the+Management+Model&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://docs.jboss.org/author/display/WFLY/Description+of+the+Management+Model&lt;/a&gt;, particularly the &quot;Description of an Attribute&quot; part, where the &apos;required&apos; and &apos;alternatives&apos; fields are well described, with their relationship spelled out, while &apos;nillable&apos; doesn&apos;t appear at all. Then in &quot;Description of an Operation Parameter or Return Value&quot; nillable is specified, although I think those descriptions could be tightened up in general.&lt;/p&gt;

&lt;p&gt;The read-resource-description output for an attribute doesn&apos;t show &quot;required&quot; at all.&lt;/p&gt;

&lt;p&gt;After a fair bit of thinking, I&apos;ve finally recalled why the two separate notions of &quot;required&quot; and &quot;nillable&quot; exist in the first place.&lt;/p&gt;

&lt;p&gt;The &quot;required&quot; and &quot;alternatives&quot; pieces go together. Is something required? And then if it is required, an alternative satisfies. So you can have two attributes/params, both required, but they are alternatives so one is defined and the other is not. And this is an ok thing.&lt;/p&gt;

&lt;p&gt;And then &apos;nillable&apos; comes in to help clients understand in a simple way whether they need to account for the possibility an undefined value. Basically:&lt;/p&gt;

&lt;p&gt;nillable = !required || alternatives != null&lt;/p&gt;

&lt;p&gt;Right now, nillable is implemented as&lt;/p&gt;

&lt;p&gt;nillable = !required&lt;/p&gt;

&lt;p&gt;There are a number of problems I see with AttributeDefinition:&lt;/p&gt;

&lt;p&gt;1) We don&apos;t output the &apos;required&apos; metadata unless it&apos;s an operation param being described.  This is contrary to spec. However we shouldn&apos;t fix this unless we can have meaningful values for &apos;required&apos;, ones where the value can be true but the attribute/param can still have an undefined value, due to an alternative being present. If we can&apos;t fix that, there&apos;s no point outputting required as it&apos;s just redundant with what we output for &apos;nillable&apos;.&lt;/p&gt;

&lt;p&gt;2) We do output the &apos;nillable&apos; metadata, even for attribute descriptions, where it isn&apos;t in the spec. But in this case I think we change the spec, as dropping nillable would be an incompatible change.&lt;/p&gt;

&lt;p&gt;3) We don&apos;t properly validate the &quot;required but has alternatives case.&quot; This can&apos;t be validated solely with ParameterValidator impls as those only see a single attribute value and don&apos;t have contextual information about other attributes/params. To get around this limitation, devs are saying that attributes with alternatives &quot;allowNull&quot; which is equivalent to saying they are not required. But they are required! So I think a fix for this will require AttributeDefinition itself to validate the overall resource model or operation object, and skip calling the ParameterValidator if the attribute/param is undefined and an alternative is defined.&lt;/p&gt;

&lt;p&gt;4) AttributeDefinition and AbstractAttributeDefinitionBuilder unfortunately have a getter/setter/constructor param for property &quot;allowNull&quot; instead of a property named &quot;required&quot;. This is unfortunate because &quot;allowNull&quot; intuitively maps to &quot;nillable&quot;, but &quot;required&quot; is a much more useful thing to set. The value of &quot;nillable&quot; can be derived from a &quot;required&quot; setting and an &quot;alternatives&quot; setting, but the value of required cannot be so derived.&lt;/p&gt;

&lt;p&gt;I think a fix for this would probably start from 4), deprecating setAllowNull, adding get/setRequired and changing the meaning of the AD(Builder) constructor param to &quot;required&quot;. The effect of this would be that all current code setting &quot;allowNull&quot; would now be setting a new &quot;required&quot; field. This should be a non-breaking change as in current code that&apos;s the effect anyway.&lt;/p&gt;

&lt;p&gt;Next would be to fix 3), by changing how AD validates.&lt;/p&gt;

&lt;p&gt;Next would be to change the metadata we output, such that &quot;required&quot; is always present and the &quot;nillable&quot; value is !required || alternatives != null. And change the spec accordingly.&lt;/p&gt;

&lt;p&gt;Last, in a separate task, would be to find attributes that were configuring &quot;allowNull = true&quot; solely to allow validation to pass when alternatives are present, and fix them to say &quot;required=false&quot;.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12626290">WFCORE-1556</key>
            <summary>Poor handling of &apos;required&apos;, &apos;nillable&apos; and &apos;alternatives&apos; in AttributeDefinition</summary>
                <type id="1" iconUrl="https://issues.jboss.org/secure/viewavatar?size=xsmall&amp;avatarId=13263&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.jboss.org/images/icons/priorities/major.svg">Major</priority>
                        <status id="5" iconUrl="https://issues.jboss.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Done</resolution>
                                        <assignee username="brian.stansberry">Brian Stansberry</assignee>
                                    <reporter username="brian.stansberry">Brian Stansberry</reporter>
                        <labels>
                    </labels>
                <created>Mon, 16 May 2016 14:08:09 -0400</created>
                <updated>Tue, 6 Dec 2016 01:05:09 -0500</updated>
                            <resolved>Tue, 22 Nov 2016 18:47:38 -0500</resolved>
                                                    <fixVersion>3.0.0.Alpha13</fixVersion>
                                    <component>Domain Management</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>6</watches>
                                                                <comments>
                            <comment id="13239675" author="brian.stansberry" created="Wed, 18 May 2016 14:39:30 -0400"  >&lt;p&gt;I&apos;ve done some analysis of cases where AbstractAttributeDefinitionBuilder.setAlternatives()/addAlternatives() are used in conjunction with &quot;allowNull == false&quot;. These are cases where converting &quot;allowNull&quot; to &quot;!required&quot; and definining &apos;nillable&apos; as &quot;nillable = !required || alternatives != null&quot; will produce a different result in the attribute descriptions from the current behavior of &quot;nillable = allowNull&quot;.&lt;/p&gt;

&lt;p&gt;I find:&lt;/p&gt;

&lt;p&gt;TransactionSubsystemRootResourceDefinition PROCESS_ID_SOCKET_BINDING and PROCESS_ID_UUID&lt;br/&gt;
LdapAuthenticationResourceDefinition USERNAME_FILTER and ADVANCED_FILTER&lt;br/&gt;
org.jboss.as.server.mgmt.NativeManagementResourceDefinition SOCKET_BINDING&lt;/p&gt;

&lt;p&gt;The last one appears to be bogus as the declared &quot;alternative&quot; is not a legal alternative in a server config.&lt;/p&gt;

&lt;p&gt;The LdapAuthenticationResourceDefinition ones work because the relevant ADs also have &quot;setValidateNull(false)&quot; set, so the validator is not complaining about undefined values.&lt;/p&gt;

&lt;p&gt;The TransactionSubsystemRootResourceDefinition ones work because the relevant OSHs use custom logic to avoid the normal validation checks.&lt;/p&gt;

&lt;p&gt;The issue here a client using the &apos;nillable&apos; value would now see &apos;true&apos; instead of &apos;false&apos; and may react incorrectly.&lt;/p&gt;</comment>
                            <comment id="13239686" author="brian.stansberry" created="Wed, 18 May 2016 15:12:36 -0400"  >&lt;p&gt;Note to self: the &quot;setValidateNull(false)&quot; stuff came in as part of my work on &lt;a href=&quot;https://issues.jboss.org/browse/AS7-3857&quot; title=&quot;Eliminate redundant config of nullable and allowExpression in AttributeDefinition&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AS7-3857&quot;&gt;&lt;del&gt;AS7-3857&lt;/del&gt;&lt;/a&gt; and reflects an earlier effort on how to deal with the fact that a ParameterValidator can&apos;t by itself handle the fact that an otherwise required attribute may be undefined due to the presence of an alternative.&lt;/p&gt;</comment>
                            <comment id="13239720" author="brian.stansberry" created="Wed, 18 May 2016 17:28:44 -0400"  >&lt;p&gt;Another note to self: The &quot;setValidateNull(false)&quot; stuff is quite the black art. Here&apos;s one of the 3 uses of it in core and full, all of which are in the same LdapAuthenticationResourceDefinition class:&lt;/p&gt;

&lt;p/&gt;
&lt;div id=&quot;syntaxplugin&quot; class=&quot;syntaxplugin&quot; style=&quot;border: 1px dashed #bbb; border-radius: 5px !important; overflow: auto; max-height: 30em;&quot;&gt;
&lt;table cellspacing=&quot;0&quot; cellpadding=&quot;0&quot; border=&quot;0&quot; width=&quot;100%&quot; style=&quot;font-size: 1em; line-height: 1.4em !important; font-weight: normal; font-style: normal; color: black;&quot;&gt;
		&lt;tbody &gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;  margin-top: 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;    public static final SimpleAttributeDefinition USERNAME_FILTER = new SimpleAttributeDefinitionBuilder(ModelDescriptionConstants.USERNAME_ATTRIBUTE, ModelType.STRING, false)&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;            .setXmlName(&quot;attribute&quot;)&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;            .setAlternatives(ModelDescriptionConstants.ADVANCED_FILTER)&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;            .setValidator(new StringLengthValidator(1, Integer.MAX_VALUE, true, true))&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;            .setValidateNull(false)&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;            .setAllowExpression(true)&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   margin-bottom: 10px;  width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;            .setFlags(AttributeAccess.Flag.RESTART_RESOURCE_SERVICES).build();&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
			&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;p/&gt;

&lt;p&gt;The builder constructor passes &quot;false&quot; as the &quot;allowNull&quot; param, so this attribute is required. But it also has alternatives. This combination would normally fail to validate if the model has this attribute undefined but an alternative defined, even though such a combination is correct.&lt;/p&gt;

&lt;p&gt;To get around this, the definition does two things:&lt;/p&gt;

&lt;p&gt;1) It sets up a validator that has the &quot;allowNull&quot; field set to &quot;true&quot;, meaning the validator will not reject undefined.&lt;/p&gt;

&lt;p/&gt;
&lt;div id=&quot;syntaxplugin&quot; class=&quot;syntaxplugin&quot; style=&quot;border: 1px dashed #bbb; border-radius: 5px !important; overflow: auto; max-height: 30em;&quot;&gt;
&lt;table cellspacing=&quot;0&quot; cellpadding=&quot;0&quot; border=&quot;0&quot; width=&quot;100%&quot; style=&quot;font-size: 1em; line-height: 1.4em !important; font-weight: normal; font-style: normal; color: black;&quot;&gt;
		&lt;tbody &gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;  margin-top: 10px;   margin-bottom: 10px;  width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;.setValidator(new StringLengthValidator(1, Integer.MAX_VALUE, true, true))&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
			&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;p/&gt;

&lt;p&gt;It does this even though the builder constructor says &quot;allowNull=false&quot;.&lt;/p&gt;

&lt;p&gt;2) It adds &quot;.setValidateNull(false)&quot;. What this does is it turns off the logic added in &lt;a href=&quot;https://issues.jboss.org/browse/AS7-3857&quot; title=&quot;Eliminate redundant config of nullable and allowExpression in AttributeDefinition&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AS7-3857&quot;&gt;&lt;del&gt;AS7-3857&lt;/del&gt;&lt;/a&gt; that resulted in the AD itself validating undefined values instead of relying on the provided validator to do this. Because this logic is turned off, the AD will not reject undefined, and instead will allow the validator to validate, and it is configured to accept undefined.&lt;/p&gt;

&lt;p&gt;It works but is very kludgy. It&apos;s not surprising that out of hundreds of attributes that declare alternatives, a great many of which are probably required if no alternative is present, only 2 use this technique.&lt;/p&gt;

&lt;p&gt;Also, it only kind of works, since all this does is cause the AD to accept undefined. It doesn&apos;t lead to proper validation of the overall model, i.e. a check that one of the alternatives is defined. To do that we had to add to the operation execution logic special validation at the end of Stage.MODEL execution.&lt;/p&gt;</comment>
                            <comment id="13239726" author="brian.stansberry" created="Wed, 18 May 2016 17:46:08 -0400"  >&lt;p&gt;I don&apos;t think the AD can ever be responsible for validating &quot;required but not if alternatives are present&quot;. The AD is asked to validate (i.e. a call to validateAndSet) during execution of a particular step, but that step may be part of a composite, and it&apos;s only when the composite is complete that it&apos;s ok to validate the resulting model. For example the composite may have two write-attribute steps, one of which sets alternative a and the other undefines alternative b. The overall model state will never be valid after just one step.&lt;/p&gt;

&lt;p&gt;There are other situations where things may be in flux, e.g. validating during parsing when some alternatives haven&apos;t been parsed yet.&lt;/p&gt;

&lt;p&gt;In theory we could be lenient in some situations like parsing and write-attribute and stricter in others, like an add op, but that requires changes to AD that some OSHs may not use, it&apos;s complex and probably buggy, and it still doesn&apos;t allow for weird corner cases like a composite with a broken add step followed by a correcting write-attribute step.&lt;/p&gt;

&lt;p&gt;It seems like we should be able to get rid of the need for setValidating(false) though and just detect the combination of required + alternatives and be lenient.&lt;/p&gt;</comment>
                            <comment id="13288354" author="brian.stansberry" created="Fri, 2 Sep 2016 17:40:26 -0400"  >&lt;p&gt;&lt;a href=&quot;https://issues.jboss.org/browse/WFCORE-1761&quot; title=&quot;Bogus &amp;quot;alternative&amp;quot; in server NativeManagementResourceDefinition.SOCKET_BINDING attribute definition&quot; class=&quot;issue-link&quot; data-issue-key=&quot;WFCORE-1761&quot;&gt;&lt;del&gt;WFCORE-1761&lt;/del&gt;&lt;/a&gt; is for the org.jboss.as.server.mgmt.NativeManagementResourceDefinition SOCKET_BINDING thing I noted in my first comment.&lt;/p&gt;

&lt;p&gt;It occurred to me that this work might break our JMX integration but it looks like the OpenMBeanAttributeInfo we generate from our descriptions does not deal with required/alternatives/nillable in any way so we are free to do what we want there.&lt;/p&gt;</comment>
                            <comment id="13289257" author="jmesnil" created="Tue, 6 Sep 2016 09:31:23 -0400"  >&lt;p&gt;I&apos;m hoping I&apos;m not hijacking this issue but I have an use case in the messaging-activemq subsystem that would benefit from this improvement.&lt;/p&gt;

&lt;p&gt;A discovery-group resource can either have a socket-binding attribute or jgroups-channel / jgroups-stack attributes.&lt;/p&gt;

&lt;p&gt;If socket-binding attribute is set,  jgroups-channel and jgroups-stack are not valid&lt;br/&gt;
if socket-binding attribute is not set, JGroups resources will be used &lt;b&gt;but&lt;/b&gt;  jgroups-channel and jgroups-stack can still be undefined (i.e. use default channel and stack from jgroups subsystem).&lt;br/&gt;
As an example, a discovery-group without any attributes must be valid and will use the default channel and stack from JGroups.&lt;br/&gt;
What would be the flags on the ADs?&lt;/p&gt;

&lt;p&gt;socket-binding: required, alternative=jgroups-channel&lt;br/&gt;
jgroups-channel: optional, alternative=socket-binding &lt;br/&gt;
jgroups-stack: optional, alternative=socket-binding&lt;/p&gt;

</comment>
                            <comment id="13289367" author="brian.stansberry" created="Tue, 6 Sep 2016 11:17:14 -0400"  >&lt;p&gt;&lt;a href=&quot;https://issues.jboss.org/secure/ViewProfile.jspa?name=jmesnil&quot; class=&quot;user-hover&quot; rel=&quot;jmesnil&quot;&gt;Jeff Mesnil&lt;/a&gt; It sounds like socket-binding is just optional, since the default jgroups configs mean it is never required to set it. (The fact that the jgroups capabilities may not be available is, I think, a separate issue.)&lt;/p&gt;

&lt;p&gt;It is legal for all the attributes that are alternatives to each other to be optional.&lt;/p&gt;

&lt;p&gt;The tricky thing about your scenario is it can lead to unhelpful failures, where the user with a non-ha config doesn&apos;t configure a socket-binding and then gets ??? failure messages about missing jgroups requirements. I&apos;m not sure if extra validation in your subsystem can cleanly help with that, since that validation would really be a capability presence check in Stage.MODEL, and that&apos;s not a valid thing to do since doing boot capabilities are registered concurrently.&lt;/p&gt;</comment>
                            <comment id="13332875" author="soul2zimate" created="Fri, 2 Dec 2016 04:35:00 -0500"  >&lt;p&gt;To apply this new handling of these relations on AD (e.g. required with detection of alternatives), Is there a standard way to transform this kind of attributes relation change for domain mode?  I would expect similar approach as setValueConverter() with an AttributeConverter for value change in &lt;a href=&quot;https://github.com/wildfly/wildfly-core/blob/master/controller/src/main/java/org/jboss/as/controller/transform/description/AttributeTransformationDescriptionBuilderImpl.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;AttributeTransformationDescriptionBuilderImpl&lt;/a&gt;, but it does not fit this required, nillable and alternatives change.&lt;/p&gt;</comment>
                            <comment id="13333453" author="brian.stansberry" created="Fri, 2 Dec 2016 17:30:31 -0500"  >&lt;p&gt;&lt;a href=&quot;https://issues.jboss.org/secure/ViewProfile.jspa?name=soul2zimate&quot; class=&quot;user-hover&quot; rel=&quot;soul2zimate&quot;&gt;Chao Wang&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I&apos;m not sure what attribute relation change you mean.&lt;/p&gt;

&lt;p&gt;One thing I can see happening as a result of this work is that attributes that previously had their AD configured with setAllowNull(true) merely to account for the possibility of alternatives will now use setRequired(true). This will result in a change to the read-resource-description output for the attribute, with the description now more accurately describing the attribute. But this has no effect on what legal values can be passed in. Both before and after the user can either provide a value or provide value for an alternative. So there is no transformation involved.&lt;/p&gt;</comment>
                            <comment id="13334284" author="soul2zimate" created="Tue, 6 Dec 2016 01:05:09 -0500"  >&lt;p&gt;My apologies about the missing context. I was checking the related one &lt;a href=&quot;https://issues.jboss.org/browse/WFLY-6607&quot; title=&quot;Broadcast/Discovery group is possible to create with just a name&quot; class=&quot;issue-link&quot; data-issue-key=&quot;WFLY-6607&quot;&gt;WFLY-6607&lt;/a&gt; and see several failures after applying setRequired() on some attributes.&lt;/p&gt;

&lt;p&gt;First, &lt;tt&gt;connectors&lt;/tt&gt; needs to set required to true in broadcast-group definition. After that,  I have MessagingActiveMQSubsystem_1_X_TestCase failed due to missing &lt;tt&gt;connectors&lt;/tt&gt; of &lt;tt&gt;broadcast-group&lt;/tt&gt; in test configuration file example &lt;a href=&quot;https://github.com/wildfly/wildfly/blob/master/messaging-activemq/src/test/resources/org/wildfly/extension/messaging/activemq/subsystem_1_0.xml#L172&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;subsystem_1_0.xml&lt;/a&gt;. I believe the XML file in test needs to add proper &lt;tt&gt;connectors&lt;/tt&gt; value after it becomes &quot;required&quot;. In this case, no need for transformer, because the XML is incomplete on &lt;tt&gt;broadcast-group&lt;/tt&gt; attributes.&lt;/p&gt;

&lt;p&gt;Secondly, &lt;tt&gt;jgroups-channel&lt;/tt&gt; and &lt;tt&gt;socket-binding&lt;/tt&gt; should be set to required true and are alternatives for each other, this makes legacy messaging MigrateTestCase fails, In &lt;a href=&quot;https://github.com/wildfly/wildfly/blob/master/legacy/messaging/src/test/resources/org/jboss/as/messaging/test/subsystem_migration.xml#L110&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;subsystem_migration.xml&lt;/a&gt;. Besides the missing &lt;tt&gt;connectors&lt;/tt&gt; attribute in &lt;tt&gt;broadcast-group&lt;/tt&gt;, the alternative relations are also changed.&lt;/p&gt;

&lt;p&gt;&lt;tt&gt;socket-binding&lt;/tt&gt; previously has alternatives list &quot;group-address&quot;, &quot;group-port&quot;, &quot;local-bind-address&quot;, &quot;local-bind-port&quot;, &quot;jgroups-stack&quot;, &quot;jgroups-channel&quot;. First four are deprecated, but they are still valid configuration as first example in &lt;a href=&quot;https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/6.4/html/Administration_and_Configuration_Guide/sect-HornetQ_Clustering.html#sect-Broadcast_Groups&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;18.15.2.1. User Datagram Protocol (UDP) Broadcast Group&lt;/a&gt; As broadcast-groups with deprecated attributes in subsystem_migration.xml are valid, and they don&apos;t match the current expected alternative behavior. So for this case, I was wondering if there needs to be a transformer for them.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10012">
                    <name>Dependency</name>
                                            <outwardlinks description="is blocked by">
                                        <issuelink>
            <issuekey id="12648521">WFCORE-1761</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="12310001">
                    <name>Related</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12618234">WFLY-6608</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12662047">JBEAP-7354</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12619379">WFLY-6607</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="org.jboss.labs.jira.plugin.jboss-custom-field-types-plugin:multiurl">
                        <customfieldname>Git Pull Request</customfieldname>
                        <customfieldvalues>
                            https://github.com/wildfly/wildfly-core/pull/1781
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12310641" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Number of attachments</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310640" key="com.atlassian.jira.toolkit:comments">
                        <customfieldname>Number of comments</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>10.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311940" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1|i055qf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310840" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>