<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 12:42:04 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/BATCHADM-115/BATCHADM-115.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[BATCHADM-115] SimpleJobMetrics.getLatestStepExitDescription() doesn&apos;t work if the last step is very quick.</title>
                <link>https://jira.spring.io/browse/BATCHADM-115</link>
                <project id="10380" key="BATCHADM">Spring Batch Admin</project>
                    <description>&lt;p&gt;I&apos;ve found (running against MySQL  and derby) that the timestamp comparison of steps isn&apos;t granular enough when the step executions are close together (within same second I think).  Adding another test comparing id&apos;s did the trick for me:&lt;/p&gt;

&lt;p&gt;eg:&lt;br/&gt;
if (stepDate.after(latest)) {&lt;br/&gt;
    latest = stepDate;&lt;br/&gt;
    stepExecution = candidate;&lt;br/&gt;
    // hack when stepExecution endTimes are not granular enough.&lt;br/&gt;
} else if (stepDate.equals(latest) &amp;amp;&amp;amp; candidate.getId() &amp;gt; stepExecution.getId()) {&lt;br/&gt;
    latest = stepDate;&lt;br/&gt;
    stepExecution = candidate;&lt;br/&gt;
}&lt;/p&gt;
</description>
                <environment></environment>
        <key id="37719">BATCHADM-115</key>
            <summary>SimpleJobMetrics.getLatestStepExitDescription() doesn&apos;t work if the last step is very quick.</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://jira.spring.io/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="8">Complete</resolution>
                                        <assignee username="david_syer">Dave Syer</assignee>
                                    <reporter username="nigel.d.watson">Nigel Watson</reporter>
                        <labels>
                    </labels>
                <created>Tue, 3 May 2011 02:27:35 +0000</created>
                <updated>Tue, 30 Aug 2011 05:07:29 +0000</updated>
                            <resolved>Tue, 30 Aug 2011 05:04:31 +0000</resolved>
                                    <version>1.2.0</version>
                                    <fixVersion>1.2.1</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                    <timeoriginalestimate seconds="0">0d</timeoriginalestimate>
                            <timeestimate seconds="0">0d</timeestimate>
                                        <comments>
                            <comment id="69935" author="david_syer" created="Tue, 30 Aug 2011 05:04:29 +0000"  >&lt;p&gt;Implemented the tiebreaker as suggested (except for the addition of a null check).&lt;/p&gt;</comment>
                            <comment id="69936" author="david_syer" created="Tue, 30 Aug 2011 05:07:29 +0000"  >&lt;p&gt;MySQL only has 1s resolution in timestamps.  Derby I am surprised about, but the tiebreaker seems sensible anyway (since there is no strict definition of &quot;latest&quot; in a concurrent environment, it is only really a heuristic in any case).&lt;/p&gt;

&lt;p&gt;N.B. I also added the same tie breaker for job executions.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 30 Aug 2011 05:04:29 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10280" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3674</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i02wfz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>16966</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10381" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Ranking</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>15964</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>