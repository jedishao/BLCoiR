<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 15:06:02 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/DATAMONGO-737/DATAMONGO-737.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[DATAMONGO-737] Extra MongoSynchronizations cause TransactionSynchronizationManager to throw IllegalStateException on transaction complete</title>
                <link>https://jira.spring.io/browse/DATAMONGO-737</link>
                <project id="10701" key="DATAMONGO">Spring Data MongoDB</project>
                    <description>&lt;p&gt;Multiple Mongo databases are being accessed in a transactional test case. When the transaction is rolled back at the end of the test, the following exception is thrown:&lt;/p&gt;

&lt;p&gt;2013-08-01 19:55:56,774 ERROR &lt;span class=&quot;error&quot;&gt;&amp;#91;org.springframework.transaction.support.TransactionSynchronizationUtils&amp;#93;&lt;/span&gt; - &amp;lt;TransactionSynchronization.beforeCompletion threw exception&amp;gt;&lt;br/&gt;
java.lang.IllegalStateException: No value for key &lt;span class=&quot;error&quot;&gt;&amp;#91;Mongo: localhost/127.0.0.1:27017&amp;#93;&lt;/span&gt; bound to thread &lt;span class=&quot;error&quot;&gt;&amp;#91;main&amp;#93;&lt;/span&gt;&lt;br/&gt;
at org.springframework.transaction.support.TransactionSynchronizationManager.unbindResource(TransactionSynchronizationManager.java:209)&lt;br/&gt;
at org.springframework.transaction.support.ResourceHolderSynchronization.beforeCompletion(ResourceHolderSynchronization.java:69)&lt;br/&gt;
at org.springframework.transaction.support.TransactionSynchronizationUtils.triggerBeforeCompletion(TransactionSynchronizationUtils.java:106)&lt;br/&gt;
at org.springframework.transaction.support.AbstractPlatformTransactionManager.triggerBeforeCompletion(AbstractPlatformTransactionManager.java:937)&lt;br/&gt;
at org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:834)&lt;br/&gt;
at org.springframework.transaction.support.AbstractPlatformTransactionManager.rollback(AbstractPlatformTransactionManager.java:822)&lt;br/&gt;
at org.springframework.test.context.transaction.TransactionalTestExecutionListener$TransactionContext.endTransaction(TransactionalTestExecutionListener.java:519)&lt;br/&gt;
at org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:293)&lt;br/&gt;
at org.springframework.test.context.transaction.TransactionalTestExecutionListener.afterTestMethod(TransactionalTestExecutionListener.java:186)&lt;br/&gt;
at org.springframework.test.context.TestContextManager.afterTestMethod(TestContextManager.java:406)&lt;br/&gt;
at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:91)&lt;br/&gt;
at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:72)&lt;br/&gt;
at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:231)&lt;br/&gt;
at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)&lt;br/&gt;
at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)&lt;br/&gt;
at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)&lt;br/&gt;
at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)&lt;br/&gt;
at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)&lt;br/&gt;
at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)&lt;br/&gt;
at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)&lt;br/&gt;
at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:71)&lt;br/&gt;
at org.junit.runners.ParentRunner.run(ParentRunner.java:300)&lt;br/&gt;
at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:174)&lt;br/&gt;
at org.junit.runner.JUnitCore.run(JUnitCore.java:157)&lt;br/&gt;
at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:76)&lt;br/&gt;
at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:195)&lt;br/&gt;
at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:63)&lt;/p&gt;

&lt;p&gt;This is a similar stack trace that was filed for &lt;a href=&quot;https://jira.spring.io/browse/DATAMONGO-546&quot; title=&quot;spring-data-mongo 1.0.4: TransactionSyncManager in spring throws exception&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DATAMONGO-546&quot;&gt;&lt;del&gt;DATAMONGO-546&lt;/del&gt;&lt;/a&gt;. I looked for a code resolution to that issue, but it appears that it was closed because the reporter upgraded and the issue disappeared.&lt;/p&gt;

&lt;p&gt;After some debugging of the interaction between MongoDbUtils and TransactionSynchronizationManager, I have a working theory as to the cause. In a nutshell, MongoDbUtils invokes TransactionSynchronizationManager for each database in the same Mongo instance. This ends up registering two MongoSynchronizations that have the same holder. As such, there is only one resource bound in the TransactionSynchronizationManager, (see MongoDbUtils.java lines 124-139). When the transaction is completed, TransactionSynchronizationUtils.triggerBeforeCompletion() is invoked and it iterates through the MongoSynchronizations in effect invoking unbindResource() for each. The first database&apos;s synchronization unbinds the holder by Mongo key. The second fails because the holder is only bound once.&lt;/p&gt;

&lt;p&gt;I am willing to submit a patch for this issue that does one of two things:&lt;/p&gt;

&lt;p&gt;1. Override MongoSynchronization.beforeCompletion() and MongoSynchronization.suspend() so that they utilize unbindResourceIfPossible(), or&lt;br/&gt;
2. Modify MongoDbUtils.doGetDB() so that it only registers one MongoSynchronization per Mongo instead of one per database.&lt;/p&gt;

&lt;p&gt;I am not sure which of these two options is &quot;better&quot;, so some feedback from the committer community would be appreciated before I get too far into the weeds!&lt;/p&gt;</description>
                <environment>MacOSX, Java 1.6, Spring Framework 3.1.4</environment>
        <key id="50101">DATAMONGO-737</key>
            <summary>Extra MongoSynchronizations cause TransactionSynchronizationManager to throw IllegalStateException on transaction complete</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="olivergierke">Oliver Gierke</assignee>
                                    <reporter username="rwatler">Randy Watler</reporter>
                        <labels>
                    </labels>
                <created>Thu, 1 Aug 2013 21:18:51 +0000</created>
                <updated>Mon, 9 Sep 2013 20:58:47 +0000</updated>
                            <resolved>Mon, 12 Aug 2013 00:53:30 +0000</resolved>
                                    <version>1.2.1</version>
                                    <fixVersion>1.3 GA</fixVersion>
                    <fixVersion>1.2.4</fixVersion>
                                    <component>Core</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="92658" author="rwatler" created="Fri, 9 Aug 2013 22:19:34 +0000"  >&lt;p&gt;Have created a pull request against the 1.2.x branch that patches this issue in MongoDbUtils.h. The changes should easily merge into trunk. Includes unit tests in MongoDbUtilsUnitTests demonstrating the problem when the fix is not applied and verifies the change when it is.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/SpringSource/spring-data-mongodb/pull/62&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/SpringSource/spring-data-mongodb/pull/62&lt;/a&gt;&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                                                                                    <customfield id="customfield_10280" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>36599</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i008xr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1470</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10381" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Ranking</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>36301</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10480" key="com.pyxis.greenhopper.jira:gh-sprint">
                        <customfieldname>Sprint</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue id="17">The Road To SpringOne</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>