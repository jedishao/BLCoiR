<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 15:17:07 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/DATAMONGO-1498/DATAMONGO-1498.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[DATAMONGO-1498] MongoMappingContext doesn&apos;t know about types usually auto-detected (JodaTime, JDK 8 date time types)</title>
                <link>https://jira.spring.io/browse/DATAMONGO-1498</link>
                <project id="10701" key="DATAMONGO">Spring Data MongoDB</project>
                    <description>&lt;p&gt;(not sure if this issue should be opened for Spring Data REST or Spring Data Mongo, since the problem manifests itself in the contents rendered by SDR but the fix might probably go to the SD MongoDB)&lt;/p&gt;

&lt;p&gt;As described in &lt;a href=&quot;http://stackoverflow.com/questions/39689656/spring-data-rest-mongodb-joda-datetime-representation-in-rest&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;this&lt;/a&gt; SO thread, in Spring Boot 1.3.6, Spring Data 1.8.4, Spring Data REST 2.4.4 the Spring Data MongoDB entities that have a property of Joda DateTime type:&lt;/p&gt;
&lt;p/&gt;
&lt;div id=&quot;syntaxplugin&quot; class=&quot;syntaxplugin&quot; style=&quot;border: 1px dashed #bbb; border-radius: 5px !important; overflow: auto; max-height: 30em;&quot;&gt;
&lt;table cellspacing=&quot;0&quot; cellpadding=&quot;0&quot; border=&quot;0&quot; width=&quot;100%&quot; style=&quot;font-size: 1em; line-height: 1.4em !important; font-weight: normal; font-style: normal; color: black;&quot;&gt;
		&lt;tbody &gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;  margin-top: 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;    @JsonProperty(&quot;myDate&quot;)&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   margin-bottom: 10px;  width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;    private DateTime myDate;&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
			&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;p/&gt;
&lt;p&gt;gets rendered into in the REST representation of my Spring Data entity as &lt;/p&gt;
&lt;p/&gt;
&lt;div id=&quot;syntaxplugin&quot; class=&quot;syntaxplugin&quot; style=&quot;border: 1px dashed #bbb; border-radius: 5px !important; overflow: auto; max-height: 30em;&quot;&gt;
&lt;table cellspacing=&quot;0&quot; cellpadding=&quot;0&quot; border=&quot;0&quot; width=&quot;100%&quot; style=&quot;font-size: 1em; line-height: 1.4em !important; font-weight: normal; font-style: normal; color: black;&quot;&gt;
		&lt;tbody &gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;  margin-top: 10px;   margin-bottom: 10px;  width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;    &quot;myDate&quot;: &quot;2016-09-25T15:58:37.486Z&quot;&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
			&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;p/&gt;

&lt;p&gt;With Spring Boot 1.4.1, Spring Data MongoDB 1.9.3, Spring Data REST 2.5.3 same properties suddenly get represented as  &lt;/p&gt;
&lt;p/&gt;
&lt;div id=&quot;syntaxplugin&quot; class=&quot;syntaxplugin&quot; style=&quot;border: 1px dashed #bbb; border-radius: 5px !important; overflow: auto; max-height: 30em;&quot;&gt;
&lt;table cellspacing=&quot;0&quot; cellpadding=&quot;0&quot; border=&quot;0&quot; width=&quot;100%&quot; style=&quot;font-size: 1em; line-height: 1.4em !important; font-weight: normal; font-style: normal; color: black;&quot;&gt;
		&lt;tbody &gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;  margin-top: 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;    &quot;myDate&quot;: {&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;        &quot;content&quot;: &quot;2016-09-25T15:58:37.486Z&quot;&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   margin-bottom: 10px;  width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;    },&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
			&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;p/&gt;

&lt;p&gt;It looks like Joda&apos;s DateTime started to get treated as data entity again:&lt;br/&gt;
&lt;a href=&quot;https://jira.spring.io/browse/DATAMONGO-624&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://jira.spring.io/browse/DATAMONGO-624&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Adding Jackson2 @JsonUnwrapped annotation to the property helps to get representation back:&lt;/p&gt;
&lt;p/&gt;
&lt;div id=&quot;syntaxplugin&quot; class=&quot;syntaxplugin&quot; style=&quot;border: 1px dashed #bbb; border-radius: 5px !important; overflow: auto; max-height: 30em;&quot;&gt;
&lt;table cellspacing=&quot;0&quot; cellpadding=&quot;0&quot; border=&quot;0&quot; width=&quot;100%&quot; style=&quot;font-size: 1em; line-height: 1.4em !important; font-weight: normal; font-style: normal; color: black;&quot;&gt;
		&lt;tbody &gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;  margin-top: 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;    @JsonProperty(&quot;myDate&quot;)&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;    @JsonUnwrapped&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   margin-bottom: 10px;  width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;    private DateTime myDate;&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
			&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;p/&gt;

&lt;p&gt;But this cannot be a solution since in case of auto-generated properties, e.g. from JSON schema. there is only limited options to control generated annotations, especially since the @JsonUnwrapped must be set on all child/empbedded objects.&lt;/p&gt;

&lt;p&gt;The &lt;a href=&quot;http://docs.spring.io/spring-data/data-mongodb/docs/current/api/org/springframework/data/mongodb/core/convert/CustomConversions.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;Javadoc for the CustomConversions&lt;/a&gt; class states that &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;These types will be considered simple ones (which means they neither&lt;br/&gt;
need deeper inspection nor nested conversion. Thus the&lt;br/&gt;
CustomConversions also act as factory for SimpleTypeHolder&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Which is in fact not true for Spring Data REST &lt;span class=&quot;error&quot;&gt;&amp;#91;any more&amp;#93;&lt;/span&gt;, from what I can tell debugging my code.&lt;br/&gt;
The types that are added via default &lt;tt&gt;CustomConversions&lt;/tt&gt; are not treated as simple ones when rendering JSON and properties of those types get serialised as embedded entity objects.&lt;/p&gt;

&lt;p&gt;Here is the place in the Spring Data REST &lt;a href=&quot;https://github.com/spring-projects/spring-data-rest/blob/master/spring-data-rest-webmvc/src/main/java/org/springframework/data/rest/webmvc/json/PersistentEntityJackson2Module.java#L280&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;PersistentEntityJackson2Module&lt;/a&gt; that calls to Spring Data MongoDB &lt;tt&gt;PersistentEntity&lt;/tt&gt; implementation to check whether the property type is simple or not. And since the &lt;tt&gt;simpleTypeHolder&lt;/tt&gt; in the Spring Data Commons &lt;a href=&quot;https://github.com/spring-projects/spring-data-commons/blob/master/src/main/java/org/springframework/data/mapping/context/AbstractMappingContext.java#L80&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;AbstractMappingContext&lt;/a&gt; does not contain the types for which Spring Boot auto-configuration adds Joda DateTime converters, the DateTime field is treated as complex object.&lt;/p&gt;

&lt;p&gt;This one presents a major problem upgrading from Spring Boot 1.3 to 1.4, since it breaks REST APIs by default with no generic solution known so far for all Joda DateTime properties in the project.&lt;/p&gt;</description>
                <environment></environment>
        <key id="69938">DATAMONGO-1498</key>
            <summary>MongoMappingContext doesn&apos;t know about types usually auto-detected (JodaTime, JDK 8 date time types)</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="olivergierke">Oliver Gierke</assignee>
                                    <reporter username="Smollet">Sergey Shcherbakov</reporter>
                        <labels>
                    </labels>
                <created>Sun, 25 Sep 2016 22:21:26 +0000</created>
                <updated>Wed, 21 Dec 2016 22:41:05 +0000</updated>
                            <resolved>Wed, 28 Sep 2016 14:34:11 +0000</resolved>
                                    <version>1.9.3 (Hopper SR3)</version>
                                    <fixVersion>1.10 RC1 (Ingalls)</fixVersion>
                    <fixVersion>1.9.4 (Hopper SR4)</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="132417" author="olivergierke" created="Mon, 26 Sep 2016 07:35:47 +0000"  >&lt;p&gt;Are you sure you&apos;re using Boot 1.4.1? We&apos;ve identified this issue to be stemming from Boot&apos;s MongoDB auto-configuration not setting up the &lt;tt&gt;MongoMappingContext&lt;/tt&gt; correctly, so that &lt;tt&gt;SimpleTypeHolder&lt;/tt&gt; in &lt;tt&gt;CustomConversions&lt;/tt&gt; wasn&apos;t properly propagated to the &lt;tt&gt;MappingContext&lt;/tt&gt;. That has been fixed in this &lt;a href=&quot;https://github.com/spring-projects/spring-boot/pull/6882&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;pull request&lt;/a&gt; and actually released with Boot 1.4.1. Any chance you have a sample project that reproduces the problem?&lt;/p&gt;</comment>
                            <comment id="132485" author="smollet" created="Wed, 28 Sep 2016 07:54:51 +0000"  >&lt;p&gt;Hello Oliver,&lt;/p&gt;

&lt;p&gt;Here is the smallest example that reproduces the issue:&lt;br/&gt;
&lt;a href=&quot;https://github.com/sshcherbakov/datarest-907-example&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/sshcherbakov/datarest-907-example&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Just change the Spring Boot version in the pom.xml parent from 1.4.1 to 1.3.8 to see the difference in the Joda DateTime representation in REST. Some more details about the steps how to run the example are in the project&apos;s readme file.&lt;/p&gt;
</comment>
                            <comment id="132488" author="olivergierke" created="Wed, 28 Sep 2016 09:08:19 +0000"  >&lt;p&gt;Thanks, I&apos;ll have a look.&lt;/p&gt;</comment>
                            <comment id="132490" author="olivergierke" created="Wed, 28 Sep 2016 10:01:09 +0000"  >&lt;p&gt;I&apos;ve added some sample data to your project and as you can see in the screenshot, the representation looks as expected. I also added a JDK 8 variant and ran into an exploded rendering for that until I realized, the required JDK 8 Jackson integration was missing. Once I added that, the JDK 8 types render as expected, too.&lt;/p&gt;

&lt;p&gt;See the example I attached.&lt;/p&gt;</comment>
                            <comment id="132500" author="smollet" created="Wed, 28 Sep 2016 13:16:22 +0000"  >&lt;p&gt;Thank you Oliver,&lt;br/&gt;
your example does work as I expect.&lt;br/&gt;
It is a bit different from mine though.&lt;/p&gt;

&lt;p&gt;My example has explicit &lt;tt&gt;@EnableMongoRepositories&lt;/tt&gt; annotation on the application class. I need that in my real project to specify the custom base Repository class for all my repositories (so I cannot omit it in a real project).&lt;br/&gt;
When there is explicit &lt;tt&gt;@EnableMongoRepositories&lt;/tt&gt; on the application class the REST representation of the Joda DateTime is a an object and not string.&lt;/p&gt;

&lt;p&gt;I have submitted a unit test that fails with Spring Boot 1.4.1 when annotation is present and passes when the annotation is commented out.&lt;/p&gt;

&lt;p&gt;Hope that helps correcting the behaviour!&lt;/p&gt;</comment>
                            <comment id="132503" author="olivergierke" created="Wed, 28 Sep 2016 14:33:54 +0000"  >&lt;p&gt;Fixes pushed to master and the bugfix branch for Hopper. Binaries should be available in a couple of minutes. Verified your sample project&apos;s tests now succeeding.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="23578" name="datarest-907-example.zip" size="144726" author="olivergierke" created="Wed, 28 Sep 2016 09:55:34 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 26 Sep 2016 07:35:47 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10280" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>olivergierke</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i09g4n:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10381" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Ranking</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>