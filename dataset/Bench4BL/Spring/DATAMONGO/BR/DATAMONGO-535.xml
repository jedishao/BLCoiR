<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 15:33:08 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/DATAMONGO-535/DATAMONGO-535.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[DATAMONGO-535] Retrieve of existing Mongo DB from Transaction is not working</title>
                <link>https://jira.spring.io/browse/DATAMONGO-535</link>
                <project id="10701" key="DATAMONGO">Spring Data MongoDB</project>
                    <description>&lt;p&gt;&lt;tt&gt;dbHolder.doesNotHoldNonDefaultDB()&lt;/tt&gt; in &lt;tt&gt;MongoDbUtils.doGetDB()&lt;/tt&gt; is always false, so the &lt;tt&gt;DbHolder&lt;/tt&gt; is never used. &lt;/p&gt;

&lt;p&gt;&lt;tt&gt;MongoDbUtils.doGetDB()&lt;/tt&gt; is also always registering synchronization for the same Mongo instance on every call. For two or more calls it fails to unbindResource() because resource is already unbounded.&lt;/p&gt;</description>
                <environment></environment>
        <key id="45362">DATAMONGO-535</key>
            <summary>Retrieve of existing Mongo DB from Transaction is not working</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="olivergierke">Oliver Gierke</assignee>
                                    <reporter username="romanleicht">Roman Leicht</reporter>
                        <labels>
                    </labels>
                <created>Mon, 10 Sep 2012 03:15:19 +0000</created>
                <updated>Mon, 25 Mar 2013 09:31:00 +0000</updated>
                            <resolved>Wed, 12 Sep 2012 04:34:01 +0000</resolved>
                                    <version>1.0.4</version>
                                    <fixVersion>1.1 GA</fixVersion>
                                    <component>Core</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                    <timeoriginalestimate seconds="0">0d</timeoriginalestimate>
                            <timeestimate seconds="0">0d</timeestimate>
                                        <comments>
                            <comment id="83462" author="olivergierke" created="Tue, 11 Sep 2012 08:53:58 +0000"  >&lt;p&gt;The story is a little tricky here. First of all, the only real benefit from this resource managing code seems to come from the Grails side of things. The reason this is, is that plain Spring Data MongoDB does not provide a session concept currently and thus we do not activate transaction synchronization at all. Speaking to Graeme about the issue it turned out that the bug hasn&apos;t really popped up in Grails neither. The reason this is the case is that the MongoDB Java driver actually holds the DB instances in a &lt;tt&gt;ConcurrentHashMap&lt;/tt&gt; anyway so that even for multiple calls to &lt;tt&gt;Mongo.getDb(&#8230;)&lt;/tt&gt; we get back the same instance anyway. That&apos;s also the reason why our test cases actually didn&apos;t bark.&lt;/p&gt;

&lt;p&gt;Long story short: the transaction synchronization code doesn&apos;t seem to be needed anymore at all. I&apos;ll fix the breaking &lt;tt&gt;doesNotHoldNonDefaultDB()&lt;/tt&gt; lookup for now but that doesn&apos;t actually make a difference. Expect the code to be removed in the next major version (&amp;gt; 1.1 GA).&lt;/p&gt;</comment>
                            <comment id="83478" author="romanleicht" created="Tue, 11 Sep 2012 14:52:33 +0000"  >&lt;p&gt;Our issue is: we using both MySQL and MongoDB in the same transaction. Because of MySQL/Hibernate, synchronization is active when we calling to MongoDB, and doGetDB() is binding the same resource over and over again. After multiple binding to the same key, the unbinding is failing on second attempt. This is how run into this issue.&lt;/p&gt;

&lt;p&gt;The fix WILL make difference for us &lt;img class=&quot;emoticon&quot; src=&quot;https://jira.spring.io/images/icons/emoticons/smile.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;br/&gt;
Removing synchronization will also help.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 11 Sep 2012 08:53:58 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10280" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>32285</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i05ubz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>34120</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10381" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Ranking</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>31985</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>