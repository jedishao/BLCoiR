<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 13:14:12 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/DATACMNS-390/DATACMNS-390.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[DATACMNS-390] ConcurrentModificationException in MappingContextTypeInformationMapper.resolveTypeFrom</title>
                <link>https://jira.spring.io/browse/DATACMNS-390</link>
                <project id="10510" key="DATACMNS">Spring Data Commons</project>
                    <description>&lt;p&gt;I am using Spring Data and found the following Stacktrace in the logs:&lt;/p&gt;

&lt;p&gt;Caused by: java.util.ConcurrentModificationException&lt;br/&gt;
	at java.util.HashMap$HashIterator.nextEntry(HashMap.java:894)&lt;br/&gt;
	at java.util.HashMap$ValueIterator.next(HashMap.java:922)&lt;br/&gt;
	at org.springframework.data.convert.MappingContextTypeInformationMapper.resolveTypeFrom(MappingContextTypeInformationMapper.java:117)&lt;br/&gt;
	at org.springframework.data.convert.DefaultTypeMapper.getFromCacheOrCreate(DefaultTypeMapper.java:122)&lt;br/&gt;
	at org.springframework.data.convert.DefaultTypeMapper.readType(DefaultTypeMapper.java:102)&lt;br/&gt;
	at org.springframework.data.convert.DefaultTypeMapper.getDefaultedTypeToBeUsed(DefaultTypeMapper.java:164)&lt;br/&gt;
	at org.springframework.data.convert.DefaultTypeMapper.readType(DefaultTypeMapper.java:141)&lt;br/&gt;
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:186)&lt;/p&gt;

&lt;p&gt;I think that there might be a data race in the implementation of  org.springframework.data.mapping.context.AbstractMappingContext#getPersistentEntities()&lt;/p&gt;


&lt;p&gt;	public Collection&amp;lt;E&amp;gt; getPersistentEntities() {&lt;br/&gt;
		try &lt;/p&gt;
{
			read.lock();
			return persistentEntities.values();
		}
&lt;p&gt; finally &lt;/p&gt;
{
			read.unlock();
		}
&lt;p&gt;	}&lt;/p&gt;

&lt;p&gt;Although the code acquires a read lock when returning the values of the HashMap &quot;persistentEntities&quot; it immediately releases the lock. This opens up the possibility that a thread modifies the values of &quot;persistentEntities&quot; while another thread is iterating over the values. &lt;/p&gt;

&lt;p&gt;The JavaDoc of java.util.HashMap#values() says &quot;If the map is&lt;br/&gt;
 modified while an iteration over the collection is in progress&lt;br/&gt;
 (except through the iterator&apos;s own &amp;lt;tt&amp;gt;remove&amp;lt;/tt&amp;gt; operation),&lt;br/&gt;
  the results of the iteration are undefined.&quot;&lt;/p&gt;

&lt;p&gt;In my case I get a ConcurrentModificationException.&lt;/p&gt;

&lt;p&gt;It would be nice, if you could take a look at this issue.  &lt;/p&gt;</description>
                <environment></environment>
        <key id="51565">DATACMNS-390</key>
            <summary>ConcurrentModificationException in MappingContextTypeInformationMapper.resolveTypeFrom</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://jira.spring.io/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="olivergierke">Oliver Gierke</assignee>
                                    <reporter username="gruenewa">Alexander Gr&#252;newald</reporter>
                        <labels>
                    </labels>
                <created>Mon, 28 Oct 2013 09:07:46 +0000</created>
                <updated>Thu, 21 Nov 2013 06:21:54 +0000</updated>
                            <resolved>Mon, 4 Nov 2013 02:33:59 +0000</resolved>
                                    <version>1.5.2</version>
                                    <fixVersion>1.7 M1 (Codd)</fixVersion>
                    <fixVersion>1.6.3 (Babbage SR2)</fixVersion>
                                        <due></due>
                            <votes>3</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="94962" author="thomasd" created="Tue, 29 Oct 2013 05:34:02 +0000"  >&lt;p&gt;Hello,&lt;/p&gt;

&lt;p&gt;thanks for reporting this - when does this happen? Could you please provide a test case that reproduces the issue?&lt;/p&gt;

&lt;p&gt;Cheers,&lt;br/&gt;
Thomas&lt;/p&gt;</comment>
                            <comment id="95039" author="gruenewa" created="Thu, 31 Oct 2013 05:28:56 +0000"  >&lt;p&gt;Simple program that shows the race condition in Spring Data&apos;s AbstractMappingContext implementation.&lt;/p&gt;</comment>
                            <comment id="95041" author="gruenewa" created="Thu, 31 Oct 2013 05:32:20 +0000"  >&lt;p&gt;SBT build file. Use &quot;sbt run&quot; to run the demo...&lt;/p&gt;

&lt;p&gt;Output is:&lt;/p&gt;

&lt;p&gt;java.util.ConcurrentModificationException&lt;br/&gt;
	at java.util.HashMap$HashIterator.nextEntry(HashMap.java:810)&lt;br/&gt;
	at java.util.HashMap$ValueIterator.next(HashMap.java:839)&lt;br/&gt;
	at Main$delayedInit$body.apply(Main.scala:15)&lt;/p&gt;</comment>
                            <comment id="95121" author="gruenewa" created="Sun, 3 Nov 2013 23:53:34 +0000"  >&lt;p&gt;Does the test case help? Can this issue be solved? What do you think?&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="21463" name="Main.scala" size="427" author="gruenewa" created="Thu, 31 Oct 2013 05:28:56 +0000"/>
                            <attachment id="21464" name="build.sbt" size="258" author="gruenewa" created="Thu, 31 Oct 2013 05:32:20 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 29 Oct 2013 05:34:02 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10280" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>38051</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i06oa7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>38972</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10381" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Ranking</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>37753</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10480" key="com.pyxis.greenhopper.jira:gh-sprint">
                        <customfieldname>Sprint</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue id="23">The Road to Codd M1</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>