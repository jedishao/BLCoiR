<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 13:11:11 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/DATACMNS-518/DATACMNS-518.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[DATACMNS-518] Spring Data Infinite Loop in HashMap in PreferredConstructor and CustomConversions</title>
                <link>https://jira.spring.io/browse/DATACMNS-518</link>
                <project id="10510" key="DATACMNS">Spring Data Commons</project>
                    <description>&lt;p&gt;See also post at newsgroup:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://forum.spring.io/forum/spring-projects/data/750072-spring-data-infinite-loop-in-hashmap-in-preferredconstructor-and-customconversions&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://forum.spring.io/forum/spring-projects/data/750072-spring-data-infinite-loop-in-hashmap-in-preferredconstructor-and-customconversions&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Spring Data Infinite Loops in Production&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;This post is related to an issue we have started seeing in production at the company where I work. I am trying to figure out where to take this next. Should I proceed to filing a bug report, or do I need to try and collect more information?&lt;/p&gt;

&lt;p&gt;It started happening a few weeks ago. We would see a box CPU suddenly go to 100% indefinitely until the app was redeployed. Fortunately, we did take thread dumps, and in one case a heap dump. We were able to see that there is a recurring infinite loop in two places in Spring Data.&lt;/p&gt;

&lt;p&gt;This has happened a total of 3 times now. Given the number of nodes we run in PROD, INT and QA (some number &amp;gt; 30), and the length of time we have been in production on this stack, we would characterize it as a rare occurrence. But it worries us.&lt;/p&gt;

&lt;p&gt;One could ask &quot;what changed in the application to make this start happening?&quot;. Ack. We are in our busy season right now, so a lot of commits went into our application for the weeks prior to the first occurrence. And given the rare nature of the problem, it would be difficult to really identify even the time range of commits that we would need to evaluate. Root Cause&lt;/p&gt;

&lt;p&gt;In all 3 cases, the infinite loop is coming from concurrent updates to the thread-unsafe HashMap class. We see it happening within two Spring Data classes:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;org.springframework.data.mapping.PreferredConstructor&lt;/li&gt;
	&lt;li&gt;org.springframework.data.mongodb.core.convert.CustomConversions&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I could explain why HashMap is getting stuck in infinite loops, but several others have already done a great job doing it, so I refer you there:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;&lt;a href=&quot;http://mailinator.blogspot.dk/2009/06/beautiful-race-condition.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://mailinator.blogspot.dk/2009/06/beautiful-race-condition.html&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;https://code.google.com/p/javasimon/issues/detail?id=115&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://code.google.com/p/javasimon/issues/detail?id=115&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;b&gt;Stack Trace Snippets&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;These stack traces come from our thread dumps. Each stack is seen multiple times when the problem occurs. &lt;/p&gt;

&lt;p&gt;&lt;b&gt;PreferredConstructor&lt;/b&gt;&lt;br/&gt;
&quot;http-bio-8080-exec-235&quot; daemon prio=10 tid=0x00007fb19c0a9800 nid=0x5337 runnable &lt;span class=&quot;error&quot;&gt;&amp;#91;0x00007fb228953000&amp;#93;&lt;/span&gt;&lt;br/&gt;
java.lang.Thread.State: RUNNABLE&lt;br/&gt;
at java.util.HashMap.getEntry(HashMap.java:469)&lt;br/&gt;
at java.util.HashMap.get(HashMap.java:421)&lt;br/&gt;
at org.springframework.data.mapping.PreferredConstruc tor.isConstructorParameter(PreferredConstructor.ja va:120)&lt;br/&gt;
at org.springframework.data.mapping.model.BasicPersis tentEntity.isConstructorArgument(BasicPersistentEn tity.java:98)&lt;br/&gt;
at org.springframework.data.mongodb.core.convert.Mapp ingMongoConverter$1.doWithPersistentProperty(Mappi ngMongoConverter.java:252)&lt;br/&gt;
at org.springframework.data.mongodb.core.convert.Mapp ingMongoConverter$1.doWithPersistentProperty(Mappi ngMongoConverter.java:249)&lt;br/&gt;
at org.springframework.data.mapping.model.BasicPersis tentEntity.doWithProperties(BasicPersistentEntity. java:257)&lt;br/&gt;
at &lt;/p&gt;

&lt;p&gt;&lt;b&gt;CustomConversions&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;&quot;http-bio-8080-exec-75&quot; daemon prio=10 tid=0x00007f3688018000 nid=0x6c2e runnable &lt;span class=&quot;error&quot;&gt;&amp;#91;0x00007f376e9ef000&amp;#93;&lt;/span&gt;&lt;br/&gt;
java.lang.Thread.State: RUNNABLE&lt;br/&gt;
at java.util.HashMap.getEntry(HashMap.java:469)&lt;br/&gt;
at java.util.HashMap.get(HashMap.java:421)&lt;br/&gt;
at org.springframework.data.mongodb.core.convert.Cust omConversions.getCustomReadTarget(CustomConversion s.java:317)&lt;br/&gt;
at org.springframework.data.mongodb.core.convert.Cust omConversions.hasCustomReadTarget(CustomConversion s.java:281)&lt;br/&gt;
at org.springframework.data.mongodb.core.convert.Mapp ingMongoConverter.read(MappingMongoConverter.java: 200)&lt;br/&gt;
at org.springframework.data.mongodb.core.convert.Mapp ingMongoConverter.readCollectionOrArray(MappingMon goConverter.java:791)&lt;br/&gt;
at &lt;/p&gt;

&lt;p&gt;&lt;b&gt;More Information&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;I posted a lot more information about this issue here:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;&lt;a href=&quot;http://peterlairdtech.blogspot.com/2014/06/spring-data-infinite-loop-in-hashmap-in.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://peterlairdtech.blogspot.com/2014/06/spring-data-infinite-loop-in-hashmap-in.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Please let me know if there are things I can do to help diagnose this further. Thanks!&lt;/p&gt;</description>
                <environment>- Java webapp hosted as an Amazon EC2 Elasticbeanstalk app&lt;br/&gt;
- JVM: java version &#8220;1.7.0_51&amp;quot;   Java(TM) SE Runtime Environment (build 1.7.0_51-b13)   Java HotSpot(TM) 64-Bit Server VM (build 24.51-b03, mixed mode)&lt;br/&gt;
- OS:  Amazon Linux 3.2.12-3.2.4.amzn1.x86_64&lt;br/&gt;
- MongoDB:  2.4.6 (hosted on another box)</environment>
        <key id="58181">DATACMNS-518</key>
            <summary>Spring Data Infinite Loop in HashMap in PreferredConstructor and CustomConversions</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://jira.spring.io/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="thomasd">Thomas Darimont</assignee>
                                    <reporter username="lairdpeter">Peter Laird</reporter>
                        <labels>
                    </labels>
                <created>Tue, 10 Jun 2014 10:08:36 +0000</created>
                <updated>Mon, 30 Jun 2014 08:53:39 +0000</updated>
                            <resolved>Thu, 26 Jun 2014 05:12:06 +0000</resolved>
                                    <version>1.6.2 (Babbage SR1)</version>
                                    <fixVersion>1.8.1 (Dijkstra SR1)</fixVersion>
                    <fixVersion>1.9 M1 (Evans)</fixVersion>
                                    <component>Core</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="104441" author="thomasd" created="Wed, 11 Jun 2014 23:39:32 +0000"  >&lt;p&gt;CHM in CustomConversions&lt;/p&gt;</comment>
                            <comment id="104444" author="thomasd" created="Thu, 12 Jun 2014 00:47:57 +0000"  >&lt;p&gt;Hello Peter,&lt;/p&gt;

&lt;p&gt;thanks for reporting this. The issue in CustomConversions should have be fixed with an update to Babbage SR3 where we replaced the Map with a CHM.&lt;/p&gt;

&lt;p&gt;However the issue in PreferredConstructor is not yet fixed - since we&apos;re still using a plain map there. I&apos;ll have a look into this.&lt;br/&gt;
In the mean time, could you give this a try with a newer version (e.g. Codd SR2 or Dijkstra GA)?&lt;/p&gt;

&lt;p&gt;Cheers,&lt;br/&gt;
Thomas&lt;/p&gt;</comment>
                            <comment id="104449" author="thomasd" created="Thu, 12 Jun 2014 03:49:09 +0000"  >&lt;p&gt;Instead of simply switching to a CHM in PC we choose to just guard the writes to the underlying hm with a ReadWriteLock. Potentially occuring (seldom) multiple writes are not an issue since they don&apos;t result in an infinite-loop.&lt;/p&gt;

&lt;p&gt;@Peter would you mind giving the attached PR a try?&lt;/p&gt;</comment>
                            <comment id="104457" author="lairdpeter" created="Thu, 12 Jun 2014 08:21:41 +0000"  >&lt;p&gt;Thanks Thomas, sounds good. I will test out the PR - though it will take me a couple of days to get to it.&lt;/p&gt;</comment>
                            <comment id="104484" author="lairdpeter" created="Fri, 13 Jun 2014 06:11:11 +0000"  >&lt;p&gt;Thomas - I have integrated your fix into our application, and have deployed it to several environments. Because of some other work going on, I can&apos;t widely deploy it yet, but over the next week it will roll through our other environments. I will alert you if we see anything amiss. Thanks for working on this.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10151">
                    <name>Relate</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="55302">DATAMONGO-830</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 11 Jun 2014 23:39:32 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10280" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>44344</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>olivergierke</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10684" key="com.atlassian.jira.plugin.system.customfieldtypes:url">
                        <customfieldname>Pull Request URL</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[https://github.com/spring-projects/spring-data-commons/pull/86]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0024n:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>346</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10381" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Ranking</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>44046</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10120" key="com.atlassian.jira.plugin.system.customfieldtypes:url">
                        <customfieldname>Reference URL</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[http://forum.spring.io/forum/spring-projects/data/750072-spring-data-infinite-loop-in-hashmap-in-preferredconstructor-and-customconversions]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10480" key="com.pyxis.greenhopper.jira:gh-sprint">
                        <customfieldname>Sprint</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue id="48">48 - Dijkstra GA</customfieldvalue>
    <customfieldvalue id="52">49 - Dijkstra SR1</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>