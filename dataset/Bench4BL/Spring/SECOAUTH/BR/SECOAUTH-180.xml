<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Fri Dec 23 05:10:41 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SECOAUTH-180/SECOAUTH-180.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SECOAUTH-180] InMemoryNonceServices synchronization issue</title>
                <link>https://jira.spring.io/browse/SECOAUTH-180</link>
                <project id="10440" key="SECOAUTH">Spring Security OAuth</project>
                    <description>&lt;p&gt;While doing a load test we ran into an lock contention issue with InMemoryNonceServices&lt;/p&gt;

&lt;p&gt;In our load test we are hitting an oauth protected service with 50 threads. Each request should take about 5-10ms. Initially our client was using a nonce with insufficient randomness, so we &apos;fixed&apos; it by using a uuid (the id of the resource being accessed). This is of course a hack but it revealed what is in my view some dubious synchronization in the InMemoryNonceServices class.&lt;/p&gt;

&lt;p&gt;The validateNonceMethod has a synchronized block that iterates over all the entries that were collected during the cutoff period to check if any entries are old enough so that they can be removed. In our load tests, this easily ranges in the tens of thousands of entries and consequently our server was constantly blocked on accessing this synchronized block. Response times dropped to 3-4 seconds. Simply disabling oauth nonce validation fixed the problem for us but of course this is not a fix we want in production.&lt;/p&gt;

&lt;p&gt;The fix seems obvious. Don&apos;t synchronize on iterating over all nonces in entries and instead handle removal of the nonces a bit smarter. Probably simply using a concurrent linked list would work well enough.&lt;/p&gt;

&lt;p&gt;For reference, here is the offending method:&lt;/p&gt;

&lt;p&gt;  @Override&lt;br/&gt;
  public void validateNonce(ConsumerDetails consumerDetails, long timestamp, String nonce) throws AuthenticationException {&lt;br/&gt;
    final long cutoff = (System.currentTimeMillis() / 1000) - getValidityWindowSeconds();&lt;br/&gt;
    super.validateNonce(consumerDetails, timestamp, nonce);&lt;/p&gt;

&lt;p&gt;    String consumerKey = consumerDetails.getConsumerKey();&lt;br/&gt;
    LinkedList&amp;lt;TimestampEntry&amp;gt; entries = TIMESTAMP_ENTRIES.get(consumerKey);&lt;br/&gt;
    if (entries == null) &lt;/p&gt;
{
      entries = new LinkedList&amp;lt;TimestampEntry&amp;gt;();
      TIMESTAMP_ENTRIES.put(consumerKey, entries);
    }

&lt;p&gt;    synchronized (entries) {&lt;br/&gt;
      if (entries.isEmpty()) &lt;/p&gt;
{
        entries.add(new TimestampEntry(timestamp, nonce));
      }
&lt;p&gt;      else {&lt;br/&gt;
        boolean isNew = entries.getLast().getTimestamp() &amp;lt; timestamp;&lt;br/&gt;
        ListIterator&amp;lt;TimestampEntry&amp;gt; listIterator = entries.listIterator();&lt;br/&gt;
        while (listIterator.hasNext()) {&lt;br/&gt;
          TimestampEntry entry = listIterator.next();&lt;br/&gt;
          if (entry.getTimestamp() &amp;lt; cutoff) &lt;/p&gt;
{
            listIterator.remove();
            isNew = !listIterator.hasNext();
          }
&lt;p&gt;          else if (isNew) &lt;/p&gt;
{
            //optimize for a new, latest timestamp
            entries.addLast(new TimestampEntry(timestamp, nonce));
            return;
          }
&lt;p&gt;          else if (entry.getTimestamp() == timestamp) {&lt;br/&gt;
            if (!entry.addNonce(nonce)) &lt;/p&gt;
{
              throw new NonceAlreadyUsedException(&quot;Nonce already used: &quot; + nonce);
            }
&lt;p&gt;            return;&lt;br/&gt;
          }&lt;br/&gt;
          else if (entry.getTimestamp() &amp;gt; timestamp) &lt;/p&gt;
{
            //insert a new entry just before this one.
            entries.add(listIterator.previousIndex(), new TimestampEntry(timestamp, nonce));
            return;
          }
&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt;        //got through the whole list; assume it&apos;s just a new one.&lt;br/&gt;
        //this shouldn&apos;t happen because of the optimization above.&lt;br/&gt;
        entries.addLast(new TimestampEntry(timestamp, nonce));&lt;br/&gt;
      }&lt;br/&gt;
    }&lt;br/&gt;
  }&lt;/p&gt;</description>
                <environment>linux/spring 3.0.5/java 1.6</environment>
        <key id="41558">SECOAUTH-180</key>
            <summary>InMemoryNonceServices synchronization issue</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://jira.spring.io/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="8">Complete</resolution>
                                        <assignee username="david_syer">Dave Syer</assignee>
                                    <reporter username="jillesvangurp">Jilles van Gurp</reporter>
                        <labels>
                    </labels>
                <created>Tue, 3 Jan 2012 02:42:01 +0000</created>
                <updated>Mon, 9 Jan 2012 02:41:01 +0000</updated>
                            <resolved>Mon, 9 Jan 2012 02:41:01 +0000</resolved>
                                                                    <component>OAuth 1</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                    <timeoriginalestimate seconds="0">0d</timeoriginalestimate>
                            <timeestimate seconds="0">0d</timeestimate>
                                        <comments>
                            <comment id="74379" author="david_syer" created="Tue, 3 Jan 2012 08:46:29 +0000"  >&lt;p&gt;Thanks for the analysis.  If you can fix it to your satisfaction, please feel free.  Fill in the contributor agreement (see README for link) before sending the pull request.&lt;/p&gt;</comment>
                            <comment id="74453" author="jillesvangurp" created="Thu, 5 Jan 2012 00:59:35 +0000"  >&lt;p&gt;Thanks, I may look at this over the weekend but don&apos;t count on anything. I have to set up a spring security dev environment first.&lt;/p&gt;</comment>
                            <comment id="74524" author="jillesvangurp" created="Sun, 8 Jan 2012 06:15:37 +0000"  >&lt;p&gt;I&apos;ve sent a pull request with the fix: &lt;a href=&quot;https://github.com/SpringSource/spring-security-oauth/pull/12&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/SpringSource/spring-security-oauth/pull/12&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="74544" author="david_syer" created="Mon, 9 Jan 2012 00:34:15 +0000"  >&lt;p&gt;Thanks.  Can you please fill out the contributors&apos; agreement form (link in README)?&lt;/p&gt;</comment>
                            <comment id="74550" author="jillesvangurp" created="Mon, 9 Jan 2012 02:19:23 +0000"  >&lt;p&gt;I already did this. I should have mentioned this. The confirmation number is: 18520120108060721&lt;/p&gt;</comment>
                            <comment id="74556" author="david_syer" created="Mon, 9 Jan 2012 02:41:00 +0000"  >&lt;p&gt;Merged thanks.  (The contributor agreements are slow to synchronize, so I don&apos;t get notified until much later sometimes.  Sorry to have to ask again.)&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 3 Jan 2012 08:46:29 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10280" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>28891</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i032i7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>17948</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10381" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Ranking</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>17346</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>