<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Fri Dec 23 05:08:01 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SECOAUTH-236/SECOAUTH-236.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SECOAUTH-236] Wrong error being reported by DefaultWebResponseExceptionTranslator</title>
                <link>https://jira.spring.io/browse/SECOAUTH-236</link>
                <project id="10440" key="SECOAUTH">Spring Security OAuth</project>
                    <description>
&lt;p&gt;Bug in DefailWebResponseExceptionTranslator:&lt;/p&gt;

&lt;p&gt;More precisely, it should not do this: (around line 55)&lt;/p&gt;

&lt;p&gt;Code:&lt;br/&gt;
		if (ase instanceof AuthenticationException) &lt;/p&gt;
{
			return handleOAuth2Exception(new InvalidTokenException(e.getMessage(), e));
		}


&lt;p&gt;Wrongly create an InvalidTokenException when the original exception thrown by ClienDetailsServiceImpl is a InvalidClientException.&lt;/p&gt;

&lt;p&gt;This will result in incorrect error code in the HTTP Response.&lt;/p&gt;
</description>
                <environment></environment>
        <key id="42899">SECOAUTH-236</key>
            <summary>Wrong error being reported by DefaultWebResponseExceptionTranslator</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://jira.spring.io/images/icons/priorities/minor.png">Minor</priority>
                        <status id="5" iconUrl="https://jira.spring.io/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="8">Complete</resolution>
                                        <assignee username="david_syer">Dave Syer</assignee>
                                    <reporter username="phavelar">Paulo Avelar</reporter>
                        <labels>
                    </labels>
                <created>Tue, 10 Apr 2012 11:38:40 +0000</created>
                <updated>Thu, 12 Apr 2012 14:18:31 +0000</updated>
                            <resolved>Wed, 11 Apr 2012 00:55:51 +0000</resolved>
                                    <version>1.0.0</version>
                                    <fixVersion>1.0.0.RC1</fixVersion>
                                    <component>OAuth 2</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                    <timeoriginalestimate seconds="0">0d</timeoriginalestimate>
                            <timeestimate seconds="0">0d</timeestimate>
                                        <comments>
                            <comment id="77514" author="david_syer" created="Wed, 11 Apr 2012 00:28:27 +0000"  >&lt;p&gt;InvalidClientException is an OAuth2Exception so it will be handled as is.  Don&apos;t you agree?&lt;/p&gt;

&lt;p&gt;I do think there is a problem with using InvalidTokenException as a default response to AuthenticationException, but that&apos;s different, and I&apos;ll fix it.  Any suggestions?  We need a 401, but there are no really clear guidelines for this in the spec, and no obvious error code that works if the exception is a user authentication problem (as opposed to a client authentication problem).&lt;/p&gt;</comment>
                            <comment id="77516" author="david_syer" created="Wed, 11 Apr 2012 00:50:14 +0000"  >&lt;p&gt;Update: I can see from the forum post that this is actually a client authentication problem and the exception is thrown by the Http basic filter, probably wrapping one from the client details service.  I think we can fix it by extracting OAuth2Exception from the throwable chain first, and then trying AuthenticationException.&lt;/p&gt;</comment>
                            <comment id="77517" author="david_syer" created="Wed, 11 Apr 2012 00:55:50 +0000"  >&lt;p&gt;If you are fussy about having &quot;Basic&quot; not &quot;Bearer&quot; in your response header I think you can create a new instance of OAuth2AuthenticationEntryPoint and set the typeName to &quot;Basic&quot; for this use case.&lt;/p&gt;</comment>
                            <comment id="77528" author="phavelar" created="Wed, 11 Apr 2012 08:56:54 +0000"  >&lt;p&gt;Hi Dave, &lt;br/&gt;
Thanks a lot for promptly response on this.&lt;/p&gt;

&lt;p&gt;&quot;InvalidClientException is an OAuth2Exception so it will be handled as is. Don&apos;t you agree?&quot;&lt;br/&gt;
Yes, I agree but the response body will wrongly be: &lt;/p&gt;

&lt;p&gt; error:invalid_token,error_description:Client not found: 999999&lt;/p&gt;

&lt;p&gt;instead of &lt;/p&gt;

&lt;p&gt; error:invalid_client, error_description:Client not found: 999999   &lt;/p&gt;


&lt;p&gt;As per spec item 5.2 Error Response : &lt;a href=&quot;http://tools.ietf.org/html/draft-ietf-oauth-v2-25&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://tools.ietf.org/html/draft-ietf-oauth-v2-25&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Paulo&lt;/p&gt;</comment>
                            <comment id="77529" author="david_syer" created="Wed, 11 Apr 2012 09:16:42 +0000"  >&lt;p&gt;Did you test the new code?  It looks OK to me.&lt;/p&gt;</comment>
                            <comment id="77530" author="phavelar" created="Wed, 11 Apr 2012 09:32:47 +0000"  >&lt;p&gt;Yes, the new code works !&lt;br/&gt;
Just finished testing it.&lt;/p&gt;

&lt;p&gt;Thanks again!&lt;/p&gt;


&lt;p&gt;Paulo&lt;/p&gt;
</comment>
                            <comment id="77532" author="phavelar" created="Wed, 11 Apr 2012 10:11:25 +0000"  >&lt;p&gt;Hi Dave,&lt;br/&gt;
I spoke too soon.&lt;br/&gt;
While it fixed that one case, it broke another.&lt;br/&gt;
I have a test that makes a HTTP GET to a resource using a bogus token.&lt;/p&gt;

&lt;p&gt;What I get in this case, as a header response is:&lt;/p&gt;

&lt;p&gt;WWW-Authenticate: Bearer realm=Preva, error=unauthorized, error_description=An Authentication object was not found in the SecurityContext&lt;/p&gt;

&lt;p&gt;The correct response should have been:&lt;/p&gt;

&lt;p&gt;WWW-Authenticate: Bearer realm=Preva, error=invalid_token, error_description=some error.&lt;/p&gt;


&lt;p&gt;I believe the &quot;invalid_token&quot; error response is mandated in the spec. &lt;/p&gt;









</comment>
                            <comment id="77549" author="david_syer" created="Thu, 12 Apr 2012 02:34:44 +0000"  >&lt;p&gt;Thanks for the feedback.  This new one is because of the way that Spring Security&apos;s AbstractPreAuthenticatedProcessingFilter is implemented, so I had to refactor the OAuth2AuthenticationProcessingFilter not to extend that base class..  There&apos;s a new integration test that matches yours, so hopefully we are all happier now.&lt;/p&gt;</comment>
                            <comment id="77562" author="phavelar" created="Thu, 12 Apr 2012 13:46:38 +0000"  >&lt;p&gt;Hi Dave, &lt;br/&gt;
just executed my tests on build# BUILD-20120412.094535-93 , and yes ! good news ! I now get invalid_token in the response!&lt;/p&gt;

&lt;p&gt;One issue I noticed, the realm is now being set to &quot;oauth&quot;, overriding my explicit realm settings.&lt;/p&gt;

&lt;p&gt;I need to set the realm property for the newly refactored OAuth2AuthenticationProcessingFilter.&lt;br/&gt;
However I&apos;m a bit unsure on how to do that.  Can you please help?&lt;/p&gt;

&lt;p&gt;Here is my configuration,  &lt;/p&gt;

&lt;p&gt;security-context.xml:&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;code&amp;#93;&lt;/span&gt;&lt;br/&gt;
&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&amp;gt;&lt;br/&gt;
&amp;lt;beans:beans xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;br/&gt;
             xmlns=&quot;http://www.springframework.org/schema/security&quot;&lt;br/&gt;
             xmlns:beans=&quot;http://www.springframework.org/schema/beans&quot;&lt;br/&gt;
             xsi:schemaLocation=&quot;http://www.springframework.org/schema/security &lt;a href=&quot;http://www.springframework.org/schema/security/spring-security-3.1.xsd&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.springframework.org/schema/security/spring-security-3.1.xsd&lt;/a&gt;&lt;br/&gt;
		&lt;a href=&quot;http://www.springframework.org/schema/beans&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.springframework.org/schema/beans&lt;/a&gt; &lt;a href=&quot;http://www.springframework.org/schema/beans/spring-beans-3.1.xsd&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.springframework.org/schema/beans/spring-beans-3.1.xsd&lt;/a&gt;&quot;&amp;gt;&lt;/p&gt;

&lt;p&gt;    &amp;lt;http realm=&quot;Preva&quot; pattern=&quot;/oauth/token&quot; create-session=&quot;never&quot;&lt;br/&gt;
          entry-point-ref=&quot;basicOauthAuthenticationEntryPoint&quot;&lt;br/&gt;
          authentication-manager-ref=&quot;clientAuthenticationManager&quot;&amp;gt;&lt;br/&gt;
        &amp;lt;intercept-url pattern=&quot;/oauth/token&quot; access=&quot;IS_AUTHENTICATED_FULLY&quot;/&amp;gt;&lt;br/&gt;
        &amp;lt;anonymous enabled=&quot;false&quot;/&amp;gt;&lt;br/&gt;
        &amp;lt;http-basic entry-point-ref=&quot;basicOauthAuthenticationEntryPoint&quot;/&amp;gt;&lt;br/&gt;
        &amp;lt;!-- This needs to be anonymous so that the auth endpoint can handle oauth errors itself --&amp;gt;&lt;br/&gt;
        &amp;lt;!-- This allows you to put client_id=&lt;span class=&quot;error&quot;&gt;&amp;#91;value&amp;#93;&lt;/span&gt;&amp;amp;client_secret=value in the request body --&amp;gt;&lt;br/&gt;
        &amp;lt;custom-filter ref=&quot;clientCredentialsTokenEndpointFilter&quot; before=&quot;BASIC_AUTH_FILTER&quot;/&amp;gt;&lt;br/&gt;
        &amp;lt;access-denied-handler ref=&quot;oauthAccessDeniedHandler&quot;/&amp;gt;&lt;br/&gt;
    &amp;lt;/http&amp;gt;&lt;/p&gt;

&lt;p&gt;    &amp;lt;beans:bean id=&quot;clientCredentialsTokenEndpointFilter&quot;&lt;br/&gt;
          class=&quot;org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter&quot;&amp;gt;&lt;br/&gt;
        &amp;lt;beans:property name=&quot;authenticationManager&quot; ref=&quot;clientAuthenticationManager&quot;/&amp;gt;&lt;br/&gt;
        &amp;lt;beans:property name=&quot;authenticationEntryPoint&quot; ref=&quot;basicOauthAuthenticationEntryPoint&quot;/&amp;gt;&lt;br/&gt;
    &amp;lt;/beans:bean&amp;gt;&lt;/p&gt;

&lt;p&gt;    &amp;lt;bean id=&quot;accessDecisionManager&quot; class=&quot;org.springframework.security.access.vote.AffirmativeBased&quot;&lt;br/&gt;
          xmlns=&quot;http://www.springframework.org/schema/beans&quot;&amp;gt;&lt;br/&gt;
        &amp;lt;constructor-arg&amp;gt;&lt;br/&gt;
            &amp;lt;list&amp;gt;&lt;br/&gt;
                &amp;lt;bean class=&quot;org.springframework.security.oauth2.provider.vote.ScopeVoter&quot;/&amp;gt;&lt;br/&gt;
                &amp;lt;bean class=&quot;org.springframework.security.access.vote.RoleVoter&quot;/&amp;gt;&lt;br/&gt;
                &amp;lt;bean class=&quot;org.springframework.security.access.vote.AuthenticatedVoter&quot;/&amp;gt;&lt;br/&gt;
            &amp;lt;/list&amp;gt;&lt;br/&gt;
        &amp;lt;/constructor-arg&amp;gt;&lt;br/&gt;
    &amp;lt;/bean&amp;gt;&lt;/p&gt;

&lt;p&gt;    &amp;lt;beans:bean id=&quot;clientDetailsUserService&quot;&lt;br/&gt;
          class=&quot;org.springframework.security.oauth2.provider.client.ClientDetailsUserDetailsService&quot;&amp;gt;&lt;br/&gt;
        &amp;lt;beans:constructor-arg ref=&quot;clientDetailsService&quot;/&amp;gt;&lt;br/&gt;
    &amp;lt;/beans:bean&amp;gt;&lt;/p&gt;

&lt;p&gt;    &amp;lt;beans:bean id=&quot;oauthAccessDeniedHandler&quot;&lt;br/&gt;
                class=&quot;org.springframework.security.oauth2.provider.error.OAuth2AccessDeniedHandler&quot;/&amp;gt;&lt;/p&gt;


&lt;p&gt;    &amp;lt;beans:bean id=&quot;bearerOauthAuthenticationEntryPoint&quot;&lt;br/&gt;
                class=&quot;org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint&quot;&amp;gt;&lt;br/&gt;
        &amp;lt;beans:property name=&quot;realmName&quot; value=&quot;Preva&quot;/&amp;gt;&lt;br/&gt;
        &amp;lt;beans:property name=&quot;typeName&quot; value=&quot;Bearer&quot;/&amp;gt;&lt;br/&gt;
    &amp;lt;/beans:bean&amp;gt;&lt;/p&gt;

&lt;p&gt;    &amp;lt;beans:bean id=&quot;basicOauthAuthenticationEntryPoint&quot;&lt;br/&gt;
                class=&quot;org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint&quot;&amp;gt;&lt;br/&gt;
        &amp;lt;beans:property name=&quot;realmName&quot; value=&quot;Preva&quot;/&amp;gt;&lt;br/&gt;
        &amp;lt;beans:property name=&quot;typeName&quot; value=&quot;Basic&quot;/&amp;gt;&lt;br/&gt;
    &amp;lt;/beans:bean&amp;gt;&lt;/p&gt;

&lt;p&gt;    &amp;lt;http pattern=&quot;/version&quot; security=&quot;none&quot;/&amp;gt;&lt;/p&gt;

&lt;p&gt;    &amp;lt;!-- The OAuth2 protected resources are separated out into their own block so we can deal with authorization and error handling&lt;br/&gt;
         separately. This isn&apos;t mandatory, but it makes it easier to control the behaviour. --&amp;gt;&lt;br/&gt;
    &amp;lt;http realm=&quot;Preva&quot; create-session=&quot;never&quot; entry-point-ref=&quot;bearerOauthAuthenticationEntryPoint&quot;&lt;br/&gt;
          access-decision-manager-ref=&quot;accessDecisionManager&quot; xmlns=&quot;http://www.springframework.org/schema/security&quot;&amp;gt;&lt;br/&gt;
        &amp;lt;anonymous enabled=&quot;false&quot;/&amp;gt;&lt;br/&gt;
        &amp;lt;intercept-url pattern=&quot;/**&quot; access=&quot;ROLE_USER,ROLE_TRUSTED_CLIENT&quot;/&amp;gt;&lt;br/&gt;
        &amp;lt;!-&lt;del&gt;&amp;lt;custom-filter ref=&quot;resourceServerFilter&quot; before=&quot;EXCEPTION_TRANSLATION_FILTER&quot; /&amp;gt;&lt;/del&gt;-&amp;gt;&lt;br/&gt;
        &amp;lt;custom-filter ref=&quot;resourceServerFilter&quot; before=&quot;PRE_AUTH_FILTER&quot;/&amp;gt;&lt;br/&gt;
        &amp;lt;access-denied-handler ref=&quot;oauthAccessDeniedHandler&quot;/&amp;gt;&lt;br/&gt;
    &amp;lt;/http&amp;gt;&lt;/p&gt;

&lt;p&gt;    &amp;lt;beans:bean id=&quot;passwordEncoder&quot; class=&quot;org.jasypt.spring.security3.PasswordEncoder&quot;&amp;gt;&lt;br/&gt;
        &amp;lt;beans:property name=&quot;passwordEncryptor&quot;&amp;gt;&lt;br/&gt;
            &amp;lt;beans:bean class=&quot;org.jasypt.util.password.StrongPasswordEncryptor&quot;/&amp;gt;&lt;br/&gt;
        &amp;lt;/beans:property&amp;gt;&lt;br/&gt;
    &amp;lt;/beans:bean&amp;gt;&lt;/p&gt;

&lt;p&gt;    &amp;lt;authentication-manager id=&quot;clientAuthenticationManager&quot; alias=&quot;clientAuthenticationManager&quot;&amp;gt;&lt;br/&gt;
        &amp;lt;authentication-provider user-service-ref=&quot;clientDetailsUserService&quot;&amp;gt;&lt;br/&gt;
            &amp;lt;password-encoder ref=&quot;passwordEncoder&quot;/&amp;gt;&lt;br/&gt;
        &amp;lt;/authentication-provider&amp;gt;&lt;br/&gt;
    &amp;lt;/authentication-manager&amp;gt;&lt;/p&gt;

&lt;p&gt;    &amp;lt;authentication-manager alias=&quot;authenticationManager&quot;&amp;gt;&lt;br/&gt;
        &amp;lt;authentication-provider user-service-ref=&quot;exerciserAccountAuthenticationService&quot;&amp;gt;&lt;br/&gt;
            &amp;lt;password-encoder ref=&quot;passwordEncoder&quot;/&amp;gt;&lt;br/&gt;
        &amp;lt;/authentication-provider&amp;gt;&lt;br/&gt;
        &amp;lt;authentication-provider ref=&quot;easyGymUserAuthenticationProvider&quot;/&amp;gt;&lt;br/&gt;
    &amp;lt;/authentication-manager&amp;gt;&lt;/p&gt;

&lt;p&gt;    &amp;lt;global-method-security proxy-target-class=&quot;true&quot;&lt;br/&gt;
                            pre-post-annotations=&quot;enabled&quot; secured-annotations=&quot;enabled&quot;&lt;br/&gt;
                            jsr250-annotations=&quot;enabled&quot;&amp;gt;&lt;br/&gt;
        &amp;lt;expression-handler ref=&quot;oauthExpressionHandler&quot;/&amp;gt;&lt;br/&gt;
    &amp;lt;/global-method-security&amp;gt;&lt;/p&gt;

&lt;p&gt;&amp;lt;/beans:beans&amp;gt;&lt;/p&gt;


&lt;p&gt;oauth2-context.xml:&lt;/p&gt;

&lt;p&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&amp;gt;&lt;br/&gt;
&amp;lt;beans:beans xmlns=&quot;http://www.springframework.org/schema/security/oauth2&quot;&lt;br/&gt;
             xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;br/&gt;
             xmlns:beans=&quot;http://www.springframework.org/schema/beans&quot;&lt;br/&gt;
             xmlns:util=&quot;http://www.springframework.org/schema/util&quot;&lt;br/&gt;
             xsi:schemaLocation=&quot;&lt;br/&gt;
       &lt;a href=&quot;http://www.springframework.org/schema/security/oauth2&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.springframework.org/schema/security/oauth2&lt;/a&gt; &lt;a href=&quot;http://www.springframework.org/schema/security/spring-security-oauth2-1.0.xsd&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.springframework.org/schema/security/spring-security-oauth2-1.0.xsd&lt;/a&gt;&lt;br/&gt;
       &lt;a href=&quot;http://www.springframework.org/schema/util&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.springframework.org/schema/util&lt;/a&gt; &lt;a href=&quot;http://www.springframework.org/schema/util/spring-util.xsd&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.springframework.org/schema/util/spring-util.xsd&lt;/a&gt;&lt;br/&gt;
       &lt;a href=&quot;http://www.springframework.org/schema/beans&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.springframework.org/schema/beans&lt;/a&gt; &lt;a href=&quot;http://www.springframework.org/schema/beans/spring-beans.xsd&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.springframework.org/schema/beans/spring-beans.xsd&lt;/a&gt;&quot;&amp;gt;&lt;/p&gt;

&lt;p&gt;    &amp;lt;beans:bean id=&quot;customCompositeTokenGranter&quot;&lt;br/&gt;
                class=&quot;org.springframework.security.oauth2.provider.CompositeTokenGranter&quot;&amp;gt;&lt;br/&gt;
        &amp;lt;beans:constructor-arg&amp;gt;&lt;br/&gt;
            &amp;lt;util:list&amp;gt;&lt;br/&gt;
                &amp;lt;beans:bean class=&quot;org.springframework.security.oauth2.provider.client.ClientCredentialsTokenGranter&quot; autowire=&quot;constructor&quot;/&amp;gt;&lt;br/&gt;
                &amp;lt;beans:bean class=&quot;org.springframework.security.oauth2.provider.password.ResourceOwnerPasswordTokenGranter&quot; autowire=&quot;constructor&quot;/&amp;gt;&lt;br/&gt;
                &amp;lt;beans:bean class=&quot;org.springframework.security.oauth2.provider.refresh.RefreshTokenGranter&quot; autowire=&quot;constructor&quot;/&amp;gt;&lt;br/&gt;
                &amp;lt;beans:bean class=&quot;com.precor.preva.external.security.MemberManagementSystemTokenGranter&quot; autowire=&quot;constructor&quot;/&amp;gt;&lt;br/&gt;
            &amp;lt;/util:list&amp;gt;&lt;br/&gt;
        &amp;lt;/beans:constructor-arg&amp;gt;&lt;br/&gt;
    &amp;lt;/beans:bean&amp;gt;&lt;/p&gt;

&lt;p&gt;    &amp;lt;authorization-server client-details-service-ref=&quot;clientDetailsService&quot;&lt;br/&gt;
                          token-services-ref=&quot;tokenServices&quot; token-granter-ref=&quot;customCompositeTokenGranter&quot;&amp;gt;&lt;br/&gt;
    &amp;lt;/authorization-server&amp;gt;&lt;br/&gt;
    &amp;lt;resource-server id=&quot;resourceServerFilter&quot; resource-id=&quot;preva-api&quot; token-services-ref=&quot;tokenServices&quot;/&amp;gt;&lt;br/&gt;
    &amp;lt;expression-handler id=&quot;oauthExpressionHandler&quot;/&amp;gt;&lt;/p&gt;

&lt;p&gt;&amp;lt;/beans:beans&amp;gt;&lt;/p&gt;


&lt;p&gt;servlet-context.xml:&lt;/p&gt;

&lt;p&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&amp;gt;&lt;br/&gt;
&amp;lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;br/&gt;
       xmlns:mvc=&quot;http://www.springframework.org/schema/mvc&quot;&lt;br/&gt;
       xsi:schemaLocation=&quot;http://www.springframework.org/schema/mvc &lt;a href=&quot;http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd&lt;/a&gt;&lt;br/&gt;
		&lt;a href=&quot;http://www.springframework.org/schema/beans&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.springframework.org/schema/beans&lt;/a&gt; &lt;a href=&quot;http://www.springframework.org/schema/beans/spring-beans-3.1.xsd&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.springframework.org/schema/beans/spring-beans-3.1.xsd&lt;/a&gt;&quot;&amp;gt;&lt;/p&gt;

&lt;p&gt;    &amp;lt;import resource=&quot;classpath:META-INF/spring/app-context.xml&quot;/&amp;gt;&lt;br/&gt;
    &amp;lt;import resource=&quot;oauth2-context.xml&quot;/&amp;gt;&lt;br/&gt;
    &amp;lt;import resource=&quot;security-context.xml&quot;/&amp;gt;&lt;/p&gt;

&lt;p&gt;    &amp;lt;mvc:annotation-driven validator=&quot;validator&quot;/&amp;gt;&lt;br/&gt;
    &amp;lt;mvc:default-servlet-handler/&amp;gt;&lt;/p&gt;

&lt;p&gt;&amp;lt;/beans&amp;gt;&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;/code&amp;#93;&lt;/span&gt;&lt;/p&gt;
</comment>
                            <comment id="77563" author="david_syer" created="Thu, 12 Apr 2012 14:00:02 +0000"  >&lt;p&gt;Right, yes.  I had to do that. You need to supply an explicit link to the entry-point-ref in the &amp;lt;oauth:resource-server/&amp;gt; to override the defaults.  It&apos;s just like &amp;lt;http-basic/&amp;gt; if it&apos;s any consolation.&lt;/p&gt;</comment>
                            <comment id="77564" author="david_syer" created="Thu, 12 Apr 2012 14:08:42 +0000"  >&lt;p&gt;Ah.  But I forgot to add it to the XSD.  One more commit and we will be there...  Thanks.  Done.&lt;/p&gt;</comment>
                            <comment id="77565" author="phavelar" created="Thu, 12 Apr 2012 14:10:45 +0000"  >&lt;p&gt;Fantastic !&lt;br/&gt;
I was just about to mention that &lt;img class=&quot;emoticon&quot; src=&quot;https://jira.spring.io/images/icons/emoticons/smile.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;   please let me know when the commit is in place.&lt;/p&gt;</comment>
                            <comment id="77566" author="phavelar" created="Thu, 12 Apr 2012 14:18:31 +0000"  >&lt;p&gt;Dave,  &lt;br/&gt;
Thank you so much for being super responsive, and for putting this module available for the community.&lt;br/&gt;
I&apos;m really enjoying using your spring oauth2 module.&lt;br/&gt;
I&apos;m going to work on a blog post, talking about my experience with this module,&lt;br/&gt;
and how I&apos;m customizing it for my company business needs, for example, using a custom grant type.&lt;br/&gt;
Great cutting edge stuff.&lt;/p&gt;

&lt;p&gt;Paulo&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 11 Apr 2012 00:28:27 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10280" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>30321</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i05i47:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>32141</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10381" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Ranking</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>30021</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10120" key="com.atlassian.jira.plugin.system.customfieldtypes:url">
                        <customfieldname>Reference URL</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[http://forum.springsource.org/showthread.php?125223-Oauth2-Error-handling-for-client-credentials-in-authorization-header&p=408696#post408696]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>