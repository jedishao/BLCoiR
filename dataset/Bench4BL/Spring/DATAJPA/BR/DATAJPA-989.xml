<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 14:55:29 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/DATAJPA-989/DATAJPA-989.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[DATAJPA-989] CrudRepository; return Stream&lt;T&gt;; The object is already closed [90007-192]; could not advance using next()</title>
                <link>https://jira.spring.io/browse/DATAJPA-989</link>
                <project id="10552" key="DATAJPA">Spring Data JPA</project>
                    <description>&lt;p&gt;Getting a Stream from CrudRepository can lead - at least on H2 - to breaking streams leading to this error:&lt;/p&gt;

&lt;p&gt;The object is already closed [90007-192]&lt;br/&gt;
org.hibernate.exception.GenericJDBCException: could not advance using next()&lt;/p&gt;

&lt;p&gt;This error seem to happen randomly on long running streams.&lt;/p&gt;

&lt;p&gt;I created an application which always fails because of that error. As the times differ extremely, my tests failed after reading 11250 entries, 250 entries, 6000, 1000, 4250, 7750, 3750, 1000, 5250, 12500, 5000 or 2750 entries.&lt;/p&gt;

&lt;p&gt;The full stacktrace is attached.&lt;/p&gt;</description>
                <environment>CentOS 7&lt;br/&gt;
OpenJDK 1.8.0_101</environment>
        <key id="70289">DATAJPA-989</key>
            <summary>CrudRepository; return Stream&lt;T&gt;; The object is already closed [90007-192]; could not advance using next()</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://jira.spring.io/images/icons/priorities/minor.png">Minor</priority>
                        <status id="10003" iconUrl="https://jira.spring.io/images/icons/statuses/inprogress.png" description="This issue is being actively worked on at the moment by the assignee. ">Investigating</status>
                    <statusCategory id="4" key="indeterminate" colorName="yellow"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="olivergierke">Oliver Gierke</assignee>
                                    <reporter username="sdoeringNew">Sven D&#246;ring</reporter>
                        <labels>
                    </labels>
                <created>Thu, 27 Oct 2016 16:10:00 +0000</created>
                <updated>Mon, 28 Nov 2016 20:04:52 +0000</updated>
                                            <version>1.10.4 (Hopper SR4)</version>
                                                        <due></due>
                            <votes>1</votes>
                                    <watches>4</watches>
                                                                <comments>
                            <comment id="133050" author="sdoeringnew" created="Thu, 27 Oct 2016 16:12:25 +0000"  >&lt;p&gt;Might be a duplicate for &lt;a href=&quot;https://jira.spring.io/browse/DATAJPA-917&quot; title=&quot;JpaRepository; return Stream&amp;lt;T&amp;gt;; logAbandoned: true shows that Connection is abandoned.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DATAJPA-917&quot;&gt;DATAJPA-917&lt;/a&gt; and relates to &lt;a href=&quot;https://jira.spring.io/browse/DATAJPA-742&quot; title=&quot;Java 8 Stream support broken&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DATAJPA-742&quot;&gt;&lt;del&gt;DATAJPA-742&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="133062" author="olivergierke" created="Fri, 28 Oct 2016 09:11:16 +0000"  >&lt;p&gt;Hi, any chance you can strip down the test case you provided a little? There&apos;s all sorts of execution on different threads going on, which &#8212; in a world with thread bound connections and transactions &#8212; can cause all sorts of hassle. I am not saying it is allowed to not work in that scenario, I&apos;d just remove anything that might cause additional problems from the picture.&lt;/p&gt;</comment>
                            <comment id="133125" author="sdoeringnew" created="Tue, 1 Nov 2016 16:34:19 +0000"  >&lt;p&gt;It was really possible to massively simplify the test code. Now there were no ExecutorServices, Blockingdeques or (Thread-)waits left. I just pushed the changes to GitHub.&lt;/p&gt;

&lt;p&gt;But now the exception changed. Furthermore there could be three different exceptions. A SessionException or GenericJDBCException.&lt;/p&gt;</comment>
                            <comment id="133126" author="olivergierke" created="Tue, 1 Nov 2016 16:38:07 +0000"  >&lt;p&gt;Awesome, thanks! I&apos;ll have a look!&lt;/p&gt;</comment>
                            <comment id="133681" author="agsimeonov" created="Sun, 27 Nov 2016 18:32:23 +0000"  >&lt;p&gt;Seeing as &lt;a href=&quot;https://jira.spring.io/browse/DATAJPA-1012&quot; title=&quot;Streaming query results closes prematurely&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DATAJPA-1012&quot;&gt;&lt;del&gt;DATAJPA-1012&lt;/del&gt;&lt;/a&gt; was marked as a duplicate of this issue please check out my sample project exhibiting the bug here as well:&lt;br/&gt;
&lt;a href=&quot;https://github.com/agsimeonov/stream-bug&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/agsimeonov/stream-bug&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It is a very very simple example that should isolate the bug and guarantee its occurrence without much else going on which I hope could be useful when it comes to resolving it.&lt;/p&gt;

&lt;p&gt;You can also find some of my experiences with it here:&lt;br/&gt;
&lt;a href=&quot;http://stackoverflow.com/questions/40775697/streaming-query-results-closes-prematurely-spring-data-jpa-and-hibernate&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://stackoverflow.com/questions/40775697/streaming-query-results-closes-prematurely-spring-data-jpa-and-hibernate&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thanks for your time!&lt;/p&gt;</comment>
                            <comment id="133682" author="olivergierke" created="Sun, 27 Nov 2016 19:28:52 +0000"  >&lt;p&gt;Thanks a lot, Alexander. I&apos;ll have a look at your example, too. At a quick glance, it looks like we need to be more defensive in &lt;tt&gt;hasNext()&lt;/tt&gt; as it seems to be called on a stream that was already closed. So that simple null check is only sufficient if we actually set the underlying &lt;tt&gt;ScrollableResults&lt;/tt&gt; to &lt;tt&gt;null&lt;/tt&gt; on close.&lt;/p&gt;

&lt;p&gt;I&apos;ll go ahead and see whether that fixes your examples.&lt;/p&gt;</comment>
                            <comment id="133683" author="agsimeonov" created="Sun, 27 Nov 2016 19:50:25 +0000"  >&lt;p&gt;Thanks Oliver.  One thing I haven&apos;t mentioned is that this bug affects 1.9.6 (in one of my other projects) as well as 1.10.5 (in the example I have provided) so if you find a solution it would help to backport it too.&lt;/p&gt;</comment>
                            <comment id="133684" author="olivergierke" created="Sun, 27 Nov 2016 19:59:09 +0000"  >&lt;p&gt;We usually back port as far as we can, so the maintenance branch for Gosling will see a fix, too. However, note that unless the Boot team is going to do another 1.3.x release no Gosling release is going to happen anymore. We generally advise users to upgrade to the latest release train (Hopper in this case).&lt;/p&gt;</comment>
                            <comment id="133710" author="olivergierke" created="Mon, 28 Nov 2016 18:00:30 +0000"  >&lt;p&gt;&lt;a href=&quot;https://jira.spring.io/secure/ViewProfile.jspa?name=agsimeonov&quot; class=&quot;user-hover&quot; rel=&quot;agsimeonov&quot;&gt;Alexander Simeonov&lt;/a&gt; &#8212; I can see your example working if the code is executed within an &lt;tt&gt;@Transactional&lt;/tt&gt; method. This makes quite some sense as the connection needs to stay open for the entire read of the &lt;tt&gt;Stream&lt;/tt&gt;. It looks like &lt;a href=&quot;https://jira.spring.io/secure/ViewProfile.jspa?name=sdoeringNew&quot; class=&quot;user-hover&quot; rel=&quot;sdoeringNew&quot;&gt;Sven D&#246;ring&lt;/a&gt;&apos;s sample is running into the same problem.&lt;/p&gt;</comment>
                            <comment id="133713" author="agsimeonov" created="Mon, 28 Nov 2016 18:45:28 +0000"  >&lt;p&gt;Hi Oliver.  Thanks for looking into this.  Which part of the sample code needs to be encapsulated in @Transactional?  I attempted this workaround to no avail.  If you can point me to it or post the changes you made that would be of great help.  Or did you mean encapsulating the accompanying portion within the Spring Data JPA framework itself?&lt;/p&gt;</comment>
                            <comment id="133717" author="agsimeonov" created="Mon, 28 Nov 2016 20:04:52 +0000"  >&lt;p&gt;I spoke too soon looks like I got it using the @Transactional workaround.  I will post the solution on my github sample repo soon.  Cheers!&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10000">
                    <name>Duplicate</name>
                                                                <inwardlinks description="is duplicated by">
                                        <issuelink>
            <issuekey id="70616">DATAJPA-1012</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="23605" name="SessionException_or_GenericJDBCException.txt" size="8092" author="sdoeringNew" created="Tue, 1 Nov 2016 16:34:04 +0000"/>
                            <attachment id="23600" name="stacktrace.txt" size="1558" author="sdoeringNew" created="Thu, 27 Oct 2016 15:50:41 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 28 Oct 2016 09:11:16 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10280" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>agsimeonov</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i09ian:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10381" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Ranking</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10120" key="com.atlassian.jira.plugin.system.customfieldtypes:url">
                        <customfieldname>Reference URL</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[https://github.com/sdoeringNew/spring-data-object-already-closed]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>