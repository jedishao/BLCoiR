Infinite loop in unsynchronized HashMap in CrudMethodMetadataPostProcessor.
The method org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor.CrudMethodMetadataPopulatingMethodIntercceptor#invoke is not thread-safe, although it is called concurrently when Spring-Data-JPA-Queries are executed concurrently.
More concretely, since the method uses the non-thread-safe java.util.HashMap, concurrent calls to this method may result in an infinite loop when executing the Hashmap-Lookup &amp;apos;metadataCache.get(method)&amp;apos; (line 101 in version 1.7.0.RELEASE), and I have actually encountered this behavior in an application. 
(Infinite loops in concurrently used hashmaps appear to be a known problem, see, e.g., https://jira.spring.io/browse/DATACMNS-518 or http://mailinator.blogspot.dk/2009/06/beautiful-race-condition.html.)
I therefore believe that this method should be made thread-safe, e.g., by using a java.util.concurrent.ConcurrentHashMap.