<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 14:47:17 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/DATAJPA-396/DATAJPA-396.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[DATAJPA-396] CriteriaQuery caching causes problems with Hibernate&apos;s alias name generation in multithreaded environments</title>
                <link>https://jira.spring.io/browse/DATAJPA-396</link>
                <project id="10552" key="DATAJPA">Spring Data JPA</project>
                    <description>&lt;p&gt;In my project, every now and again some Spring Data Repository methods raise a ClassCastException when called. If this happens once, every subsequent call on the same method results in the same exception. The method is then broken until the JVM or the Spring context is restarted.&lt;/p&gt;

&lt;p&gt;After investigating further I found out that this is caused by an incorrectly generated query string. In my case this JPA query string is something like &lt;/p&gt;

&lt;p&gt;&lt;tt&gt;select generatedAlias0 from Order as generatedAlias0 left join generatedAlias0.product as generatedAlias0 where generatedAlias0=:param0&lt;/tt&gt;&lt;/p&gt;

&lt;p&gt;The generated alias is the same for the root object as well as the join! After taking a closer look at Hibernate&apos;s sources, I found out that Hibernate&apos;s &lt;tt&gt;javax.persistence.criteria.CriteriaQuery&lt;/tt&gt; implementation (CriteriaQueryImpl) is not thread safe. If there are no aliases set on the CriteriaQuery object (=default), alias names are generated on the first call that uses the object. Now, if multiple threads use the CriteriaQuery object at the same time, this can cause incorrectly generated alias names. Since Spring Data JPA repositories use a shared CriteriaQuery object for each query method, this causes problems in multithreaded environments.&lt;/p&gt;

&lt;p&gt;JPA does not explicitly require implementations to provide thread safe CriteriaQuery objects. I reproduced this with Hibernate 4.2.5 and 4.1.9. Maybe with other JPA implementations alias generation is implemented differently and thread safe. Either way, unfortunately, Spring Data can not rely on thread safety in this regard. This problem might have been introduced in &lt;a href=&quot;https://jira.spring.io/browse/DATAJPA-71&quot; title=&quot;Improving performance by caching CriteriaQuery&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DATAJPA-71&quot;&gt;&lt;del&gt;DATAJPA-71&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Investigation notes:&lt;br/&gt;
Query generation in Hibernate can found in &lt;tt&gt;org.hibernate.ejb.criteria.CriteriaQueryCompiler&lt;/tt&gt; (line 223). The renderingContext passed is unique for the thread/call (not unique for the CriteriqQuery object)&lt;/p&gt;</description>
                <environment>Java 1.7.0_21, Spring 3.2.4.RELEASE, Hibernate 4.2.4.Final</environment>
        <key id="50697">DATAJPA-396</key>
            <summary>CriteriaQuery caching causes problems with Hibernate&apos;s alias name generation in multithreaded environments</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="thomasd">Thomas Darimont</assignee>
                                    <reporter username="tine2k">Martin Maier-Moessner</reporter>
                        <labels>
                    </labels>
                <created>Tue, 3 Sep 2013 01:21:49 +0000</created>
                <updated>Thu, 13 Mar 2014 11:29:57 +0000</updated>
                            <resolved>Mon, 30 Sep 2013 10:02:06 +0000</resolved>
                                    <version>1.3.4</version>
                                    <fixVersion>1.4.2 (Babbage SR1)</fixVersion>
                    <fixVersion>1.5 M1 (Codd)</fixVersion>
                                    <component>Core</component>
                        <due></due>
                            <votes>4</votes>
                                    <watches>5</watches>
                                                                <comments>
                            <comment id="93299" author="tine2k" created="Tue, 3 Sep 2013 01:23:25 +0000"  >&lt;p&gt;I was not able to reproduce this with Hibernate 3.6.9.Final. However, the problem should exists there as well since the relevant code part of the alias name generation is similar to 4.1/4.2.&lt;/p&gt;</comment>
                            <comment id="93368" author="thomasd" created="Thu, 5 Sep 2013 07:50:05 +0000"  >&lt;p&gt;Hi Martin,&lt;/p&gt;

&lt;p&gt;this is indeed an interesting issue, could you please provide a minimal test case that demonstrates this?&lt;/p&gt;

&lt;p&gt;Cheers,&lt;br/&gt;
Thomas&lt;/p&gt;</comment>
                            <comment id="93369" author="tine2k" created="Thu, 5 Sep 2013 09:47:33 +0000"  >&lt;p&gt;Race conditions are always tough to reproduce. But I figured out a way to do. It is not very elegant, but it proves my point.&lt;/p&gt;

&lt;p&gt;In the ZIP file I attached two threads call a simple method findByCustomer() on a simpel JpaRepository. I overwrote a Hibernate class (AbstractFromImpl) and added a Thread.sleep to slow the first thread down during alias name generation. Because of this sleep, the second thread overtakes the first and generates a wrong alias name for the join object. You can see that this results in a ClassCastException as described in the description of this issue.&lt;/p&gt;

&lt;p&gt;Unfortunatly, I couldn&apos;t come up with a more practical way for a reproduction scenario. We have had this error several times in my project where we operate with many thread and repositories. &lt;/p&gt;

&lt;p&gt;Even though I had to alter the Hibernate source code, imho this still supports my claim that its CriteriaQuery implementation is not thread safe. In a thread safe implementation Thread.sleeps should NEVER affect the outcome, which is does in this scenario.&lt;/p&gt;
</comment>
                            <comment id="93629" author="philler@gmx.at" created="Mon, 16 Sep 2013 23:08:00 +0000"  >&lt;p&gt;Hi Thomas,&lt;/p&gt;

&lt;p&gt;were you able to reproduce the problem?&lt;/p&gt;

&lt;p&gt;Regards,&lt;br/&gt;
Philipp&lt;/p&gt;</comment>
                            <comment id="94045" author="thomasd" created="Mon, 30 Sep 2013 07:41:31 +0000"  >&lt;p&gt;Hello Phillip,&lt;/p&gt;

&lt;p&gt;yes I was able to reproduce the problem with the example you provided.&lt;br/&gt;
I opened a pull request with a fix for the issue:&lt;br/&gt;
&lt;a href=&quot;https://github.com/spring-projects/spring-data-jpa/pull/42&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/spring-projects/spring-data-jpa/pull/42&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Cheers,&lt;br/&gt;
Thomas&lt;/p&gt;</comment>
                            <comment id="94046" author="thomasd" created="Mon, 30 Sep 2013 07:41:45 +0000"  >&lt;p&gt;Please revise.&lt;/p&gt;</comment>
                            <comment id="94048" author="tine2k" created="Mon, 30 Sep 2013 08:17:57 +0000"  >&lt;p&gt;Hi Thomas,&lt;/p&gt;

&lt;p&gt;the patch in the pull request looks good. My test case now runs without problems. &lt;/p&gt;

&lt;p&gt;&lt;b&gt;I&lt;/b&gt; created the example btw, not Philipp &lt;img class=&quot;emoticon&quot; src=&quot;https://jira.spring.io/images/icons/emoticons/smile.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;Thanks!&lt;/p&gt;

&lt;p&gt;Martin&lt;/p&gt;</comment>
                            <comment id="94062" author="thomasd" created="Mon, 30 Sep 2013 12:00:51 +0000"  >&lt;p&gt;Hello Martin,&lt;/p&gt;

&lt;p&gt;oh sorry - then thank /you/ for the helpful example &lt;img class=&quot;emoticon&quot; src=&quot;https://jira.spring.io/images/icons/emoticons/smile.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;Cheers,&lt;br/&gt;
Thomas&lt;/p&gt;</comment>
                            <comment id="94080" author="philler@gmx.at" created="Tue, 1 Oct 2013 02:24:18 +0000"  >&lt;p&gt;Hi Thomas,&lt;/p&gt;

&lt;p&gt;thank you very much!&lt;/p&gt;

&lt;p&gt;Philipp&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10000">
                    <name>Duplicate</name>
                                                                <inwardlinks description="is duplicated by">
                                        <issuelink>
            <issuekey id="50730">DATAJPA-397</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="21376" name="DATAJPA-396.zip" size="12207" author="tine2k" created="Thu, 5 Sep 2013 09:47:33 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 5 Sep 2013 07:50:05 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10280" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>37191</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>olivergierke</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i008l3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1411</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10381" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Ranking</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>36893</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10480" key="com.pyxis.greenhopper.jira:gh-sprint">
                        <customfieldname>Sprint</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue id="22">SpringOne Aftermath</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>