<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 19:58:45 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-251/SPR-251.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-251] JtaTransactionManager don&apos;t resume EJB transaction marked for rollback</title>
                <link>https://jira.spring.io/browse/SPR-251</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;Transaction resume exception on return from POJO wrapped with Spring&apos;s TransactionProxyFactoryBean with REQUIRES_NEW transaction attribute when original transaction marked for rollback. See sources attached.&lt;/p&gt;

&lt;p&gt;  Here is the stack trace for execution of the TxTestImpl session bean.&lt;/p&gt;

&lt;p&gt;-------------&lt;br/&gt;
doSomething() begin&lt;br/&gt;
rollback=false&lt;br/&gt;
increment()&lt;br/&gt;
&amp;lt;Aug 9, 2004 5:52:02 PM EDT&amp;gt; &amp;lt;Info&amp;gt; &amp;lt;EJB&amp;gt; &amp;lt;010051&amp;gt; &amp;lt;EJB Exception during invocation from home: com.cibcwm.go.otis.dasl.jobs.TxTestImpl_9zujx_LocalHomeImpl@251ce0 threw exception: org.springframework.transaction.IllegalTransactionStateException: Tried to resume invalid JTA transaction; nested exception is javax.transaction.InvalidTransactionException: Attempt to resume an inactive transaction: Name=&lt;span class=&quot;error&quot;&gt;&amp;#91;EJB com.cibcwm.go.otis.dasl.jobs.TxTestImpl.doSomething()&amp;#93;&lt;/span&gt;,Xid=2:4988f8027f28edb9(8181620),Status=Marked rollback. &lt;span class=&quot;error&quot;&gt;&amp;#91;Reason=weblogic.transaction.internal.AppSetRollbackOnlyException&amp;#93;&lt;/span&gt;,numRepliesOwedMe=0,numRepliesOwedOthers=0,seconds since begin=0,seconds left=60,SCInfo&lt;span class=&quot;error&quot;&gt;&amp;#91;mydomain+myserver&amp;#93;&lt;/span&gt;=(state=active),properties=(&lt;/p&gt;
{weblogic.transaction.name=[EJB com.cibcwm.go.otis.dasl.jobs.TxTestImpl.doSomething()]}),OwnerTransactionManager=ServerTM&lt;span class=&quot;error&quot;&gt;&amp;#91;ServerCoordinatorDescriptor=(CoordinatorURL=myserver+167.26.107.208:7001+mydomain+t3+, Resources={})&amp;#93;&lt;/span&gt;,CoordinatorURL=myserver+167.26.107.208:7001+mydomain+t3+)&lt;br/&gt;
org.springframework.transaction.IllegalTransactionStateException: Tried to resume invalid JTA transaction; nested exception is javax.transaction.InvalidTransactionException: Attempt to resume an inactive transaction: Name=&lt;span class=&quot;error&quot;&gt;&amp;#91;EJB com.cibcwm.go.otis.dasl.jobs.TxTestImpl.doSomething()&amp;#93;&lt;/span&gt;,Xid=2:4988f8027f28edb9(8181620),Status=Marked rollback. &lt;span class=&quot;error&quot;&gt;&amp;#91;Reason=weblogic.transaction.internal.AppSetRollbackOnlyException&amp;#93;&lt;/span&gt;,numRepliesOwedMe=0,numRepliesOwedOthers=0,seconds since begin=0,seconds left=60,SCInfo&lt;span class=&quot;error&quot;&gt;&amp;#91;mydomain+myserver&amp;#93;&lt;/span&gt;=(state=active),properties=({weblogic.transaction.name=[EJB com.cibcwm.go.otis.dasl.jobs.TxTestImpl.doSomething()]}
&lt;p&gt;),OwnerTransactionManager=ServerTM&lt;span class=&quot;error&quot;&gt;&amp;#91;ServerCoordinatorDescriptor=(CoordinatorURL=myserver+167.26.107.208:7001+mydomain+t3+, Resources={})&amp;#93;&lt;/span&gt;,CoordinatorURL=myserver+167.26.107.208:7001+mydomain+t3+)&lt;br/&gt;
javax.transaction.InvalidTransactionException: Attempt to resume an inactive transaction: Name=&lt;span class=&quot;error&quot;&gt;&amp;#91;EJB com.cibcwm.go.otis.dasl.jobs.TxTestImpl.doSomething()&amp;#93;&lt;/span&gt;,Xid=2:4988f8027f28edb9(8181620),Status=Marked rollback. &lt;span class=&quot;error&quot;&gt;&amp;#91;Reason=weblogic.transaction.internal.AppSetRollbackOnlyException&amp;#93;&lt;/span&gt;,numRepliesOwedMe=0,numRepliesOwedOthers=0,seconds since begin=0,seconds left=60,SCInfo&lt;span class=&quot;error&quot;&gt;&amp;#91;mydomain+myserver&amp;#93;&lt;/span&gt;=(state=active),properties=(&lt;/p&gt;
{weblogic.transaction.name=[EJB com.cibcwm.go.otis.dasl.jobs.TxTestImpl.doSomething()]}
&lt;p&gt;),OwnerTransactionManager=ServerTM&lt;span class=&quot;error&quot;&gt;&amp;#91;ServerCoordinatorDescriptor=(CoordinatorURL=myserver+167.26.107.208:7001+mydomain+t3+, Resources={})&amp;#93;&lt;/span&gt;,CoordinatorURL=myserver+167.26.107.208:7001+mydomain+t3+)&lt;br/&gt;
 at weblogic.transaction.internal.TransactionManagerImpl.resume(TransactionManagerImpl.java:357)&lt;br/&gt;
 at weblogic.transaction.internal.ServerTransactionManagerImpl.resume(ServerTransactionManagerImpl.java:305)&lt;br/&gt;
 at weblogic.transaction.internal.TransactionManagerImpl.resume(TransactionManagerImpl.java:341)&lt;br/&gt;
 at org.springframework.transaction.jta.JtaTransactionManager.doResume(JtaTransactionManager.java:352)&lt;br/&gt;
 at org.springframework.transaction.support.AbstractPlatformTransactionManager.resume(AbstractPlatformTransactionManager.java:285)&lt;br/&gt;
 at org.springframework.transaction.support.AbstractPlatformTransactionManager.cleanupAfterCompletion(AbstractPlatformTransactionManager.java:516)&lt;br/&gt;
 at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:351)&lt;br/&gt;
 at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:189)&lt;br/&gt;
 at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:138)&lt;br/&gt;
 at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:148)&lt;br/&gt;
 at $Proxy116.increment(Unknown Source)&lt;br/&gt;
 at com.cibcwm.go.otis.dasl.jobs.TxTestImpl.doSomething(TxTestImpl.java:79)&lt;br/&gt;
 at com.cibcwm.go.otis.dasl.jobs.TxTestImpl_9zujx_ELOImpl.doSomething(TxTestImpl_9zujx_ELOImpl.java:45)&lt;br/&gt;
 at com.cibcwm.go.otis.dasl.jobs.TxTestImplTest.testDoSomething(TxTestImplTest.java:20)&lt;br/&gt;
 at java.lang.reflect.Method.invoke(Native Method)&lt;br/&gt;
 at junit.framework.TestCase.runTest(TestCase.java:154)&lt;br/&gt;
 at junit.framework.TestCase.runBare(TestCase.java:127)&lt;br/&gt;
 at org.apache.cactus.ServletTestCase.runCactusTest(ServletTestCase.java:295)&lt;br/&gt;
 at org.apache.cactus.ServletTestCase.runBare(ServletTestCase.java:263)&lt;br/&gt;
 at org.apache.cactus.server.AbstractWebTestCaller.doTest(AbstractWebTestCaller.java:156)&lt;br/&gt;
 at org.apache.cactus.server.AbstractWebTestController.handleRequest_aroundBody0(AbstractWebTestController.java:130)&lt;br/&gt;
 at org.apache.cactus.server.AbstractWebTestController.handleRequest_aroundBody1$advice(AbstractWebTestController.java:158)&lt;br/&gt;
 at org.apache.cactus.server.AbstractWebTestController.handleRequest(AbstractWebTestController.java)&lt;br/&gt;
 at org.apache.cactus.server.ServletTestRedirector.doPost_aroundBody2(ServletTestRedirector.java:138)&lt;br/&gt;
 at org.apache.cactus.server.ServletTestRedirector.doPost_aroundBody3$advice(ServletTestRedirector.java:158)&lt;br/&gt;
 at org.apache.cactus.server.ServletTestRedirector.doPost(ServletTestRedirector.java)&lt;br/&gt;
 at org.apache.cactus.server.ServletTestRedirector.doGet_aroundBody0(ServletTestRedirector.java:109)&lt;br/&gt;
 at org.apache.cactus.server.ServletTestRedirector.doGet_aroundBody1$advice(ServletTestRedirector.java:158)&lt;br/&gt;
 at org.apache.cactus.server.ServletTestRedirector.doGet(ServletTestRedirector.java)&lt;br/&gt;
 at javax.servlet.http.HttpServlet.service(HttpServlet.java:740)&lt;br/&gt;
 at javax.servlet.http.HttpServlet.service(HttpServlet.java:853)&lt;br/&gt;
 at weblogic.servlet.internal.ServletStubImpl$ServletInvocationAction.run(ServletStubImpl.java:1058)&lt;br/&gt;
 at weblogic.servlet.internal.ServletStubImpl.invokeServlet(ServletStubImpl.java:401)&lt;br/&gt;
 at weblogic.servlet.internal.TailFilter.doFilter(TailFilter.java:20)&lt;br/&gt;
 at weblogic.servlet.internal.FilterChainImpl.doFilter(FilterChainImpl.java:27)&lt;br/&gt;
 at weblogic.servlet.internal.WebAppServletContext$ServletInvocationAction.run(WebAppServletContext.java:5451)&lt;br/&gt;
 at weblogic.security.service.SecurityServiceManager.runAs(SecurityServiceManager.java:780)&lt;br/&gt;
 at weblogic.servlet.internal.WebAppServletContext.invokeServlet(WebAppServletContext.java:3105)&lt;br/&gt;
 at weblogic.servlet.internal.ServletRequestImpl.execute(ServletRequestImpl.java:2591)&lt;br/&gt;
 at weblogic.kernel.ExecuteThread.execute(ExecuteThread.java:215)&lt;br/&gt;
 at weblogic.kernel.ExecuteThread.run(ExecuteThread.java:191)&lt;br/&gt;
&amp;gt;&lt;/p&gt;</description>
            <key id="10455">SPR-251</key>
            <summary>JtaTransactionManager don&apos;t resume EJB transaction marked for rollback</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="2" iconUrl="https://jira.spring.io/images/icons/priorities/critical.png">Critical</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="thomas.risberg">Thomas Risberg</assignee>
                                    <reporter username="euxx">Eugene Kuleshov</reporter>
                        <labels>
                    </labels>
                <created>Mon, 9 Aug 2004 09:34:24 +0000</created>
                <updated>Wed, 8 Sep 2004 01:38:06 +0000</updated>
                            <resolved>Tue, 7 Sep 2004 11:33:55 +0000</resolved>
                                    <version>1.0.2</version>
                                    <fixVersion>1.1 final</fixVersion>
                                    <component>Transaction</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="10750" author="juergen.hoeller" created="Tue, 10 Aug 2004 00:44:53 +0000"  >&lt;p&gt;Seems like we can&apos;t resume a transaction that&apos;s been marked as rollback in WebLogic. Not sure what we can do about this: After all, there might be further operations within the original transaction, even if it has been marked rollback-only - so we can&apos;t simply ignore a resume error...&lt;/p&gt;

&lt;p&gt;This seems to be an issue with WebLogic&apos;s JTA implementation rather than with Spring&apos;s usage of it. Unfortunately, J2EE server vendors might claim that the javax.transaction.TransactionManager used here is not a public J2EE platform API... (despite it being part of the JTA spec).&lt;/p&gt;

&lt;p&gt;If you can, I recommend to rearchitect your transaction: Throw an exception right after marking it rollback-only. Of course, if your requirements dictate that you have to continue the operation despite the rollback-only state, then this won&apos;t be an option.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="10751" author="euxx" created="Tue, 10 Aug 2004 01:10:40 +0000"  >&lt;p&gt;The problem with TransactionProxyFactoryBean is that it leave transactional context as a chield transaction if original tx marked for rollback. This is really dangerous and put lot of limitations on the usage of TransactionProxyFactoryBean from the session beans (at least on Weblogic server).&lt;/p&gt;

&lt;p&gt;Please also note that if regular session bean with &quot;RequiresNew&quot; tx attribute is used instead of TransactionProxyFactoryBean, then transaction is resumed correctly.&lt;/p&gt;</comment>
                            <comment id="10761" author="euxx" created="Wed, 11 Aug 2004 09:18:33 +0000"  >&lt;p&gt;Weblogic7 is using weblogic.ejb20.internal.EJBRuntimeUtils in the EJB stubs, which has the following code:&lt;/p&gt;

&lt;p&gt;public static void resumeCallersTransaction(Transaction transaction, &lt;br/&gt;
      Transaction transaction1) throws InternalException {&lt;br/&gt;
  try {&lt;br/&gt;
    if(transaction != null &amp;amp;&amp;amp; !transaction.equals(transaction1)) {&lt;br/&gt;
      weblogic.transaction.TransactionManager transactionmanager = TxHelper.getTransactionManager();&lt;br/&gt;
      try &lt;/p&gt;
{
        transactionmanager.resume(transaction);
      }
&lt;p&gt; catch(InvalidTransactionException _ex) &lt;/p&gt;
{
        transactionmanager.forceResume(transaction);
      }
&lt;p&gt;    }&lt;br/&gt;
  } catch(SystemException systemexception) &lt;/p&gt;
{
    EJBLogger.logErrorResumingTx(systemexception);
    throw new InternalException(&quot;Error resuming caller&apos;s transaction&quot;, systemexception);
  }
&lt;p&gt;}&lt;/p&gt;
</comment>
                            <comment id="10762" author="juergen.hoeller" created="Wed, 11 Aug 2004 19:14:10 +0000"  >&lt;p&gt;Thanks for tracking down how WebLogic&apos;s EJB container does this internally!&lt;/p&gt;

&lt;p&gt;So you could try the following JtaTransactionManager subclass, which tries WebLogic&apos;s forceSuspend if a standard resume failed:&lt;/p&gt;

&lt;p&gt;public class WebLogicJtaTransactionManager extends JtaTransactionManager {&lt;/p&gt;

&lt;p&gt;  protected void doResume(Object transaction, Object suspendedResources) {&lt;br/&gt;
    try &lt;/p&gt;
{
      super.doResume(transaction, suspendedResources);
    }
&lt;p&gt;    catch (IllegalTransactionStateException ex) &lt;/p&gt;
{
      weblogic.transaction.TransactionManager wtm = (weblogic.transaction.TransactionManager) getTransactionManager();
      wtm.forceSuspend((javax.transaction.Transaction) suspendedResources);
    }
&lt;p&gt;  }&lt;br/&gt;
}&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="10763" author="euxx" created="Thu, 12 Aug 2004 00:53:39 +0000"  >&lt;p&gt;Sure, but is there are any chance to put it into framework? I wonder how this would behave on Weblogic 8&lt;/p&gt;</comment>
                            <comment id="10766" author="juergen.hoeller" created="Thu, 12 Aug 2004 01:21:46 +0000"  >&lt;p&gt;As far as I was able to determine from the WebLogic 8.1 javadocs, this should work there too.&lt;/p&gt;

&lt;p&gt;So if the WebLogicJtaTransactionManager code that I mentioned actually works in your concrete case (please double-check this), I&apos;ll add such a class to the standard Spring distribution (coded via reflection to avoid compile-time dependencies on WebLogic API).&lt;/p&gt;

&lt;p&gt;Such a WebLogicJtaTransactionManager class could also pre-set the &quot;transactionManagerName&quot; property to &quot;javax.transaction.TransactionManager&quot;, which is the JNDI location where WebLogic offers its JTA TransactionManager instance.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="10771" author="maximdim" created="Thu, 12 Aug 2004 04:12:31 +0000"  >&lt;p&gt;Juergen, &lt;/p&gt;

&lt;p&gt;We tried approach you suggested (btw, there is no accessor for TransactionManager in JtaTransactionManager) so we had to grab the whole class to add protected method getTransactionManager() to it.&lt;br/&gt;
Anyway, here is our implementation:&lt;/p&gt;

&lt;p&gt;====================================================================&lt;br/&gt;
package util;&lt;/p&gt;

&lt;p&gt;import org.springframework.transaction.IllegalTransactionStateException;&lt;/p&gt;

&lt;p&gt;public class WebLogicJtaTransactionManager extends JtaTransactionManager {&lt;br/&gt;
    protected void doResume(Object transaction, Object suspendedResources) {&lt;br/&gt;
        this.logger.debug(&quot;***** doResume start&quot;);&lt;br/&gt;
        try &lt;/p&gt;
{
            super.doResume(transaction, suspendedResources);
        }
&lt;p&gt; &lt;br/&gt;
        catch (IllegalTransactionStateException ex) &lt;/p&gt;
{
            this.logger.debug(&quot;***** exception: &quot;+ex.getMessage());
            weblogic.transaction.TransactionManager wtm = (weblogic.transaction.TransactionManager) getTransactionManager();
            wtm.forceResume((javax.transaction.Transaction) suspendedResources);
            this.logger.debug(&quot;***** forseResume&quot;);        }
&lt;p&gt;        this.logger.debug(&quot;***** doResume done&quot;);&lt;br/&gt;
    }&lt;/p&gt;

&lt;p&gt;    protected Object doSuspend(Object transaction) &lt;/p&gt;
{
        this.logger.debug(&quot;***** doSuspend start&quot;);
        weblogic.transaction.TransactionManager wtm = (weblogic.transaction.TransactionManager) getTransactionManager();
        this.logger.debug(&quot;***** doSuspend done&quot;);
        return wtm.forceSuspend();
    }

&lt;p&gt;}&lt;br/&gt;
====================================================================&lt;br/&gt;
we tried first with just doResume() and then with doResume() and doSuspend(), but in both cases we&apos;re getting following NullPointerException. I guess something is getting screwed in ThreadContext. Any ideas?&lt;/p&gt;

&lt;p&gt;====================================================================&lt;br/&gt;
&amp;lt;Aug 12, 2004 12:37:40 PM EDT&amp;gt; &amp;lt;Notice&amp;gt; &amp;lt;WebLogicServer&amp;gt; &amp;lt;000365&amp;gt; &amp;lt;Server state changed to RUNNING&amp;gt; &lt;br/&gt;
&amp;lt;Aug 12, 2004 12:37:40 PM EDT&amp;gt; &amp;lt;Notice&amp;gt; &amp;lt;WebLogicServer&amp;gt; &amp;lt;000360&amp;gt; &amp;lt;Server started in RUNNING mode&amp;gt; &lt;br/&gt;
&amp;lt;Aug 12, 2004 12:38:32 PM EDT&amp;gt; &amp;lt;Info&amp;gt; &amp;lt;HTTP&amp;gt; &amp;lt;101047&amp;gt; &amp;lt;&lt;span class=&quot;error&quot;&gt;&amp;#91;ServletContext(id=4409037,name=otis-dasl-txtest.war,context-path=/otis-dasl-txtest)&amp;#93;&lt;/span&gt; ServletRedirector: init&amp;gt; &lt;br/&gt;
doSomething() begin&lt;br/&gt;
rollback=false&lt;br/&gt;
2004-08-12 12:38:33,210 INFO  &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;12&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.factory.support.DefaultListableBeanFactory:getBean:158 - Creating shared instance of singleton bean &apos;senderNewTx&apos;&lt;br/&gt;
2004-08-12 12:38:33,290 INFO  &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;12&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.factory.support.DefaultListableBeanFactory:getBean:158 - Creating shared instance of singleton bean &apos;transactionManager&apos;&lt;br/&gt;
2004-08-12 12:38:33,330 INFO  &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;12&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; com.cibcwm.go.otis.dasl.util.WebLogicJtaTransactionManager:lookupUserTransaction:233 - Using JTA UserTransaction [ClientTM&lt;span class=&quot;error&quot;&gt;&amp;#91;myserver+167.26.108.50:7001+mydomain+t3+&amp;#93;&lt;/span&gt;] from JNDI location &lt;span class=&quot;error&quot;&gt;&amp;#91;java:comp/UserTransaction&amp;#93;&lt;/span&gt;&lt;br/&gt;
2004-08-12 12:38:33,361 INFO  &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;12&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; com.cibcwm.go.otis.dasl.util.WebLogicJtaTransactionManager:lookupTransactionManager:265 - Using JTA TransactionManager [ClientTM&lt;span class=&quot;error&quot;&gt;&amp;#91;myserver+167.26.108.50:7001+mydomain+t3+&amp;#93;&lt;/span&gt;] from JNDI location &lt;span class=&quot;error&quot;&gt;&amp;#91;javax.transaction.TransactionManager&amp;#93;&lt;/span&gt;&lt;br/&gt;
2004-08-12 12:38:33,361 INFO  &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;12&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.factory.support.DefaultListableBeanFactory:getBean:158 - Creating shared instance of singleton bean &apos;senderImpl&apos;&lt;br/&gt;
2004-08-12 12:38:33,531 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;12&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; com.cibcwm.go.otis.dasl.util.WebLogicJtaTransactionManager:getTransaction:163 - Using transaction object [ClientTM&lt;span class=&quot;error&quot;&gt;&amp;#91;myserver+167.26.108.50:7001+mydomain+t3+&amp;#93;&lt;/span&gt;]&lt;br/&gt;
2004-08-12 12:38:33,531 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;12&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; com.cibcwm.go.otis.dasl.util.WebLogicJtaTransactionManager:getTransaction:186 - Creating new transaction, suspending current one&lt;br/&gt;
2004-08-12 12:38:33,531 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;12&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; com.cibcwm.go.otis.dasl.util.WebLogicJtaTransactionManager:doSuspend:36 - ***** doSuspend start&lt;br/&gt;
2004-08-12 12:38:33,531 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;12&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; com.cibcwm.go.otis.dasl.util.WebLogicJtaTransactionManager:doSuspend:38 - ***** doSuspend done&lt;br/&gt;
2004-08-12 12:38:33,561 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;12&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; com.cibcwm.go.otis.dasl.util.WebLogicJtaTransactionManager:doBegin:292 - Beginning JTA transaction [ClientTM&lt;span class=&quot;error&quot;&gt;&amp;#91;myserver+167.26.108.50:7001+mydomain+t3+&amp;#93;&lt;/span&gt;] &lt;br/&gt;
increment()&lt;br/&gt;
2004-08-12 12:38:33,561 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;12&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; com.cibcwm.go.otis.dasl.util.WebLogicJtaTransactionManager:triggerBeforeCommit:432 - Triggering beforeCommit synchronization&lt;br/&gt;
2004-08-12 12:38:33,561 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;12&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; com.cibcwm.go.otis.dasl.util.WebLogicJtaTransactionManager:triggerBeforeCompletion:447 - Triggering beforeCompletion synchronization&lt;br/&gt;
2004-08-12 12:38:33,571 INFO  &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;12&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; com.cibcwm.go.otis.dasl.util.WebLogicJtaTransactionManager:commit:315 - Initiating transaction commit&lt;br/&gt;
2004-08-12 12:38:33,571 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;12&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; com.cibcwm.go.otis.dasl.util.WebLogicJtaTransactionManager:doCommit:373 - Committing JTA transaction [ClientTM&lt;span class=&quot;error&quot;&gt;&amp;#91;myserver+167.26.108.50:7001+mydomain+t3+&amp;#93;&lt;/span&gt;]&lt;br/&gt;
2004-08-12 12:38:33,571 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;12&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; com.cibcwm.go.otis.dasl.util.WebLogicJtaTransactionManager:triggerAfterCompletion:477 - Triggering afterCompletion synchronization&lt;br/&gt;
2004-08-12 12:38:33,571 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;12&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; com.cibcwm.go.otis.dasl.util.WebLogicJtaTransactionManager:cleanupAfterCompletion:514 - Resuming suspended transaction&lt;br/&gt;
2004-08-12 12:38:33,571 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;12&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; com.cibcwm.go.otis.dasl.util.WebLogicJtaTransactionManager:doResume:20 - ***** doResume start&lt;br/&gt;
2004-08-12 12:38:33,581 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;12&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; com.cibcwm.go.otis.dasl.util.WebLogicJtaTransactionManager:doResume:25 - ***** exception: Tried to resume invalid JTA transaction; nested exception is javax.transaction.InvalidTransactionException: Attempt to resume an inactive transaction: Name=&lt;span class=&quot;error&quot;&gt;&amp;#91;EJB com.cibcwm.go.otis.dasl.jobs.TxTestImpl.doSomething()&amp;#93;&lt;/span&gt;,Xid=2:f288a0557f28edb9(24029854),Status=Marked rollback. &lt;span class=&quot;error&quot;&gt;&amp;#91;Reason=weblogic.transaction.internal.AppSetRollbackOnlyException&amp;#93;&lt;/span&gt;,numRepliesOwedMe=0,numRepliesOwedOthers=0,seconds since begin=0,seconds left=60,SCInfo&lt;span class=&quot;error&quot;&gt;&amp;#91;mydomain+myserver&amp;#93;&lt;/span&gt;=(state=active),properties=(&lt;/p&gt;
{weblogic.transaction.name=[EJB com.cibcwm.go.otis.dasl.jobs.TxTestImpl.doSomething()]}
&lt;p&gt;),OwnerTransactionManager=ServerTM&lt;span class=&quot;error&quot;&gt;&amp;#91;ServerCoordinatorDescriptor=(CoordinatorURL=myserver+167.26.108.50:7001+mydomain+t3+, Resources={})&amp;#93;&lt;/span&gt;,CoordinatorURL=myserver+167.26.108.50:7001+mydomain+t3+)&lt;br/&gt;
&amp;lt;Aug 12, 2004 12:38:33 PM EDT&amp;gt; &amp;lt;Info&amp;gt; &amp;lt;EJB&amp;gt; &amp;lt;010051&amp;gt; &amp;lt;EJB Exception during invocation from home: com.cibcwm.go.otis.dasl.jobs.TxTestImpl_9zujx_LocalHomeImpl@1ce5af9 threw exception: java.lang.NullPointerException&lt;br/&gt;
java.lang.NullPointerException&lt;br/&gt;
	at weblogic.transaction.internal.TransactionManagerImpl.getThreadProp(TransactionManagerImpl.java:1663)&lt;br/&gt;
	at weblogic.transaction.internal.TransactionManagerImpl.associateTxWithThread(TransactionManagerImpl.java:1647)&lt;br/&gt;
	at weblogic.transaction.internal.TransactionManagerImpl.internalResume(TransactionManagerImpl.java:1465)&lt;br/&gt;
	at weblogic.transaction.internal.TransactionManagerImpl.forceResume(TransactionManagerImpl.java:469)&lt;br/&gt;
	at com.cibcwm.go.otis.dasl.util.WebLogicJtaTransactionManager.doResume(WebLogicJtaTransactionManager.java:27)&lt;br/&gt;
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.resume(AbstractPlatformTransactionManager.java:285)&lt;br/&gt;
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.cleanupAfterCompletion(AbstractPlatformTransactionManager.java:516)&lt;br/&gt;
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:351)&lt;br/&gt;
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:189)&lt;br/&gt;
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:138)&lt;br/&gt;
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:148)&lt;br/&gt;
	at $Proxy114.increment(Unknown Source)&lt;br/&gt;
	at com.cibcwm.go.otis.dasl.jobs.TxTestImpl.doSomething(TxTestImpl.java:93)&lt;br/&gt;
	at com.cibcwm.go.otis.dasl.jobs.TxTestImpl_9zujx_ELOImpl.doSomething(TxTestImpl_9zujx_ELOImpl.java:45)&lt;br/&gt;
	at com.cibcwm.go.otis.dasl.jobs.TxTestImplTest.testDoSomething(TxTestImplTest.java:20)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;br/&gt;
	at java.lang.reflect.Method.invoke(Method.java:324)&lt;br/&gt;
	at junit.framework.TestCase.runTest(TestCase.java:154)&lt;br/&gt;
	at junit.framework.TestCase.runBare(TestCase.java:127)&lt;br/&gt;
	at org.apache.cactus.ServletTestCase.runCactusTest(ServletTestCase.java:295)&lt;br/&gt;
	at org.apache.cactus.ServletTestCase.runBare(ServletTestCase.java:263)&lt;br/&gt;
	at org.apache.cactus.server.AbstractWebTestCaller.doTest(AbstractWebTestCaller.java:156)&lt;br/&gt;
	at org.apache.cactus.server.AbstractWebTestController.handleRequest_aroundBody0(AbstractWebTestController.java:130)&lt;br/&gt;
	at org.apache.cactus.server.AbstractWebTestController.handleRequest_aroundBody1$advice(AbstractWebTestController.java:158)&lt;br/&gt;
	at org.apache.cactus.server.AbstractWebTestController.handleRequest(AbstractWebTestController.java)&lt;br/&gt;
	at org.apache.cactus.server.ServletTestRedirector.doPost_aroundBody2(ServletTestRedirector.java:138)&lt;br/&gt;
	at org.apache.cactus.server.ServletTestRedirector.doPost_aroundBody3$advice(ServletTestRedirector.java:158)&lt;br/&gt;
	at org.apache.cactus.server.ServletTestRedirector.doPost(ServletTestRedirector.java)&lt;br/&gt;
	at org.apache.cactus.server.ServletTestRedirector.doGet_aroundBody0(ServletTestRedirector.java:109)&lt;br/&gt;
	at org.apache.cactus.server.ServletTestRedirector.doGet_aroundBody1$advice(ServletTestRedirector.java:158)&lt;br/&gt;
	at org.apache.cactus.server.ServletTestRedirector.doGet(ServletTestRedirector.java)&lt;br/&gt;
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:740)&lt;br/&gt;
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:853)&lt;br/&gt;
	at weblogic.servlet.internal.ServletStubImpl$ServletInvocationAction.run(ServletStubImpl.java:1058)&lt;br/&gt;
	at weblogic.servlet.internal.ServletStubImpl.invokeServlet(ServletStubImpl.java:401)&lt;br/&gt;
	at weblogic.servlet.internal.TailFilter.doFilter(TailFilter.java:20)&lt;br/&gt;
	at weblogic.servlet.internal.FilterChainImpl.doFilter(FilterChainImpl.java:27)&lt;br/&gt;
	at weblogic.servlet.internal.WebAppServletContext$ServletInvocationAction.run(WebAppServletContext.java:5451)&lt;br/&gt;
	at weblogic.security.service.SecurityServiceManager.runAs(SecurityServiceManager.java:780)&lt;br/&gt;
	at weblogic.servlet.internal.WebAppServletContext.invokeServlet(WebAppServletContext.java:3105)&lt;br/&gt;
	at weblogic.servlet.internal.ServletRequestImpl.execute(ServletRequestImpl.java:2591)&lt;br/&gt;
	at weblogic.kernel.ExecuteThread.execute(ExecuteThread.java:215)&lt;br/&gt;
	at weblogic.kernel.ExecuteThread.run(ExecuteThread.java:191)&lt;br/&gt;
&amp;gt; &lt;/p&gt;</comment>
                            <comment id="10772" author="juergen.hoeller" created="Thu, 12 Aug 2004 05:35:57 +0000"  >&lt;p&gt;That NullPointerException is odd - I have no idea where it comes from... I&apos;ll ask Rod and Thomas to try this too; both are long-time WebLogic users.&lt;/p&gt;

&lt;p&gt;Regarding the getTransactionManager() accessor: That method has been added for 1.1 and should be available in 1.1 RC1. I assume you&apos;re working with 1.0.2 then.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="10773" author="maximdim" created="Thu, 12 Aug 2004 05:52:59 +0000"  >&lt;p&gt;That&apos;s true, we&apos;re working with 1.0.2 and Weblogic 7.0. SP2&lt;br/&gt;
Let me know if you need any extra info.&lt;/p&gt;</comment>
                            <comment id="10774" author="maximdim" created="Thu, 12 Aug 2004 06:00:58 +0000"  >&lt;p&gt;The method where it&apos;s failing with NullPointer is quite simple&lt;/p&gt;

&lt;p&gt;in WLS TransactionManagerImpl:&lt;/p&gt;

&lt;p&gt;private TxThreadProperty getThreadProp() {&lt;br/&gt;
  TxThreadProperty txthreadproperty  = (TxThreadProperty)txThreadLocal.get();&lt;br/&gt;
  return txthreadproperty;&lt;br/&gt;
}&lt;br/&gt;
...&lt;br/&gt;
protected class TxThreadLocal extends ResettableThreadLocal {&lt;br/&gt;
   protected final Object initialValue() &lt;/p&gt;
{
      TxThreadProperty txthreadproperty = new TxThreadProperty();
      setDefaultTimeoutSeconds(txthreadproperty);
      return txthreadproperty;
    }
&lt;p&gt;    protected final Object resetValue(Object obj)&lt;/p&gt;
{
      TxThreadProperty txthreadproperty = (TxThreadProperty)obj;
      setDefaultTimeoutSeconds(txthreadproperty);
      txthreadproperty.current = null;
      return obj;
    }
&lt;p&gt;    private void setDefaultTimeoutSeconds(TxThreadProperty txthreadproperty) &lt;/p&gt;
{
      TransactionManagerImpl transactionmanagerimpl = TransactionManagerImpl.getTM();
      txthreadproperty.timeoutSec = transactionmanagerimpl != null ? transactionmanagerimpl.getDefaultTimeoutSeconds() : 30;
    }
&lt;p&gt;    protected TxThreadLocal() {  }&lt;br/&gt;
}&lt;/p&gt;</comment>
                            <comment id="10783" author="thomas.risberg" created="Sun, 15 Aug 2004 17:04:57 +0000"  >&lt;p&gt;Patch to solve problem with resuming transaction marked for rollback&lt;/p&gt;</comment>
                            <comment id="10784" author="juergen.hoeller" created="Sun, 15 Aug 2004 18:34:16 +0000"  >&lt;p&gt;I&apos;m for adding such a WebLogicJtaTransactionManager to Spring 1.1 final: It obviously solves the issue for WebLogic 8.1; and as far as I can tell from the online docs, it should work with WebLogic 7.0 too (please check this, Eugene!).&lt;/p&gt;

&lt;p&gt;In terms of coding, I&apos;ve recently introduced protected &quot;doJtaSuspend&quot; and &quot;doJtaResume&quot; in JtaTransactionManager, which allow for easier overriding that codes against JTA exceptions. I suggest to transform the code from the patch into such a &quot;doJtaResume&quot; implementation.&lt;/p&gt;

&lt;p&gt;WebLogicJtaTransactionManager should also be coded via reflection to avoid compile-time dependencies to WebLogic. I guess I&apos;ll do this today: Thomas, it would be great if you could test the final reflection-based version then!&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="10785" author="maximdim" created="Mon, 16 Aug 2004 03:07:14 +0000"  >&lt;p&gt;We tested patch on WLS 8.1 and it seems to work fine. Doesn&apos;t work on WLS 7.2 though (we tried with Spring 1.1.rc1)- NullPointer exception (see in one of the previous post).&lt;/p&gt;</comment>
                            <comment id="10786" author="juergen.hoeller" created="Mon, 16 Aug 2004 03:19:34 +0000"  >&lt;p&gt;I&apos;ve already committed a refined, reflection-based version of WebLogicJtaTransactionManager to CVS, which we will ship with 1.1 final. Thomas has verified that this version works on WebLogic 8.1 SP2.&lt;/p&gt;

&lt;p&gt;I don&apos;t have any clue on how to track down that NullPointerException on WebLogic 7.0, as it happens within WebLogic-internal classes. So I&apos;m afraid we&apos;ll just properly support WebLogic 8.1 SP2 in Spring 1.1 final.&lt;/p&gt;

&lt;p&gt;Whenever we find out on how to work around that WebLogic 7.0 issue, we&apos;ll update Spring&apos;s JTA support accordingly (maybe for Spring 1.1.1). Essentially, it seems to be a bug in WebLogic 7.0&apos;s JTA implementation...&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="10787" author="euxx" created="Mon, 16 Aug 2004 03:38:33 +0000"  >&lt;p&gt;Juergen, I think that Weblogic 7 expecting some tx information in current ThreadLocal. It seems, that something wasn&apos;t stored there on sustending transaction. Probably this has ben reworked in Weblogc 8 to be more generic. In any case this is somehow going against J2EE/EJB specs, because EJB not suppose to do its own transaction management (that is what we are doing with Spring).&lt;/p&gt;

&lt;p&gt;Anyway it make sence to take a closer look to the source code for generated stubs to see what exactly happens there. Please let us know if you need stubs generated by Weblogic7 ejbc.&lt;/p&gt;</comment>
                            <comment id="10839" author="juergen.hoeller" created="Tue, 24 Aug 2004 23:33:52 +0000"  >&lt;p&gt;Any progress on WebLogic 7.0? If not, please send me a sample EJB stub: Maybe I can find some indication for the problem there.&lt;/p&gt;

&lt;p&gt;I completely agree that WebLogic 7 shouldn&apos;t do its own transaction management in EJB stubs, but rather straightforwardly delegate to its JTA subsystem. They seem to have changed this in WebLogic 8, except for the forceResume issue.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="10841" author="euxx" created="Wed, 25 Aug 2004 00:58:53 +0000"  >&lt;p&gt;It does NOT work in Weblogic 7. &lt;/p&gt;

&lt;p&gt;Please also note that my comment about &quot;own transaction management from EJB&quot; also include delegation to JTA subsystem. It is somehow against J2EE/EJB specification, because EJB transaction shall be managed by container.&lt;/p&gt;</comment>
                            <comment id="10842" author="euxx" created="Wed, 25 Aug 2004 01:00:04 +0000"  >&lt;p&gt;By the way, I believe it woulb be a good idea to outline the risks in the JavaDoc for this new Weblogic specific class.&lt;/p&gt;</comment>
                            <comment id="10843" author="juergen.hoeller" created="Wed, 25 Aug 2004 01:11:22 +0000"  >&lt;p&gt;Which risks would you like to have documented? WebLogicJtaTransactionManager&apos;s javadocs already state that it doesn&apos;t work on WebLogic 7.0 yet, just on WebLogic 8.1.&lt;/p&gt;

&lt;p&gt;Could you send me a sample EJB stub to my SourceForge address? I might be able to track down the ThreadLocal issue a bit further...&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="10844" author="euxx" created="Wed, 25 Aug 2004 02:37:39 +0000"  >&lt;p&gt;Jurgen, unfortunately in real life things way more complicated. When any transactional/jta/xa issues appears usually you have to talk to vendor (BEA, IBM, Oracle, Sybase, etc) and they will try to reproduce/investigeate issues. I had quite of experience with those kind of things and saw really nasty answers. The thing is, if you are using something which is not in a spec, most likely vendor will tell you that they just don&apos;t support such configuration and you are have to do this on your own. In short words, the more appropriate design will be to use local EJB bean to handle transactionality using container services indirectly, unfortunately it will bring back issues with bean pools, etc, but at least you will be able to speak to vendors. Again this is not as important with free products (Tomkat, JBoss, MySQL, Postges, etc), but if you have Weblogic, Websphere, MQSeries, Oracle or Sybase around, it would be very reasonable not to use transactional wrapper from within EJB&apos;s (but it is probably ok to use it from servlets or other standalone components). It make sence to outline this kind of risks in JavaDoc for JTA package.&lt;/p&gt;

&lt;p&gt;By the way, it seems that org.springframework.transaction.jta became little chaotic and number of vendor-specific classes is just growing. It is sounds reasonable for me to provide some factory class that will encapsulate vendor-specific behaviour for well-known kntainers/servers and allows to deal with all of them the same way, e.g. have property that will specify container type and it will create JTA factory for you.&lt;/p&gt;</comment>
                            <comment id="10866" author="juergen.hoeller" created="Sun, 29 Aug 2004 23:08:43 +0000"  >&lt;p&gt;I understand your concerns, and I see the point in your conclusions. I agree that we should briefly discuss those issues in the javadoc of the transaction.jta package. However, let&apos;s refine the remaining issues a bit:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Spring&apos;s JtaTransactionManager works nicely when just using PROPAGATION_REQUIRED/SUPPORTS/MANDATORY/NEVER, i.e. JTA UserTransaction functionality, covering the most important use cases. This is clearly addressed by the EJB spec, as EJB BMT, so vendors should properly support it.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Problems only start to arise when using PROPAGATION_REQUIRES_NEW/NOT_SUPPORTED, i.e. transaction suspension. This requires JTA TransactionManager functionality, which is not covered by EJB BMT but just by the JTA spec: Vendors do not always properly support this configuration.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Vendor-specific classes are just necessary for JTA TransactionManager lookup and handling, i.e. transaction suspension. For any other usage scenario, don&apos;t bother with the 3 vendor-specific classes (JotmFactoryBean, WebSphereTransactionManagerFactoryBean, WebLogicJtaTransactionManager) in the transaction.jta package.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;There is only one scenario that is currently known to not work even with the provided vendor-specific classes: JTA transaction suspension on WebLogic 7.0. Transaction suspension on WebLogic 8.1 works nicely with the provided WebLogicJtaTransactionManager (as of Spring 1.1).&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;None of this is really specific to Spring: It&apos;s rather about the general support for the JTA TransactionManager API. Ideally, J2EE should mandate a well-defined JNDI location for the JTA TransactionManager, and consider it part of the J2EE API (even if mainly for application frameworks rather than direct usage in user code).&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="10867" author="euxx" created="Sun, 29 Aug 2004 23:24:19 +0000"  >&lt;p&gt;Jurgen, thank you for your comments. However current EJB specification is not allow to use JTA manager directly from EJB components. See my blog about this at &lt;a href=&quot;http://www.jroller.com/page/eu/20040826#using_spring_jta_interfaces_from&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.jroller.com/page/eu/20040826#using_spring_jta_interfaces_from&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;From the other hand it would be better if Spring will take more responsibility and give user a warranty that JTA wrapper will work in tested environments/configurations. This will for sure require more deep testing and more advanced EJB-based examples then those curently included with Spring. &lt;/p&gt;

&lt;p&gt;As I suggested before Spring may (or should) autodetect J2EE application server where it is running and obtain appropriate instance of JTA. This will also increase and simplify portability of Spring-based J2EE applications.&lt;/p&gt;</comment>
                            <comment id="10868" author="juergen.hoeller" created="Mon, 30 Aug 2004 00:38:07 +0000"  >&lt;p&gt;The EJB spec does explicitly allow for fetching the JTA UserTransaction from JNDI and using it, though, in EJBs with BMT. This needs to be pointed out clearly, like I did above: Everything but transaction suspension will work without hassle in such a scenario, and is properly supported by the current J2EE spec.&lt;/p&gt;

&lt;p&gt;Your blog entry is somewhat misleading (no offense) in that it implies that Spring&apos;s entire JtaTransactionManager goes against the EJB spec. Actually, JtaTransactionManager is perfectly spec-compliant, as long as you don&apos;t use transaction suspension (i.e. PROPAGATION_REQUIRES_NEW/NOT_SUPPORTED).&lt;/p&gt;

&lt;p&gt;So, as many users don&apos;t need REQUIRES_NEW or NOT_SUPPORTED in the first place, they can happily use the standard JtaTransactionManager configuration on any J2EE server. End of story for those users.&lt;/p&gt;

&lt;p&gt;It gets harder if you need transaction suspension with JTA: The ground is not as well-defined then - and only then. This indeed needs to be pointed out more clearly in the docs for Spring&apos;s JTA support.&lt;/p&gt;

&lt;p&gt;BTW, virtually all O/R mapping tools are not compliant with the J2EE spec either, according to that measurement: They all need the JTA TransactionManager for registering cache synchronization callbacks. This relies the same less-than-well-defined ground as transaction suspension with Spring&apos;s JtaTransactionManager.&lt;/p&gt;

&lt;p&gt;We&apos;re certainly keen on addressing any issues in that area, for specific J2EE servers. Unfortunately, we don&apos;t have the resources for testing every version of every J2EE server out there... We need to rely on user feedback here, at least to some degree. We can still add tests for a subset, like WebLogic 8.1 and WebSphere 5.1.&lt;/p&gt;

&lt;p&gt;Autodetecting the J2EE application server and automatically using an appropriate version of JtaTransactionManager is a good idea; we can certainly try to come up with something here. However, this is still only necessary for transaction suspension: For everything else, Spring&apos;s standard JtaTransactionManager will be fine.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="10869" author="juergen.hoeller" created="Mon, 30 Aug 2004 00:39:46 +0000"  >&lt;p&gt;BTW, thanks for your comments! I appreciate that you help us refine Spring&apos;s JTA support in that area. I hope you don&apos;t mind me setting a couple of points straight that might mislead casual readers...&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="10870" author="euxx" created="Mon, 30 Aug 2004 01:34:27 +0000"  >&lt;p&gt;Jurgen, according to spec EJB&apos;s must use container managed transaction demarcation and use ctx.setRollBackOnly() method to mark transaction for rollback. In case of bean managed transaction EJB&apos;s must use UserTransaction object and not use other JTA interfaces as stated in C.2.4 section of EJB specification.&lt;/p&gt;

&lt;p&gt;Speaking about JDO/OR frameworks, honestly they should provide JCA connector to plugin into J2EE container and its transaction management.&lt;/p&gt;

&lt;p&gt;I totally understand that Spring evolution is driven by customers, however I haven&apos;t seen any proove that there are many users of EJB-only Spring scenario (no web layer) and also I&apos;m pretty sure that lot of users have no clue on what kind of issues they may get on transaction failures/recovery and this part is usually missing during common testing. What Spring can do to solve this is to provide a simple drop-in testbed application that will simulate different kind of failures, so user can easily try it in his own environment.&lt;/p&gt;</comment>
                            <comment id="10871" author="juergen.hoeller" created="Mon, 30 Aug 2004 01:50:02 +0000"  >&lt;p&gt;&amp;lt;quote&amp;gt;Jurgen, according to spec EJB&apos;s must use container managed transaction demarcation and use ctx.setRollBackOnly() method to mark transaction for rollback. In case of bean managed transaction EJB&apos;s must use UserTransaction object and not use other JTA interfaces as stated in C.2.4 section of EJB specification.&amp;lt;/quote&amp;gt;&lt;/p&gt;

&lt;p&gt;I&apos;m perfectly aware of this. As I said, it means that it is absolutely safe to use JTA UserTransaction functionality via Spring&apos;s JtaTransactionManager, i.e. everything else than transaction suspension. It&apos;s just the JTA TransactionManager that causes issues, which is just needed for transaction suspension.&lt;/p&gt;

&lt;p&gt;Note that Spring&apos;s JtaTransactionManager does not even hold a reference to the JTA TransactionManager unless you explicitly tell it to do so! So the JTA TransactionManager is not touched unless it&apos;s absolutely necessary: All standard functionality is delegated to the JTA UserTransaction instead, properly following the J2EE spec.&lt;/p&gt;

&lt;p&gt;Regarding O/R mapping tools and JCA adapters: Well, it feels a bit odd to define an O/R mapper instance that maps specific application classes as a generic JCA adapter. It can be argued that such information belongs to the application itself, not outside of it. So I believe that it should be possible to register JTA synchronizations without resorting to JCA.&lt;/p&gt;

&lt;p&gt;We&apos;re probably gonna lobby to get JTA TransactionManager support into the J2EE umbrella spec, mainly to allow for easier framework integration. Unless this happens, JTA transaction suspension will stay somewhat vendor-specific when not accessed via EJB CMT. Note that JCA doesn&apos;t help here - we really need proper access to the JTA TransactionManager!&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="10938" author="juergen.hoeller" created="Wed, 1 Sep 2004 20:53:29 +0000"  >&lt;p&gt;As noted on another JIRA thread, I&apos;ve discovered that BEA officially supports the JTA TransactionManager interface for WebLogic:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://e-docs.bea.com/wls/docs70/jta/jtaapi.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://e-docs.bea.com/wls/docs70/jta/jtaapi.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&quot;Client-initiated transactions&#8212;the JTA transaction manager interface (javax.transaction.TransactionManager) is made available to clients and bean providers through JNDI. This allows clients and EJBs using bean-managed transactions to suspend and resume transactions.&quot;&lt;/p&gt;

&lt;p&gt;They only interpret the semantics of resume a bit differently, i.e. not automatically resuming a transaction that has been marked rollback-only. They explicitly offer their proprietary &quot;forceResume&quot; method for this. It&apos;s quite clearly a bug then that &quot;forceResume&quot; doesn&apos;t work in WebLogic 7.0: This could even be reported to BEA! &lt;/p&gt;

&lt;p&gt;So in principle, suspend/resume via the JTA TransactionManager &lt;b&gt;is&lt;/b&gt; supported by WebLogic, just with special semantics. If you need &quot;forceResume&quot; semantics, you can use Spring&apos;s new WebLogicJtaTransactionManager, at least on WebLogic 8.1. As I indicated above, &quot;forceResume&quot; should work on 7.0 too, according to BEA docs.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="10939" author="juergen.hoeller" created="Wed, 1 Sep 2004 20:55:47 +0000"  >&lt;p&gt;Solved via WebLogicJtaTransactionManager, which calls &quot;forceResume&quot; (part of the official WebLogic JTA extensions) rather than standard JTA &quot;resume&quot;.&lt;/p&gt;

&lt;p&gt;Works properly on WebLogic 8.1. Fails with an NPE in WebLogic code on WebLogic 7.0, which has to be considered a bug in WebLogic (to be reported to BEA).&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="10943" author="euxx" created="Wed, 1 Sep 2004 22:58:01 +0000"  >&lt;p&gt;Jurgen, BEA documentation does NOT say that it is ok to use JTA transaction manager from CMT EJBs, which is the our case!&lt;/p&gt;

&lt;p&gt;Please change status of this bug to &quot;Closed&quot;/&quot;Will not fix&quot;.&lt;/p&gt;</comment>
                            <comment id="10945" author="juergen.hoeller" created="Thu, 2 Sep 2004 00:42:21 +0000"  >&lt;p&gt;My main point was that BEA officially supports the JTA TransactionManager interface, so we&apos;re allowed to work with it and rely on it. That&apos;s a good thing and clearly shows BEA&apos;s intentions (for example, that it should officially work on WebLogic 7 too)! However, this admittedly just applies to web components and EJB BMT.&lt;/p&gt;

&lt;p&gt;Unfortunately, I didn&apos;t notice earlier that you&apos;re working with EJB CMT. Does JtaTransactionManager&apos;s suspend/resume work with EJB BMT on WebLogic 7.0? That is, does that strange NullPointerException in WebLogic code occur with BMT too? I assume that Thomas did his tests on WebLogic 8.1 (where &quot;forceResume&quot; works) with EJB BMT...&lt;/p&gt;

&lt;p&gt;I agree that changing the status of this issue to &quot;won&apos;t fix&quot; is appropriate, if we assume that it referred to EJB CMT: Spring transactions within EJB CMT are not officially supported in the first place. The issue can be considered &quot;fixed&quot; for EJB BMT though, through the new WebLogicJtaTransactionManager.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="10947" author="euxx" created="Thu, 2 Sep 2004 01:18:51 +0000"  >&lt;p&gt;Please take a closer look to the attached TxTestImpl.java bean source. It is explicitly declared as CMT in XDoclet tags.&lt;/p&gt;</comment>
                            <comment id="10948" author="juergen.hoeller" created="Thu, 2 Sep 2004 01:46:28 +0000"  >&lt;p&gt;Sorry, my mistake to not have noticed that in the deployment descriptor... It&apos;s so easy to suffer from a misunderstanding! At least we were able to clarify a couple of things!&lt;/p&gt;

&lt;p&gt;Anyway, changing the status to &quot;Won&apos;t Fix&quot; with respect to EJB CMT: Spring transactions within EJB CMT are not officially supported, although they do work in some scenarios.&lt;/p&gt;

&lt;p&gt;As a fortunate side effect, we fixed resuming transactions on WebLogic within EJB BMT (or web components), for suspended transactions marked as rollback-only - at least for WebLogic 8.1.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="10971" author="maximdim" created="Fri, 3 Sep 2004 08:33:03 +0000"  >&lt;p&gt;I just tried - WLS 7, Spring 1.1rc2&lt;/p&gt;

&lt;p&gt;JtaTransactionManager as well as WeblogicJtaTransactionManaged doesn&apos;t work even with BMT if transaction marked for rollback before invocation of POJO wrapped in TransactionProxyFactoryBean with REQUIRES_NEW transactional attribute.&lt;/p&gt;

&lt;p&gt;Here is exception trace for WeblogicJtaTransactionManager:&lt;/p&gt;

&lt;p&gt;2004-09-03 16:56:18,977 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;44&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.factory.support.DefaultListableBeanFactory:getBean:156 - Returning cached instance of singleton bean &apos;simple&apos;&lt;br/&gt;
2004-09-03 16:56:18,977 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;44&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.factory.support.DefaultListableBeanFactory:getObjectForSharedInstance:517 - Bean with name &apos;simple&apos; is a factory bean&lt;br/&gt;
2004-09-03 16:56:19,007 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;44&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.transaction.interceptor.TransactionInterceptor:createTransactionIfNecessary:196 - Getting transaction for method &apos;somethingSimple&apos; in class &lt;span class=&quot;error&quot;&gt;&amp;#91;test1.Simple&amp;#93;&lt;/span&gt;&lt;br/&gt;
2004-09-03 16:56:19,007 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;44&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.transaction.jta.WebLogicJtaTransactionManager:getTransaction:195 - Using transaction object [ClientTM&lt;span class=&quot;error&quot;&gt;&amp;#91;myserver+167.26.108.50:7001+mydomain+t3+&amp;#93;&lt;/span&gt;]&lt;br/&gt;
2004-09-03 16:56:19,007 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;44&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.transaction.jta.WebLogicJtaTransactionManager:getTransaction:218 - Creating new transaction, suspending current one&lt;br/&gt;
2004-09-03 16:56:19,017 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;44&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.transaction.jta.WebLogicJtaTransactionManager:doBegin:405 - Beginning JTA transaction&lt;br/&gt;
2004-09-03 16:56:19,017 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;44&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.transaction.support.TransactionSynchronizationManager:initSynchronization:194 - Initializing transaction synchronization&lt;br/&gt;
2004-09-03 16:56:19,017 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;44&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; test1.SimplePOJO:somethingSimple:18 - In a POJO&lt;br/&gt;
2004-09-03 16:56:19,027 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;44&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.transaction.interceptor.TransactionInterceptor:doCommitTransactionAfterReturning:239 - Invoking commit for transaction on method &apos;somethingSimple&apos; in class &lt;span class=&quot;error&quot;&gt;&amp;#91;test1.Simple&amp;#93;&lt;/span&gt;&lt;br/&gt;
2004-09-03 16:56:19,027 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;44&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.transaction.jta.WebLogicJtaTransactionManager:triggerBeforeCommit:497 - Triggering beforeCommit synchronization&lt;br/&gt;
2004-09-03 16:56:19,027 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;44&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.transaction.jta.WebLogicJtaTransactionManager:triggerBeforeCompletion:512 - Triggering beforeCompletion synchronization&lt;br/&gt;
2004-09-03 16:56:19,027 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;44&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.transaction.jta.WebLogicJtaTransactionManager:commit:374 - Initiating transaction commit&lt;br/&gt;
2004-09-03 16:56:19,027 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;44&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.transaction.jta.WebLogicJtaTransactionManager:doCommit:511 - Committing JTA transaction&lt;br/&gt;
2004-09-03 16:56:19,188 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;44&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.transaction.jta.WebLogicJtaTransactionManager:triggerAfterCompletion:542 - Triggering afterCompletion synchronization&lt;br/&gt;
2004-09-03 16:56:19,198 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;44&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.transaction.support.TransactionSynchronizationManager:clearSynchronization:234 - Clearing transaction synchronization&lt;br/&gt;
2004-09-03 16:56:19,198 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;44&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.transaction.jta.WebLogicJtaTransactionManager:cleanupAfterCompletion:579 - Resuming suspended transaction&lt;br/&gt;
2004-09-03 16:56:19,198 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;44&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.transaction.jta.WebLogicJtaTransactionManager:doJtaResume:89 - Standard JTA resume threw InvalidTransactionException: Attempt to resume an inactive transaction: Xid=0:b8c14852(27980747),Status=Marked rollback. &lt;span class=&quot;error&quot;&gt;&amp;#91;Reason=weblogic.transaction.internal.AppSetRollbackOnlyException&amp;#93;&lt;/span&gt;,numRepliesOwedMe=0,numRepliesOwedOthers=0,seconds since begin=1,seconds left=28,SCInfo&lt;span class=&quot;error&quot;&gt;&amp;#91;mydomain+myserver&amp;#93;&lt;/span&gt;=(state=active),OwnerTransactionManager=ServerTM&lt;span class=&quot;error&quot;&gt;&amp;#91;ServerCoordinatorDescriptor=(CoordinatorURL=myserver+167.26.108.50:7001+mydomain+t3+, Resources={})&amp;#93;&lt;/span&gt;) - trying WebLogic JTA forceResume&lt;br/&gt;
2004-09-03 16:56:19,208 FATAL &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;44&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; test1.Bean1Impl_124zfl_Impl:doSomething:48 - Exception in doSomething()&lt;br/&gt;
org.springframework.transaction.TransactionSystemException: Could not invoke WebLogic&apos;s forceResume method; nested exception is java.lang.reflect.InvocationTargetException: null&lt;br/&gt;
java.lang.reflect.InvocationTargetException&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;br/&gt;
	at java.lang.reflect.Method.invoke(Method.java:324)&lt;br/&gt;
	at org.springframework.transaction.jta.WebLogicJtaTransactionManager.doJtaResume(WebLogicJtaTransactionManager.java:98)&lt;br/&gt;
	at org.springframework.transaction.jta.JtaTransactionManager.doResume(JtaTransactionManager.java:478)&lt;br/&gt;
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.resume(AbstractPlatformTransactionManager.java:338)&lt;br/&gt;
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.cleanupAfterCompletion(AbstractPlatformTransactionManager.java:581)&lt;br/&gt;
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:410)&lt;br/&gt;
	at org.springframework.transaction.interceptor.TransactionAspectSupport.doCommitTransactionAfterReturning(TransactionAspectSupport.java:241)&lt;br/&gt;
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:66)&lt;br/&gt;
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:139)&lt;br/&gt;
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:152)&lt;br/&gt;
	at $Proxy107.somethingSimple(Unknown Source)&lt;br/&gt;
	at test1.Bean1Impl.doSomething(Bean1Impl.java:42)&lt;br/&gt;
	at test1.Bean1Impl_124zfl_ELOImpl.doSomething(Bean1Impl_124zfl_ELOImpl.java:45)&lt;br/&gt;
	at test1.Test.test1(Test.java:24)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;br/&gt;
	at java.lang.reflect.Method.invoke(Method.java:324)&lt;br/&gt;
	at junit.framework.TestCase.runTest(TestCase.java:154)&lt;br/&gt;
	at junit.framework.TestCase.runBare(TestCase.java:127)&lt;br/&gt;
	at org.apache.cactus.ServletTestCase.runCactusTest(ServletTestCase.java:295)&lt;br/&gt;
	at org.apache.cactus.ServletTestCase.runBare(ServletTestCase.java:263)&lt;br/&gt;
	at org.apache.cactus.server.AbstractWebTestCaller.doTest(AbstractWebTestCaller.java:156)&lt;br/&gt;
	at org.apache.cactus.server.AbstractWebTestController.handleRequest_aroundBody0(AbstractWebTestController.java:130)&lt;br/&gt;
	at org.apache.cactus.server.AbstractWebTestController.handleRequest_aroundBody1$advice(AbstractWebTestController.java:158)&lt;br/&gt;
	at org.apache.cactus.server.AbstractWebTestController.handleRequest(AbstractWebTestController.java)&lt;br/&gt;
	at org.apache.cactus.server.ServletTestRedirector.doPost_aroundBody2(ServletTestRedirector.java:138)&lt;br/&gt;
	at org.apache.cactus.server.ServletTestRedirector.doPost_aroundBody3$advice(ServletTestRedirector.java:158)&lt;br/&gt;
	at org.apache.cactus.server.ServletTestRedirector.doPost(ServletTestRedirector.java)&lt;br/&gt;
	at org.apache.cactus.server.ServletTestRedirector.doGet_aroundBody0(ServletTestRedirector.java:109)&lt;br/&gt;
	at org.apache.cactus.server.ServletTestRedirector.doGet_aroundBody1$advice(ServletTestRedirector.java:158)&lt;br/&gt;
	at org.apache.cactus.server.ServletTestRedirector.doGet(ServletTestRedirector.java)&lt;br/&gt;
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:740)&lt;br/&gt;
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:853)&lt;br/&gt;
	at weblogic.servlet.internal.ServletStubImpl$ServletInvocationAction.run(ServletStubImpl.java:1058)&lt;br/&gt;
	at weblogic.servlet.internal.ServletStubImpl.invokeServlet(ServletStubImpl.java:401)&lt;br/&gt;
	at weblogic.servlet.internal.TailFilter.doFilter(TailFilter.java:20)&lt;br/&gt;
	at weblogic.servlet.internal.FilterChainImpl.doFilter(FilterChainImpl.java:27)&lt;br/&gt;
	at weblogic.servlet.internal.WebAppServletContext$ServletInvocationAction.run(WebAppServletContext.java:5451)&lt;br/&gt;
	at weblogic.security.service.SecurityServiceManager.runAs(SecurityServiceManager.java:780)&lt;br/&gt;
	at weblogic.servlet.internal.WebAppServletContext.invokeServlet(WebAppServletContext.java:3105)&lt;br/&gt;
	at weblogic.servlet.internal.ServletRequestImpl.execute(ServletRequestImpl.java:2591)&lt;br/&gt;
	at weblogic.kernel.ExecuteThread.execute(ExecuteThread.java:215)&lt;br/&gt;
	at weblogic.kernel.ExecuteThread.run(ExecuteThread.java:191)&lt;br/&gt;
Caused by: java.lang.NullPointerException&lt;br/&gt;
	at weblogic.transaction.internal.TransactionManagerImpl.getThreadProp(TransactionManagerImpl.java:1663)&lt;br/&gt;
	at weblogic.transaction.internal.TransactionManagerImpl.associateTxWithThread(TransactionManagerImpl.java:1647)&lt;br/&gt;
	at weblogic.transaction.internal.TransactionManagerImpl.internalResume(TransactionManagerImpl.java:1465)&lt;br/&gt;
	at weblogic.transaction.internal.TransactionManagerImpl.forceResume(TransactionManagerImpl.java:469)&lt;br/&gt;
	... 47 more&lt;br/&gt;
&amp;lt;Sep 3, 2004 4:56:19 PM EDT&amp;gt; &amp;lt;Info&amp;gt; &amp;lt;EJB&amp;gt; &amp;lt;010051&amp;gt; &amp;lt;EJB Exception during invocation from home: test1.Bean1Impl_124zfl_LocalHomeImpl@d591cc threw exception: java.lang.RuntimeException: org.springframework.transaction.TransactionSystemException: Could not invoke WebLogic&apos;s forceResume method; nested exception is java.lang.reflect.InvocationTargetException: null&lt;br/&gt;
java.lang.RuntimeException: org.springframework.transaction.TransactionSystemException: Could not invoke WebLogic&apos;s forceResume method; nested exception is java.lang.reflect.InvocationTargetException: null&lt;br/&gt;
	at test1.Bean1Impl.doSomething(Bean1Impl.java:49)&lt;br/&gt;
	at test1.Bean1Impl_124zfl_ELOImpl.doSomething(Bean1Impl_124zfl_ELOImpl.java:45)&lt;br/&gt;
	at test1.Test.test1(Test.java:24)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;br/&gt;
	at java.lang.reflect.Method.invoke(Method.java:324)&lt;br/&gt;
	at junit.framework.TestCase.runTest(TestCase.java:154)&lt;br/&gt;
	at junit.framework.TestCase.runBare(TestCase.java:127)&lt;br/&gt;
	at org.apache.cactus.ServletTestCase.runCactusTest(ServletTestCase.java:295)&lt;br/&gt;
	at org.apache.cactus.ServletTestCase.runBare(ServletTestCase.java:263)&lt;br/&gt;
	at org.apache.cactus.server.AbstractWebTestCaller.doTest(AbstractWebTestCaller.java:156)&lt;br/&gt;
	at org.apache.cactus.server.AbstractWebTestController.handleRequest_aroundBody0(AbstractWebTestController.java:130)&lt;br/&gt;
	at org.apache.cactus.server.AbstractWebTestController.handleRequest_aroundBody1$advice(AbstractWebTestController.java:158)&lt;br/&gt;
	at org.apache.cactus.server.AbstractWebTestController.handleRequest(AbstractWebTestController.java)&lt;br/&gt;
	at org.apache.cactus.server.ServletTestRedirector.doPost_aroundBody2(ServletTestRedirector.java:138)&lt;br/&gt;
	at org.apache.cactus.server.ServletTestRedirector.doPost_aroundBody3$advice(ServletTestRedirector.java:158)&lt;br/&gt;
	at org.apache.cactus.server.ServletTestRedirector.doPost(ServletTestRedirector.java)&lt;br/&gt;
	at org.apache.cactus.server.ServletTestRedirector.doGet_aroundBody0(ServletTestRedirector.java:109)&lt;br/&gt;
	at org.apache.cactus.server.ServletTestRedirector.doGet_aroundBody1$advice(ServletTestRedirector.java:158)&lt;br/&gt;
	at org.apache.cactus.server.ServletTestRedirector.doGet(ServletTestRedirector.java)&lt;br/&gt;
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:740)&lt;br/&gt;
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:853)&lt;br/&gt;
	at weblogic.servlet.internal.ServletStubImpl$ServletInvocationAction.run(ServletStubImpl.java:1058)&lt;br/&gt;
	at weblogic.servlet.internal.ServletStubImpl.invokeServlet(ServletStubImpl.java:401)&lt;br/&gt;
	at weblogic.servlet.internal.TailFilter.doFilter(TailFilter.java:20)&lt;br/&gt;
	at weblogic.servlet.internal.FilterChainImpl.doFilter(FilterChainImpl.java:27)&lt;br/&gt;
	at weblogic.servlet.internal.WebAppServletContext$ServletInvocationAction.run(WebAppServletContext.java:5451)&lt;br/&gt;
	at weblogic.security.service.SecurityServiceManager.runAs(SecurityServiceManager.java:780)&lt;br/&gt;
	at weblogic.servlet.internal.WebAppServletContext.invokeServlet(WebAppServletContext.java:3105)&lt;br/&gt;
	at weblogic.servlet.internal.ServletRequestImpl.execute(ServletRequestImpl.java:2591)&lt;br/&gt;
	at weblogic.kernel.ExecuteThread.execute(ExecuteThread.java:215)&lt;br/&gt;
	at weblogic.kernel.ExecuteThread.run(ExecuteThread.java:191)&lt;br/&gt;
Caused by: org.springframework.transaction.TransactionSystemException: Could not invoke WebLogic&apos;s forceResume method; nested exception is java.lang.reflect.InvocationTargetException: null&lt;br/&gt;
	at org.springframework.transaction.jta.WebLogicJtaTransactionManager.doJtaResume(WebLogicJtaTransactionManager.java:101)&lt;br/&gt;
	at org.springframework.transaction.jta.JtaTransactionManager.doResume(JtaTransactionManager.java:478)&lt;br/&gt;
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.resume(AbstractPlatformTransactionManager.java:338)&lt;br/&gt;
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.cleanupAfterCompletion(AbstractPlatformTransactionManager.java:581)&lt;br/&gt;
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:410)&lt;br/&gt;
	at org.springframework.transaction.interceptor.TransactionAspectSupport.doCommitTransactionAfterReturning(TransactionAspectSupport.java:241)&lt;br/&gt;
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:66)&lt;br/&gt;
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:139)&lt;br/&gt;
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:152)&lt;br/&gt;
	at $Proxy107.somethingSimple(Unknown Source)&lt;br/&gt;
	at test1.Bean1Impl.doSomething(Bean1Impl.java:42)&lt;br/&gt;
	... 32 more&lt;br/&gt;
Caused by: java.lang.reflect.InvocationTargetException&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;br/&gt;
	at java.lang.reflect.Method.invoke(Method.java:324)&lt;br/&gt;
	at org.springframework.transaction.jta.WebLogicJtaTransactionManager.doJtaResume(WebLogicJtaTransactionManager.java:98)&lt;br/&gt;
	... 42 more&lt;br/&gt;
Caused by: java.lang.NullPointerException&lt;br/&gt;
	at weblogic.transaction.internal.TransactionManagerImpl.getThreadProp(TransactionManagerImpl.java:1663)&lt;br/&gt;
	at weblogic.transaction.internal.TransactionManagerImpl.associateTxWithThread(TransactionManagerImpl.java:1647)&lt;br/&gt;
	at weblogic.transaction.internal.TransactionManagerImpl.internalResume(TransactionManagerImpl.java:1465)&lt;br/&gt;
	at weblogic.transaction.internal.TransactionManagerImpl.forceResume(TransactionManagerImpl.java:469)&lt;br/&gt;
	... 47 more&lt;/p&gt;</comment>
                            <comment id="10972" author="juergen.hoeller" created="Fri, 3 Sep 2004 09:04:48 +0000"  >&lt;p&gt;Thanks, Dmitri - your efforts are much appreciated!&lt;/p&gt;

&lt;p&gt;So it&apos;s the same with CMT and BMT. This means that WebLogic 7.0 is currently the &lt;b&gt;only&lt;/b&gt; J2EE server with a known problem in the JTA TransactionManager area (that we don&apos;t have a solution for)...&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="10973" author="maximdim" created="Fri, 3 Sep 2004 09:10:16 +0000"  >&lt;p&gt;I&apos;m getting the same exception in WLS7 even without Spring, so this is definitely looks like WLS issue!&lt;br/&gt;
Here is the code:&lt;/p&gt;

&lt;p&gt;    /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;@ejb.interface-method view-type=&quot;local&quot;&lt;br/&gt;
     */&lt;br/&gt;
    public void doSomething() {&lt;br/&gt;
        this.logger.debug(&quot;start&quot;);&lt;br/&gt;
        UserTransaction tx = this.sessionContext.getUserTransaction();&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;        try &lt;/p&gt;
{
            tx.begin();
            this.logger.debug(&quot;tx started&quot;);
            
            tx.setRollbackOnly();

            TransactionManager transactionManager = (TransactionManager)Locator.getInstance().lookup(&quot;javax.transaction.TransactionManager&quot;);
            Transaction t = transactionManager.suspend();
            this.logger.debug(&quot;tx suspended&quot;);
            
            //transactionManager.resume(t);
            

((weblogic.transaction.TransactionManager)transactionManager).forceResume(t);
            this.logger.debug(&quot;tx resumed&quot;);
            
            tx.commit();
            this.logger.debug(&quot;tx committed&quot;);
        }
&lt;p&gt; &lt;br/&gt;
        catch (Exception e) &lt;/p&gt;
{
            this.logger.fatal(&quot;Exception in doSomething()&quot;, e);
            throw new RuntimeException(e);
        }
&lt;p&gt;        &lt;/p&gt;

&lt;p&gt;        this.logger.debug(&quot;done&quot;);&lt;br/&gt;
    }&lt;/p&gt;


&lt;p&gt;and exception:&lt;/p&gt;


&lt;p&gt;2004-09-03 17:23:40,557 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;46&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; test1.Bean1Impl_124zfl_Impl:doSomething:36 - start&lt;br/&gt;
2004-09-03 17:23:40,577 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;46&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; test1.Bean1Impl_124zfl_Impl:doSomething:41 - tx started&lt;br/&gt;
2004-09-03 17:23:40,577 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;46&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; test1.Bean1Impl_124zfl_Impl:doSomething:50 - tx suspended&lt;br/&gt;
2004-09-03 17:23:40,577 FATAL &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;46&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; test1.Bean1Impl_124zfl_Impl:doSomething:64 - Exception in doSomething()&lt;br/&gt;
java.lang.NullPointerException&lt;br/&gt;
	at weblogic.transaction.internal.TransactionManagerImpl.getThreadProp(TransactionManagerImpl.java:1663)&lt;br/&gt;
	at weblogic.transaction.internal.TransactionManagerImpl.associateTxWithThread(TransactionManagerImpl.java:1647)&lt;br/&gt;
	at weblogic.transaction.internal.TransactionManagerImpl.internalResume(TransactionManagerImpl.java:1465)&lt;br/&gt;
	at weblogic.transaction.internal.TransactionManagerImpl.forceResume(TransactionManagerImpl.java:469)&lt;br/&gt;
	at test1.Bean1Impl.doSomething(Bean1Impl.java:57)&lt;br/&gt;
	at test1.Bean1Impl_124zfl_ELOImpl.doSomething(Bean1Impl_124zfl_ELOImpl.java:45)&lt;br/&gt;
	at test1.Test.test1(Test.java:24)&lt;/p&gt;



&lt;p&gt;I opened bug for it with BEA (Case #: 528959). Will keep you posted.&lt;/p&gt;</comment>
                            <comment id="10980" author="thomas.risberg" created="Sat, 4 Sep 2004 04:36:45 +0000"  >&lt;p&gt;I have been able to replicate this issue and I have also implemented a fix for it.&lt;/p&gt;

&lt;p&gt;WebLogic&apos;s TxHelper.getTransactionManager() returns a different implementation (weblogic.transaction.internal.ServerTransactionManagerImpl) than the JNDI lookup.  This &quot;server&quot; implementation seems to work as advertised.  I have added a new WebLogicServerTransactionManagerFactoryBean.  This bean factory looks up the ServerTransactionManagerImpl via TxHelper to get around the NPE that was thrown during a &quot;forceResume&quot;.  This has been tested on WebLogic 7.0 SP5 and checked in.  Here is a snippet from the configuration I tested with:&lt;/p&gt;

&lt;p&gt;  &amp;lt;!--  transaction manager --&amp;gt;&lt;br/&gt;
    &amp;lt;bean id=&quot;wls7tm&quot;&lt;br/&gt;
             class=&quot;org.springframework.transaction.jta.WebLogicServerTransactionManagerFactoryBean&quot;/&amp;gt;&lt;br/&gt;
    &amp;lt;bean id=&quot;transactionManager&quot;&lt;br/&gt;
             class=&quot;org.springframework.transaction.jta.WebLogicJtaTransactionManager&quot;&amp;gt;&lt;br/&gt;
       &amp;lt;property name=&quot;transactionManager&quot;&amp;gt;&lt;br/&gt;
         &amp;lt;ref local=&quot;wls7tm&quot;/&amp;gt;&lt;br/&gt;
       &amp;lt;/property&amp;gt;&lt;br/&gt;
       &amp;lt;/bean&amp;gt;&lt;/p&gt;

&lt;p&gt;If you could retest using this new bean fatcory, then we can mark this issue as fixed.&lt;/p&gt;

&lt;p&gt;Thomas&lt;/p&gt;</comment>
                            <comment id="10991" author="maximdim" created="Tue, 7 Sep 2004 06:01:40 +0000"  >&lt;p&gt;Thomas,&lt;/p&gt;

&lt;p&gt;It still doesn&apos;t seems to work on WLS 7.0 SP2. Let me know if you&apos;d like to get source code for my test. Here is a log output:&lt;/p&gt;

&lt;p&gt;&amp;lt;Sep 7, 2004 2:26:29 PM EDT&amp;gt; &amp;lt;Notice&amp;gt; &amp;lt;WebLogicServer&amp;gt; &amp;lt;000360&amp;gt; &amp;lt;Server started in RUNNING mode&amp;gt; &lt;br/&gt;
&amp;lt;Sep 7, 2004 2:27:20 PM EDT&amp;gt; &amp;lt;Info&amp;gt; &amp;lt;HTTP&amp;gt; &amp;lt;101047&amp;gt; &amp;lt;&lt;span class=&quot;error&quot;&gt;&amp;#91;ServletContext(id=25064145,name=otis-dasl-txtest.war,context-path=/otis-dasl-txtest)&amp;#93;&lt;/span&gt; ServletRedirector: init&amp;gt; &lt;br/&gt;
2004-09-07 14:27:20,776 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; test1.Bean1Impl_124zfl_Impl:doSomething:37 - start&lt;br/&gt;
2004-09-07 14:27:20,796 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; test1.Bean1Impl_124zfl_Impl:doSomething:42 - tx started&lt;br/&gt;
2004-09-07 14:27:21,007 INFO  &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.factory.xml.XmlBeanDefinitionReader:loadBeanDefinitions:116 - Loading XML bean definitions from class path resource &lt;span class=&quot;error&quot;&gt;&amp;#91;test1/applicationContext.xml&amp;#93;&lt;/span&gt;&lt;br/&gt;
2004-09-07 14:27:21,007 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.factory.xml.XmlBeanDefinitionReader:loadBeanDefinitions:120 - Using JAXP implementation &lt;span class=&quot;error&quot;&gt;&amp;#91;weblogic.xml.jaxp.RegistryDocumentBuilderFactory@d60f6e&amp;#93;&lt;/span&gt;&lt;br/&gt;
2004-09-07 14:27:21,027 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.context.support.ResourceEntityResolver:resolveEntity:50 - Trying to resolve XML entity with public ID &lt;span class=&quot;error&quot;&gt;&amp;#91;-//SPRING//DTD BEAN//EN&amp;#93;&lt;/span&gt; and system ID &lt;a href=&quot;http://www.springframework.org/dtd/spring-beans.dtd&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.springframework.org/dtd/spring-beans.dtd&lt;/a&gt;&lt;br/&gt;
2004-09-07 14:27:21,037 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.context.support.ResourceEntityResolver:resolveEntity:54 - Trying to locate &lt;span class=&quot;error&quot;&gt;&amp;#91;spring-beans.dtd&amp;#93;&lt;/span&gt; under &lt;span class=&quot;error&quot;&gt;&amp;#91;/org/springframework/beans/factory/xml/&amp;#93;&lt;/span&gt;&lt;br/&gt;
2004-09-07 14:27:21,037 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.context.support.ResourceEntityResolver:resolveEntity:60 - Found beans DTD &lt;a href=&quot;http://www.springframework.org/dtd/spring-beans.dtd&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.springframework.org/dtd/spring-beans.dtd&lt;/a&gt; in classpath&lt;br/&gt;
2004-09-07 14:27:21,087 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.factory.xml.DefaultXmlBeanDefinitionParser:registerBeanDefinitions:157 - Loading bean definitions&lt;br/&gt;
2004-09-07 14:27:21,087 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.factory.xml.DefaultXmlBeanDefinitionParser:registerBeanDefinitions:161 - Default lazy init &apos;false&apos;&lt;br/&gt;
2004-09-07 14:27:21,087 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.factory.xml.DefaultXmlBeanDefinitionParser:registerBeanDefinitions:163 - Default dependency check &apos;none&apos;&lt;br/&gt;
2004-09-07 14:27:21,097 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.factory.xml.DefaultXmlBeanDefinitionParser:registerBeanDefinitions:165 - Default autowire &apos;no&apos;&lt;br/&gt;
2004-09-07 14:27:21,127 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.factory.xml.DefaultXmlBeanDefinitionParser:registerBeanDefinition:206 - Registering bean definition with id &apos;wls7tm&apos;&lt;br/&gt;
2004-09-07 14:27:21,187 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.factory.xml.DefaultXmlBeanDefinitionParser:registerBeanDefinition:206 - Registering bean definition with id &apos;transactionManager&apos;&lt;br/&gt;
2004-09-07 14:27:21,197 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.factory.xml.DefaultXmlBeanDefinitionParser:registerBeanDefinition:206 - Registering bean definition with id &apos;simplePOJO&apos;&lt;br/&gt;
2004-09-07 14:27:21,217 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.factory.xml.DefaultXmlBeanDefinitionParser:registerBeanDefinition:206 - Registering bean definition with id &apos;simple&apos;&lt;br/&gt;
2004-09-07 14:27:21,217 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.factory.xml.DefaultXmlBeanDefinitionParser:registerBeanDefinitions:176 - Found 4 &amp;lt;bean&amp;gt; elements defining beans&lt;br/&gt;
2004-09-07 14:27:21,227 INFO  &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.context.support.ClassPathXmlApplicationContext:refreshBeanFactory:67 - Bean factory for application context &lt;span class=&quot;error&quot;&gt;&amp;#91;org.springframework.context.support.ClassPathXmlApplicationContext;hashCode=2193574&amp;#93;&lt;/span&gt;: org.springframework.beans.factory.support.DefaultListableBeanFactory defining beans &lt;span class=&quot;error&quot;&gt;&amp;#91;wls7tm,transactionManager,simplePOJO,simple&amp;#93;&lt;/span&gt;; Root of BeanFactory hierarchy&lt;br/&gt;
2004-09-07 14:27:21,237 INFO  &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.context.support.ClassPathXmlApplicationContext:refresh:262 - 4 beans defined in ApplicationContext &lt;span class=&quot;error&quot;&gt;&amp;#91;org.springframework.context.support.ClassPathXmlApplicationContext;hashCode=2193574&amp;#93;&lt;/span&gt;&lt;br/&gt;
2004-09-07 14:27:21,237 INFO  &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.context.support.ClassPathXmlApplicationContext:initMessageSource:353 - No MessageSource found for context &lt;span class=&quot;error&quot;&gt;&amp;#91;org.springframework.context.support.ClassPathXmlApplicationContext;hashCode=2193574&amp;#93;&lt;/span&gt;: using empty default&lt;br/&gt;
2004-09-07 14:27:21,277 INFO  &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.context.support.ClassPathXmlApplicationContext:initApplicationEventMulticaster:370 - No ApplicationEventMulticaster found for context &lt;span class=&quot;error&quot;&gt;&amp;#91;org.springframework.context.support.ClassPathXmlApplicationContext;hashCode=2193574&amp;#93;&lt;/span&gt;: using default&lt;br/&gt;
2004-09-07 14:27:21,287 INFO  &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.context.support.ClassPathXmlApplicationContext:refreshListeners:390 - Refreshing listeners&lt;br/&gt;
2004-09-07 14:27:21,287 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.context.support.ClassPathXmlApplicationContext:refreshListeners:392 - Found 0 listeners in bean factory&lt;br/&gt;
2004-09-07 14:27:21,287 INFO  &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.factory.support.DefaultListableBeanFactory:preInstantiateSingletons:215 - Pre-instantiating singletons in factory [org.springframework.beans.factory.support.DefaultListableBeanFactory defining beans &lt;span class=&quot;error&quot;&gt;&amp;#91;wls7tm,transactionManager,simplePOJO,simple&amp;#93;&lt;/span&gt;; Root of BeanFactory hierarchy]&lt;br/&gt;
2004-09-07 14:27:21,297 INFO  &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.factory.support.DefaultListableBeanFactory:getBean:200 - Creating shared instance of singleton bean &apos;wls7tm&apos;&lt;br/&gt;
2004-09-07 14:27:21,297 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.factory.support.DefaultListableBeanFactory:createBean:226 - Creating instance of bean &apos;wls7tm&apos; with merged definition [Root bean with class &lt;span class=&quot;error&quot;&gt;&amp;#91;org.springframework.transaction.jta.WebLogicServerTransactionManagerFactoryBean&amp;#93;&lt;/span&gt; defined in class path resource &lt;span class=&quot;error&quot;&gt;&amp;#91;test1/applicationContext.xml&amp;#93;&lt;/span&gt;]&lt;br/&gt;
2004-09-07 14:27:21,297 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.transaction.jta.WebLogicServerTransactionManagerFactoryBean:&amp;lt;init&amp;gt;:60 - Trying Weblogic: weblogic.transaction.TxHelper&lt;br/&gt;
2004-09-07 14:27:21,297 INFO  &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.transaction.jta.WebLogicServerTransactionManagerFactoryBean:&amp;lt;init&amp;gt;:62 - Found WebLogic: weblogic.transaction.TxHelper&lt;br/&gt;
2004-09-07 14:27:21,387 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.CachedIntrospectionResults:&amp;lt;init&amp;gt;:136 - Getting BeanInfo for class &lt;span class=&quot;error&quot;&gt;&amp;#91;org.springframework.transaction.jta.WebLogicServerTransactionManagerFactoryBean&amp;#93;&lt;/span&gt;&lt;br/&gt;
2004-09-07 14:27:21,397 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.CachedIntrospectionResults:&amp;lt;init&amp;gt;:152 - Caching PropertyDescriptors for class &lt;span class=&quot;error&quot;&gt;&amp;#91;org.springframework.transaction.jta.WebLogicServerTransactionManagerFactoryBean&amp;#93;&lt;/span&gt;&lt;br/&gt;
2004-09-07 14:27:21,397 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.CachedIntrospectionResults:&amp;lt;init&amp;gt;:160 - Found property &apos;class&apos; of type &lt;span class=&quot;error&quot;&gt;&amp;#91;class java.lang.Class&amp;#93;&lt;/span&gt;; editor=&lt;span class=&quot;error&quot;&gt;&amp;#91;null&amp;#93;&lt;/span&gt;&lt;br/&gt;
2004-09-07 14:27:21,397 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.CachedIntrospectionResults:&amp;lt;init&amp;gt;:160 - Found property &apos;object&apos; of type &lt;span class=&quot;error&quot;&gt;&amp;#91;class java.lang.Object&amp;#93;&lt;/span&gt;; editor=&lt;span class=&quot;error&quot;&gt;&amp;#91;null&amp;#93;&lt;/span&gt;&lt;br/&gt;
2004-09-07 14:27:21,397 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.CachedIntrospectionResults:&amp;lt;init&amp;gt;:160 - Found property &apos;objectType&apos; of type &lt;span class=&quot;error&quot;&gt;&amp;#91;class java.lang.Class&amp;#93;&lt;/span&gt;; editor=&lt;span class=&quot;error&quot;&gt;&amp;#91;null&amp;#93;&lt;/span&gt;&lt;br/&gt;
2004-09-07 14:27:21,407 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.CachedIntrospectionResults:&amp;lt;init&amp;gt;:160 - Found property &apos;singleton&apos; of type &lt;span class=&quot;error&quot;&gt;&amp;#91;boolean&amp;#93;&lt;/span&gt;; editor=&lt;span class=&quot;error&quot;&gt;&amp;#91;null&amp;#93;&lt;/span&gt;&lt;br/&gt;
2004-09-07 14:27:21,407 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.CachedIntrospectionResults:forClass:83 - Class &lt;span class=&quot;error&quot;&gt;&amp;#91;org.springframework.transaction.jta.WebLogicServerTransactionManagerFactoryBean&amp;#93;&lt;/span&gt; is cache-safe&lt;br/&gt;
2004-09-07 14:27:21,417 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.factory.support.DefaultListableBeanFactory:applyBeanPostProcessorsBeforeInitialization:165 - Invoking BeanPostProcessors before initialization of bean &apos;wls7tm&apos;&lt;br/&gt;
2004-09-07 14:27:21,427 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.factory.support.DefaultListableBeanFactory:applyBeanPostProcessorsAfterInitialization:182 - Invoking BeanPostProcessors after initialization of bean &apos;wls7tm&apos;&lt;br/&gt;
2004-09-07 14:27:21,427 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.factory.support.DefaultListableBeanFactory:getObjectForSharedInstance:538 - Calling code asked for FactoryBean instance for name &apos;wls7tm&apos;&lt;br/&gt;
2004-09-07 14:27:21,427 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.factory.support.DefaultListableBeanFactory:getBean:157 - Returning cached instance of singleton bean &apos;wls7tm&apos;&lt;br/&gt;
2004-09-07 14:27:21,427 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.factory.support.DefaultListableBeanFactory:getObjectForSharedInstance:522 - Bean with name &apos;wls7tm&apos; is a factory bean&lt;br/&gt;
2004-09-07 14:27:21,427 INFO  &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.factory.support.DefaultListableBeanFactory:getBean:200 - Creating shared instance of singleton bean &apos;transactionManager&apos;&lt;br/&gt;
2004-09-07 14:27:21,427 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.factory.support.DefaultListableBeanFactory:createBean:226 - Creating instance of bean &apos;transactionManager&apos; with merged definition [Root bean with class &lt;span class=&quot;error&quot;&gt;&amp;#91;org.springframework.transaction.jta.JtaTransactionManager&amp;#93;&lt;/span&gt; defined in class path resource &lt;span class=&quot;error&quot;&gt;&amp;#91;test1/applicationContext.xml&amp;#93;&lt;/span&gt;]&lt;br/&gt;
2004-09-07 14:27:21,437 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.CachedIntrospectionResults:&amp;lt;init&amp;gt;:136 - Getting BeanInfo for class &lt;span class=&quot;error&quot;&gt;&amp;#91;org.springframework.transaction.jta.JtaTransactionManager&amp;#93;&lt;/span&gt;&lt;br/&gt;
2004-09-07 14:27:21,457 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.CachedIntrospectionResults:&amp;lt;init&amp;gt;:152 - Caching PropertyDescriptors for class &lt;span class=&quot;error&quot;&gt;&amp;#91;org.springframework.transaction.jta.JtaTransactionManager&amp;#93;&lt;/span&gt;&lt;br/&gt;
2004-09-07 14:27:21,457 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.CachedIntrospectionResults:&amp;lt;init&amp;gt;:160 - Found property &apos;autodetectTransactionManager&apos; of type &lt;span class=&quot;error&quot;&gt;&amp;#91;boolean&amp;#93;&lt;/span&gt;; editor=&lt;span class=&quot;error&quot;&gt;&amp;#91;null&amp;#93;&lt;/span&gt;&lt;br/&gt;
2004-09-07 14:27:21,477 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.CachedIntrospectionResults:&amp;lt;init&amp;gt;:160 - Found property &apos;class&apos; of type &lt;span class=&quot;error&quot;&gt;&amp;#91;class java.lang.Class&amp;#93;&lt;/span&gt;; editor=&lt;span class=&quot;error&quot;&gt;&amp;#91;null&amp;#93;&lt;/span&gt;&lt;br/&gt;
2004-09-07 14:27:21,477 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.CachedIntrospectionResults:&amp;lt;init&amp;gt;:160 - Found property &apos;jndiTemplate&apos; of type &lt;span class=&quot;error&quot;&gt;&amp;#91;class org.springframework.jndi.JndiTemplate&amp;#93;&lt;/span&gt;; editor=&lt;span class=&quot;error&quot;&gt;&amp;#91;null&amp;#93;&lt;/span&gt;&lt;br/&gt;
2004-09-07 14:27:21,477 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.CachedIntrospectionResults:&amp;lt;init&amp;gt;:160 - Found property &apos;nestedTransactionAllowed&apos; of type &lt;span class=&quot;error&quot;&gt;&amp;#91;boolean&amp;#93;&lt;/span&gt;; editor=&lt;span class=&quot;error&quot;&gt;&amp;#91;null&amp;#93;&lt;/span&gt;&lt;br/&gt;
2004-09-07 14:27:21,477 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.CachedIntrospectionResults:&amp;lt;init&amp;gt;:160 - Found property &apos;rollbackOnCommitFailure&apos; of type &lt;span class=&quot;error&quot;&gt;&amp;#91;boolean&amp;#93;&lt;/span&gt;; editor=&lt;span class=&quot;error&quot;&gt;&amp;#91;null&amp;#93;&lt;/span&gt;&lt;br/&gt;
2004-09-07 14:27:21,477 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.CachedIntrospectionResults:&amp;lt;init&amp;gt;:160 - Found property &apos;transactionManager&apos; of type &lt;span class=&quot;error&quot;&gt;&amp;#91;interface javax.transaction.TransactionManager&amp;#93;&lt;/span&gt;; editor=&lt;span class=&quot;error&quot;&gt;&amp;#91;null&amp;#93;&lt;/span&gt;&lt;br/&gt;
2004-09-07 14:27:21,487 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.CachedIntrospectionResults:&amp;lt;init&amp;gt;:160 - Found property &apos;transactionManagerName&apos; of type &lt;span class=&quot;error&quot;&gt;&amp;#91;class java.lang.String&amp;#93;&lt;/span&gt;; editor=&lt;span class=&quot;error&quot;&gt;&amp;#91;null&amp;#93;&lt;/span&gt;&lt;br/&gt;
2004-09-07 14:27:21,487 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.CachedIntrospectionResults:&amp;lt;init&amp;gt;:160 - Found property &apos;transactionSynchronization&apos; of type &lt;span class=&quot;error&quot;&gt;&amp;#91;int&amp;#93;&lt;/span&gt;; editor=&lt;span class=&quot;error&quot;&gt;&amp;#91;null&amp;#93;&lt;/span&gt;&lt;br/&gt;
2004-09-07 14:27:21,487 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.CachedIntrospectionResults:&amp;lt;init&amp;gt;:160 - Found property &apos;transactionSynchronizationName&apos; of type &lt;span class=&quot;error&quot;&gt;&amp;#91;class java.lang.String&amp;#93;&lt;/span&gt;; editor=&lt;span class=&quot;error&quot;&gt;&amp;#91;null&amp;#93;&lt;/span&gt;&lt;br/&gt;
2004-09-07 14:27:21,487 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.CachedIntrospectionResults:&amp;lt;init&amp;gt;:160 - Found property &apos;userTransaction&apos; of type &lt;span class=&quot;error&quot;&gt;&amp;#91;interface javax.transaction.UserTransaction&amp;#93;&lt;/span&gt;; editor=&lt;span class=&quot;error&quot;&gt;&amp;#91;null&amp;#93;&lt;/span&gt;&lt;br/&gt;
2004-09-07 14:27:21,487 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.CachedIntrospectionResults:&amp;lt;init&amp;gt;:160 - Found property &apos;userTransactionName&apos; of type &lt;span class=&quot;error&quot;&gt;&amp;#91;class java.lang.String&amp;#93;&lt;/span&gt;; editor=&lt;span class=&quot;error&quot;&gt;&amp;#91;null&amp;#93;&lt;/span&gt;&lt;br/&gt;
2004-09-07 14:27:21,487 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.CachedIntrospectionResults:forClass:83 - Class &lt;span class=&quot;error&quot;&gt;&amp;#91;org.springframework.transaction.jta.JtaTransactionManager&amp;#93;&lt;/span&gt; is cache-safe&lt;br/&gt;
2004-09-07 14:27:21,497 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.factory.support.DefaultListableBeanFactory:resolveReference:889 - Resolving reference from property &apos;transactionManager&apos; in bean &apos;transactionManager&apos; to bean &apos;wls7tm&apos;&lt;br/&gt;
2004-09-07 14:27:21,497 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.factory.support.DefaultListableBeanFactory:getBean:157 - Returning cached instance of singleton bean &apos;wls7tm&apos;&lt;br/&gt;
2004-09-07 14:27:21,497 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.factory.support.DefaultListableBeanFactory:getObjectForSharedInstance:522 - Bean with name &apos;wls7tm&apos; is a factory bean&lt;br/&gt;
2004-09-07 14:27:21,497 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.BeanWrapperImpl:setPropertyValue:681 - About to invoke write method &lt;span class=&quot;error&quot;&gt;&amp;#91;public void org.springframework.transaction.jta.JtaTransactionManager.setTransactionManager(javax.transaction.TransactionManager)&amp;#93;&lt;/span&gt; on object of class &lt;span class=&quot;error&quot;&gt;&amp;#91;org.springframework.transaction.jta.JtaTransactionManager&amp;#93;&lt;/span&gt;&lt;br/&gt;
2004-09-07 14:27:21,497 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.BeanWrapperImpl:setPropertyValue:692 - Invoked write method &lt;span class=&quot;error&quot;&gt;&amp;#91;public void org.springframework.transaction.jta.JtaTransactionManager.setTransactionManager(javax.transaction.TransactionManager)&amp;#93;&lt;/span&gt; with value of type &lt;span class=&quot;error&quot;&gt;&amp;#91;javax.transaction.TransactionManager&amp;#93;&lt;/span&gt;&lt;br/&gt;
2004-09-07 14:27:21,497 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.factory.support.DefaultListableBeanFactory:applyBeanPostProcessorsBeforeInitialization:165 - Invoking BeanPostProcessors before initialization of bean &apos;transactionManager&apos;&lt;br/&gt;
2004-09-07 14:27:21,507 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.factory.support.DefaultListableBeanFactory:invokeInitMethods:989 - Calling afterPropertiesSet() on bean with beanName &apos;transactionManager&apos;&lt;br/&gt;
2004-09-07 14:27:21,507 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.jndi.JndiTemplate:lookup:119 - Looking up JNDI object with name &lt;span class=&quot;error&quot;&gt;&amp;#91;java:comp/UserTransaction&amp;#93;&lt;/span&gt;&lt;br/&gt;
2004-09-07 14:27:21,507 INFO  &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.transaction.jta.JtaTransactionManager:lookupUserTransaction:353 - Using JTA UserTransaction [ClientTM&lt;span class=&quot;error&quot;&gt;&amp;#91;myserver+167.26.108.50:7001+mydomain+t3+&amp;#93;&lt;/span&gt;] from JNDI location &lt;span class=&quot;error&quot;&gt;&amp;#91;java:comp/UserTransaction&amp;#93;&lt;/span&gt;&lt;br/&gt;
2004-09-07 14:27:21,507 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.factory.support.DefaultListableBeanFactory:applyBeanPostProcessorsAfterInitialization:182 - Invoking BeanPostProcessors after initialization of bean &apos;transactionManager&apos;&lt;br/&gt;
2004-09-07 14:27:21,507 INFO  &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.factory.support.DefaultListableBeanFactory:getBean:200 - Creating shared instance of singleton bean &apos;simplePOJO&apos;&lt;br/&gt;
2004-09-07 14:27:21,507 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.factory.support.DefaultListableBeanFactory:createBean:226 - Creating instance of bean &apos;simplePOJO&apos; with merged definition [Root bean with class &lt;span class=&quot;error&quot;&gt;&amp;#91;test1.SimplePOJO&amp;#93;&lt;/span&gt; defined in class path resource &lt;span class=&quot;error&quot;&gt;&amp;#91;test1/applicationContext.xml&amp;#93;&lt;/span&gt;]&lt;br/&gt;
2004-09-07 14:27:21,517 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.CachedIntrospectionResults:&amp;lt;init&amp;gt;:136 - Getting BeanInfo for class &lt;span class=&quot;error&quot;&gt;&amp;#91;test1.SimplePOJO&amp;#93;&lt;/span&gt;&lt;br/&gt;
2004-09-07 14:27:21,517 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.CachedIntrospectionResults:&amp;lt;init&amp;gt;:152 - Caching PropertyDescriptors for class &lt;span class=&quot;error&quot;&gt;&amp;#91;test1.SimplePOJO&amp;#93;&lt;/span&gt;&lt;br/&gt;
2004-09-07 14:27:21,517 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.CachedIntrospectionResults:&amp;lt;init&amp;gt;:160 - Found property &apos;class&apos; of type &lt;span class=&quot;error&quot;&gt;&amp;#91;class java.lang.Class&amp;#93;&lt;/span&gt;; editor=&lt;span class=&quot;error&quot;&gt;&amp;#91;null&amp;#93;&lt;/span&gt;&lt;br/&gt;
2004-09-07 14:27:21,517 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.CachedIntrospectionResults:forClass:83 - Class &lt;span class=&quot;error&quot;&gt;&amp;#91;test1.SimplePOJO&amp;#93;&lt;/span&gt; is cache-safe&lt;br/&gt;
2004-09-07 14:27:21,537 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.factory.support.DefaultListableBeanFactory:applyBeanPostProcessorsBeforeInitialization:165 - Invoking BeanPostProcessors before initialization of bean &apos;simplePOJO&apos;&lt;br/&gt;
2004-09-07 14:27:21,537 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.factory.support.DefaultListableBeanFactory:applyBeanPostProcessorsAfterInitialization:182 - Invoking BeanPostProcessors after initialization of bean &apos;simplePOJO&apos;&lt;br/&gt;
2004-09-07 14:27:21,537 INFO  &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.factory.support.DefaultListableBeanFactory:getBean:200 - Creating shared instance of singleton bean &apos;simple&apos;&lt;br/&gt;
2004-09-07 14:27:21,537 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.factory.support.DefaultListableBeanFactory:createBean:226 - Creating instance of bean &apos;simple&apos; with merged definition [Root bean with class &lt;span class=&quot;error&quot;&gt;&amp;#91;org.springframework.transaction.interceptor.TransactionProxyFactoryBean&amp;#93;&lt;/span&gt; defined in class path resource &lt;span class=&quot;error&quot;&gt;&amp;#91;test1/applicationContext.xml&amp;#93;&lt;/span&gt;]&lt;br/&gt;
2004-09-07 14:27:21,607 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.CachedIntrospectionResults:&amp;lt;init&amp;gt;:136 - Getting BeanInfo for class &lt;span class=&quot;error&quot;&gt;&amp;#91;org.springframework.transaction.interceptor.TransactionProxyFactoryBean&amp;#93;&lt;/span&gt;&lt;br/&gt;
2004-09-07 14:27:21,618 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.CachedIntrospectionResults:&amp;lt;init&amp;gt;:152 - Caching PropertyDescriptors for class &lt;span class=&quot;error&quot;&gt;&amp;#91;org.springframework.transaction.interceptor.TransactionProxyFactoryBean&amp;#93;&lt;/span&gt;&lt;br/&gt;
2004-09-07 14:27:21,618 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.CachedIntrospectionResults:&amp;lt;init&amp;gt;:160 - Found property &apos;advisorAdapterRegistry&apos; of type &lt;span class=&quot;error&quot;&gt;&amp;#91;interface org.springframework.aop.framework.adapter.AdvisorAdapterRegistry&amp;#93;&lt;/span&gt;; editor=&lt;span class=&quot;error&quot;&gt;&amp;#91;null&amp;#93;&lt;/span&gt;&lt;br/&gt;
2004-09-07 14:27:21,618 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.CachedIntrospectionResults:&amp;lt;init&amp;gt;:160 - Found property &apos;aopProxyFactory&apos; of type &lt;span class=&quot;error&quot;&gt;&amp;#91;interface org.springframework.aop.framework.AopProxyFactory&amp;#93;&lt;/span&gt;; editor=&lt;span class=&quot;error&quot;&gt;&amp;#91;null&amp;#93;&lt;/span&gt;&lt;br/&gt;
2004-09-07 14:27:21,618 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.CachedIntrospectionResults:&amp;lt;init&amp;gt;:160 - Found property &apos;class&apos; of type &lt;span class=&quot;error&quot;&gt;&amp;#91;class java.lang.Class&amp;#93;&lt;/span&gt;; editor=&lt;span class=&quot;error&quot;&gt;&amp;#91;null&amp;#93;&lt;/span&gt;&lt;br/&gt;
2004-09-07 14:27:21,628 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.CachedIntrospectionResults:&amp;lt;init&amp;gt;:160 - Found property &apos;exposeProxy&apos; of type &lt;span class=&quot;error&quot;&gt;&amp;#91;boolean&amp;#93;&lt;/span&gt;; editor=&lt;span class=&quot;error&quot;&gt;&amp;#91;null&amp;#93;&lt;/span&gt;&lt;br/&gt;
2004-09-07 14:27:21,628 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.CachedIntrospectionResults:&amp;lt;init&amp;gt;:160 - Found property &apos;frozen&apos; of type &lt;span class=&quot;error&quot;&gt;&amp;#91;boolean&amp;#93;&lt;/span&gt;; editor=&lt;span class=&quot;error&quot;&gt;&amp;#91;null&amp;#93;&lt;/span&gt;&lt;br/&gt;
2004-09-07 14:27:21,628 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.CachedIntrospectionResults:&amp;lt;init&amp;gt;:160 - Found property &apos;object&apos; of type &lt;span class=&quot;error&quot;&gt;&amp;#91;class java.lang.Object&amp;#93;&lt;/span&gt;; editor=&lt;span class=&quot;error&quot;&gt;&amp;#91;null&amp;#93;&lt;/span&gt;&lt;br/&gt;
2004-09-07 14:27:21,628 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.CachedIntrospectionResults:&amp;lt;init&amp;gt;:160 - Found property &apos;objectType&apos; of type &lt;span class=&quot;error&quot;&gt;&amp;#91;class java.lang.Class&amp;#93;&lt;/span&gt;; editor=&lt;span class=&quot;error&quot;&gt;&amp;#91;null&amp;#93;&lt;/span&gt;&lt;br/&gt;
2004-09-07 14:27:21,628 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.CachedIntrospectionResults:&amp;lt;init&amp;gt;:160 - Found property &apos;opaque&apos; of type &lt;span class=&quot;error&quot;&gt;&amp;#91;boolean&amp;#93;&lt;/span&gt;; editor=&lt;span class=&quot;error&quot;&gt;&amp;#91;null&amp;#93;&lt;/span&gt;&lt;br/&gt;
2004-09-07 14:27:21,628 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.CachedIntrospectionResults:&amp;lt;init&amp;gt;:160 - Found property &apos;optimize&apos; of type &lt;span class=&quot;error&quot;&gt;&amp;#91;boolean&amp;#93;&lt;/span&gt;; editor=&lt;span class=&quot;error&quot;&gt;&amp;#91;null&amp;#93;&lt;/span&gt;&lt;br/&gt;
2004-09-07 14:27:21,628 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.CachedIntrospectionResults:&amp;lt;init&amp;gt;:160 - Found property &apos;pointcut&apos; of type &lt;span class=&quot;error&quot;&gt;&amp;#91;interface org.springframework.aop.Pointcut&amp;#93;&lt;/span&gt;; editor=&lt;span class=&quot;error&quot;&gt;&amp;#91;null&amp;#93;&lt;/span&gt;&lt;br/&gt;
2004-09-07 14:27:21,638 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.CachedIntrospectionResults:&amp;lt;init&amp;gt;:160 - Found property &apos;postInterceptors&apos; of type [class &lt;span class=&quot;error&quot;&gt;&amp;#91;Ljava.lang.Object;&amp;#93;&lt;/span&gt;; editor=&lt;span class=&quot;error&quot;&gt;&amp;#91;null&amp;#93;&lt;/span&gt;&lt;br/&gt;
2004-09-07 14:27:21,638 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.CachedIntrospectionResults:&amp;lt;init&amp;gt;:160 - Found property &apos;preInterceptors&apos; of type [class &lt;span class=&quot;error&quot;&gt;&amp;#91;Ljava.lang.Object;&amp;#93;&lt;/span&gt;; editor=&lt;span class=&quot;error&quot;&gt;&amp;#91;null&amp;#93;&lt;/span&gt;&lt;br/&gt;
2004-09-07 14:27:21,638 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.CachedIntrospectionResults:&amp;lt;init&amp;gt;:160 - Found property &apos;proxyInterfaces&apos; of type [class &lt;span class=&quot;error&quot;&gt;&amp;#91;Ljava.lang.String;&amp;#93;&lt;/span&gt;; editor=&lt;span class=&quot;error&quot;&gt;&amp;#91;null&amp;#93;&lt;/span&gt;&lt;br/&gt;
2004-09-07 14:27:21,638 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.CachedIntrospectionResults:&amp;lt;init&amp;gt;:160 - Found property &apos;proxyTargetClass&apos; of type &lt;span class=&quot;error&quot;&gt;&amp;#91;boolean&amp;#93;&lt;/span&gt;; editor=&lt;span class=&quot;error&quot;&gt;&amp;#91;null&amp;#93;&lt;/span&gt;&lt;br/&gt;
2004-09-07 14:27:21,638 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.CachedIntrospectionResults:&amp;lt;init&amp;gt;:160 - Found property &apos;singleton&apos; of type &lt;span class=&quot;error&quot;&gt;&amp;#91;boolean&amp;#93;&lt;/span&gt;; editor=&lt;span class=&quot;error&quot;&gt;&amp;#91;null&amp;#93;&lt;/span&gt;&lt;br/&gt;
2004-09-07 14:27:21,638 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.CachedIntrospectionResults:&amp;lt;init&amp;gt;:160 - Found property &apos;target&apos; of type &lt;span class=&quot;error&quot;&gt;&amp;#91;class java.lang.Object&amp;#93;&lt;/span&gt;; editor=&lt;span class=&quot;error&quot;&gt;&amp;#91;null&amp;#93;&lt;/span&gt;&lt;br/&gt;
2004-09-07 14:27:21,638 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.CachedIntrospectionResults:&amp;lt;init&amp;gt;:160 - Found property &apos;transactionAttributeSource&apos; of type &lt;span class=&quot;error&quot;&gt;&amp;#91;interface org.springframework.transaction.interceptor.TransactionAttributeSource&amp;#93;&lt;/span&gt;; editor=&lt;span class=&quot;error&quot;&gt;&amp;#91;null&amp;#93;&lt;/span&gt;&lt;br/&gt;
2004-09-07 14:27:21,638 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.CachedIntrospectionResults:&amp;lt;init&amp;gt;:160 - Found property &apos;transactionAttributes&apos; of type &lt;span class=&quot;error&quot;&gt;&amp;#91;class java.util.Properties&amp;#93;&lt;/span&gt;; editor=&lt;span class=&quot;error&quot;&gt;&amp;#91;null&amp;#93;&lt;/span&gt;&lt;br/&gt;
2004-09-07 14:27:21,648 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.CachedIntrospectionResults:&amp;lt;init&amp;gt;:160 - Found property &apos;transactionManager&apos; of type &lt;span class=&quot;error&quot;&gt;&amp;#91;interface org.springframework.transaction.PlatformTransactionManager&amp;#93;&lt;/span&gt;; editor=&lt;span class=&quot;error&quot;&gt;&amp;#91;null&amp;#93;&lt;/span&gt;&lt;br/&gt;
2004-09-07 14:27:21,648 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.CachedIntrospectionResults:forClass:83 - Class &lt;span class=&quot;error&quot;&gt;&amp;#91;org.springframework.transaction.interceptor.TransactionProxyFactoryBean&amp;#93;&lt;/span&gt; is cache-safe&lt;br/&gt;
2004-09-07 14:27:21,648 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.factory.support.DefaultListableBeanFactory:resolveReference:889 - Resolving reference from property &apos;transactionManager&apos; in bean &apos;simple&apos; to bean &apos;transactionManager&apos;&lt;br/&gt;
2004-09-07 14:27:21,648 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.factory.support.DefaultListableBeanFactory:getBean:157 - Returning cached instance of singleton bean &apos;transactionManager&apos;&lt;br/&gt;
2004-09-07 14:27:21,648 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.factory.support.DefaultListableBeanFactory:resolveReference:889 - Resolving reference from property &apos;target&apos; in bean &apos;simple&apos; to bean &apos;simplePOJO&apos;&lt;br/&gt;
2004-09-07 14:27:21,648 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.factory.support.DefaultListableBeanFactory:getBean:157 - Returning cached instance of singleton bean &apos;simplePOJO&apos;&lt;br/&gt;
2004-09-07 14:27:21,658 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.BeanWrapperImpl:setPropertyValue:681 - About to invoke write method &lt;span class=&quot;error&quot;&gt;&amp;#91;public void org.springframework.transaction.interceptor.TransactionProxyFactoryBean.setTransactionManager(org.springframework.transaction.PlatformTransactionManager)&amp;#93;&lt;/span&gt; on object of class &lt;span class=&quot;error&quot;&gt;&amp;#91;org.springframework.transaction.interceptor.TransactionProxyFactoryBean&amp;#93;&lt;/span&gt;&lt;br/&gt;
2004-09-07 14:27:21,668 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.BeanWrapperImpl:setPropertyValue:692 - Invoked write method &lt;span class=&quot;error&quot;&gt;&amp;#91;public void org.springframework.transaction.interceptor.TransactionProxyFactoryBean.setTransactionManager(org.springframework.transaction.PlatformTransactionManager)&amp;#93;&lt;/span&gt; with value of type &lt;span class=&quot;error&quot;&gt;&amp;#91;org.springframework.transaction.PlatformTransactionManager&amp;#93;&lt;/span&gt;&lt;br/&gt;
2004-09-07 14:27:21,668 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.BeanWrapperImpl:setPropertyValue:681 - About to invoke write method &lt;span class=&quot;error&quot;&gt;&amp;#91;public void org.springframework.transaction.interceptor.TransactionProxyFactoryBean.setTarget(java.lang.Object)&amp;#93;&lt;/span&gt; on object of class &lt;span class=&quot;error&quot;&gt;&amp;#91;org.springframework.transaction.interceptor.TransactionProxyFactoryBean&amp;#93;&lt;/span&gt;&lt;br/&gt;
2004-09-07 14:27:21,668 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.BeanWrapperImpl:setPropertyValue:692 - Invoked write method &lt;span class=&quot;error&quot;&gt;&amp;#91;public void org.springframework.transaction.interceptor.TransactionProxyFactoryBean.setTarget(java.lang.Object)&amp;#93;&lt;/span&gt; with value of type &lt;span class=&quot;error&quot;&gt;&amp;#91;java.lang.Object&amp;#93;&lt;/span&gt;&lt;br/&gt;
2004-09-07 14:27:21,668 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.BeanWrapperImpl:setPropertyValue:681 - About to invoke write method &lt;span class=&quot;error&quot;&gt;&amp;#91;public void org.springframework.transaction.interceptor.TransactionProxyFactoryBean.setTransactionAttributes(java.util.Properties)&amp;#93;&lt;/span&gt; on object of class &lt;span class=&quot;error&quot;&gt;&amp;#91;org.springframework.transaction.interceptor.TransactionProxyFactoryBean&amp;#93;&lt;/span&gt;&lt;br/&gt;
2004-09-07 14:27:21,718 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource:addTransactionalMethod:83 - Adding transactional method &lt;span class=&quot;error&quot;&gt;&amp;#91;*&amp;#93;&lt;/span&gt; with attribute &lt;span class=&quot;error&quot;&gt;&amp;#91;PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT&amp;#93;&lt;/span&gt;&lt;br/&gt;
2004-09-07 14:27:21,728 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.BeanWrapperImpl:setPropertyValue:692 - Invoked write method &lt;span class=&quot;error&quot;&gt;&amp;#91;public void org.springframework.transaction.interceptor.TransactionProxyFactoryBean.setTransactionAttributes(java.util.Properties)&amp;#93;&lt;/span&gt; with value of type &lt;span class=&quot;error&quot;&gt;&amp;#91;java.util.Properties&amp;#93;&lt;/span&gt;&lt;br/&gt;
2004-09-07 14:27:21,728 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.factory.support.DefaultListableBeanFactory:applyBeanPostProcessorsBeforeInitialization:165 - Invoking BeanPostProcessors before initialization of bean &apos;simple&apos;&lt;br/&gt;
2004-09-07 14:27:21,728 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.factory.support.DefaultListableBeanFactory:invokeInitMethods:989 - Calling afterPropertiesSet() on bean with beanName &apos;simple&apos;&lt;br/&gt;
2004-09-07 14:27:21,788 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.aop.framework.ProxyFactory:addInterface:190 - Added new aspect interface: interface test1.Simple&lt;br/&gt;
2004-09-07 14:27:21,798 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.aop.framework.JdkDynamicAopProxy:getProxy:191 - Creating JDK dynamic proxy for &lt;span class=&quot;error&quot;&gt;&amp;#91;class test1.SimplePOJO&amp;#93;&lt;/span&gt;&lt;br/&gt;
2004-09-07 14:27:21,838 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.factory.support.DefaultListableBeanFactory:applyBeanPostProcessorsAfterInitialization:182 - Invoking BeanPostProcessors after initialization of bean &apos;simple&apos;&lt;br/&gt;
2004-09-07 14:27:21,838 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.factory.support.DefaultListableBeanFactory:getObjectForSharedInstance:538 - Calling code asked for FactoryBean instance for name &apos;simple&apos;&lt;br/&gt;
2004-09-07 14:27:21,838 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.factory.support.DefaultListableBeanFactory:getBean:157 - Returning cached instance of singleton bean &apos;simple&apos;&lt;br/&gt;
2004-09-07 14:27:21,848 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.factory.support.DefaultListableBeanFactory:getObjectForSharedInstance:522 - Bean with name &apos;simple&apos; is a factory bean&lt;br/&gt;
2004-09-07 14:27:21,848 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.context.support.ClassPathXmlApplicationContext:publishEvent:199 - Publishing event in context &lt;span class=&quot;error&quot;&gt;&amp;#91;org.springframework.context.support.ClassPathXmlApplicationContext;hashCode=2193574&amp;#93;&lt;/span&gt;: org.springframework.context.event.ContextRefreshedEvent[source=org.springframework.context.support.ClassPathXmlApplicationContext: displayName=&lt;span class=&quot;error&quot;&gt;&amp;#91;org.springframework.context.support.ClassPathXmlApplicationContext;hashCode=2193574&amp;#93;&lt;/span&gt;; startup date=&lt;span class=&quot;error&quot;&gt;&amp;#91;Tue Sep 07 14:27:20 EDT 2004&amp;#93;&lt;/span&gt;; root of ApplicationContext hierarchy]&lt;br/&gt;
2004-09-07 14:27:21,848 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.factory.support.DefaultListableBeanFactory:getBean:157 - Returning cached instance of singleton bean &apos;simple&apos;&lt;br/&gt;
2004-09-07 14:27:21,848 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.beans.factory.support.DefaultListableBeanFactory:getObjectForSharedInstance:522 - Bean with name &apos;simple&apos; is a factory bean&lt;br/&gt;
2004-09-07 14:27:21,868 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.transaction.interceptor.TransactionInterceptor:createTransactionIfNecessary:196 - Getting transaction for method &apos;somethingSimple&apos; in class &lt;span class=&quot;error&quot;&gt;&amp;#91;test1.Simple&amp;#93;&lt;/span&gt;&lt;br/&gt;
2004-09-07 14:27:21,878 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.transaction.jta.JtaTransactionManager:getTransaction:195 - Using transaction object &lt;span class=&quot;error&quot;&gt;&amp;#91;org.springframework.transaction.jta.JtaTransactionObject@3dabe4&amp;#93;&lt;/span&gt;&lt;br/&gt;
2004-09-07 14:27:21,878 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.transaction.jta.JtaTransactionManager:getTransaction:218 - Creating new transaction, suspending current one&lt;br/&gt;
2004-09-07 14:27:21,888 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.transaction.jta.JtaTransactionManager:doBegin:430 - Beginning JTA transaction&lt;br/&gt;
2004-09-07 14:27:21,888 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.transaction.support.TransactionSynchronizationManager:initSynchronization:194 - Initializing transaction synchronization&lt;br/&gt;
2004-09-07 14:27:21,888 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; test1.SimplePOJO:somethingSimple:18 - In a POJO&lt;br/&gt;
2004-09-07 14:27:21,888 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.transaction.interceptor.TransactionInterceptor:doCommitTransactionAfterReturning:239 - Invoking commit for transaction on method &apos;somethingSimple&apos; in class &lt;span class=&quot;error&quot;&gt;&amp;#91;test1.Simple&amp;#93;&lt;/span&gt;&lt;br/&gt;
2004-09-07 14:27:21,898 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.transaction.jta.JtaTransactionManager:triggerBeforeCommit:495 - Triggering beforeCommit synchronization&lt;br/&gt;
2004-09-07 14:27:21,898 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.transaction.jta.JtaTransactionManager:triggerBeforeCompletion:510 - Triggering beforeCompletion synchronization&lt;br/&gt;
2004-09-07 14:27:21,898 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.transaction.jta.JtaTransactionManager:commit:372 - Initiating transaction commit&lt;br/&gt;
2004-09-07 14:27:21,898 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.transaction.jta.JtaTransactionManager:doCommit:530 - Committing JTA transaction&lt;br/&gt;
2004-09-07 14:27:22,028 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.transaction.jta.JtaTransactionManager:triggerAfterCompletion:540 - Triggering afterCompletion synchronization&lt;br/&gt;
2004-09-07 14:27:22,028 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.transaction.support.TransactionSynchronizationManager:clearSynchronization:234 - Clearing transaction synchronization&lt;br/&gt;
2004-09-07 14:27:22,038 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; org.springframework.transaction.jta.JtaTransactionManager:cleanupAfterCompletion:577 - Resuming suspended transaction&lt;br/&gt;
2004-09-07 14:27:22,038 FATAL &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;48&amp;#39; for queue: &amp;#39;default&amp;#39;&amp;#93;&lt;/span&gt; test1.Bean1Impl_124zfl_Impl:doSomething:68 - Exception in doSomething()&lt;br/&gt;
org.springframework.transaction.IllegalTransactionStateException: Tried to resume invalid JTA transaction; nested exception is javax.transaction.InvalidTransactionException: Attempt to resume an inactive transaction: Xid=0:e85df685(942276),Status=Marked rollback. &lt;span class=&quot;error&quot;&gt;&amp;#91;Reason=weblogic.transaction.internal.AppSetRollbackOnlyException&amp;#93;&lt;/span&gt;,numRepliesOwedMe=0,numRepliesOwedOthers=0,seconds since begin=1,seconds left=28,SCInfo&lt;span class=&quot;error&quot;&gt;&amp;#91;mydomain+myserver&amp;#93;&lt;/span&gt;=(state=active),OwnerTransactionManager=ServerTM&lt;span class=&quot;error&quot;&gt;&amp;#91;ServerCoordinatorDescriptor=(CoordinatorURL=myserver+167.26.108.50:7001+mydomain+t3+, Resources={})&amp;#93;&lt;/span&gt;)&lt;br/&gt;
javax.transaction.InvalidTransactionException: Attempt to resume an inactive transaction: Xid=0:e85df685(942276),Status=Marked rollback. &lt;span class=&quot;error&quot;&gt;&amp;#91;Reason=weblogic.transaction.internal.AppSetRollbackOnlyException&amp;#93;&lt;/span&gt;,numRepliesOwedMe=0,numRepliesOwedOthers=0,seconds since begin=1,seconds left=28,SCInfo&lt;span class=&quot;error&quot;&gt;&amp;#91;mydomain+myserver&amp;#93;&lt;/span&gt;=(state=active),OwnerTransactionManager=ServerTM&lt;span class=&quot;error&quot;&gt;&amp;#91;ServerCoordinatorDescriptor=(CoordinatorURL=myserver+167.26.108.50:7001+mydomain+t3+, Resources={})&amp;#93;&lt;/span&gt;)&lt;br/&gt;
	at weblogic.transaction.internal.TransactionManagerImpl.resume(TransactionManagerImpl.java:357)&lt;br/&gt;
	at weblogic.transaction.internal.ServerTransactionManagerImpl.resume(ServerTransactionManagerImpl.java:305)&lt;br/&gt;
	at org.springframework.transaction.jta.JtaTransactionManager.doJtaResume(JtaTransactionManager.java:525)&lt;br/&gt;
	at org.springframework.transaction.jta.JtaTransactionManager.doResume(JtaTransactionManager.java:505)&lt;br/&gt;
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.resume(AbstractPlatformTransactionManager.java:338)&lt;br/&gt;
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.cleanupAfterCompletion(AbstractPlatformTransactionManager.java:579)&lt;br/&gt;
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:408)&lt;br/&gt;
	at org.springframework.transaction.interceptor.TransactionAspectSupport.doCommitTransactionAfterReturning(TransactionAspectSupport.java:241)&lt;br/&gt;
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:66)&lt;br/&gt;
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:138)&lt;br/&gt;
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:152)&lt;br/&gt;
	at $Proxy107.somethingSimple(Unknown Source)&lt;br/&gt;
	at test1.Bean1Impl.doSomething(Bean1Impl.java:47)&lt;br/&gt;
	at test1.Bean1Impl_124zfl_ELOImpl.doSomething(Bean1Impl_124zfl_ELOImpl.java:45)&lt;br/&gt;
	at test1.Test.test1(Test.java:24)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;br/&gt;
	at java.lang.reflect.Method.invoke(Method.java:324)&lt;br/&gt;
	at junit.framework.TestCase.runTest(TestCase.java:154)&lt;br/&gt;
	at junit.framework.TestCase.runBare(TestCase.java:127)&lt;br/&gt;
	at org.apache.cactus.ServletTestCase.runCactusTest(ServletTestCase.java:295)&lt;br/&gt;
	at org.apache.cactus.ServletTestCase.runBare(ServletTestCase.java:263)&lt;br/&gt;
	at org.apache.cactus.server.AbstractWebTestCaller.doTest(AbstractWebTestCaller.java:156)&lt;br/&gt;
	at org.apache.cactus.server.AbstractWebTestController.handleRequest_aroundBody0(AbstractWebTestController.java:130)&lt;br/&gt;
	at org.apache.cactus.server.AbstractWebTestController.handleRequest_aroundBody1$advice(AbstractWebTestController.java:158)&lt;br/&gt;
	at org.apache.cactus.server.AbstractWebTestController.handleRequest(AbstractWebTestController.java)&lt;br/&gt;
	at org.apache.cactus.server.ServletTestRedirector.doPost_aroundBody2(ServletTestRedirector.java:138)&lt;br/&gt;
	at org.apache.cactus.server.ServletTestRedirector.doPost_aroundBody3$advice(ServletTestRedirector.java:158)&lt;br/&gt;
	at org.apache.cactus.server.ServletTestRedirector.doPost(ServletTestRedirector.java)&lt;br/&gt;
	at org.apache.cactus.server.ServletTestRedirector.doGet_aroundBody0(ServletTestRedirector.java:109)&lt;br/&gt;
	at org.apache.cactus.server.ServletTestRedirector.doGet_aroundBody1$advice(ServletTestRedirector.java:158)&lt;br/&gt;
	at org.apache.cactus.server.ServletTestRedirector.doGet(ServletTestRedirector.java)&lt;br/&gt;
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:740)&lt;br/&gt;
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:853)&lt;br/&gt;
	at weblogic.servlet.internal.ServletStubImpl$ServletInvocationAction.run(ServletStubImpl.java:1058)&lt;br/&gt;
	at weblogic.servlet.internal.ServletStubImpl.invokeServlet(ServletStubImpl.java:401)&lt;br/&gt;
	at weblogic.servlet.internal.TailFilter.doFilter(TailFilter.java:20)&lt;br/&gt;
	at weblogic.servlet.internal.FilterChainImpl.doFilter(FilterChainImpl.java:27)&lt;br/&gt;
	at weblogic.servlet.internal.WebAppServletContext$ServletInvocationAction.run(WebAppServletContext.java:5451)&lt;br/&gt;
	at weblogic.security.service.SecurityServiceManager.runAs(SecurityServiceManager.java:780)&lt;br/&gt;
	at weblogic.servlet.internal.WebAppServletContext.invokeServlet(WebAppServletContext.java:3105)&lt;br/&gt;
	at weblogic.servlet.internal.ServletRequestImpl.execute(ServletRequestImpl.java:2591)&lt;br/&gt;
	at weblogic.kernel.ExecuteThread.execute(ExecuteThread.java:215)&lt;br/&gt;
	at weblogic.kernel.ExecuteThread.run(ExecuteThread.java:191)&lt;br/&gt;
&amp;lt;Sep 7, 2004 2:27:22 PM EDT&amp;gt; &amp;lt;Info&amp;gt; &amp;lt;EJB&amp;gt; &amp;lt;010051&amp;gt; &amp;lt;EJB Exception during invocation from home: test1.Bean1Impl_124zfl_LocalHomeImpl@10ac317 threw exception: java.lang.RuntimeException: org.springframework.transaction.IllegalTransactionStateException: Tried to resume invalid JTA transaction; nested exception is javax.transaction.InvalidTransactionException: Attempt to resume an inactive transaction: Xid=0:e85df685(942276),Status=Marked rollback. &lt;span class=&quot;error&quot;&gt;&amp;#91;Reason=weblogic.transaction.internal.AppSetRollbackOnlyException&amp;#93;&lt;/span&gt;,numRepliesOwedMe=0,numRepliesOwedOthers=0,seconds since begin=1,seconds left=28,SCInfo&lt;span class=&quot;error&quot;&gt;&amp;#91;mydomain+myserver&amp;#93;&lt;/span&gt;=(state=active),OwnerTransactionManager=ServerTM&lt;span class=&quot;error&quot;&gt;&amp;#91;ServerCoordinatorDescriptor=(CoordinatorURL=myserver+167.26.108.50:7001+mydomain+t3+, Resources={})&amp;#93;&lt;/span&gt;)&lt;br/&gt;
java.lang.RuntimeException: org.springframework.transaction.IllegalTransactionStateException: Tried to resume invalid JTA transaction; nested exception is javax.transaction.InvalidTransactionException: Attempt to resume an inactive transaction: Xid=0:e85df685(942276),Status=Marked rollback. &lt;span class=&quot;error&quot;&gt;&amp;#91;Reason=weblogic.transaction.internal.AppSetRollbackOnlyException&amp;#93;&lt;/span&gt;,numRepliesOwedMe=0,numRepliesOwedOthers=0,seconds since begin=1,seconds left=28,SCInfo&lt;span class=&quot;error&quot;&gt;&amp;#91;mydomain+myserver&amp;#93;&lt;/span&gt;=(state=active),OwnerTransactionManager=ServerTM&lt;span class=&quot;error&quot;&gt;&amp;#91;ServerCoordinatorDescriptor=(CoordinatorURL=myserver+167.26.108.50:7001+mydomain+t3+, Resources={})&amp;#93;&lt;/span&gt;)&lt;br/&gt;
	at test1.Bean1Impl.doSomething(Bean1Impl.java:69)&lt;br/&gt;
	at test1.Bean1Impl_124zfl_ELOImpl.doSomething(Bean1Impl_124zfl_ELOImpl.java:45)&lt;br/&gt;
	at test1.Test.test1(Test.java:24)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;br/&gt;
	at java.lang.reflect.Method.invoke(Method.java:324)&lt;br/&gt;
	at junit.framework.TestCase.runTest(TestCase.java:154)&lt;br/&gt;
	at junit.framework.TestCase.runBare(TestCase.java:127)&lt;br/&gt;
	at org.apache.cactus.ServletTestCase.runCactusTest(ServletTestCase.java:295)&lt;br/&gt;
	at org.apache.cactus.ServletTestCase.runBare(ServletTestCase.java:263)&lt;br/&gt;
	at org.apache.cactus.server.AbstractWebTestCaller.doTest(AbstractWebTestCaller.java:156)&lt;br/&gt;
	at org.apache.cactus.server.AbstractWebTestController.handleRequest_aroundBody0(AbstractWebTestController.java:130)&lt;br/&gt;
	at org.apache.cactus.server.AbstractWebTestController.handleRequest_aroundBody1$advice(AbstractWebTestController.java:158)&lt;br/&gt;
	at org.apache.cactus.server.AbstractWebTestController.handleRequest(AbstractWebTestController.java)&lt;br/&gt;
	at org.apache.cactus.server.ServletTestRedirector.doPost_aroundBody2(ServletTestRedirector.java:138)&lt;br/&gt;
	at org.apache.cactus.server.ServletTestRedirector.doPost_aroundBody3$advice(ServletTestRedirector.java:158)&lt;br/&gt;
	at org.apache.cactus.server.ServletTestRedirector.doPost(ServletTestRedirector.java)&lt;br/&gt;
	at org.apache.cactus.server.ServletTestRedirector.doGet_aroundBody0(ServletTestRedirector.java:109)&lt;br/&gt;
	at org.apache.cactus.server.ServletTestRedirector.doGet_aroundBody1$advice(ServletTestRedirector.java:158)&lt;br/&gt;
	at org.apache.cactus.server.ServletTestRedirector.doGet(ServletTestRedirector.java)&lt;br/&gt;
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:740)&lt;br/&gt;
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:853)&lt;br/&gt;
	at weblogic.servlet.internal.ServletStubImpl$ServletInvocationAction.run(ServletStubImpl.java:1058)&lt;br/&gt;
	at weblogic.servlet.internal.ServletStubImpl.invokeServlet(ServletStubImpl.java:401)&lt;br/&gt;
	at weblogic.servlet.internal.TailFilter.doFilter(TailFilter.java:20)&lt;br/&gt;
	at weblogic.servlet.internal.FilterChainImpl.doFilter(FilterChainImpl.java:27)&lt;br/&gt;
	at weblogic.servlet.internal.WebAppServletContext$ServletInvocationAction.run(WebAppServletContext.java:5451)&lt;br/&gt;
	at weblogic.security.service.SecurityServiceManager.runAs(SecurityServiceManager.java:780)&lt;br/&gt;
	at weblogic.servlet.internal.WebAppServletContext.invokeServlet(WebAppServletContext.java:3105)&lt;br/&gt;
	at weblogic.servlet.internal.ServletRequestImpl.execute(ServletRequestImpl.java:2591)&lt;br/&gt;
	at weblogic.kernel.ExecuteThread.execute(ExecuteThread.java:215)&lt;br/&gt;
	at weblogic.kernel.ExecuteThread.run(ExecuteThread.java:191)&lt;br/&gt;
Caused by: org.springframework.transaction.IllegalTransactionStateException: Tried to resume invalid JTA transaction; nested exception is javax.transaction.InvalidTransactionException: Attempt to resume an inactive transaction: Xid=0:e85df685(942276),Status=Marked rollback. &lt;span class=&quot;error&quot;&gt;&amp;#91;Reason=weblogic.transaction.internal.AppSetRollbackOnlyException&amp;#93;&lt;/span&gt;,numRepliesOwedMe=0,numRepliesOwedOthers=0,seconds since begin=1,seconds left=28,SCInfo&lt;span class=&quot;error&quot;&gt;&amp;#91;mydomain+myserver&amp;#93;&lt;/span&gt;=(state=active),OwnerTransactionManager=ServerTM&lt;span class=&quot;error&quot;&gt;&amp;#91;ServerCoordinatorDescriptor=(CoordinatorURL=myserver+167.26.108.50:7001+mydomain+t3+, Resources={})&amp;#93;&lt;/span&gt;)&lt;br/&gt;
	at org.springframework.transaction.jta.JtaTransactionManager.doResume(JtaTransactionManager.java:508)&lt;br/&gt;
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.resume(AbstractPlatformTransactionManager.java:338)&lt;br/&gt;
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.cleanupAfterCompletion(AbstractPlatformTransactionManager.java:579)&lt;br/&gt;
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:408)&lt;br/&gt;
	at org.springframework.transaction.interceptor.TransactionAspectSupport.doCommitTransactionAfterReturning(TransactionAspectSupport.java:241)&lt;br/&gt;
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:66)&lt;br/&gt;
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:138)&lt;br/&gt;
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:152)&lt;br/&gt;
	at $Proxy107.somethingSimple(Unknown Source)&lt;br/&gt;
	at test1.Bean1Impl.doSomething(Bean1Impl.java:47)&lt;br/&gt;
	... 32 more&lt;br/&gt;
Caused by: javax.transaction.InvalidTransactionException: Attempt to resume an inactive transaction: Xid=0:e85df685(942276),Status=Marked rollback. &lt;span class=&quot;error&quot;&gt;&amp;#91;Reason=weblogic.transaction.internal.AppSetRollbackOnlyException&amp;#93;&lt;/span&gt;,numRepliesOwedMe=0,numRepliesOwedOthers=0,seconds since begin=1,seconds left=28,SCInfo&lt;span class=&quot;error&quot;&gt;&amp;#91;mydomain+myserver&amp;#93;&lt;/span&gt;=(state=active),OwnerTransactionManager=ServerTM&lt;span class=&quot;error&quot;&gt;&amp;#91;ServerCoordinatorDescriptor=(CoordinatorURL=myserver+167.26.108.50:7001+mydomain+t3+, Resources={})&amp;#93;&lt;/span&gt;)&lt;br/&gt;
	at weblogic.transaction.internal.TransactionManagerImpl.resume(TransactionManagerImpl.java:357)&lt;br/&gt;
	at weblogic.transaction.internal.ServerTransactionManagerImpl.resume(ServerTransactionManagerImpl.java:305)&lt;br/&gt;
	at org.springframework.transaction.jta.JtaTransactionManager.doJtaResume(JtaTransactionManager.java:525)&lt;br/&gt;
	at org.springframework.transaction.jta.JtaTransactionManager.doResume(JtaTransactionManager.java:505)&lt;br/&gt;
	... 41 more&lt;br/&gt;
&amp;gt; &lt;/p&gt;</comment>
                            <comment id="10992" author="maximdim" created="Tue, 7 Sep 2004 07:05:55 +0000"  >&lt;p&gt;Oops, my bad. I had misconfigured transaction manager in Spring&apos;s context. It actually works. I&apos;ll run more tests and let you know if something is failing. Thanks!&lt;/p&gt;</comment>
                            <comment id="11000" author="juergen.hoeller" created="Tue, 7 Sep 2004 11:33:55 +0000"  >&lt;p&gt;According to Dmitri, WebLogicServerTransactionManagerFactoryBean does work on WebLogic 7.0 SP2 too. So this issue is finally ready for closing...&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="11008" author="euxx" created="Wed, 8 Sep 2004 01:38:06 +0000"  >&lt;p&gt;Please note, that we tested on CR106544 (CR106544_700sp2_v17.jar) which basically includes number of tx/xa fixes.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="10157" name="TxTestImpl.java" size="2245" author="euxx" created="Mon, 9 Aug 2004 09:34:55 +0000"/>
                            <attachment id="10160" name="TxTestSender.java" size="268" author="euxx" created="Mon, 9 Aug 2004 09:35:44 +0000"/>
                            <attachment id="10159" name="TxTestSenderPOJO.java" size="337" author="euxx" created="Mon, 9 Aug 2004 09:35:27 +0000"/>
                            <attachment id="10158" name="applicationContext.xml" size="1307" author="euxx" created="Mon, 9 Aug 2004 09:35:09 +0000"/>
                            <attachment id="10165" name="spring-weblogic-jta-patch.jar" size="1408" author="thomas.risberg" created="Sun, 15 Aug 2004 17:04:57 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        12 years, 17 weeks, 1 day ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 10 Aug 2004 00:44:53 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>true</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i011zj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>6199</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>