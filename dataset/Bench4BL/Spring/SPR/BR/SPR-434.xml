<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 19:01:46 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-434/SPR-434.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-434] ProxyFactoryBean getObjectType broken for prototypes in some cases</title>
                <link>https://jira.spring.io/browse/SPR-434</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;See this forum thread:&lt;br/&gt;
  &lt;a href=&quot;http://forum.springframework.org/viewtopic.php?t=1166&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://forum.springframework.org/viewtopic.php?t=1166&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In ProxyFactoryBean, if you proxy a prototype by feeding the proxy factory a PrototypeTargetSource yourself, the getObjectType() method will work fine, as it will query the PrototypeTargetSource instance. On the other hand, if you rely on instead feeding the target bean name as the last name in the list of interceptors, the logic is broken. In the prototype case, only on demand (when getObject is called) is a &lt;em&gt;SingletonTargetSource&lt;/em&gt; created to wrap the target. This means that getObjectType() will throw a NullPointerException, as the targetsource will not have been created yet.&lt;/p&gt;

&lt;p&gt;The solution is to either from the beginning create a PrototypeTargetSource even if the target is passed in as the name, or alternately create a PrototypeTargetSource on demand for either method (it would have to be synchronize though to do this obviously), which would save creating these PrototypeTargetSources if the proxy was never used, in the same vein as there is code to avoid creating the advisor chain earlier then it has to, for prototypes.&lt;/p&gt;</description>
            <key id="10697">SPR-434</key>
            <summary>ProxyFactoryBean getObjectType broken for prototypes in some cases</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="juergen.hoeller">Juergen Hoeller</assignee>
                                    <reporter username="colin.sampaleanu">Colin Sampaleanu</reporter>
                        <labels>
                    </labels>
                <created>Thu, 28 Oct 2004 14:05:36 +0000</created>
                <updated>Sun, 31 Oct 2004 21:23:25 +0000</updated>
                            <resolved>Sun, 31 Oct 2004 21:23:25 +0000</resolved>
                                    <version>1.1.1</version>
                                    <fixVersion>1.1.1</fixVersion>
                                    <component>Core:AOP</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="11393" author="colin.sampaleanu" created="Fri, 29 Oct 2004 01:03:18 +0000"  >&lt;p&gt;Sorry (it was late when I filed this bug report and I didn&apos;t think about it too much), as the original forum poster pointed out, using PrototypeTargetSource for prototype handling doesn&apos;t really make sense at all, since there will be a new prototype used on each invocation. The revised code should as suggested still use SingletonTargetSource, but on the getObjectType just call&lt;br/&gt;
  BeanFactory.getBeanDefinition(&amp;lt;beanName&amp;gt;).getBeanClass();&lt;br/&gt;
That should actually be pretty trivial...&lt;/p&gt;
</comment>
                            <comment id="11394" author="juergen.hoeller" created="Fri, 29 Oct 2004 04:22:13 +0000"  >&lt;p&gt;I can&apos;t reproduce this: targetSource is never null, because it&apos;s default is EMPTY_TARGET_SOURCE - getObjectType() returns null there, but that&apos;s fine as a return value...&lt;/p&gt;

&lt;p&gt;In general, the best we could do is to call BeanFactory.getType (rather than getBeanDefinition.getBeanClass), which properly checks the type even for child bean definitions etc. However, we&apos;d need to figure out the bean name at the end of interceptorNames here, if any... It&apos;s probably good enough to simply return null (&quot;type not known in advance&quot;) in that case.&lt;/p&gt;

&lt;p&gt;I&apos;ve just noticed that the current getObjectType implementation is broken for a different reason: It returns getTargetSource().getTargetClass() as object type, but the exposed proxy will usually not proxy the full target class... It will rather just implement the proxy interfaces. So at best, we could return the primary proxy interface here (if proxyTargetClass is off).&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="11395" author="colin.sampaleanu" created="Fri, 29 Oct 2004 04:58:14 +0000"  >&lt;p&gt;Hmm, you&apos;re right about NPE not being possible. I&apos;ve asked &apos;futang&apos; for more details.&lt;/p&gt;

&lt;p&gt;As for the type, I think even if getObjectType is legal to return null, the code should do everything it can to actually return a good value, if possible. I think the right thing to do is if the proxyTargetClass value is set to true, to return the type of the target class, and if it&apos;s false, I guess it&apos;s a little bit greyer. If interfaces is set, then it&apos;s easy, but what if it&apos;s not? Can&apos;t really get the interfaces without actually going through the proxy creation, no? I suppose the other option in that case is to get the type of the target class, and reflect to get the interfaces, then cache that info for future use.&lt;/p&gt;</comment>
                            <comment id="11397" author="colin.sampaleanu" created="Fri, 29 Oct 2004 08:22:48 +0000"  >&lt;p&gt;Ok, the original poster on the forum has confirmed that with 1.1.1 he has no issues.&lt;/p&gt;

&lt;p&gt;I still think getObjectType should ideally return a value other than null if it can, as per the above, but that would be more of an enhancement than a bug, since null is of course legal...&lt;/p&gt;</comment>
                            <comment id="11405" author="juergen.hoeller" created="Sun, 31 Oct 2004 21:23:25 +0000"  >&lt;p&gt;I&apos;ll mark this as fixed since 1.1.1. We might consider adding further sophistication to ProxyFactoryBean for estimating the target type in case of a prototype proxy and a target at the end of the &quot;interceptorNames&quot; list, but that probably doesn&apos;t have high priority.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        12 years, 9 weeks, 3 days ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 29 Oct 2004 04:22:13 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>false</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i04y0v:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>28886</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>