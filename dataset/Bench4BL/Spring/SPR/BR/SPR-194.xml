<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 20:07:57 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-194/SPR-194.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-194] OpenSessionInViewFilter and SessionFactoryUtils and Transactions</title>
                <link>https://jira.spring.io/browse/SPR-194</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;Currently OpenSessionInViewFilter and SessionFactoryUtils to not effectively isolate a Session that is used within a Transaction. &lt;/p&gt;

&lt;p&gt;The problem is that when a transaction fails, the session initiated by OpenSessionInViewFilter should not be used.&lt;/p&gt;</description>
            <key id="10369">SPR-194</key>
            <summary>OpenSessionInViewFilter and SessionFactoryUtils and Transactions</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="juergen.hoeller">Juergen Hoeller</assignee>
                                    <reporter username="tysonnorris">Tyson Norris</reporter>
                        <labels>
                    </labels>
                <created>Mon, 28 Jun 2004 05:18:27 +0000</created>
                <updated>Fri, 9 Jul 2004 04:50:45 +0000</updated>
                            <resolved>Fri, 9 Jul 2004 04:50:45 +0000</resolved>
                                    <version>1.0.2</version>
                                    <fixVersion>1.1 RC1</fixVersion>
                                    <component>Core</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="10541" author="tysonnorris" created="Mon, 28 Jun 2004 05:24:40 +0000"  >&lt;p&gt;(sorry, accidentally submitted this before finishing the description...)&lt;/p&gt;

&lt;p&gt;The current order of operations is like this:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;OpenSessionInViewFilter -&amp;gt; init Session&lt;/li&gt;
	&lt;li&gt;a TX is initiated&lt;/li&gt;
	&lt;li&gt;SessionFactoryUtils aquires Session inited from OpenSessionInViewFilter&lt;/li&gt;
	&lt;li&gt;TX rollsback&lt;/li&gt;
	&lt;li&gt;Session inited from OpenSessionInViewFilter should not be used&lt;/li&gt;
	&lt;li&gt;in some cases (app server using datasource), connections will fail at this point&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;I would propose this order of operations:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;OpenSessionInViewFilter -&amp;gt; init Session&lt;/li&gt;
	&lt;li&gt;a TX is initiated&lt;/li&gt;
	&lt;li&gt;Session inited from OpenSessionInViewFilter is &quot;suspended&quot; (hidden from spring TX)&lt;/li&gt;
	&lt;li&gt;TX rollsback&lt;/li&gt;
	&lt;li&gt;Session inited from OpenSessionInViewFilter is &quot;resumed&quot;&lt;/li&gt;
	&lt;li&gt;in all cases, the original session can be used, since it has not been &quot;corrupted&quot;&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;This presents a possible issue of multiple sessions loading the same objects, but I don&apos;t think this should cause problems. (correct?)&lt;/p&gt;

&lt;p&gt;thanks&lt;br/&gt;
tyson&lt;/p&gt;

</comment>
                            <comment id="10542" author="juergen.hoeller" created="Mon, 28 Jun 2004 05:53:36 +0000"  >&lt;p&gt;The problem is that lazy loading will be broken if each transaction uses its own Hibernate Session: Objects loaded with a transaction are not lazy-loading capable in the view in this case.&lt;/p&gt;

&lt;p&gt;If you don&apos;t rely on such deferred lazy loading in the first place, why do you need the OpenSessionInViewFilter then? Do you have some transactions that result in objects for the view while some others don&apos;t? Would it be possible to simply avoid OpenSessionInViewFilter here?&lt;/p&gt;

&lt;p&gt;Note that none of this should be problem if you don&apos;t proceed after a transaction rollback but rather let the exception that caused it pass through, resulting in a forward to an error view.&lt;/p&gt;

&lt;p&gt;It wouldn&apos;t be too hard to change HibernateTransactionManager to suspend and resumt the open Session (possibly depending on a flag). HibernateTransactionManager already offers this functionality for PROPAGATION_REQUIRES_NEW, specifically for suspending an existing transaction (which is not the case in your scenario, so would need to be adapted).&lt;/p&gt;

&lt;p&gt;I don&apos;t object to that change as long as it is configurable: Unfortunately, that kind of Session participation behavior would have to be configurable &lt;b&gt;per transaction&lt;/b&gt;, to allow for selective lazy loading with objects from a transaction. So I&apos;d really like to have a good use case for this first.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="10543" author="tysonnorris" created="Mon, 28 Jun 2004 07:02:57 +0000"  >
&lt;p&gt;&quot;Do you have some transactions that result in objects for the view while some others don&apos;t? Would it be possible to simply avoid OpenSessionInViewFilter here?&quot;&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Yes - part of this problem is related to weblogic datasource, which will fail in lazy access after a transaction is commited or rolled back. So, in my particular case I want to avoid a transaction in cases where lazy loadable data is returned. However, in a more general sense, consider multiple transactions that load disparate data, I don&apos;t want one failure/rollback to cause the others to fail, and I don&apos;t want to reuse a session that has been rolled back.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&quot;Note that none of this should be problem if you don&apos;t proceed after a transaction rollback but rather let the exception that caused it pass through, resulting in a forward to an error view.&quot;&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;I think this is true only if the error view does not require data access. Also then consider that the error view may want to take advantage of lazy loading data access. Ideally this read-only data access would not be affected by any transactions.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&quot;Unfortunately, that kind of Session participation behavior would have to be configurable &lt;b&gt;per transaction&lt;/b&gt;, to allow for selective lazy loading with objects from a transaction.&quot;&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;I&apos;m not sure I understand this - Could it be implemented so that  SessionFactoryUtils will postpone an existing session if (a)it is configured to do so (b)it  discovers an existing session and (c) is participating in a new transaction or a new synchronization with an existing transaction?&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I&apos;m not suggesting that lazy loading would be disabled in any cases. Only that an existing non-transactional session (i.e. one inited by the Filter) be suspended when a transactional session is needed. In both cases, lazy loading would be available for the lifetime of the session. (at the &quot;cost&quot; of coping with separate sessions)&lt;/p&gt;

&lt;p&gt;thanks much for the feedback&lt;br/&gt;
tyson&lt;/p&gt;</comment>
                            <comment id="10607" author="juergen.hoeller" created="Fri, 9 Jul 2004 04:50:45 +0000"  >&lt;p&gt;I&apos;ve implemented a new mode for OpenSessionInViewFilter/Interceptor, as alternative to a single session per request:&lt;/p&gt;

&lt;p&gt;Each data access operation respectively transactions uses its own Hibernate Session (like when not using Open Session in View). Each of those sessions will be registered for deferred close, though, actually processed at request completion. This does allow for lazy loading with each of those sessions, but you won&apos;t get a single first-level cache for the entire request, as there can be multiple Sessions.&lt;/p&gt;

&lt;p&gt;OpenSessionInViewFilter/Interceptor still uses a single session per request by default, but allows to activate deferred close mode instead by specifying &quot;singleSession&quot;=&quot;false&quot; as init-param respectively bean property.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        12 years, 25 weeks, 6 days ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 28 Jun 2004 05:53:36 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>false</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i02krb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>15072</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>