<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 19:29:13 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-1435/SPR-1435.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-1435] EAR application fails at deploy/redeploy due to WAR file inconsistencies</title>
                <link>https://jira.spring.io/browse/SPR-1435</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;I am having problems with (re)deploying my EAR appication with WebLogic 8.1 SP4 and SP5 in both Windows XP and Linux environment as sometimes there are exceptions while reading the contents of the WAR.&lt;/p&gt;

&lt;p&gt;I may get different exceptions depending on the application I deploy, though it&apos;s always related to reading a file in the WAR. Exception says that the file in the WAR is either missing or corrupt, though it&apos;s not true. The hardest part is that usually my EAR gets deployed while sometimes I must restart WebLogic to do do that &amp;#8211; there&apos;s almost no rule when will it happen.&lt;/p&gt;

&lt;p&gt;It was hard for me to track down the cause, but I managed to create a simple test-case that most likely produces the effect while trying to read a configuration XML file. It says that the XML file is invalid, though it&apos;s quite there and all XML files are saved in UTF-8.&lt;/p&gt;

&lt;p&gt;I also tested creating Hibernate configuration similar to the test-case but without Spring. However, I didn&apos;t get this problem any more.&lt;/p&gt;


&lt;p&gt;Stacktrace I receive on WebLogic&apos;s console is following:&lt;/p&gt;

&lt;p&gt;org.dom4j.DocumentException: invalid stored block lengths Nested exception: invalid stored block lengths&lt;br/&gt;
        at org.dom4j.io.SAXReader.read(SAXReader.java:484)&lt;br/&gt;
        at org.hibernate.cfg.Configuration.addInputStream(Configuration.java:398)&lt;br/&gt;
        at org.springframework.orm.hibernate3.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:631)&lt;br/&gt;
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1058)&lt;br/&gt;
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:363)&lt;br/&gt;
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:226)&lt;br/&gt;
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:147)&lt;br/&gt;
        at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:269)&lt;br/&gt;
        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:318)&lt;br/&gt;
        at org.springframework.web.context.support.AbstractRefreshableWebApplicationContext.refresh(AbstractRefreshableWebApplicationContext.java:134)&lt;br/&gt;
        at org.springframework.web.context.ContextLoader.createWebApplicationContext(ContextLoader.java:230)&lt;br/&gt;
        at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:156)&lt;br/&gt;
        at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:48)&lt;br/&gt;
        at weblogic.servlet.internal.WebAppServletContext$FireContextListenerAction.run(WebAppServletContext.java:7044)&lt;br/&gt;
        at weblogic.security.acl.internal.AuthenticatedSubject.doAs(AuthenticatedSubject.java:321)&lt;br/&gt;
        at weblogic.security.service.SecurityManager.runAs(SecurityManager.java:121)&lt;br/&gt;
        at weblogic.servlet.internal.WebAppServletContext.notifyCreated(WebAppServletContext.java:1753)&lt;br/&gt;
        at weblogic.servlet.internal.WebAppServletContext.preloadResources(WebAppServletContext.java:3352)&lt;br/&gt;
        at weblogic.servlet.internal.WebAppServletContext.setStarted(WebAppServletContext.java:6208)&lt;br/&gt;
        at weblogic.servlet.internal.WebAppModule.start(WebAppModule.java:864)&lt;br/&gt;
        at weblogic.j2ee.J2EEApplicationContainer.start(J2EEApplicationContainer.java:2134)&lt;br/&gt;
        at weblogic.j2ee.J2EEApplicationContainer.activate(J2EEApplicationContainer.java:2175)&lt;br/&gt;
        at weblogic.management.deploy.slave.SlaveDeployer$ComponentActivateTask.activateContainer(SlaveDeployer.java:2520)&lt;br/&gt;
        at weblogic.management.deploy.slave.SlaveDeployer$ActivateTask.doCommit(SlaveDeployer.java:2438)&lt;br/&gt;
        at weblogic.management.deploy.slave.SlaveDeployer$Task.commit(SlaveDeployer.java:2155)&lt;br/&gt;
        at weblogic.management.deploy.slave.SlaveDeployer$Task.checkAutoCommit(SlaveDeployer.java:2254)&lt;br/&gt;
        at weblogic.management.deploy.slave.SlaveDeployer$Task.prepare(SlaveDeployer.java:2149)&lt;br/&gt;
        at weblogic.management.deploy.slave.SlaveDeployer$ActivateTask.prepare(SlaveDeployer.java:2401)&lt;br/&gt;
        at weblogic.management.deploy.slave.SlaveDeployer.processPrepareTask(SlaveDeployer.java:883)&lt;br/&gt;
        at weblogic.management.deploy.slave.SlaveDeployer.prepareDelta(SlaveDeployer.java:591)&lt;br/&gt;
        at weblogic.management.deploy.slave.SlaveDeployer.prepareUpdate(SlaveDeployer.java:500)&lt;br/&gt;
        at weblogic.drs.internal.SlaveCallbackHandler$1.execute(SlaveCallbackHandler.java:25)&lt;br/&gt;
        at weblogic.kernel.ExecuteThread.execute(ExecuteThread.java:224)&lt;br/&gt;
        at weblogic.kernel.ExecuteThread.run(ExecuteThread.java:183)&lt;br/&gt;
Nested exception:&lt;br/&gt;
java.util.zip.ZipException: invalid stored block lengths&lt;br/&gt;
        at java.util.zip.InflaterInputStream.read(InflaterInputStream.java:140)&lt;br/&gt;
        at java.util.zip.InflaterInputStream.read(InflaterInputStream.java:105)&lt;br/&gt;
        at java.io.FilterInputStream.read(FilterInputStream.java:66)&lt;br/&gt;
        at weblogic.apache.xerces.impl.XMLEntityManager$RewindableInputStream.read(XMLEntityManager.java:3494)&lt;br/&gt;
        at weblogic.apache.xerces.impl.XMLEntityManager.startEntity(XMLEntityManager.java:847)&lt;br/&gt;
        at weblogic.apache.xerces.impl.XMLEntityManager.startDocumentEntity(XMLEntityManager.java:782)&lt;br/&gt;
        at weblogic.apache.xerces.impl.XMLDocumentScannerImpl.setInputSource(XMLDocumentScannerImpl.java:260)&lt;br/&gt;
        at weblogic.apache.xerces.parsers.DTDConfiguration.parse(DTDConfiguration.java:499)&lt;br/&gt;
        at weblogic.apache.xerces.parsers.DTDConfiguration.parse(DTDConfiguration.java:581)&lt;br/&gt;
        at weblogic.apache.xerces.parsers.XMLParser.parse(XMLParser.java:152)&lt;br/&gt;
        at weblogic.apache.xerces.parsers.AbstractSAXParser.parse(AbstractSAXParser.java:1175)&lt;br/&gt;
        at weblogic.xml.jaxp.WebLogicXMLReader.parse(WebLogicXMLReader.java:135)&lt;br/&gt;
        at weblogic.xml.jaxp.RegistryXMLReader.parse(RegistryXMLReader.java:152)&lt;br/&gt;
        at org.dom4j.io.SAXReader.read(SAXReader.java:465)&lt;br/&gt;
        at org.hibernate.cfg.Configuration.addInputStream(Configuration.java:398)&lt;br/&gt;
        at org.springframework.orm.hibernate3.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:631)&lt;br/&gt;
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1058)&lt;br/&gt;
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:363)&lt;br/&gt;
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:226)&lt;br/&gt;
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:147)&lt;br/&gt;
        at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:269)&lt;br/&gt;
        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:318)&lt;br/&gt;
        at org.springframework.web.context.support.AbstractRefreshableWebApplicationContext.refresh(AbstractRefreshableWebApplicationContext.java:134)&lt;br/&gt;
        at org.springframework.web.context.ContextLoader.createWebApplicationContext(ContextLoader.java:230)&lt;br/&gt;
        at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:156)&lt;br/&gt;
        at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:48)&lt;br/&gt;
        at weblogic.servlet.internal.WebAppServletContext$FireContextListenerAction.run(WebAppServletContext.java:7044)&lt;br/&gt;
        at weblogic.security.acl.internal.AuthenticatedSubject.doAs(AuthenticatedSubject.java:321)&lt;br/&gt;
        at weblogic.security.service.SecurityManager.runAs(SecurityManager.java:121)&lt;br/&gt;
        at weblogic.servlet.internal.WebAppServletContext.notifyCreated(WebAppServletContext.java:1753)&lt;br/&gt;
        at weblogic.servlet.internal.WebAppServletContext.preloadResources(WebAppServletContext.java:3352)&lt;br/&gt;
        at weblogic.servlet.internal.WebAppServletContext.setStarted(WebAppServletContext.java:6208)&lt;br/&gt;
        at weblogic.servlet.internal.WebAppModule.start(WebAppModule.java:864)&lt;br/&gt;
        at weblogic.j2ee.J2EEApplicationContainer.start(J2EEApplicationContainer.java:2134)&lt;br/&gt;
        at weblogic.j2ee.J2EEApplicationContainer.activate(J2EEApplicationContainer.java:2175)&lt;br/&gt;
        at weblogic.management.deploy.slave.SlaveDeployer$ComponentActivateTask.activateContainer(SlaveDeployer.java:2520)&lt;br/&gt;
        at weblogic.management.deploy.slave.SlaveDeployer$ActivateTask.doCommit(SlaveDeployer.java:2438)&lt;br/&gt;
        at weblogic.management.deploy.slave.SlaveDeployer$Task.commit(SlaveDeployer.java:2155)&lt;br/&gt;
        at weblogic.management.deploy.slave.SlaveDeployer$Task.checkAutoCommit(SlaveDeployer.java:2254)&lt;br/&gt;
        at weblogic.management.deploy.slave.SlaveDeployer$Task.prepare(SlaveDeployer.java:2149)&lt;br/&gt;
        at weblogic.management.deploy.slave.SlaveDeployer$ActivateTask.prepare(SlaveDeployer.java:2401)&lt;br/&gt;
        at weblogic.management.deploy.slave.SlaveDeployer.processPrepareTask(SlaveDeployer.java:883)&lt;br/&gt;
        at weblogic.management.deploy.slave.SlaveDeployer.prepareDelta(SlaveDeployer.java:591)&lt;br/&gt;
        at weblogic.management.deploy.slave.SlaveDeployer.prepareUpdate(SlaveDeployer.java:500)&lt;br/&gt;
        at weblogic.drs.internal.SlaveCallbackHandler$1.execute(SlaveCallbackHandler.java:25)&lt;br/&gt;
        at weblogic.kernel.ExecuteThread.execute(ExecuteThread.java:224)&lt;br/&gt;
        at weblogic.kernel.ExecuteThread.run(ExecuteThread.java:183)&lt;/p&gt;

&lt;p&gt;From the log I can also see that Spring can successfully find the Test.hbm.xml file and all settings, but the problem starts when Hibernate&apos;s org.hibernate.cfg.Configuration class starts to use these settings and begins to read this Test.hbm.cfg file.&lt;/p&gt;

&lt;p&gt;Business effect for the issue: since this behaviour occurs in development and production mode, it&apos;s a cause for development slowdown and customer dissatisfaction.&lt;/p&gt;

&lt;p&gt;Does anybody have an idea? Is Spring doing anything with the JAR files like mapping-files or could it be connected with how WebLogic handles compressed files during deploy time?&lt;/p&gt;


&lt;p&gt;Thanks for any help!&lt;/p&gt;</description>
            <key id="12660">SPR-1435</key>
            <summary>EAR application fails at deploy/redeploy due to WAR file inconsistencies</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="robh">Rob Harrop</assignee>
                                    <reporter username="mtamm">Martti Tamm</reporter>
                        <labels>
                    </labels>
                <created>Fri, 4 Nov 2005 02:52:46 +0000</created>
                <updated>Tue, 19 Jun 2012 03:54:18 +0000</updated>
                            <resolved>Sun, 6 Nov 2005 02:48:53 +0000</resolved>
                                    <version>1.2.4</version>
                    <version>1.2.5</version>
                                    <fixVersion>1.2.6</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="15249" author="mtamm" created="Fri, 4 Nov 2005 02:55:25 +0000"  >&lt;p&gt;This is the test-case I mentioned. Instructions are inside.&lt;/p&gt;</comment>
                            <comment id="15252" author="juergen.hoeller" created="Fri, 4 Nov 2005 07:08:36 +0000"  >&lt;p&gt;This is strange; Spring does not influence Hibernate&apos;s parsing of the mapping file. That rather looks like a side effect between Hibernate&apos;s parsing and WebLogic&apos;s jar file handling.&lt;/p&gt;

&lt;p&gt;Could you please try whether specifying the resources in your &quot;hibernate.cfg.xml&quot; file (with that file specified as &quot;configLocation&quot; on LocalSessionFactoryBean) changes the behavior?&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="15263" author="mtamm" created="Fri, 4 Nov 2005 22:21:02 +0000"  >&lt;p&gt;I tested again by providing Hibernate configuration through hibernate.cfg.xml. LocalSessionFactoryBean was created like that:&lt;/p&gt;

&lt;p&gt;	&amp;lt;bean id=&quot;sessionFactory&quot;&lt;br/&gt;
		class=&quot;org.springframework.orm.hibernate3.LocalSessionFactoryBean&quot;&amp;gt;&lt;/p&gt;

&lt;p&gt;		&amp;lt;property name=&quot;configLocation&quot; value=&quot;classpath:hibernate.cfg.xml&quot; /&amp;gt;&lt;/p&gt;

&lt;p&gt;	&amp;lt;/bean&amp;gt;&lt;/p&gt;


&lt;p&gt;hibernate.cfg.xml specified the same attributes as the test-case scenario together with creating the datasource:&lt;/p&gt;

&lt;p&gt;&amp;lt;?xml version=&apos;1.0&apos; encoding=&apos;utf-8&apos;?&amp;gt;&lt;br/&gt;
&amp;lt;!DOCTYPE hibernate-configuration PUBLIC&lt;br/&gt;
        &quot;-//Hibernate/Hibernate Configuration DTD 3.0//EN&quot;&lt;br/&gt;
        &quot;http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd&quot;&amp;gt;&lt;/p&gt;

&lt;p&gt;&amp;lt;hibernate-configuration&amp;gt;&lt;/p&gt;

&lt;p&gt;    &amp;lt;session-factory&amp;gt;&lt;/p&gt;

&lt;p&gt;        &amp;lt;!-- Data source --&amp;gt;&lt;br/&gt;
        &amp;lt;property name=&quot;hibernate.connection.datasource&quot;&amp;gt;jdbc/test&amp;lt;/property&amp;gt;&lt;/p&gt;

&lt;p&gt;        &amp;lt;!-- Database connection settings --&amp;gt;&lt;br/&gt;
        &amp;lt;property name=&quot;hibernate.dialect&quot;&amp;gt;org.hibernate.dialect.OracleDialect&amp;lt;/property&amp;gt;&lt;/p&gt;

&lt;p&gt;        &amp;lt;property name=&quot;hibernate.show_sql&quot;&amp;gt;false&amp;lt;/property&amp;gt;&lt;/p&gt;

&lt;p&gt;        &amp;lt;property name=&quot;hibernate.query.factory_class&quot;&amp;gt;org.hibernate.hql.classic.ClassicQueryTranslatorFactory&amp;lt;/property&amp;gt;&lt;/p&gt;

&lt;p&gt;        &amp;lt;property name=&quot;hibernate.cache.use_second_level_cache&quot;&amp;gt;false&amp;lt;/property&amp;gt;&lt;/p&gt;

&lt;p&gt;        &amp;lt;mapping resource=&quot;mappings/Test.hbm.xml&quot;/&amp;gt;&lt;/p&gt;

&lt;p&gt;    &amp;lt;/session-factory&amp;gt;&lt;/p&gt;

&lt;p&gt;&amp;lt;/hibernate-configuration&amp;gt;&lt;/p&gt;


&lt;p&gt;From the console log I saw that Hibernate successfully retrieved all its parameters and parsed the mapping file. I couldn&apos;t produce an error.&lt;/p&gt;

&lt;p&gt;Martti&lt;/p&gt;</comment>
                            <comment id="15264" author="juergen.hoeller" created="Fri, 4 Nov 2005 22:25:53 +0000"  >&lt;p&gt;So this means that you get the error only when specifying &quot;mappingLocations&quot; on LocalSessionFactoryBean but not when specifying &quot;mapping resource&quot; tags in hibernate.cfg.xml? This would mean that the problem is indeed in LocalSessionFactoryBean&apos;s loading of mapping locations...&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="15265" author="mtamm" created="Fri, 4 Nov 2005 23:14:10 +0000"  >&lt;p&gt;Yes, it seems so, indeed. I&apos;ve also checked that the problem occurs when I try to deploy packaged/zipped file like *.ear or *.war. It doesn&apos;t occur when I just deploy an exploded directory.&lt;/p&gt;

&lt;p&gt;There&apos;s a similar problem with a bigger application I have (I couldn&apos;t create a smaller testcase for it). Here&apos;s a stacktrace from there. Maybe it helps a bit:&lt;/p&gt;

&lt;p&gt;        at java.util.zip.ZipFile.getEntry(Native Method)&lt;br/&gt;
        at java.util.zip.ZipFile.getEntry(ZipFile.java:146)&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;locked &amp;lt;0x13126700&amp;gt; (a sun.net.www.protocol.jar.URLJarFile)&lt;br/&gt;
        at java.util.jar.JarFile.getEntry(JarFile.java:194)&lt;br/&gt;
        at sun.net.www.protocol.jar.URLJarFile.getEntry(URLJarFile.java:89)&lt;br/&gt;
        at sun.net.www.protocol.jar.JarURLConnection.connect(JarURLConnection.java:95)&lt;br/&gt;
        at sun.net.www.protocol.jar.JarURLConnection.getInputStream(JarURLConnection.java:107)&lt;br/&gt;
        at java.net.URL.openStream(URL.java:913)&lt;br/&gt;
        at org.springframework.core.io.UrlResource.getInputStream(UrlResource.java:66)&lt;br/&gt;
        at org.springframework.orm.hibernate3.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:631)&lt;br/&gt;
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1058&lt;br/&gt;
)&lt;br/&gt;
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:363)&lt;br/&gt;
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:226)&lt;/li&gt;
	&lt;li&gt;locked &amp;lt;0x13df1400&amp;gt; (a java.util.HashMap)&lt;br/&gt;
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:147)&lt;br/&gt;
        at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:176)&lt;br/&gt;
        at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:105)&lt;br/&gt;
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:10&lt;br/&gt;
12)&lt;br/&gt;
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:823)&lt;br/&gt;
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:345)&lt;br/&gt;
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:226)&lt;/li&gt;
	&lt;li&gt;locked &amp;lt;0x13df1400&amp;gt; (a java.util.HashMap)&lt;br/&gt;
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:147)&lt;br/&gt;
        at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:176)&lt;br/&gt;
        at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:105)&lt;br/&gt;
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:10&lt;br/&gt;
12)&lt;br/&gt;
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:823)&lt;br/&gt;
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:345)&lt;br/&gt;
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:226)&lt;/li&gt;
	&lt;li&gt;locked &amp;lt;0x13df1400&amp;gt; (a java.util.HashMap)&lt;br/&gt;
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:147)&lt;br/&gt;
        at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:176)&lt;br/&gt;
        at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:105)&lt;br/&gt;
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:10&lt;br/&gt;
12)&lt;br/&gt;
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:823)&lt;br/&gt;
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:345)&lt;br/&gt;
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:226)&lt;/li&gt;
	&lt;li&gt;locked &amp;lt;0x13df1400&amp;gt; (a java.util.HashMap)&lt;br/&gt;
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:151)&lt;br/&gt;
        at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:557)&lt;br/&gt;
        at org.springframework.context.support.AbstractApplicationContext.initMessageSource(AbstractApplicationContext.java:417)&lt;br/&gt;
        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:306)&lt;br/&gt;
        at org.springframework.web.context.support.AbstractRefreshableWebApplicationContext.refresh(AbstractRefreshableWebApplicationContext.java:134)&lt;br/&gt;
        at org.springframework.web.context.ContextLoader.createWebApplicationContext(ContextLoader.java:230)&lt;br/&gt;
        at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:156)&lt;br/&gt;
        at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:48)&lt;br/&gt;
        at weblogic.servlet.internal.WebAppServletContext$FireContextListenerAction.run(WebAppServletContext.java:7044)&lt;br/&gt;
        at weblogic.security.acl.internal.AuthenticatedSubject.doAs(AuthenticatedSubject.java:321)&lt;br/&gt;
        at weblogic.security.service.SecurityManager.runAs(SecurityManager.java:121)&lt;br/&gt;
        at weblogic.servlet.internal.WebAppServletContext.notifyCreated(WebAppServletContext.java:1753)&lt;br/&gt;
        at weblogic.servlet.internal.WebAppServletContext.preloadResources(WebAppServletContext.java:3352)&lt;/li&gt;
	&lt;li&gt;locked &amp;lt;0x13cbb148&amp;gt; (a weblogic.servlet.internal.WebAppServletContext)&lt;br/&gt;
        at weblogic.servlet.internal.WebAppServletContext.setStarted(WebAppServletContext.java:6208)&lt;br/&gt;
        at weblogic.servlet.internal.WebAppModule.start(WebAppModule.java:864)&lt;br/&gt;
        at weblogic.j2ee.J2EEApplicationContainer.start(J2EEApplicationContainer.java:2134)&lt;br/&gt;
        at weblogic.j2ee.J2EEApplicationContainer.activate(J2EEApplicationContainer.java:2175)&lt;br/&gt;
        at weblogic.management.deploy.slave.SlaveDeployer$ComponentActivateTask.activateContainer(SlaveDeployer.java:2520)&lt;br/&gt;
        at weblogic.management.deploy.slave.SlaveDeployer$ActivateTask.doCommit(SlaveDeployer.java:2438)&lt;br/&gt;
        at weblogic.management.deploy.slave.SlaveDeployer$Task.commit(SlaveDeployer.java:2155)&lt;br/&gt;
        at weblogic.management.deploy.slave.SlaveDeployer$Task.checkAutoCommit(SlaveDeployer.java:2254)&lt;br/&gt;
        at weblogic.management.deploy.slave.SlaveDeployer$Task.prepare(SlaveDeployer.java:2149)&lt;br/&gt;
        at weblogic.management.deploy.slave.SlaveDeployer$ActivateTask.prepare(SlaveDeployer.java:2401)&lt;br/&gt;
        at weblogic.management.deploy.slave.SlaveDeployer.processPrepareTask(SlaveDeployer.java:883)&lt;br/&gt;
        at weblogic.management.deploy.slave.SlaveDeployer.prepareDelta(SlaveDeployer.java:591)&lt;br/&gt;
        at weblogic.management.deploy.slave.SlaveDeployer.prepareUpdate(SlaveDeployer.java:500)&lt;br/&gt;
        at weblogic.drs.internal.SlaveCallbackHandler$1.execute(SlaveCallbackHandler.java:25)&lt;br/&gt;
        at weblogic.kernel.ExecuteThread.execute(ExecuteThread.java:224)&lt;br/&gt;
        at weblogic.kernel.ExecuteThread.run(ExecuteThread.java:183)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;(This trace is the Java thread that WebLogic outputs as &quot;An unexpected exception has been detected in native code outside the VM.&quot; when I try to redeploy.) &lt;/p&gt;

&lt;p&gt;This happens after ServletContextResourcePatternResolver has discovered all *.hbm.xml files (correctly) and then tries to add them as input streams to org.hibernate.cfg.Configuration.addInputStream(InputStream) method as a parameter.&lt;/p&gt;

&lt;p&gt;All in all, to me it seems that the problem could be there, where Spring sets the input streams, because different sources need different handling (e.g whether the file is in JAR or not). In the above stacktrace it seems that UrlResource is used to read the file in WAR. Is this the correct way? Why not use, for example, ServletContextResource?&lt;/p&gt;

&lt;p&gt;Martti&lt;/p&gt;</comment>
                            <comment id="15289" author="robh" created="Sun, 6 Nov 2005 02:48:53 +0000"  >&lt;p&gt;Modified the path matching behavior to use Resource.createRelative for JAR resources instead of reconstructing URLs. Tested redeploy 20 times with the new version - works fine. Tested with Spring 1.2.5 release fails about 1/3rd of the time.&lt;/p&gt;

&lt;p&gt;Rob/Juergen&lt;/p&gt;</comment>
                            <comment id="15388" author="juergen.hoeller" created="Sat, 12 Nov 2005 10:59:47 +0000"  >&lt;p&gt;Note that this fix only applies to &quot;classpath:&quot; patterns, not to &quot;classpath*:&quot; patterns. Due to the ClassLoader API, we can only use ClassLoader.getResourceAsStream() for the former but not for the latter, where we have to use ClassLoader.getResources().&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="11242" name="testcase.zip" size="3939741" author="mtamm" created="Fri, 4 Nov 2005 02:55:25 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        11 years, 7 weeks, 5 days ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 4 Nov 2005 07:08:36 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>false</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i020k7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>11800</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>