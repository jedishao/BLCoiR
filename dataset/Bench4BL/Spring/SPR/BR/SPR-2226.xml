<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 20:29:59 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-2226/SPR-2226.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-2226] Openning an inner transaction within the same bean is not being intercepted by the Spring proxy</title>
                <link>https://jira.spring.io/browse/SPR-2226</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;We&apos;re using Spring to manage the transactions via the Websphere JTA transaction manager.&lt;br/&gt;
We use Hibernate 3.1.2 to access the database.&lt;br/&gt;
We have a Spring bean with a method, let&apos;s say a(), that needs to call another method b() in the same bean.&lt;br/&gt;
We attach a transaction to a(), but we want b() to start an inner transaction and we therefore attach a transaction to b() in the ApplicationContext.xml.&lt;br/&gt;
Once, we get into the bean, Spring doesn&apos;t seem to proxy the methods anymore and doesn&apos;t start a new transaction when a() calls b().&lt;br/&gt;
Is that the intended behavior? Do we need to add any extra declarations?&lt;/p&gt;</description>
            <key id="14402">SPR-2226</key>
            <summary>Openning an inner transaction within the same bean is not being intercepted by the Spring proxy</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="springboy">Rick Evans</assignee>
                                    <reporter username="tici">Sephi Lipkin</reporter>
                        <labels>
                    </labels>
                <created>Fri, 30 Jun 2006 17:51:47 +0000</created>
                <updated>Tue, 19 Jun 2012 03:52:35 +0000</updated>
                            <resolved>Sat, 21 Oct 2006 00:41:21 +0000</resolved>
                                    <version>1.2.6</version>
                                    <fixVersion>2.0.1</fixVersion>
                                    <component>Core:AOP</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="18342" author="tici" created="Fri, 30 Jun 2006 18:33:52 +0000"  >&lt;p&gt;I should have mentioned that we attached: &amp;lt;value&amp;gt;PROPAGATION_REQUIRED_NEW&amp;lt;/value&amp;gt;&lt;br/&gt;
property to method b() in order to start a new transaction, when b() is called but it didn&apos;t happen.&lt;/p&gt;</comment>
                            <comment id="18362" author="springboy" created="Sun, 2 Jul 2006 20:24:02 +0000"  >&lt;p&gt;Hi Sephi&lt;/p&gt;

&lt;p&gt;(With apologies in advance if I am telling you something you already know.)&lt;/p&gt;

&lt;p&gt;Based on what I have read into your issue, this is the expected behaviour &lt;img class=&quot;emoticon&quot; src=&quot;https://jira.spring.io/images/icons/emoticons/warning.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;, since Spring AOP is a proxy-based AOP mechanism.&lt;/p&gt;

&lt;p&gt;Consider the case of an object that has a reference to a transactionally proxied object (let&apos;s call it foo): when you invoke &apos;foo.a()&apos; you are actually invoking the &apos;a()&apos; method on the proxy. As such, the transactional advice associated with the proxy will execute and the transaction will be started (the specifics depend on your transaction settings, esp. your propagation setting). So in the sunny day case, the transaction is started, and the method call is delegated (I use the term loosely) onto the target object. So far so good... only that in the case of your example, in the implementation of the &apos;foo.a()&apos; method, &apos;a()&apos; contains a call to &apos;b()&apos;. Here is the nub of the issue... the call to &apos;b()&apos; will be the real traget object onvoking a method on itself (i.e. self invocation). The call to &apos;b()&apos; will not go via the transactional proxy, and thus the transactional advice will not be executed.&lt;/p&gt;

&lt;p&gt;These self-invocation semantics are a well known issue with all proxy-based frameworks, not merely Spring AOP. What you need to do inside the &apos;a()&apos; method is actually invoke the &apos;b()&apos; method on the proxy. The issue boils down to how you acquire a reference to the proxy so that you can invoke &apos;b()&apos; on it; the various solutions, such as they are, to the issue of self-invocation are a tad messy. The best (of a bad lot) is to invoke the AopContext.currentProxy() method inside &apos;a()&apos;, cast the return value to the pertinent interface, and invoke &apos;b()&apos; on that reference. Then your transaction configuration will work as expected. This is, as said, a tad messy and quite invasive.&lt;/p&gt;

&lt;p&gt;So, after all that, I hope I have answered the &apos;why&apos;, and hopefully provided a workaround. If I have sailed totally past the mark (i.e. you already knew all this, and it&apos;s still not working) then do post back and I will try get to the nub of the issue.&lt;/p&gt;

&lt;p&gt;Cheers&lt;br/&gt;
Rick&lt;/p&gt;

&lt;p&gt;P.S. the following thread archive goes into some depth on the topic:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://forum.springframework.org/archive/index.php/t-13587.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://forum.springframework.org/archive/index.php/t-13587.html&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="18363" author="tici" created="Sun, 2 Jul 2006 20:56:46 +0000"  >&lt;p&gt;Hi Rick,&lt;/p&gt;

&lt;p&gt;Thank you very much for describing the picture clearly.&lt;br/&gt;
I kind of figured it out myself but was hoping to hear of some easy solution.&lt;br/&gt;
In our application we have a singleton that initializes and holds the Spring application context.&lt;br/&gt;
It provides a getBean() service that returns a reference to the transactional proxy of each bean.&lt;br/&gt;
I therefore can make additional call to get the reference to foo again from within foo.&lt;br/&gt;
Do you see any problem with this approach?&lt;/p&gt;

&lt;p&gt;Sephi&lt;/p&gt;
</comment>
                            <comment id="18364" author="springboy" created="Sun, 2 Jul 2006 21:49:27 +0000"  >&lt;p&gt;Hi Sephi&lt;/p&gt;

&lt;p&gt;Yes, the approach you have stated will work just fine too.&lt;/p&gt;

&lt;p&gt;I&apos;ll create a JIRA issue so that I remember to add some documentation to the Spring AOP chapter discussing this (&lt;a href=&quot;https://jira.spring.io/browse/SPR-2230&quot; title=&quot;Document proxy-self-invocation issues and solutions in Spring AOP&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SPR-2230&quot;&gt;&lt;del&gt;SPR-2230&lt;/del&gt;&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;With your ok, I will close this issue shortly.&lt;/p&gt;

&lt;p&gt;Cheers&lt;br/&gt;
Rick&lt;/p&gt;</comment>
                            <comment id="18365" author="tici" created="Sun, 2 Jul 2006 22:56:43 +0000"  >&lt;p&gt;ok!&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        10 years, 26 weeks, 3 days ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sun, 2 Jul 2006 20:24:02 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>true</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i04u73:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>28266</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>