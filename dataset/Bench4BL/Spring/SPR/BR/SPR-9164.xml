<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 21:40:11 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-9164/SPR-9164.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-9164] Support BigDecimals with SpEL</title>
                <link>https://jira.spring.io/browse/SPR-9164</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;When doing number arithmetic in SpEL the result type is apparently one of double, long or int.&lt;br/&gt;
This has the unwanted effect that for example float or BigDecimal values will be changed to int.&lt;/p&gt;

&lt;p&gt;new java.math.BigDecimal(&quot;12.34&quot;)&lt;br/&gt;
evaluates to 12.34&lt;/p&gt;

&lt;p&gt;-(new java.math.BigDecimal(&quot;12.34&quot;))&lt;br/&gt;
evaluates to -12&lt;/p&gt;

&lt;p&gt;see org.springframework.expression.spel.ast&lt;br/&gt;
OpPlus, OpMinus, OpMultiply, OpDivide&lt;/p&gt;</description>
            <key id="42370">SPR-9164</key>
            <summary>Support BigDecimals with SpEL</summary>
                <type id="4" iconUrl="https://jira.spring.io/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="8">Complete</resolution>
                                        <assignee username="pwebb">Phil Webb</assignee>
                                    <reporter username="obecker">Oliver Becker</reporter>
                        <labels>
                            <label>pull-request-submitted</label>
                            <label>ready-for-work</label>
                            <label>spel</label>
                    </labels>
                <created>Fri, 24 Feb 2012 06:17:21 +0000</created>
                <updated>Thu, 2 Oct 2014 11:53:52 +0000</updated>
                            <resolved>Thu, 21 Nov 2013 14:34:51 +0000</resolved>
                                    <version>3.1.1</version>
                                    <fixVersion>4.0 RC2</fixVersion>
                                    <component>Core:SpEL</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>7</watches>
                                                                <comments>
                            <comment id="76256" author="cbeams" created="Sun, 26 Feb 2012 05:36:12 +0000"  >&lt;p&gt;&lt;em&gt;Added Andy Clement as watcher&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;@Andy, could you take a look at this?  Any comments would be appreciated; please assign to yourself if you can spare the time to fix it directly.&lt;/p&gt;

&lt;p&gt;Thanks!&lt;/p&gt;</comment>
                            <comment id="76468" author="obecker" created="Fri, 2 Mar 2012 08:50:24 +0000"  >&lt;p&gt;I think the algorithm should be something along&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;if one of the types is double or float then use doubleValue&lt;/li&gt;
	&lt;li&gt;else if one of the types is byte, short, int or long then use longValue&lt;/li&gt;
	&lt;li&gt;else either add BigDecimal/BigInteger support or fallback to double&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="76549" author="aclement" created="Mon, 5 Mar 2012 12:49:17 +0000"  >&lt;p&gt;This does need doing. I feel like widening byte/short/int to long value if not necessary might be overkill but I don&apos;t feel strongly enough that it shouldn&apos;t be done.  Supporting BigDecimal/BigInteger in those referenced Op* classes should be added.  Although not hard, care would need taking to do it in a way such that the code doesn&apos;t get too bloated with instanceof checks.  Also needs test coverage, ideally for all cases/combinations.  Don&apos;t think we have to take the further step of handling custom Number subtypes, that could be looked at when the scenario comes up.&lt;/p&gt;</comment>
                            <comment id="76637" author="cbeams" created="Thu, 8 Mar 2012 07:40:04 +0000"  >&lt;p&gt;Andy, is this something you&apos;re willing to commit to for 3.2 M1 / M2?  I&apos;ll assign to you if so.&lt;/p&gt;</comment>
                            <comment id="76883" author="sslavic" created="Thu, 15 Mar 2012 05:47:48 +0000"  >&lt;p&gt;&lt;a href=&quot;https://jira.spring.io/browse/SPR-8716&quot; title=&quot;Expression language not compare BigDecimals with integers&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SPR-8716&quot;&gt;&lt;del&gt;SPR-8716&lt;/del&gt;&lt;/a&gt; is somewhat related issue.&lt;/p&gt;</comment>
                            <comment id="77694" author="giovanni.dalloglio" created="Mon, 16 Apr 2012 15:38:59 +0000"  >&lt;p&gt;Hi...&lt;/p&gt;

&lt;p&gt;I&apos;m the reporter for the &lt;a href=&quot;https://jira.spring.io/browse/SPR-8716&quot; title=&quot;Expression language not compare BigDecimals with integers&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SPR-8716&quot;&gt;&lt;del&gt;SPR-8716&lt;/del&gt;&lt;/a&gt; issue (related to this).&lt;/p&gt;

&lt;p&gt;We managed to solve this problem, adding BigDecimals; we also made a pull request: &lt;a href=&quot;https://github.com/SpringSource/spring-framework/pull/80&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/SpringSource/spring-framework/pull/80&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can take that pull request, or start by that code (we added quite test cases).&lt;/p&gt;

&lt;p&gt;PS: maybe you can consider to add also the BigIntegers support...&lt;/p&gt;</comment>
                            <comment id="78726" author="cbeams" created="Mon, 14 May 2012 05:40:47 +0000"  >&lt;p&gt;I&apos;ve asked Giovanni to touch up &lt;a href=&quot;https://github.com/SpringSource/spring-framework/pull/54&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;his pull request&lt;/a&gt; per the &lt;a href=&quot;https://github.com/SpringSource/spring-framework/wiki/Contributor-guidelines&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;contributor guidelines&lt;/a&gt;.  We can start with that support at least, which covers &lt;tt&gt;BigDecimal&lt;/tt&gt;.&lt;/p&gt;</comment>
                            <comment id="79654" author="sreddy" created="Wed, 6 Jun 2012 17:36:23 +0000"  >&lt;p&gt;I have two functions: &lt;/p&gt;

&lt;p&gt;  public class FunctionsClass {&lt;br/&gt;
        public int abs(int value) &lt;/p&gt;
{
            return Math.abs(value);
        }&lt;br/&gt;
        public float abs(float value) {            return Math.abs(value);        }
&lt;p&gt;    }&lt;/p&gt;

&lt;p&gt;and when I execute the test with following code:&lt;/p&gt;

&lt;p&gt;            FunctionsClass testObject = new FunctionsClass();&lt;br/&gt;
            StandardEvaluationContext context = new StandardEvaluationContext();&lt;br/&gt;
            org.springframework.expression.Expression expression =  parser.parseExpression(&quot;abs(-10.2f)&quot;);&lt;br/&gt;
            Number result = expression.getValue(context, testObject, Number.class);&lt;/p&gt;

&lt;p&gt;it fails with:&lt;/p&gt;

&lt;p&gt;Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1033E:(pos 0): Method call of &apos;abs&apos; is ambiguous, supported type conversions allow multiple variants to match&lt;/p&gt;</comment>
                            <comment id="79655" author="sreddy" created="Wed, 6 Jun 2012 17:41:51 +0000"  >&lt;p&gt;When I have two functions with different inputs int and float, eventhough I pass float, it is complaining about this being ambiguous&lt;/p&gt;</comment>
                            <comment id="79656" author="sreddy" created="Wed, 6 Jun 2012 18:31:40 +0000"  >&lt;p&gt;test case&lt;/p&gt;</comment>
                            <comment id="79705" author="giovanni.dalloglio" created="Fri, 8 Jun 2012 02:59:13 +0000"  >&lt;p&gt;@Satyapal&lt;/p&gt;

&lt;p&gt;I think that your problem (SpEL unable to find the correct method) should be described in a new issue.&lt;br/&gt;
This report deals with the problems with numeric operators, but you speak of indecisiveness in the resolution of the method to be applied.&lt;/p&gt;

&lt;p&gt;Regarding your problem, it seems that (at first glance) SPEL tries to find a function with the required signature, if not, try to find one that might fit (using converters), finds two candidates and does not know which one to apply.&lt;/p&gt;

&lt;p&gt;You might think to put in place a priority system depending on the type to convert.&lt;br/&gt;
For example, when I have a float, I try first to see if there is a function that accepts a double, and if it finds it then use that, otherwise I try to see if there is one that accept long, int, etc..&lt;/p&gt;

&lt;p&gt;...but pay attention, imagine you have this situation: &lt;/p&gt;

&lt;p/&gt;
&lt;div id=&quot;syntaxplugin&quot; class=&quot;syntaxplugin&quot; style=&quot;border: 1px dashed #bbb; border-radius: 5px !important; overflow: auto; max-height: 30em;&quot;&gt;
&lt;table cellspacing=&quot;0&quot; cellpadding=&quot;0&quot; border=&quot;0&quot; width=&quot;100%&quot; style=&quot;font-size: 1em; line-height: 1.4em !important; font-weight: normal; font-style: normal; color: black;&quot;&gt;
		&lt;tbody &gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;  margin-top: 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;public int someFunction (int a, double b);&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   margin-bottom: 10px;  width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;public int someFunction (double a, int b);&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
			&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;p/&gt;
&lt;p&gt;Then you go and evaluate&lt;/p&gt;
&lt;p/&gt;
&lt;div id=&quot;syntaxplugin&quot; class=&quot;syntaxplugin&quot; style=&quot;border: 1px dashed #bbb; border-radius: 5px !important; overflow: auto; max-height: 30em;&quot;&gt;
&lt;table cellspacing=&quot;0&quot; cellpadding=&quot;0&quot; border=&quot;0&quot; width=&quot;100%&quot; style=&quot;font-size: 1em; line-height: 1.4em !important; font-weight: normal; font-style: normal; color: black;&quot;&gt;
		&lt;tbody &gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;  margin-top: 10px;   margin-bottom: 10px;  width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;&quot;someFunction (1f, 1f)&quot;&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
			&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;p/&gt;

&lt;p&gt;Which one of the two functions would you choose?&lt;/p&gt;

&lt;p&gt;So I think that it is necessary to open a new issue, and discuss it carefully in there.&lt;/p&gt;</comment>
                            <comment id="79736" author="sreddy" created="Fri, 8 Jun 2012 09:04:05 +0000"  >&lt;p&gt;@Giovanni&lt;/p&gt;

&lt;p&gt;Thanks for the feedback. I will open a new bug. The possible fix that I tried locally (and that resolved my issue) involved introducing FloatLiteral.java and adding additional instanceof for Float.&lt;/p&gt;

&lt;p&gt;Satyapal&lt;/p&gt;</comment>
                            <comment id="95470" author="aclement" created="Wed, 13 Nov 2013 09:00:08 +0000"  >&lt;p&gt;I just reviewed the PR Giovanni again - made a couple of comments on it but in principal it is in reasonable shape. There seems to be some code duplication in the tests and the coding standards aren&apos;t quite right for the if blocks, but it works and all the existing expression tests are passing for me. Chris/Phil - would you expect the submitter to fix the code duplication and styling thing in the PR and resubmit or would you do that?&lt;/p&gt;
</comment>
                            <comment id="95502" author="giovanni.dalloglio" created="Thu, 14 Nov 2013 08:49:32 +0000"  >&lt;p&gt;This weekend I&apos;m out, if you can wait, the first days of the next week I&apos;ll rebase and clean everything...&lt;/p&gt;

&lt;p&gt;Thanks&lt;/p&gt;</comment>
                            <comment id="95688" author="giovanni.dalloglio" created="Tue, 19 Nov 2013 09:21:45 +0000"  >&lt;p&gt;Hello.&lt;br/&gt;
Everything is now OK, plus some additions:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;From the original pull request to now, SpEL advanced &lt;span class=&quot;error&quot;&gt;&amp;#91;operator++, between function&amp;#93;&lt;/span&gt;.
	&lt;ul&gt;
		&lt;li&gt;Now is everything covered (the new features), updated and tested.&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
	&lt;li&gt;In addition, some polish (like Phil Webb commit e83bdda)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I rebased on master, hope is OK...&lt;br/&gt;
Thanks&lt;/p&gt;</comment>
                            <comment id="95793" author="obecker" created="Thu, 21 Nov 2013 14:50:03 +0000"  >&lt;p&gt;Big thanks to Giovanni and Andy for fixing this!&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10000">
                    <name>Duplicate</name>
                                                                <inwardlinks description="is duplicated by">
                                        <issuelink>
            <issuekey id="39879">SPR-8716</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10151">
                    <name>Relate</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="42460">SPR-9194</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="53953">SPR-11319</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="43792">SPR-9486</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="45815">SPR-9913</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="19821" name="SpELFloatLiteralTest.java" size="1265" author="sreddy" created="Wed, 6 Jun 2012 18:31:40 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        3 years, 5 weeks ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sun, 26 Feb 2012 05:36:12 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>true</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>juergen.hoeller</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i04ln3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>26880</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10120" key="com.atlassian.jira.plugin.system.customfieldtypes:url">
                        <customfieldname>Reference URL</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[https://github.com/SpringSource/spring-framework/pull/80]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>