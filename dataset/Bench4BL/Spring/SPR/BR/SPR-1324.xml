<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 19:35:29 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-1324/SPR-1324.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-1324] JmsTemplate on WebSphereMQ V6.0 throw exception</title>
                <link>https://jira.spring.io/browse/SPR-1324</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;Spring1.2.5&apos;s JmsTemplate on WebSphereMQ V6.0 throw exception.&lt;/p&gt;

&lt;p&gt;Exception in thread &quot;main&quot; org.springframework.jms.IllegalStateException: MQJMS1112: JMS1.1 Invalid operation for domain specific object; nested exception is javax.jms.IllegalStateException: MQJMS1112: JMS1.1 Invalid operation for domain specific object; nested exception is javax.jms.IllegalStateException: MQJMS1112: JMS1.1 Invalid operation for domain specific object&lt;br/&gt;
javax.jms.IllegalStateException: MQJMS1112: JMS1.1 Invalid operation for domain specific object&lt;br/&gt;
	at com.ibm.mq.jms.MQQueueSession.createConsumer(MQQueueSession.java:398)&lt;br/&gt;
	at org.springframework.jms.core.JmsTemplate.createConsumer(JmsTemplate.java:459)&lt;br/&gt;
	at org.springframework.jms.core.JmsTemplate.doReceive(JmsTemplate.java:717)&lt;br/&gt;
	at org.springframework.jms.core.JmsTemplate$9.doInJms(JmsTemplate.java:682)&lt;br/&gt;
	at org.springframework.jms.core.JmsTemplate.execute(JmsTemplate.java:504)&lt;br/&gt;
	at org.springframework.jms.core.JmsTemplate.receive(JmsTemplate.java:679)&lt;br/&gt;
	at org.springframework.jms.core.JmsTemplate.receive(JmsTemplate.java:666)&lt;br/&gt;
	at org.springframework.jms.core.JmsTemplate.receiveAndConvert(JmsTemplate.java:764)&lt;br/&gt;
	at sample.SpringJmsConsumer.receive(SpringJmsConsumer.java:11)&lt;br/&gt;
	at sample.SpringJmsConsumer$$FastClassByCGLIB$$e788bff5.invoke(&amp;lt;generated&amp;gt;)&lt;br/&gt;
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:149)&lt;br/&gt;
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:698)&lt;br/&gt;
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:122)&lt;br/&gt;
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)&lt;br/&gt;
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:144)&lt;br/&gt;
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:643)&lt;br/&gt;
	at sample.SpringJmsConsumer$$EnhancerByCGLIB$$340b4150.receive(&amp;lt;generated&amp;gt;)&lt;br/&gt;
	at sample.SpringJmsConsumerMain.main(SpringJmsConsumerMain.java:14)&lt;/p&gt;

&lt;p&gt;Spring1.2.4&apos;s JmsTemplate is no problem.&lt;br/&gt;
1.2.5&apos;s JmsTemplate implementation is wrong?&lt;/p&gt;</description>
            <key id="12434">SPR-1324</key>
            <summary>JmsTemplate on WebSphereMQ V6.0 throw exception</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="juergen.hoeller">Juergen Hoeller</assignee>
                                    <reporter username="mm04699">Masahiro Hirashima</reporter>
                        <labels>
                    </labels>
                <created>Mon, 26 Sep 2005 15:45:35 +0000</created>
                <updated>Tue, 19 Jun 2012 03:54:21 +0000</updated>
                            <resolved>Wed, 28 Sep 2005 05:15:11 +0000</resolved>
                                    <version>1.2.5</version>
                                    <fixVersion>1.2.6</fixVersion>
                                    <component>JMS</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="14810" author="juergen.hoeller" created="Wed, 28 Sep 2005 05:15:11 +0000"  >&lt;p&gt;Thanks for the report! It seems that WebSphere is picky about the &quot;noLocal&quot; flag passed into the &quot;createConsumer&quot; method. The JMS spec says that this flag should basically be ignored for queues, but obviously WebSphere complains if the flag is specified for a queue, even if it is &quot;false&quot; (the JMS default)...&lt;/p&gt;

&lt;p&gt;I&apos;ve fixed this in JmsTemplate&apos;s &quot;createConsumer&quot; method. You can patch your version of JmsTemplate.java similarly (line 457 onwards), or create a subclass of JmsTemplate where you override that method accordingly:&lt;/p&gt;

&lt;p&gt;	protected MessageConsumer createConsumer(Session session, Destination destination, String messageSelector)&lt;br/&gt;
			throws JMSException {&lt;/p&gt;

&lt;p&gt;		if (destination instanceof Topic) &lt;/p&gt;
{
			return session.createConsumer(destination, messageSelector, isPubSubNoLocal());
		}
&lt;p&gt;		else &lt;/p&gt;
{
			return session.createConsumer(destination, messageSelector);
		}
&lt;p&gt;	}&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="14811" author="juergen.hoeller" created="Wed, 28 Sep 2005 05:18:21 +0000"  >&lt;p&gt;Alternatively, you could also try to use the JmsTemplate102 class instead of JmsTemplate, which explicity calls the JMS 1.0.2 Queue/Topic specific API and thus implicitly avoids the issue with the &quot;noLocal&quot; flag (only applying it to Topics in the first place). This should work on a JMS 1.1 provider as well.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="14836" author="juergen.hoeller" created="Thu, 29 Sep 2005 09:25:42 +0000"  >&lt;p&gt;If you have the chance to give the above suggestions a try, please let me know whether they work for you - to make sure that this has been fixed properly.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="14838" author="mm04699" created="Thu, 29 Sep 2005 11:43:55 +0000"  >&lt;p&gt;Thank You!!&lt;br/&gt;
I created a subclass of JmsTemplate and I confirmed that It work normally.&lt;/p&gt;

&lt;p&gt;public class MyJmsTemplate extends JmsTemplate {&lt;br/&gt;
    protected MessageConsumer createConsumer(Session session,&lt;br/&gt;
            Destination destination, String messageSelector)&lt;br/&gt;
            throws JMSException {&lt;/p&gt;

&lt;p&gt;        if (destination instanceof Topic) &lt;/p&gt;
{
            return session.createConsumer(destination, messageSelector,
                    isPubSubNoLocal());
        }
&lt;p&gt; else &lt;/p&gt;
{
            return session.createConsumer(destination, messageSelector);
        }
&lt;p&gt;    }&lt;br/&gt;
}&lt;/p&gt;


&lt;p&gt;And  I confirmed that JmsTemplate102 is work normally.&lt;/p&gt;</comment>
                            <comment id="14844" author="juergen.hoeller" created="Sat, 1 Oct 2005 03:22:30 +0000"  >&lt;p&gt;OK, thanks - that confirms what I suspected: WebSphere is picky about the NoLocal flag, which it just accepts for an actual Topic. All other JMS providers that I know simply ignore that flag in case of a Topic, which also seems to be what the JMS spec intended...&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        11 years, 13 weeks, 5 days ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 28 Sep 2005 05:15:11 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>false</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i020sv:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>11839</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>