<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 20:52:15 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-9887/SPR-9887.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-9887] Parallelize Component Scanning to Improve Spring Startup Time</title>
                <link>https://jira.spring.io/browse/SPR-9887</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;As my application is growing in size spring start-up time is increasing and starting to be quite annoying  during development. The application is setup to use component scanning, and JPA so there are a lot of @Entity ,@Service, @Controller, @Repository, @Autowired  programming with the annotations is very productive, but start-up time of spring is starting to suffer. The app is still fairly small but growing here are some stats about the app: &lt;/p&gt;

&lt;p&gt;628 classes in the application &lt;/p&gt;

&lt;p&gt;279 beans with class level annotations&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;80 @Service beans&lt;/li&gt;
	&lt;li&gt;35 @Component beans&lt;/li&gt;
	&lt;li&gt;47 @Controller beans&lt;/li&gt;
	&lt;li&gt;15 @Repository beans&lt;/li&gt;
	&lt;li&gt;52 @Entity JPA classes (Using Hibernate configured to scanning using spring)&lt;/li&gt;
	&lt;li&gt;50 @MappedSupperClass JPA classes (there contain various named queries so hibernate has to scan them)&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;489 beans with field and method declaration annotations&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;300 @Autowired annotations&lt;/li&gt;
	&lt;li&gt;146 @Transactional methods&lt;/li&gt;
	&lt;li&gt;43  @PersistenceContext&lt;/li&gt;
	&lt;li&gt;28  @PostConstruct&lt;/li&gt;
	&lt;li&gt;156 @Valid annotations&lt;/li&gt;
	&lt;li&gt;280 @RequestMapping annotations&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;None of the @PostConstruct do anything that requires network, or disk access, they are simple just computing and initializing objects in memory, or doing basic validation they can&apos;t possibly be causing the slow downs I see.&lt;/p&gt;

&lt;p&gt;This application takes about 20 seconds to launch on high End Late 2011 MacBook Pro 2.5 GHz core i7 8GB RAM 256GB SSD running Java 7u9 and tomcat 7.0.29 on a machine that is a couple of years old with a mechanical drive or a slower cpu the startup time becomes a slow 90 to 180 seconds. &lt;/p&gt;

&lt;p&gt;Class-path: &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Hibernate 4.1.7&lt;/li&gt;
	&lt;li&gt;Spring 3.1.2&lt;/li&gt;
	&lt;li&gt;Spring Security 3.1.3&lt;/li&gt;
	&lt;li&gt;Hibernate Validator 4.3&lt;/li&gt;
	&lt;li&gt;Tomcat 7.0.29&lt;/li&gt;
	&lt;li&gt;AspectJ LTW 1.7.1&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Here are the times to start-up the various parts of the applications, as seen in a typical run of the application from within STS 3.1.&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;17342 ms - Full server startup time&lt;/li&gt;
	&lt;li&gt;11098 ms - Root WebApplicationContext as printed by spring to the log file&lt;/li&gt;
	&lt;li&gt;1636 ms - Dispatcher servlet as printed by spring to the log file&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;total spring contexts initialization time 12734 ms out of 17342 ms reported by tomcat for application startup time or 73% of startup time &lt;/p&gt;

&lt;p&gt;For the WebApplication context here are the main times of the non spring bits computed by looking at timestamp data in the log file &lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;2013 ms - AspectJ load time weaving&lt;/li&gt;
	&lt;li&gt;567  ms - Flyway schema migration involves opening a connection to the db and checking one directory in the class for new .sql files&lt;/li&gt;
	&lt;li&gt;2762 ms - hibernate startup time&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;total 5342 ms for aspectj + flway + hibernate to do the initialization of the application context &lt;/p&gt;

&lt;p&gt;Spring Web Context + Dispatches Servlets accounts for 7068 ms or 40% of total startup time &lt;/p&gt;

&lt;p&gt;I have not taken a profiler to find out where that time is spent, my guess is that scanning of the classpath is a major part of this process, It would be great if spring can do the component scanning using multiple threads, to speed up the startup process.&lt;/p&gt;

&lt;p&gt;20 seconds might seem pretty fast for a Java app but every week as code gets added that 20 seconds goes up. Also no complied stacks like nodeJS, and others really have very little startup time, I think Spring has always been the standard bearer in the java world for developer productivity, parallelizing startup will make a big difference for developers working on large application.&lt;/p&gt;



</description>
            <key id="45774">SPR-9887</key>
            <summary>Parallelize Component Scanning to Improve Spring Startup Time</summary>
                <type id="4" iconUrl="https://jira.spring.io/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://jira.spring.io/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="3">Duplicate</resolution>
                                        <assignee username="snicoll">St&#233;phane Nicoll</assignee>
                                    <reporter username="asaikali">Adib Saikali</reporter>
                        <labels>
                            <label>performance</label>
                            <label>productivity</label>
                    </labels>
                <created>Wed, 17 Oct 2012 18:08:37 +0000</created>
                <updated>Wed, 7 May 2014 06:13:00 +0000</updated>
                            <resolved>Wed, 7 May 2014 06:12:59 +0000</resolved>
                                    <version>3.1 GA</version>
                                                        <due></due>
                            <votes>6</votes>
                                    <watches>12</watches>
                                                                <comments>
                            <comment id="84425" author="cbeams" created="Wed, 24 Oct 2012 01:33:32 +0000"  >&lt;p&gt;See &lt;a href=&quot;https://jira.spring.io/browse/SPR-8767&quot; title=&quot;Parallel bean initialization during startup&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SPR-8767&quot;&gt;SPR-8767&lt;/a&gt; for related requests for functionality.&lt;/p&gt;</comment>
                            <comment id="103059" author="snicoll" created="Wed, 7 May 2014 06:13:00 +0000"  >&lt;p&gt;Indeed, &lt;a href=&quot;https://jira.spring.io/browse/SPR-8767&quot; title=&quot;Parallel bean initialization during startup&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SPR-8767&quot;&gt;SPR-8767&lt;/a&gt; has similar requirements. I&apos;ve linked both issues so that we keep track of the feedback here. Thanks.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10000">
                    <name>Duplicate</name>
                                            <outwardlinks description="duplicates">
                                        <issuelink>
            <issuekey id="40130">SPR-8767</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10151">
                    <name>Relate</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="40130">SPR-8767</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        2 years, 33 weeks, 1 day ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 24 Oct 2012 01:33:32 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>false</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>snicoll</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i05wtr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>34524</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>