<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 18:58:56 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-694/SPR-694.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-694] OpenSessionInViewFilter with JTA Transactions</title>
                <link>https://jira.spring.io/browse/SPR-694</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;It is currently not possible to use JTA transactions with the OpenSessionInViewFilter, this is because the JTATransactionManager does not (and can not) set the flush mode of the Hibernate session away from FlushMode.NEVER - as a result an InvalidDataAccessApiUsageException is thrown from the HibernateTemplate when non-read-only transactions are attempted.&lt;/p&gt;

&lt;p&gt;I am unsure as to the solution to this problem however i thought i should bring it to your attention. One thing that confuses me is that in the javadoc for OpenSessionInViewFilter it states:&lt;/p&gt;

&lt;p&gt;&quot;This filter works similar to the AOP HibernateInterceptor: It just makes Hibernate Sessions available via the thread. It is suitable for non-transactional execution but also for middle tier transactions via HibernateTransactionManager or JtaTransactionManager. In the latter case, Sessions pre-bound by this filter will automatically be used for the transactions and flushed accordingly. &quot;&lt;/p&gt;

&lt;p&gt;...which leads me to assume that the ability to use the filter with JTA transactions was ment to be included however that this functionality has not been implemented.&lt;/p&gt;</description>
            <key id="11115">SPR-694</key>
            <summary>OpenSessionInViewFilter with JTA Transactions</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="juergen.hoeller">Juergen Hoeller</assignee>
                                    <reporter username="cameronjones">Cameron Jones</reporter>
                        <labels>
                    </labels>
                <created>Mon, 7 Feb 2005 11:13:18 +0000</created>
                <updated>Tue, 15 Feb 2005 19:28:33 +0000</updated>
                            <resolved>Tue, 15 Feb 2005 19:28:33 +0000</resolved>
                                    <version>1.0 RC1</version>
                    <version>1.0 RC2</version>
                    <version>1.0 final</version>
                    <version>1.0.1</version>
                    <version>1.0.2</version>
                    <version>1.1 RC1</version>
                    <version>1.1 RC2</version>
                    <version>1.1 final</version>
                    <version>1.1.1</version>
                    <version>1.1.2</version>
                    <version>1.1.3</version>
                    <version>1.1.4</version>
                                    <fixVersion>1.1.1</fixVersion>
                                    <component>Data</component>
                    <component>Transaction</component>
                    <component>Web</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12292" author="juergen.hoeller" created="Sun, 13 Feb 2005 07:41:55 +0000"  >&lt;p&gt;Sorry, I don&apos;t understand which case you are talking about here: OpenSessionInViewFilter &lt;b&gt;does&lt;/b&gt; support JTA transactions.&lt;/p&gt;

&lt;p&gt;OpenSessionInViewFilter should work with both Spring transactions and JTA transactions: be it via HibernateTransactionManager, JtaTransactionManager or even plain JTA transactions (direct UserTransaction usage or EJB CMT).&lt;/p&gt;

&lt;p&gt;Plain JTA synchronization depends on the Hibernate SessionFactory being configured with a TransactionManagerLookup, but then it should work too (since Spring 1.1.2). The test suite covers all of these cases; I&apos;m not aware of any gaps in the current support.&lt;/p&gt;

&lt;p&gt;Have you experienced a specific failure? Please have a look at which of the above scenarios you have, and give details on your exact setup!&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="12305" author="cameronjones" created="Mon, 14 Feb 2005 09:14:56 +0000"  >&lt;p&gt;Yes - i definatly agree that JTA transactions are supported but that is not the issue, what i am getting at is that there is no way of using them within the OpenSessionInViewFilter since the hibernate session &lt;b&gt;must not&lt;/b&gt; have a flush mode of &quot;never&quot;. &lt;/p&gt;

&lt;p&gt;When a session is opened by the OpenSessionInViewFilter the session is configured to have a flush mode of &quot;never&quot; and when using the JTATransactionManager the flush mode is not changed. When a write operation is attempted within the HibernateTemplate a check is done to see if the session is writable (ie that the flush mode is not &quot;never&quot;) and because this is the case an InvalidAPIUsageException is thrown. If this check was not made and the exception was not thrown it would still be impossible to save since the session can not flush.&lt;/p&gt;

&lt;p&gt;This does not happen with the HibernateTransactionManager because it configures the Hibernate session with the correct flush mode when a non-read-only transaction is started.&lt;/p&gt;

&lt;p&gt;I can&apos;t see how this has not come up before - has no-one else tried to use JTA transactions with the OpenSessionInViewFilter?&lt;/p&gt;</comment>
                            <comment id="12306" author="cameronjones" created="Mon, 14 Feb 2005 09:18:33 +0000"  >&lt;p&gt;Sorry i should rephrase that - has no-one tried to do &lt;em&gt;write&lt;/em&gt; operations using JTA and the OpenSessionInViewFilter?&lt;/p&gt;</comment>
                            <comment id="12311" author="juergen.hoeller" created="Mon, 14 Feb 2005 18:40:40 +0000"  >&lt;p&gt;Have a look at the SessionFactoryUtils &quot;openSession&quot;/&quot;getJtaSynchronizedSession&quot; methods: A FlushMode.NEVER Session is explicitly turned to FlushMode.AUTO there if being enlisted in a transaction.&lt;/p&gt;

&lt;p&gt;So in the case of OpenSessionInViewFilter, the Session will be in FlushMode.NEVER outside a transaction and in FlushMode.AUTO within a transaction. Therefore, HibernateTemplate will receive a FlushMode.AUTO Session within a transasction, allowing for write operations.&lt;/p&gt;

&lt;p&gt;Have you experienced a concrete failure or do you suspect a problem at a conceptual basis? I wouldn&apos;t be surprised about an issue in the details, but at a conceptual level, OpenSessionInViewFilter should work nicely with JtaTransactionManager or even plain JTA / EJB CMT too.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="12320" author="cameronjones" created="Tue, 15 Feb 2005 17:24:59 +0000"  >&lt;p&gt;Appologies Juergen, i have just looked at the latest from CVS and see now how this has now been implemented - we are still using version 1.1 which we chose because it had been around for a while when our project started.&lt;/p&gt;

&lt;p&gt;To allow me to save some face, it was documented as working in this version. mabye you could mark it as &quot;won&apos;t fix&quot; for 1.1-?&lt;/p&gt;</comment>
                            <comment id="12322" author="juergen.hoeller" created="Tue, 15 Feb 2005 19:28:33 +0000"  >&lt;p&gt;No problem, Cameron! I guess I would have immediately noticed if you had specified the affected version as 1.1; given that you marked all sorts of versions up until 1.1.4, I just considered the current code.&lt;/p&gt;

&lt;p&gt;I&apos;ll mark the issue as fixed in 1.1.1, which is where I&apos;ve introduced the FlushMode.NEVER check in SessionFactoryUtils.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        11 years, 46 weeks, 1 day ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sun, 13 Feb 2005 07:41:55 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>false</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i00zsv:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5845</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>