<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 19:10:08 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-1054/SPR-1054.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-1054] Deadlock issue with single connection in connection pool</title>
                <link>https://jira.spring.io/browse/SPR-1054</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;I think this is a bug....&lt;/p&gt;

&lt;p&gt;Given the following conditions:&lt;/p&gt;

&lt;p&gt;1) A Commons Connection pool with max and min connections set to 1&lt;br/&gt;
2) A Sql Call that will throw an error&lt;/p&gt;

&lt;p&gt;A deadlock situation can happen around line 776 of JdbcTemplate.&lt;/p&gt;


&lt;p&gt;try &lt;br/&gt;
{&lt;br/&gt;
    Connection conToUse = con;&lt;br/&gt;
    if (this.nativeJdbcExtractor != null &amp;amp;&amp;amp;&lt;br/&gt;
    this.nativeJdbcExtractor.isNativeConnectionNecessaryForNativeCallableStatements()) &lt;/p&gt;
    {
        conToUse = this.nativeJdbcExtractor.getNativeConnection(con);
    }
&lt;p&gt;    cs = csc.createCallableStatement(conToUse);&lt;br/&gt;
    DataSourceUtils.applyTransactionTimeout(cs, getDataSource());&lt;br/&gt;
    CallableStatement csToUse = cs;&lt;br/&gt;
    if (this.nativeJdbcExtractor != null) &lt;/p&gt;
    {
        csToUse = this.nativeJdbcExtractor.getNativeCallableStatement(cs);
    }
&lt;p&gt;    Object result = action.doInCallableStatement(csToUse);&lt;br/&gt;
    SQLWarning warning = cs.getWarnings();&lt;br/&gt;
    throwExceptionOnWarningIfNotIgnoringWarnings(warning);&lt;br/&gt;
    return result;&lt;br/&gt;
}&lt;br/&gt;
catch (SQLException ex) &lt;br/&gt;
{&lt;br/&gt;
    throw getExceptionTranslator().translate(&quot;executing CallableStatementCallback&quot;, getSql(csc), ex);&lt;br/&gt;
}&lt;br/&gt;
finally &lt;br/&gt;
{&lt;br/&gt;
    if (csc instanceof ParameterDisposer) &lt;/p&gt;
    {
        ((ParameterDisposer) csc).cleanupParameters();
    }
&lt;p&gt;    JdbcUtils.closeStatement(cs);&lt;br/&gt;
    DataSourceUtils.releaseConnection(con, getDataSource());&lt;/p&gt;



&lt;p&gt;If we assume that&lt;br/&gt;
Connection conToUse = con;&lt;br/&gt;
Use one connection (pool is now empty)&lt;/p&gt;

&lt;p&gt;and the execution of the Callable statement throws a sql exception, &lt;/p&gt;

&lt;p&gt;throw getExceptionTranslator().translate(&quot;executing CallableStatementCallback&quot;, getSql(csc), ex);&lt;/p&gt;

&lt;p&gt;Will be called.  This will result in an additional connection being requested from the pool.  &lt;/p&gt;


&lt;p&gt;The first connection should first be closed!!!&lt;/p&gt;



&lt;p&gt;}&lt;/p&gt;</description>
            <key id="11773">SPR-1054</key>
            <summary>Deadlock issue with single connection in connection pool</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="juergen.hoeller">Juergen Hoeller</assignee>
                                    <reporter username="jshomphe">Joe Shomphe</reporter>
                        <labels>
                    </labels>
                <created>Fri, 17 Jun 2005 08:30:06 +0000</created>
                <updated>Fri, 24 Jun 2005 04:07:42 +0000</updated>
                            <resolved>Fri, 24 Jun 2005 04:07:42 +0000</resolved>
                                    <version>1.2.1</version>
                                    <fixVersion>1.2.2</fixVersion>
                                    <component>Data</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="13597" author="jshomphe" created="Mon, 20 Jun 2005 04:02:05 +0000"  >&lt;p&gt;Aha!  I noticed that if lazyInit is set to false, the constructor for JdbcTemplate will fix this problem&lt;/p&gt;

&lt;p&gt;Interesting.  This still seems like that as a result lazyInit should default to false.&lt;/p&gt;</comment>
                            <comment id="13651" author="juergen.hoeller" created="Fri, 24 Jun 2005 04:07:42 +0000"  >&lt;p&gt;That&apos;s indeed a situation that can arise with a pool that just holds a single Connection, on first access of the exception translator.&lt;/p&gt;

&lt;p&gt;As you spotted, setting &quot;lazyInit&quot; to &quot;false&quot; is one way to get around this. &quot;lazyInit&quot; should remain &quot;true&quot; by default, though, as some application servers don&apos;t allow for non-transactional access to a JDBC Connection on startup.&lt;/p&gt;

&lt;p&gt;Instead, I&apos;ve refined the code to close the Connection &lt;em&gt;before&lt;/em&gt; attempting to access the exception translator, as you mentioned. This should work properly in all cases, avoiding the potential deadlock.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        11 years, 27 weeks, 6 days ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 24 Jun 2005 04:07:42 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>false</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i01faf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>8354</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>