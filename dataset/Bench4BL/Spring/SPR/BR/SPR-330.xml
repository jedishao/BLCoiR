<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 19:07:28 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-330/SPR-330.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-330] Cannot use SingleConnectionDataSource in ant task due to classloader problem</title>
                <link>https://jira.spring.io/browse/SPR-330</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;In version 1.1 of spring, it is not possible to use SingleConnectionDataSource in an ant task due to a classloader issue.  On construction of the SingleConnectionDataSource an IllegalArgumentException is thrown.  Example:&lt;/p&gt;

&lt;p&gt;java.lang.IllegalArgumentException: interface org.springframework.jdbc.datasource.ConnectionProxy is not visible from class loader&lt;br/&gt;
        at java.lang.reflect.Proxy.getProxyClass(Proxy.java:331)&lt;br/&gt;
        at java.lang.reflect.Proxy.newProxyInstance(Proxy.java:552)&lt;br/&gt;
        at org.springframework.jdbc.datasource.SingleConnectionDataSource.getCloseSuppressingConnectionProxy(SingleConnectionDataSource.java:190)&lt;br/&gt;
        at org.springframework.jdbc.datasource.SingleConnectionDataSource.init(SingleConnectionDataSource.java:134)&lt;br/&gt;
        at org.springframework.jdbc.datasource.SingleConnectionDataSource.&amp;lt;init&amp;gt;(SingleConnectionDataSource.java:93)&lt;br/&gt;
        at ScdsProblem.&amp;lt;init&amp;gt;(ScdsProblem.java:17)&lt;br/&gt;
        at ScdsProblemTask.execute(ScdsProblemTask.java:10)&lt;br/&gt;
        at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:269)&lt;br/&gt;
        at org.apache.tools.ant.Task.perform(Task.java:364)&lt;br/&gt;
        at org.apache.tools.ant.Target.execute(Target.java:301)&lt;br/&gt;
        at org.apache.tools.ant.Target.performTasks(Target.java:328)&lt;br/&gt;
        at org.apache.tools.ant.Project.executeTarget(Project.java:1215)&lt;br/&gt;
        at org.apache.tools.ant.Project.executeTargets(Project.java:1063)&lt;br/&gt;
        at org.apache.tools.ant.Main.runBuild(Main.java:632)&lt;br/&gt;
        at org.apache.tools.ant.Main.startAnt(Main.java:183)&lt;br/&gt;
        at org.apache.tools.ant.launch.Launcher.run(Launcher.java:197)&lt;br/&gt;
        at org.apache.tools.ant.launch.Launcher.main(Launcher.java:56)&lt;/p&gt;

&lt;p&gt;This does not occur in spring 1.0.2.  I will attach the code for the (simple, example) ant task from which this stacktrace is derived.&lt;/p&gt;</description>
            <key id="10552">SPR-330</key>
            <summary>Cannot use SingleConnectionDataSource in ant task due to classloader problem</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="juergen.hoeller">Juergen Hoeller</assignee>
                                    <reporter username="rsutphin">Rhett Sutphin</reporter>
                        <labels>
                    </labels>
                <created>Sun, 12 Sep 2004 05:48:28 +0000</created>
                <updated>Wed, 15 Sep 2004 08:50:47 +0000</updated>
                            <resolved>Wed, 15 Sep 2004 08:50:47 +0000</resolved>
                                    <version>1.1 final</version>
                                    <fixVersion>1.1.1</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="11023" author="rsutphin" created="Sun, 12 Sep 2004 05:56:51 +0000"  >&lt;p&gt;This archive contains three files:  two java files comprising an ant task that illustrates this problem and a build.xml that invokes the task and demonstrates the problem.  To execute the build script, you need to set the ant property spring.dir to the name of a directory containing an unpacked spring all-dependencies distribution.  Ex:&lt;/p&gt;

&lt;p&gt;ant -Dspring.dir=/home/username/spring/spring-framework-1.1&lt;/p&gt;</comment>
                            <comment id="11024" author="rsutphin" created="Sun, 12 Sep 2004 07:48:56 +0000"  >&lt;p&gt;On further reflection, the problem seems to be a standard ant classloader issue.  Specifically, the custom task and spring are loaded on an ant class loader within the script.  However, SingleConnectionDataSource tries to use the currentThread&apos;s classloader.  Ant executes the task in the main thread so it using the main java classloader.  The main classloader is ignorant of the ant classloader (of course), hence the problem.&lt;/p&gt;

&lt;p&gt;This is new in spring 1.1 because of the addition of the ConnectionProxy interface.  In 1.0.2, the interface being proxied was Connection, which (being a standard JDK library class) is visible to the main classloader.&lt;/p&gt;

&lt;p&gt;So one solution would be to have SingleConnectionDataSource use ConnectionProxy.class.getClassLoader() when creating its proxy instead of Thread.currentThread().getContextClassLoader().  Since ConnectionProxy&apos;s own classloader is guaranteed to know about ConnectionProxy, this should work.  &lt;/p&gt;</comment>
                            <comment id="11034" author="juergen.hoeller" created="Wed, 15 Sep 2004 08:50:47 +0000"  >&lt;p&gt;Thanks for the report - fixed through using ConnectionProxy.class.getClassLoader()&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="10214" name="scds-problem.tar.gz" size="1413" author="rsutphin" created="Sun, 12 Sep 2004 05:56:51 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        12 years, 16 weeks, 1 day ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 15 Sep 2004 08:50:47 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>false</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i04y8v:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>28922</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>