<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 19:59:19 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-257/SPR-257.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-257] ConcurrentModificationException in Transaction Synchronization</title>
                <link>https://jira.spring.io/browse/SPR-257</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;I have a Hibernate-mapped class that uses the ClobStringType class to &lt;br/&gt;
map Oracle CLOB to String. When a Clob is updated and the Hibernate &lt;br/&gt;
session completes I get ConcurrentModificationException&lt;br/&gt;
at AbstractPlatformTransactionManager.triggerBeforeCommit().&lt;/p&gt;

&lt;p&gt;IMO this is related to the addition of a Synchronization to &lt;br/&gt;
the transaction by ClobStringType: &lt;br/&gt;
When the transaction completes, beforeCompletion() iterates over &lt;br/&gt;
TransactionSynchronizationManager.getSynchronizations() elements.&lt;br/&gt;
It calls TransactionSynchronizationManager.unbindResource() in&lt;br/&gt;
SessionFactoryUtils.beforeCompletion().&lt;br/&gt;
The second Synchronization (from the Lob Handler) means that the &lt;br/&gt;
iterator&apos;s next() is called after the collection was modified.&lt;/p&gt;

&lt;p&gt;Suggested workaround: flush() the Hibernate session after setting the &lt;br/&gt;
value of the CLOB.&lt;/p&gt;

&lt;p&gt;Suggested fix: in triggerBeforeCommit(), copy the Synchronization &lt;br/&gt;
collection before the iteration.&lt;/p&gt;

&lt;p&gt;----------------------------&lt;br/&gt;
2004-08-11 14:54:35,116 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;net.sf.hibernate.impl.BatcherImpl http-0.0.0.0-8080-Processor21&amp;#93;&lt;/span&gt; Executing batch size: 1&lt;br/&gt;
2004-08-11 14:54:35,116 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;net.sf.hibernate.impl.BatcherImpl http-0.0.0.0-8080-Processor21&amp;#93;&lt;/span&gt; success of batch update unknown: 0&lt;br/&gt;
2004-08-11 14:54:35,116 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;net.sf.hibernate.impl.BatcherImpl http-0.0.0.0-8080-Processor21&amp;#93;&lt;/span&gt; done closing: 0 open PreparedStatements, 0 open ResultSets&lt;br/&gt;
2004-08-11 14:54:35,116 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;net.sf.hibernate.impl.BatcherImpl http-0.0.0.0-8080-Processor21&amp;#93;&lt;/span&gt; closing statement&lt;br/&gt;
2004-08-11 14:54:35,116 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;net.sf.hibernate.impl.SessionImpl http-0.0.0.0-8080-Processor21&amp;#93;&lt;/span&gt; post flush&lt;br/&gt;
2004-08-11 14:54:35,116 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;org.springframework.transaction.jta.JtaTransactionManager http-0.0.0.0-8080-Processor21&amp;#93;&lt;/span&gt; Triggering beforeCompletion synchronization&lt;br/&gt;
2004-08-11 14:54:35,116 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;org.springframework.transaction.support.TransactionSynchronizationManager http-0.0.0.0-8080-Processor21&amp;#93;&lt;/span&gt; Removed value &lt;span class=&quot;error&quot;&gt;&amp;#91;org.springframework.orm.hibernate.SessionHolder@307c44&amp;#93;&lt;/span&gt; for key &lt;span class=&quot;error&quot;&gt;&amp;#91;net.sf.hibernate.impl.SessionFactoryImpl@10704e1&amp;#93;&lt;/span&gt; from thread &lt;span class=&quot;error&quot;&gt;&amp;#91;http-0.0.0.0-8080-Processor21&amp;#93;&lt;/span&gt;&lt;br/&gt;
2004-08-11 14:54:35,116 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;org.springframework.transaction.jta.JtaTransactionManager http-0.0.0.0-8080-Processor21&amp;#93;&lt;/span&gt; Initiating transaction rollback on commit exception&lt;br/&gt;
java.util.ConcurrentModificationException&lt;br/&gt;
	at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:448)&lt;br/&gt;
	at java.util.AbstractList$Itr.next(AbstractList.java:419)&lt;br/&gt;
	at java.util.Collections$1.next(Collections.java:996)&lt;br/&gt;
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.triggerBeforeCommit(AbstractPlatformTransactionManager.java:434)&lt;br/&gt;
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:311)&lt;br/&gt;
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:211)&lt;br/&gt;
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:138)&lt;br/&gt;
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:148)&lt;br/&gt;
	at $Proxy43.setCV(Unknown Source)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;br/&gt;
	at java.lang.reflect.Method.invoke(Method.java:324)&lt;br/&gt;
	at org.springframework.aop.framework.AopProxyUtils.invokeJoinpointUsingReflection(AopProxyUtils.java:59)&lt;br/&gt;
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:138)&lt;br/&gt;
	at $Proxy43.setCV(Unknown Source)&lt;br/&gt;
	at com.cashu.sample.test.UserDAOTest.testUserCV(UserDAOTest.java:73)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;br/&gt;
	at java.lang.reflect.Method.invoke(Method.java:324)&lt;br/&gt;
	at junit.framework.TestCase.runTest(TestCase.java:154)&lt;br/&gt;
	at junit.framework.TestCase.runBare(TestCase.java:127)&lt;br/&gt;
	at org.apache.cactus.internal.AbstractCactusTestCase.runBareServer(AbstractCactusTestCase.java:149)&lt;br/&gt;
	at org.apache.cactus.internal.server.AbstractWebTestCaller.doTest(AbstractWebTestCaller.java:119)&lt;br/&gt;
	at org.apache.cactus.internal.server.AbstractWebTestController.handleRequest_aroundBody0(AbstractWebTestController.java:93)&lt;br/&gt;
	at org.apache.cactus.internal.server.AbstractWebTestController.handleRequest_aroundBody1$advice(AbstractWebTestController.java:124)&lt;br/&gt;
	at org.apache.cactus.internal.server.AbstractWebTestController.handleRequest(AbstractWebTestController.java)&lt;br/&gt;
	at org.apache.cactus.server.ServletTestRedirector.doPost_aroundBody2(ServletTestRedirector.java:101)&lt;br/&gt;
	at org.apache.cactus.server.ServletTestRedirector.doPost_aroundBody3$advice(ServletTestRedirector.java:124)&lt;br/&gt;
	at org.apache.cactus.server.ServletTestRedirector.doPost(ServletTestRedirector.java)&lt;br/&gt;
	at org.apache.cactus.server.ServletTestRedirector.doGet_aroundBody0(ServletTestRedirector.java:72)&lt;br/&gt;
	at org.apache.cactus.server.ServletTestRedirector.doGet_aroundBody1$advice(ServletTestRedirector.java:124)&lt;br/&gt;
	at org.apache.cactus.server.ServletTestRedirector.doGet(ServletTestRedirector.java)&lt;br/&gt;
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:697)&lt;br/&gt;
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:810)&lt;br/&gt;
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:237)&lt;br/&gt;
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:157)&lt;br/&gt;
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:214)&lt;br/&gt;
	at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:104)&lt;br/&gt;
	at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:520)&lt;br/&gt;
	at org.apache.catalina.core.StandardContextValve.invokeInternal(StandardContextValve.java:198)&lt;br/&gt;
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:152)&lt;br/&gt;
	at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:104)&lt;br/&gt;
	at org.jboss.web.tomcat.security.SecurityAssociationValve.invoke(SecurityAssociationValve.java:72)&lt;br/&gt;
	at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:102)&lt;br/&gt;
	at org.jboss.web.tomcat.security.JBossSecurityMgrRealm.invoke(JBossSecurityMgrRealm.java:275)&lt;br/&gt;
	at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:102)&lt;br/&gt;
	at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:520)&lt;br/&gt;
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:137)&lt;br/&gt;
	at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:104)&lt;br/&gt;
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:117)&lt;br/&gt;
	at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:102)&lt;br/&gt;
	at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:520)&lt;br/&gt;
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)&lt;br/&gt;
	at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:104)&lt;br/&gt;
	at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:520)&lt;br/&gt;
	at org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:929)&lt;br/&gt;
	at org.apache.coyote.tomcat5.CoyoteAdapter.service(CoyoteAdapter.java:160)&lt;br/&gt;
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:799)&lt;br/&gt;
	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.processConnection(Http11Protocol.java:705)&lt;br/&gt;
	at org.apache.tomcat.util.net.TcpWorkerThread.runIt(PoolTcpEndpoint.java:577)&lt;br/&gt;
	at org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:683)&lt;br/&gt;
	at java.lang.Thread.run(Thread.java:534)&lt;br/&gt;
2004-08-11 14:54:35,116 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;org.springframework.transaction.jta.JtaTransactionManager http-0.0.0.0-8080-Processor21&amp;#93;&lt;/span&gt; Rolling back JTA transaction &lt;span class=&quot;error&quot;&gt;&amp;#91;org.jboss.tm.usertx.client.ServerVMClientUserTransaction@779959&amp;#93;&lt;/span&gt;&lt;br/&gt;
2004-08-11 14:54:35,116 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;org.springframework.transaction.jta.JtaTransactionManager http-0.0.0.0-8080-Processor21&amp;#93;&lt;/span&gt; Triggering afterCompletion synchronization&lt;/p&gt;</description>
            <key id="10461">SPR-257</key>
            <summary>ConcurrentModificationException in Transaction Synchronization</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="juergen.hoeller">Juergen Hoeller</assignee>
                                    <reporter username="nitzann">Nitzan Niv</reporter>
                        <labels>
                    </labels>
                <created>Tue, 10 Aug 2004 22:39:09 +0000</created>
                <updated>Wed, 11 Aug 2004 06:41:22 +0000</updated>
                            <resolved>Wed, 11 Aug 2004 06:41:22 +0000</resolved>
                                    <version>1.0.2</version>
                                    <fixVersion>1.1 RC2</fixVersion>
                                    <component>Transaction</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="10760" author="juergen.hoeller" created="Wed, 11 Aug 2004 06:31:26 +0000"  >&lt;p&gt;Thanks for reporting this! This just occurs with JtaTransactionManager, BTW, not with HibernateTransactionManager.&lt;/p&gt;

&lt;p&gt;TransactionSynchronizationManager.getSynchronizations() already returns an unmodifiable list (via Collections.unmodifiableList), but unfortunately that one still uses the underlying Iterator underneath. I&apos;ve just changed this to return a copy of the synchronization list.&lt;/p&gt;

&lt;p&gt;If you have the chance, feel free to give a CVS snapshot of the modified TransactionSynchronizationManager class a try (either fetching a complete Spring CVS snapshot or patching 1.1 RC1)!&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        12 years, 21 weeks, 1 day ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 11 Aug 2004 06:31:26 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>false</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i04yav:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>28931</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>