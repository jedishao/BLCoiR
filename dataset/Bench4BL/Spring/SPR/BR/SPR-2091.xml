<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 19:05:40 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-2091/SPR-2091.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-2091] Cannot do XA Rollback Using DefaultMessageListenerContainer on JBoss</title>
                <link>https://jira.spring.io/browse/SPR-2091</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;I have tried using JBossMQ and ActiveMQ to receive async message by DefaultMessageListenerContainer.&lt;br/&gt;
Transaction Manager from JBoss are used and set properly as a bean property for DefaultMessageListenerContainer.&lt;br/&gt;
To trigger the XA rollback, I throw a runtime exception in the onMessage() callback of the MessageListener.&lt;br/&gt;
However, the message is still commit.&lt;/p&gt;

&lt;p&gt;The bean setting:&lt;br/&gt;
  &amp;lt;bean id=&quot;transactionManager&quot; class=&quot;org.springframework.transaction.jta.JtaTransactionManager&quot;&amp;gt;&lt;br/&gt;
    &amp;lt;property name=&quot;userTransaction&quot; ref=&quot;userTransaction&quot;/&amp;gt;&lt;br/&gt;
  &amp;lt;/bean&amp;gt;&lt;/p&gt;

&lt;p&gt;  &amp;lt;bean id=&quot;userTransaction&quot; &lt;br/&gt;
    class=&quot;org.springframework.jndi.JndiObjectFactoryBean&quot;&amp;gt;&lt;br/&gt;
      &amp;lt;property name=&quot;jndiName&quot;&amp;gt;&lt;br/&gt;
        &amp;lt;value&amp;gt;java:comp/UserTransaction&amp;lt;/value&amp;gt;&lt;br/&gt;
      &amp;lt;/property&amp;gt;&lt;br/&gt;
  &amp;lt;/bean&amp;gt;&lt;/p&gt;

&lt;p&gt;        &amp;lt;bean id=&quot;listenerContainer&quot;&lt;br/&gt;
                class=&quot;org.springframework.jms.listener.DefaultMessageListenerContainer&quot;&amp;gt;&lt;br/&gt;
                &amp;lt;property name=&quot;connectionFactory&quot; ref=&quot;XAJmsConnectionFactory&quot; /&amp;gt;&lt;br/&gt;
                &amp;lt;property name=&quot;destination&quot; ref=&quot;XADestination&quot; /&amp;gt;&lt;br/&gt;
                &amp;lt;property name=&quot;messageListener&quot; ref=&quot;coreInboundBeanImpl&quot; /&amp;gt;&lt;br/&gt;
                &amp;lt;property name=&quot;transactionManager&quot; ref=&quot;transactionManager&quot;/&amp;gt;&lt;br/&gt;
        &amp;lt;/bean&amp;gt;&lt;/p&gt;

&lt;p&gt;Finally, I needed to extend DefaultMessageListenerContainer and override the receive() method using JMSTemplate instead of the message consumer as follow:&lt;br/&gt;
	public Message receive(long timeOut) throws JMSException&lt;/p&gt;
{
		template.setConnectionFactory(getConnectionFactory());
		template.setDefaultDestination(getDestination());
		template.setReceiveTimeout(timeOut);
		if (getMessageSelector() == null || &quot;&quot;.equals(getMessageSelector().trim()))
			return template.receive(getDestination());
		else
			return template.receiveSelected(getDestination(), getMessageSelector());
	}

&lt;p&gt;I use JMSTemplate because I find it performs XA without any noticed problem.&lt;br/&gt;
Using the above implementation can successfully rollback as well as commit the message. I am seeking for better solution on this topic.&lt;/p&gt;</description>
            <key id="14114">SPR-2091</key>
            <summary>Cannot do XA Rollback Using DefaultMessageListenerContainer on JBoss</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="juergen.hoeller">Juergen Hoeller</assignee>
                                    <reporter username="gobreak">gobreak</reporter>
                        <labels>
                    </labels>
                <created>Thu, 1 Jun 2006 22:04:46 +0000</created>
                <updated>Tue, 19 Jun 2012 03:52:26 +0000</updated>
                            <resolved>Tue, 1 Aug 2006 23:28:14 +0000</resolved>
                                    <version>2.0 M4</version>
                                    <fixVersion>2.0 RC3</fixVersion>
                                    <component>JMS</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="17992" author="juergen.hoeller" created="Tue, 13 Jun 2006 09:27:09 +0000"  >&lt;p&gt;The reason here seems to be that the JMS Session that we cache per thread doesn&apos;t seem to properly (re-)participate in XA transactions. This is a known problem with JBoss resource management in general, actually: JBoss requires you to re-obtain JDBC Connection handles as well, for example, if you want them to participate in subsequent XA transactions...&lt;/p&gt;

&lt;p&gt;We&apos;ll try to find a workaround for this - probably reobtaining the Session per default, only to be cached when a specific flag has been set. The disadvantage of course is that re-obtaining the Session for every receive actual might prove to be costly in some scenarios. So we might only do it by default in a J2EE environment, where Sessions need to be pooled anyway.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="18029" author="juergen.hoeller" created="Thu, 15 Jun 2006 20:17:13 +0000"  >&lt;p&gt;I&apos;ve introduced a &quot;cacheSessions&quot; flag on DefaultMessageListenerContainer, which is on by default. Turn this flag off if you know that your provider requires the listener to reobtain the Session (which you achieved through using JmsTemplate in your subclass). We currently just know about JBoss 4.0 here, as you reported; we will try to test other servers as thoroughly as we are able to.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="18168" author="gobreak" created="Thu, 22 Jun 2006 18:28:45 +0000"  >&lt;p&gt;Problem still existed in RC1&lt;br/&gt;
I have tried the following:&lt;br/&gt;
	&amp;lt;bean id=&quot;listenerContainer&quot;&lt;br/&gt;
		class=&quot;org.springframework.jms.listener.DefaultMessageListenerContainer&quot;&amp;gt;&lt;br/&gt;
		&amp;lt;property name=&quot;concurrentConsumers&quot; value=&quot;1&quot; /&amp;gt;&lt;br/&gt;
		&amp;lt;property name=&quot;connectionFactory&quot; ref=&quot;XAJmsConnectionFactory&quot; /&amp;gt;&lt;br/&gt;
		&amp;lt;property name=&quot;destination&quot; ref=&quot;XADestination&quot; /&amp;gt;&lt;br/&gt;
		&amp;lt;property name=&quot;messageListener&quot; ref=&quot;coreInboundBeanImpl&quot; /&amp;gt;&lt;br/&gt;
		&amp;lt;property name=&quot;transactionManager&quot; ref=&quot;transactionManager&quot;/&amp;gt;&lt;br/&gt;
		&amp;lt;property name=&quot;cacheSessions&quot; value=&quot;false&quot;/&amp;gt;&lt;br/&gt;
	&amp;lt;/bean&amp;gt;&lt;/p&gt;

&lt;p&gt;The container does init the resources such as session and consumer. Howerver, I think the resources is not enlisted in the XA trsansaction.&lt;/p&gt;

&lt;p&gt;I have tried put the initResources rountine in executeListener() after getTransaction(), but the reuslt is still not OK.&lt;/p&gt;</comment>
                            <comment id="18226" author="brthrjon" created="Mon, 26 Jun 2006 23:48:44 +0000"  >&lt;p&gt;Try setting:&lt;br/&gt;
&amp;lt;property name=&quot;sessionTransacted&quot; value=&quot;true&quot;/&amp;gt;&lt;/p&gt;

&lt;p&gt;like this:&lt;br/&gt;
&amp;lt;bean id=&quot;listenerContainer&quot;&lt;br/&gt;
  		class=&quot;org.springframework.jms.listener.DefaultMessageListenerContainer&quot;&amp;gt;&lt;br/&gt;
  			&amp;lt;property name=&quot;concurrentConsumers&quot; value=&quot;5&quot;/&amp;gt;&lt;br/&gt;
  			&amp;lt;property name=&quot;cacheSessions&quot; value=&quot;true&quot;/&amp;gt;&lt;br/&gt;
  			&amp;lt;property name=&quot;connectionFactory&quot; ref=&quot;queueConnectionFactory&quot; /&amp;gt;&lt;br/&gt;
  			&amp;lt;property name=&quot;destination&quot; ref=&quot;destination&quot; /&amp;gt;&lt;br/&gt;
  			&amp;lt;property name=&quot;messageListener&quot; ref=&quot;messageListener&quot; /&amp;gt;&lt;br/&gt;
  			&amp;lt;property name=&quot;transactionManager&quot; ref=&quot;transactionManager&quot; /&amp;gt;&lt;br/&gt;
  			&amp;lt;property name=&quot;sessionTransacted&quot; value=&quot;true&quot;/&amp;gt;&lt;/p&gt;

&lt;p&gt;	&amp;lt;/bean&amp;gt;&lt;/p&gt;

&lt;p&gt;It works for me with jotm.&lt;/p&gt;</comment>
                            <comment id="18358" author="gobreak" created="Sun, 2 Jul 2006 12:56:53 +0000"  >&lt;p&gt;&quot;seesionTransacted&quot; should be for local transaction only.&lt;br/&gt;
but not for JTA.&lt;br/&gt;
thx.&lt;/p&gt;</comment>
                            <comment id="18731" author="juergen.hoeller" created="Sun, 23 Jul 2006 21:34:00 +0000"  >&lt;p&gt;Unfortunately, I cannot see why this should not work with &quot;cacheSessions&quot;=false. We are reobtaining the Session and MessageConsumer for every receive operation in this case, just like JmsTemplate does. Can you please verify whether this really doesn&apos;t work on JBoss, whereas it works with JmsTemplate usage? Overall, this looks like really odd JBoss JMS behavior to me...&lt;/p&gt;

&lt;p&gt;As for the &quot;sessionTransacted&quot; flag: This should indeed only apply to local JMS transactions, which DefaultMessageListenerContainer supports as well. However, some J2EE servers might check this flag for XA transactions too, despite the J2EE requirement for auto-enlistment - which usually (but not necessarily) means ignoring the &quot;createSession&quot; arguments &quot;sessionTransacted&quot; and &quot;acknowledgeMode&quot;.&lt;/p&gt;

&lt;p&gt;FWIW, other J2EE servers such as WebLogic perform XA enlistment for any operation on an XA-aware JMS Session handle. So you can keep the Session handle and process multiple transactions on it, with proper XA enlistment still taking place. Neither this nor the behavior of the &quot;createSession&quot; arguments within a J2EE environment seems to be explicitly specified in J2EE 1.3/1.4, though, so it&apos;s no surprise that vendors differ in that respect...&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="18733" author="juergen.hoeller" created="Sun, 23 Jul 2006 21:48:48 +0000"  >&lt;p&gt;I&apos;ve just noticed that the JBoss issue might be caused by holding on to a JMS &lt;b&gt;Connection&lt;/b&gt; handle. DefaultMessageListenerContainer always holds on to a Connection handle, even if it reobtains Session and MessageConsumer (&quot;cacheSessions&quot;=false). We might have to reobtain JMS Connection handles as well to make XA enlistment work on JBoss... not particularly efficient, but what can we do.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="18867" author="juergen.hoeller" created="Tue, 1 Aug 2006 23:28:14 +0000"  >&lt;p&gt;This is now finally fixed: DefaultMessageListenerContainer reobtains all JMS resource handles (including the Connection) for each transaction now, in case of an external transaction manager (&quot;transactionManager&quot;) specified. This will work with JtaTransactionManager as well as JmsTransactionManager (didn&apos;t work with the latter before), and should run out-of-the-box on JBoss as well.&lt;/p&gt;

&lt;p&gt;Note that there is no &quot;cacheSessions&quot; property anymore; DefaultMessageListenerContainer should adapt automatically now. Instead, there&apos;s a &quot;cacheLevel&quot;/&quot;cacheLevelName&quot; property that allows to override the default caching, in particular to enforce caching of the Connection or even Session and MessageConsumer in case of an external transaction manager (if known to work correctly, as an optimization).&lt;/p&gt;

&lt;p&gt;So the defaults should now be on the safe side in all cases.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10000">
                    <name>Duplicate</name>
                                                                <inwardlinks description="is duplicated by">
                                        <issuelink>
            <issuekey id="14283">SPR-2181</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="14284">SPR-2182</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        10 years, 22 weeks, 1 day ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 13 Jun 2006 09:27:09 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>false</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i04uov:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>28346</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>