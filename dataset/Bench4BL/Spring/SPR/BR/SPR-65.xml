<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 20:09:03 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-65/SPR-65.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-65] BeanWrapperImpl&apos;s thread-safety</title>
                <link>https://jira.spring.io/browse/SPR-65</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;Juergen, attached you&apos;ll find a testcase (and the fix for it) identifying the problem with the thread-safety of the BeanWrapperImpl and its property editors. I wanted to hand it over to you, since I don&apos;t know if the fixed might have implications.&lt;/p&gt;

&lt;p&gt;Alef&lt;/p&gt;

&lt;p&gt;p.s. posted on the list by Guillaume Poirier&lt;/p&gt;</description>
            <key id="10173">SPR-65</key>
            <summary>BeanWrapperImpl&apos;s thread-safety</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="juergen.hoeller">Juergen Hoeller</assignee>
                                    <reporter username="alef.arendsen">Alef Arendsen</reporter>
                        <labels>
                    </labels>
                <created>Sat, 6 Mar 2004 22:33:28 +0000</created>
                <updated>Tue, 9 Mar 2004 18:00:26 +0000</updated>
                            <resolved>Tue, 9 Mar 2004 18:00:26 +0000</resolved>
                                    <version>1.0 RC2</version>
                                    <fixVersion>1.0 final</fixVersion>
                                    <component>Core</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="10191" author="alef.arendsen" created="Sat, 6 Mar 2004 22:34:39 +0000"  >&lt;p&gt;The patch, adding a TestCase in org.springframework.beans and modifying the BeanWrapperImpl to instantiate propertyeditors when needed instead of putting them statically instantiating them only once. Patch delivered by Guillaume Poirier&lt;/p&gt;</comment>
                            <comment id="10192" author="alef.arendsen" created="Sun, 7 Mar 2004 01:33:02 +0000"  >&lt;p&gt;Another test case by Guillaume (see comments for his accompanying email)&lt;/p&gt;</comment>
                            <comment id="10193" author="alef.arendsen" created="Sun, 7 Mar 2004 01:34:01 +0000"  >&lt;p&gt;Guillaume&apos;s mail accompanying the tar.gz&lt;/p&gt;

&lt;p&gt;Also, I ran a similar Test Case against XmlBeanFactory with prototypes and custom PropertyEditors, and it failled the test.  I assume BeanFactory is supposed to be thread safe since it can be shared in a client-server environnement.  Making the method AbstractAutowireCapableBeanFactory.createBean(String, RootBeanDefinition) synchronized fixed my particular test case, but I&apos;m not sure if it&apos;s the best way to get around this problem.  The test case is attached to this mail, all of the files should go in the package org.springframework.beans.factory.&lt;/p&gt;</comment>
                            <comment id="10194" author="juergen.hoeller" created="Sun, 7 Mar 2004 19:57:23 +0000"  >&lt;p&gt;That&apos;s an important bugfix! It just affects applications that actually rely on those special default editors, though. Juergen&lt;/p&gt;</comment>
                            <comment id="10206" author="gpoirier" created="Tue, 9 Mar 2004 12:44:11 +0000"  >&lt;p&gt;Thank you for fixing the first bug so quickly.  However, the second attached file was refering another bug, althought related to the fact that PropertyEditors are not thread safe.  It affects BeanFactories with registered Custom Editors.  The code that creates non-thread safety pontential is in AbstractBeanFactory, since there&apos;s a shared Map of PropertyEditors.  The only class that seems to use it in a way that is non-thread safe is AbstractAutowireCapableBeanFactory, in the createBean and autowireConstructor (which is only called by createBean).  &lt;/p&gt;

&lt;p&gt;The non-thread safe case is really narrow though, even less likely to happen than the issue I reported for BeanWrapperImpl.  It is if two differents threads have the factory create two beans from different definitions concurently, using the same PropertyEditor passed to the factory throught factory.registerCustomEditor() (directly or with a post-processor).  The test case I provided reproduce the situation using prototypes.  For Singleton, I guess the only way for that to happen would be with lazy initialization.&lt;/p&gt;

&lt;p&gt;My particular failling test case can be made succesful by synchronizing the method AbstractAutowireCapableBeanFactory.createBean(), I think it would get rid of any situations where the factory can be non-thread safe.  However I&apos;m wondering why did sun make the PropertyEditors stateful, thus non-thread safe and instances not easily reusable.  It seems to serve no purpose, it could just have been conversion methods returning the converted value directly, it would have made possible for them to cache instances rather than class, and for users to registers instances rather than class.&lt;/p&gt;

&lt;p&gt;P.S. I also wanted to thank you for the amazing framework you&apos;ve done and great support you&apos;re providing. &lt;img class=&quot;emoticon&quot; src=&quot;https://jira.spring.io/images/icons/emoticons/smile.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="10207" author="juergen.hoeller" created="Tue, 9 Mar 2004 17:56:59 +0000"  >&lt;p&gt;BeanFactory thread-safety&lt;/p&gt;</comment>
                            <comment id="10208" author="juergen.hoeller" created="Tue, 9 Mar 2004 18:00:26 +0000"  >&lt;p&gt;Thanks for the second hint, Guillaume - I didn&apos;t notice it at first. I&apos;ve added minimal synchronization to the BeanFactory implementations, i.e. just when potentially converting property values, and just if there are custom editors registered.&lt;/p&gt;

&lt;p&gt;I completely agree regarding the java.beans.PropertyEditor design: The Sun architects could have offered straightforward textToValue and valueToText conversion methods, but unfortunately they didn&apos;t.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="10051" name="TestCase.tar.gz" size="1637" author="alef.arendsen" created="Sun, 7 Mar 2004 01:33:02 +0000"/>
                            <attachment id="10050" name="patch.txt" size="6417" author="alef.arendsen" created="Sat, 6 Mar 2004 22:34:39 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        12 years, 43 weeks, 2 days ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sun, 7 Mar 2004 19:57:23 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>false</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i04ypj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>28997</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                </customfields>
    </item>
</channel>
</rss>