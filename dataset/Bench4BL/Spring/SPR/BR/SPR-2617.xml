<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 20:23:20 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-2617/SPR-2617.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-2617] Uncategorized data access exception thrown for deadlock</title>
                <link>https://jira.spring.io/browse/SPR-2617</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;During update by using JdbcTemplate.update(String sql, Object[] args), I encounter exception due to deadlock. This is thrown as an SQLException. Exception log is&lt;/p&gt;

&lt;p&gt;exception: PreparedStatementCallback; uncategorized SQLException for SQL &lt;span class=&quot;error&quot;&gt;&amp;#91;UPDATE EMP_INFO SET ORG_NAME=?, EMP_MAME=?, WHERE EMP_ID=?&amp;#93;&lt;/span&gt;; SQL state &lt;span class=&quot;error&quot;&gt;&amp;#91;40001&amp;#93;&lt;/span&gt;; error code &lt;span class=&quot;error&quot;&gt;&amp;#91;1205&amp;#93;&lt;/span&gt;; Transaction (Process ID 58) was deadlocked on lock resources with another process and has been chosen as the deadlock victim. Rerun the transaction.; nested exception is java.sql.SQLException: Transaction (Process ID 58) was deadlocked on lock resources with another process and has been chosen as the deadlock victim. Rerun the transaction.&lt;/p&gt;

&lt;p&gt;In the above scenario, I encounter couple of issues:&lt;/p&gt;

&lt;p&gt;+ From application program code there is no way I can capture this exception (SQLException), and provide the information message. To do this I am forced to capture root exception (Exception) and provide necessary information message. &lt;br/&gt;
+ Currently JdbcTemplate.update() method throws only &apos;DataAccessException&apos; but when we look at source code we can see it internally executes PreparedStatementCallback.doInPreparedStatement() method, this method  throws SQLException. But as root JdbcTemplate.update() throws only &apos;DataAccessException&apos; so in this case I am not able to catch any SQLException. Please let me know is this a practice that I should not catch any SQLException in my application code?&lt;/p&gt;</description>
            <key id="15023">SPR-2617</key>
            <summary>Uncategorized data access exception thrown for deadlock</summary>
                <type id="4" iconUrl="https://jira.spring.io/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://jira.spring.io/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="3">Duplicate</resolution>
                                        <assignee username="thomas.risberg">Thomas Risberg</assignee>
                                    <reporter username="ilang98">Ilanchezhian</reporter>
                        <labels>
                    </labels>
                <created>Wed, 20 Sep 2006 19:56:47 +0000</created>
                <updated>Tue, 19 Jun 2012 02:28:17 +0000</updated>
                            <resolved>Mon, 26 Oct 2009 05:49:43 +0000</resolved>
                                    <version>2.0.6</version>
                                                    <component>Data</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="24556" author="erikhh" created="Wed, 27 Jun 2007 01:21:49 +0000"  >&lt;p&gt;You can capture the SQLException by implementing the SQLExceptionTranslator interface somewhere. This implementation should translate the SQL exception to a specific exception that extends from DataAccessException using the SQL error code. For example in this case it should translate SQLException whit error code 1205 to a DeadlockLoserDataAccessException. &lt;br/&gt;
Even better, maybe someone somehwere on the internet has already written a SQLExceptionTranslator for the database you&apos;re using, that would save you a lot of effort.&lt;/p&gt;

&lt;p&gt;Once the translation is in place you can catch the exceptions you&apos;re interested in.&lt;/p&gt;

&lt;p&gt;btw, since this is no bug but a usage issue. Please post it to the support forum (&lt;a href=&quot;http://forum.springframework.org/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://forum.springframework.org/&lt;/a&gt;) next time around. JIRA is meant for bug reports. Not for support.&lt;/p&gt;</comment>
                            <comment id="24562" author="juergen.hoeller" created="Wed, 27 Jun 2007 04:14:14 +0000"  >&lt;p&gt;Indeed, you should be able to catch DataAccessException and check the underlying SQLException root cause there (simply do a getCause call).&lt;/p&gt;

&lt;p&gt;As for the exception being thrown as uncategorized, we probably just need to add the specific error code to our default sql-error-codes.xml file (in the org.springframework.jdbc.support package). You may also adapt that file yourself and put it into the root of the classpath; the default exception translator will pick it up there.&lt;/p&gt;

&lt;p&gt;Which database are you using there? Let me know; I&apos;ll try to extend its deadlock error codes in our default sql-error-codes.xml file then. For that reason, I&apos;m turning this issue into an enhancement request.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="24580" author="donnchadh" created="Thu, 28 Jun 2007 00:17:03 +0000"  >&lt;p&gt;Looks like MS SQL server or Sybase. This bug report seems almost identical to &lt;a href=&quot;https://jira.spring.io/browse/SPR-1690&quot; title=&quot;SQL Server Error Code 1205 = DeadlockLoser&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SPR-1690&quot;&gt;&lt;del&gt;SPR-1690&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
Looking at the sql-error-codes.sql provided with spring 2.0.6 it appears that error code 1205 &lt;em&gt;is&lt;/em&gt; being transalated.&lt;/p&gt;</comment>
                            <comment id="24627" author="juergen.hoeller" created="Mon, 2 Jul 2007 03:33:28 +0000"  >&lt;p&gt;Indeed - I guess we need more details on why this is not automatically translated in the given scenario then...&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="46819" author="jnutting512" created="Sat, 19 Sep 2009 05:09:58 +0000"  >&lt;p&gt;We are also seeing this behavior in our application using JPA with Hibernate and the Merlia driver.  &lt;/p&gt;

&lt;p&gt;In the stack trace below, it looks like the correct error code (1205) is making its way to the SQLStateConverter.  I started to wonder whether our DatabaseProductName is not being correctly set to &quot;Microsoft SQL Server&quot;, but other exceptions appear to be correctly translated, such as dataIntegrityViolationCodes, so this does not seem likely.&lt;/p&gt;


&lt;p&gt;Stack trace excerpt:&lt;/p&gt;

&lt;p&gt;com.hare.feed.FeedProcessFatalException: org.springframework.orm.hibernate3.HibernateJdbcException: JDBC exception on Hibernate data access: SQLException for SQL &lt;span class=&quot;error&quot;&gt;&amp;#91;select listing0_.ListingGUID as Listing ... order by listing0_.createDate desc&amp;#93;&lt;/span&gt;; SQL state &lt;span class=&quot;error&quot;&gt;&amp;#91;40000&amp;#93;&lt;/span&gt;; error code &lt;span class=&quot;error&quot;&gt;&amp;#91;1205&amp;#93;&lt;/span&gt;; could not execute query; nested exception is org.hibernate.exception.GenericJDBCException: could not execute query        at com.hare.feed.AbstractFeedProcess.processXMLListing(AbstractFeedProcess.java:1285)&lt;br/&gt;
...&lt;br/&gt;
Caused by: org.springframework.orm.hibernate3.HibernateJdbcException: JDBC exception on Hibernate data access: SQLException for SQL [select listing0_.ListingGUID&lt;br/&gt;
...&lt;br/&gt;
Caused by: org.hibernate.exception.GenericJDBCException: could not execute query&lt;br/&gt;
        at org.hibernate.exception.SQLStateConverter.handledNonSpecificException(SQLStateConverter.java:126)&lt;br/&gt;
        at org.hibernate.exception.SQLStateConverter.convert(SQLStateConverter.java:114)&lt;br/&gt;
...&lt;br/&gt;
Caused by: com.inet.tds.ab: Msg 1205, Level 13, State 51, Line 1, Sqlstate 40000&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;AUS-DEV-SQL01\STG&amp;#93;&lt;/span&gt;Transaction (Process ID 86) was deadlocked on lock resources with another process and has been chosen as the deadlock victim. Rerun the transaction.&lt;br/&gt;
        at com.inet.tds.bb.a(Unknown Source)&lt;/p&gt;


&lt;p&gt;Pertinent Spring beans:&lt;/p&gt;

&lt;p&gt;	&amp;lt;!-- JPA EntityManagerFactory --&amp;gt;&lt;br/&gt;
	&amp;lt;bean id=&quot;entityManagerFactory&quot; class=&quot;org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean&quot;&lt;br/&gt;
			p:dataSource-ref=&quot;dataSource&quot;&amp;gt;&lt;br/&gt;
		&amp;lt;property name=&quot;jpaVendorAdapter&quot;&amp;gt;&lt;br/&gt;
			&amp;lt;bean class=&quot;org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter&quot;&lt;br/&gt;
				p:databasePlatform=&quot;com.hare.platform.hibernate.UnicodeSQLServerDialect&quot;&lt;br/&gt;
				p:generateDdl=&quot;false&quot; &lt;br/&gt;
				p:showSql=&quot;false&quot;&lt;br/&gt;
			/&amp;gt;&lt;br/&gt;
		&amp;lt;/property&amp;gt;&lt;br/&gt;
	&amp;lt;/bean&amp;gt;&lt;/p&gt;

&lt;p&gt;  	&amp;lt;!-- Merlia pooled datasource --&amp;gt;&lt;br/&gt;
	&amp;lt;bean id=&quot;dataSource&quot; class=&quot;com.inet.tds.PDataSource&quot; lazy-init=&quot;true&quot;&amp;gt;&lt;br/&gt;
		...&lt;br/&gt;
	&amp;lt;/bean&amp;gt;&lt;/p&gt;</comment>
                            <comment id="46820" author="jnutting512" created="Sat, 19 Sep 2009 05:20:49 +0000"  >&lt;p&gt;I left out one thing:&lt;/p&gt;

&lt;p&gt;package com.hare.platform.hibernate;&lt;br/&gt;
public class UnicodeSQLServerDialect extends org.hibernate.dialect.SQLServerDialect {&lt;br/&gt;
...&lt;br/&gt;
}&lt;/p&gt;</comment>
                            <comment id="46821" author="jnutting512" created="Sat, 19 Sep 2009 05:47:32 +0000"  >&lt;p&gt;I left out the part of the stack trace where the Spring translation is being done.  Here&apos;s a more complete one:&lt;/p&gt;

&lt;p&gt;com.hare.feed.FeedProcessFatalException: org.springframework.orm.hibernate3.HibernateJdbcException: JDBC exception on Hibernate data access: SQLException for SQL &lt;span class=&quot;error&quot;&gt;&amp;#91;select listing0_.ListingGUID as ListingG1_3_0_, ... order by listing0_.createDate desc&amp;#93;&lt;/span&gt;; SQL state &lt;span class=&quot;error&quot;&gt;&amp;#91;40000&amp;#93;&lt;/span&gt;; error code &lt;span class=&quot;error&quot;&gt;&amp;#91;1205&amp;#93;&lt;/span&gt;; could not execute query; nested exception is org.hibernate.exceptio&lt;br/&gt;
n.GenericJDBCException: could not execute query&lt;br/&gt;
        at com.hare.feed.AbstractFeedProcess.processXMLListing(AbstractFeedProcess.java:1285)&lt;br/&gt;
        at com.hare.feed.AbstractFeedProcess.access$000(AbstractFeedProcess.java:97)&lt;br/&gt;
        at com.hare.feed.AbstractFeedProcess$ProcessListingsCallable.call(AbstractFeedProcess.java:2531)&lt;br/&gt;
        at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)&lt;br/&gt;
        at java.util.concurrent.FutureTask.run(FutureTask.java:138)&lt;br/&gt;
        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:441)&lt;br/&gt;
        at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)&lt;br/&gt;
        at java.util.concurrent.FutureTask.run(FutureTask.java:138)&lt;br/&gt;
        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)&lt;br/&gt;
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)&lt;br/&gt;
        at java.lang.Thread.run(Thread.java:619)&lt;br/&gt;
Caused by: org.springframework.orm.hibernate3.HibernateJdbcException: JDBC exception on Hibernate data access: SQLException for SQL &lt;span class=&quot;error&quot;&gt;&amp;#91;select listing0_.ListingGUID as ListingG1_3_0_, ... order by listing0_.createDate desc&amp;#93;&lt;/span&gt;; SQL state &lt;span class=&quot;error&quot;&gt;&amp;#91;40000&amp;#93;&lt;/span&gt;; error code &lt;span class=&quot;error&quot;&gt;&amp;#91;1205&amp;#93;&lt;/span&gt;; could not execute query; nested exception is org.hibernate.exception.GenericJDBCException: could not execute query&lt;br/&gt;
        at org.springframework.orm.hibernate3.SessionFactoryUtils.convertHibernateAccessException(SessionFactoryUtils.java:642)&lt;br/&gt;
        at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:95)&lt;br/&gt;
        at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:352)&lt;br/&gt;
        at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:62)&lt;br/&gt;
        at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:212)&lt;br/&gt;
        at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:146)&lt;br/&gt;
        at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)&lt;br/&gt;
        at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:106)&lt;br/&gt;
        at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)&lt;br/&gt;
        at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:89)&lt;br/&gt;
        at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)&lt;br/&gt;
        at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:204)&lt;br/&gt;
        at $Proxy67.findActiveListing(Unknown Source)&lt;br/&gt;
        at com.hare.feed.AbstractFeedProcess.processXMLListing(AbstractFeedProcess.java:940)&lt;br/&gt;
        ... 10 more&lt;br/&gt;
Caused by: org.hibernate.exception.GenericJDBCException: could not execute query&lt;br/&gt;
        at org.hibernate.exception.SQLStateConverter.handledNonSpecificException(SQLStateConverter.java:126)&lt;br/&gt;
        at org.hibernate.exception.SQLStateConverter.convert(SQLStateConverter.java:114)&lt;br/&gt;
        at org.hibernate.exception.JDBCExceptionHelper.convert(JDBCExceptionHelper.java:66)&lt;br/&gt;
        at org.hibernate.loader.Loader.doList(Loader.java:2231)&lt;br/&gt;
        at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2125)&lt;br/&gt;
        at org.hibernate.loader.Loader.list(Loader.java:2120)&lt;br/&gt;
        at org.hibernate.loader.hql.QueryLoader.list(QueryLoader.java:401)&lt;br/&gt;
        at org.hibernate.hql.ast.QueryTranslatorImpl.list(QueryTranslatorImpl.java:361)&lt;br/&gt;
        at org.hibernate.engine.query.HQLQueryPlan.performList(HQLQueryPlan.java:196)&lt;br/&gt;
        at org.hibernate.impl.SessionImpl.list(SessionImpl.java:1148)&lt;br/&gt;
        at org.hibernate.impl.QueryImpl.list(QueryImpl.java:102)&lt;br/&gt;
        at org.hibernate.ejb.QueryImpl.getResultList(QueryImpl.java:67)&lt;br/&gt;
        at com.hare.domain.dao.impl.ListingDaoJpaImpl.findActiveListing(ListingDaoJpaImpl.java:44)&lt;br/&gt;
        at sun.reflect.GeneratedMethodAccessor84.invoke(Unknown Source)&lt;br/&gt;
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;br/&gt;
        at java.lang.reflect.Method.invoke(Method.java:597)&lt;br/&gt;
        at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:307)&lt;br/&gt;
        at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:182)&lt;br/&gt;
        at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)&lt;br/&gt;
        at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)&lt;br/&gt;
        ... 18 more&lt;br/&gt;
Caused by: com.inet.tds.ab: Msg 1205, Level 13, State 51, Line 1, Sqlstate 40000&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;AUS-DEV-SQL01\STG&amp;#93;&lt;/span&gt;Transaction (Process ID 86) was deadlocked on lock resources with another process and has been chosen as the deadlock victim. Rerun the transaction.&lt;br/&gt;
        at com.inet.tds.bb.a(Unknown Source)&lt;br/&gt;
        at com.inet.tds.l.b(Unknown Source)&lt;br/&gt;
        at com.inet.tds.l.a(Unknown Source)&lt;br/&gt;
        at com.inet.tds.l.a(Unknown Source)&lt;br/&gt;
        at com.inet.tds.ae.g(Unknown Source)&lt;br/&gt;
        at com.inet.tds.ae.executeQuery(Unknown Source)&lt;br/&gt;
        at com.inet.pool.PoolPreparedStatement.executeQuery(Unknown Source)&lt;br/&gt;
        at org.hibernate.jdbc.AbstractBatcher.getResultSet(AbstractBatcher.java:208)&lt;br/&gt;
        at org.hibernate.loader.Loader.getResultSet(Loader.java:1808)&lt;br/&gt;
        at org.hibernate.loader.Loader.doQuery(Loader.java:697)&lt;br/&gt;
        at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:259)&lt;br/&gt;
        at org.hibernate.loader.Loader.doList(Loader.java:2228)&lt;br/&gt;
        ... 34 more&lt;/p&gt;</comment>
                            <comment id="47670" author="thomas.risberg" created="Mon, 26 Oct 2009 05:49:43 +0000"  >&lt;p&gt;In the Hibernate/JPA case it is Hibernate that does the translation into a org.hibernate.exception.GenericJDBCException which in turn gets translated to a org.springframework.orm.hibernate3.HibernateJdbcException which extends UncategorizedDataAccessException. So the sql-error-codes.sql is never used for this scenario. The original question was regarding JDBC usage and in this case the sql-error-codes.xml is used to translate and the resulting exception should be a DeadlockLoserDataAccessException.&lt;/p&gt;

&lt;p&gt;Original posting is about 3 years old now and we have added the 1205 code to the translation. I think it&apos;s safe to finally close this issue.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10000">
                    <name>Duplicate</name>
                                            <outwardlinks description="duplicates">
                                        <issuelink>
            <issuekey id="13317">SPR-1690</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        7 years, 9 weeks, 3 days ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 27 Jun 2007 01:21:49 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>false</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i01egn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>8220</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>