<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 20:51:23 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-2478/SPR-2478.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-2478] using JMSTemplate.execute(SessionCallback, true) never stops the connection it has started.</title>
                <link>https://jira.spring.io/browse/SPR-2478</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;We see odd behaviour when we manually create a MessageReceiver in a SessionCallback, and start the connection.&lt;br/&gt;
Using ethereal we can see that Websphere is polling the MQ a lot, every millisecond we se a MQ_REQUEST/REPLY.&lt;/p&gt;

&lt;p&gt;My guess, after looking at the source is that you never stop the connection again, just call closeConnection, which delegates the close to the managed connection, that propably just returns the connection to the pool.&lt;/p&gt;

&lt;p&gt;The offending code is this:&lt;/p&gt;

&lt;p&gt;			public Object doInJms(Session session) throws JMSException {&lt;br/&gt;
				log.debug(&quot;leder i messagecache&quot;);&lt;br/&gt;
				try {&lt;br/&gt;
					InitialContext i = new InitialContext();&lt;br/&gt;
					Queue q = (Queue) i.lookup(getQueueName());&lt;br/&gt;
					String selector =&lt;br/&gt;
						&quot;JMSMessageID=&apos;ID:&quot;&lt;br/&gt;
							+ transaktion.getFormidlingsmaskineId()&lt;br/&gt;
							+ &quot;&apos;&quot;;&lt;br/&gt;
					log.debug(&quot;leder efter &quot; + selector);&lt;br/&gt;
					MessageConsumer mc =&lt;br/&gt;
						((QueueSession) session).createReceiver(q,selector);&lt;br/&gt;
					log.debug(&quot;selector er &quot; + mc.getMessageSelector());&lt;br/&gt;
					Message m = mc.receiveNoWait();&lt;br/&gt;
					if (m == null) &lt;/p&gt;
{
						transaktion.setHeader(null);
					}
&lt;p&gt; else &lt;/p&gt;
{
						MessageHeader header =
							MessageHeader.newInstance(parseBody(m));
						transaktion.setHeader(header);
					}
&lt;p&gt;				} catch (NamingException e) &lt;/p&gt;
{
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
&lt;p&gt;				return null;&lt;br/&gt;
			}&lt;/p&gt;

&lt;p&gt;		},true);&lt;/p&gt;</description>
            <key id="14829">SPR-2478</key>
            <summary>using JMSTemplate.execute(SessionCallback, true) never stops the connection it has started.</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="juergen.hoeller">Juergen Hoeller</assignee>
                                    <reporter username="wilken">Morten Wilken</reporter>
                        <labels>
                    </labels>
                <created>Thu, 24 Aug 2006 20:10:19 +0000</created>
                <updated>Tue, 19 Jun 2012 03:50:45 +0000</updated>
                            <resolved>Wed, 30 Aug 2006 09:51:44 +0000</resolved>
                                    <version>1.2.6</version>
                                    <fixVersion>2.0 RC4</fixVersion>
                                    <component>JMS</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="19246" author="juergen.hoeller" created="Tue, 29 Aug 2006 02:57:01 +0000"  >&lt;p&gt;The problem here is that we&apos;re not supposed to call Connection.stop() on a managed Connection in the first place... (according to the J2EE spec)&lt;/p&gt;

&lt;p&gt;Still, I consider adding a stop call with an all-encompassing catch block...&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="19316" author="juergen.hoeller" created="Wed, 30 Aug 2006 09:51:44 +0000"  >&lt;p&gt;I&apos;ve added corresponding stop calls wherever we close a JMS Connection, with a catch block that logs any exception thrown at debug level. This should work in all scenarios, even with a standard J2EE environment where stop calls are forbidden (or ignored). If any issues are encountered, we&apos;ll have to think of a more specific solution...&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="21633" author="juergen.hoeller" created="Thu, 4 Jan 2007 17:55:01 +0000"  >&lt;p&gt;As per &lt;a href=&quot;https://jira.spring.io/browse/SPR-3010&quot; title=&quot;DefaultMessageListenerContainer calls Connection.stop() in a Java EE environment&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SPR-3010&quot;&gt;&lt;del&gt;SPR-3010&lt;/del&gt;&lt;/a&gt;, I have decided to remove the try-stop-then-close sequence from both JmsTemplate and DefaultMessageListenerContainer: They simply perform a straight &quot;close()&quot; call now (again). The reasoning is that even a stop &lt;b&gt;attempt&lt;/b&gt; apparently leads to complaints from a J2EE vendor... And in general, a &quot;close()&quot; call should be sufficient; proper connection pools should perform proper stopping.&lt;/p&gt;

&lt;p&gt;As a solution to still get try-stop-then-close behavior, I&apos;ve introduced a DelegatingConnectionFactory class (similar to our existing DelegatingDataSource class), which can be defined inbetween the target ConnectionFactory and the client beans. DelegatingConnectionFactory offers a &quot;shouldStopConnections&quot; flag, off by default: This can be switched on to get try-stop-then-close behavior, if needed. For efficiency, this is not done in Connection wrapper proxies but rather just indicated to client code (such as JmsTemplate and DefaultMessageListenerContainer), which then performs the stop calls if demanded.&lt;/p&gt;

&lt;p&gt;So for your scenario, please define a DelegatingConnectionFactory with &quot;shouldStopConnections&quot;=&quot;true&quot; inbetween.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10011">
                    <name>Depends</name>
                                                                <inwardlinks description="is depended on by">
                                        <issuelink>
            <issuekey id="15818">SPR-3010</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        10 years ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 29 Aug 2006 02:57:01 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>false</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i00w2n:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5241</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>