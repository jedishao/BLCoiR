<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 19:42:15 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-1812/SPR-1812.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-1812] SchedulerFactoryBean has race condition in Quartz cluster</title>
                <link>https://jira.spring.io/browse/SPR-1812</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;If you try to have the SchedulerFactoryBean add the same Trigger in two Quartz clustered instances (and you are only adding Triggers), you can get a race condition in registerJobsAndTriggers() where both instances don&apos;t find the Trigger, and both then try to add it using scheduleJob.  In this case, the last one in will fail with an org.quartz.ObjectAlreadyExistsException, which will keep the SchedulerFactoryBean  from successfully starting.  &lt;/p&gt;

&lt;p&gt;There is discussion of this issue in the Quartz forums here: &lt;a href=&quot;http://forums.opensymphony.com/thread.jspa?messageID=45028&amp;amp;#45028&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://forums.opensymphony.com/thread.jspa?messageID=45028&amp;amp;#45028&lt;/a&gt;&lt;br/&gt;
and here: &lt;a href=&quot;http://forums.opensymphony.com/thread.jspa?messageID=45027&amp;amp;#45027&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://forums.opensymphony.com/thread.jspa?messageID=45027&amp;amp;#45027&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There is a similar issue in the org.quartz.plugins.xml.JobInitializationPlugin as documented here:&lt;br/&gt;
&lt;a href=&quot;http://jira.opensymphony.com/browse/QUARTZ-295&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://jira.opensymphony.com/browse/QUARTZ-295&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Spring is actually exposed to this QUARTZ-295 problem as well because registerJobsAndTriggers() can make use of ResourceJobSchedulingDataProcessor which extends the JobSchedulingDataProcessor.  However, this can only manifest itself if the user didn&apos;t provide a transactionManager to the SchedulerFactoryBean.&lt;/p&gt;

&lt;p&gt;Unfortunately, there is no great way to fix these problems right now without some enhancements to the Quartz interface.  &lt;/p&gt;

&lt;p&gt;My best suggestion for solving the first problem right now is to catch the ObjectAlreadyExistsException thrown by this.scheduler.scheduleJob(trigger) and either&lt;br/&gt;
   a. Simply swallow the exception, possibly with a log message indicating that this is assumed to be due to a cluster race condition and can be safely ignored.&lt;br/&gt;
   b. Try to rescheduleJob() the Trigger if overwriteExistingJobs is true.&lt;/p&gt;

&lt;p&gt;There isn&apos;t much that can be done about the second problem other than perhaps emphasising in the javadoc that you should be passing in a transactionManager if you are using the jobSchedulingDataLocation(s) properties.&lt;/p&gt;

&lt;p&gt;As an aside, it is a little unclear to me why, if a Trigger is not new, but is a JobDetailAwareTrigger, SchedulerFactoryBean does not try to replace the Trigger&apos;s JobDetail.  I&apos;m not sure the current behavior would be expected, and I think it would be easy to assume the opposite based on the current SchedulerFactoryBean javadoc.&lt;/p&gt;</description>
            <key id="13594">SPR-1812</key>
            <summary>SchedulerFactoryBean has race condition in Quartz cluster</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="juergen.hoeller">Juergen Hoeller</assignee>
                                    <reporter username="perfnorm">Jasper Rosenberg</reporter>
                        <labels>
                    </labels>
                <created>Wed, 22 Mar 2006 23:16:42 +0000</created>
                <updated>Tue, 19 Jun 2012 03:54:03 +0000</updated>
                            <resolved>Sat, 25 Mar 2006 06:50:54 +0000</resolved>
                                    <version>1.2.7</version>
                    <version>2.0 M3</version>
                                    <fixVersion>1.2.8</fixVersion>
                    <fixVersion>2.0 M4</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="16952" author="juergen.hoeller" created="Sat, 25 Mar 2006 06:50:54 +0000"  >&lt;p&gt;Thanks for pointing this out in such clear detail, Jasper! You insider input is greatly appreciated &lt;img class=&quot;emoticon&quot; src=&quot;https://jira.spring.io/images/icons/emoticons/smile.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;I&apos;ve addressed these issues as you suggested, also re-registering JobDetails held by a JobDetailAwareTrigger.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="16956" author="perfnorm" created="Sat, 25 Mar 2006 13:03:47 +0000"  >&lt;p&gt;Glad I could be helpful.  I&apos;ve certainly taken advantage of the great Spring-Quartz integration on my own projects.&lt;/p&gt;

&lt;p&gt;I took a glance at the changes you made, and they look good to me.  I did have one quick thought though, which was that the javadoc for the return value of addTriggerToScheduler() doesn&apos;t quite synch with the behavior of the method. &lt;/p&gt;

&lt;p&gt;It reads:&lt;br/&gt;
@return &amp;lt;code&amp;gt;true&amp;lt;/code&amp;gt; if the trigger was actually added, &amp;lt;code&amp;gt;false&amp;lt;/code&amp;gt; if it already existed before&lt;/p&gt;

&lt;p&gt;I think it probably should read something along the lines of:&lt;br/&gt;
@return &amp;lt;code&amp;gt;true&amp;lt;/code&amp;gt; if the trigger was actually added or replaced, &amp;lt;code&amp;gt;false&amp;lt;/code&amp;gt; if it already existed and &amp;lt;code&amp;gt;overwriteExistingJobs&amp;lt;/code&amp;gt; is false&lt;/p&gt;

&lt;p&gt;I think that if I understood the intent correctly, you would also want to return false when the scheduleJob(trigger) fails and overwriteExistingJobs is false, something like:&lt;/p&gt;

&lt;p&gt;  	                          if (!triggerExists) {&lt;br/&gt;
  	                                 try &lt;/p&gt;
{
  	                                         this.scheduler.scheduleJob(trigger);
  	                                 }
&lt;p&gt;  	                                 catch (ObjectAlreadyExistsException ex) {&lt;br/&gt;
  	                                         if (logger.isDebugEnabled()) &lt;/p&gt;
{
  	                                                 logger.debug(&quot;Unexpectedly found existing trigger, assumably due to cluster race condition: &quot; +
  	                                                                 ex.getMessage() + &quot; - can safely be ignored&quot;);
  	                                         }
&lt;p&gt;  	                                         if (this.overwriteExistingJobs) &lt;/p&gt;
{
  	                                                 this.scheduler.rescheduleJob(trigger.getName(), trigger.getGroup(), trigger);
  	                                         }
&lt;p&gt;  	                                         else &lt;/p&gt;
{ // The new block
  	                                                 return false;
  	                                         }
&lt;p&gt;  	                                 }&lt;br/&gt;
  	                         }&lt;/p&gt;

&lt;p&gt;Of course, all this is technically moot right now since it is the ignored return value of a private method &lt;img class=&quot;emoticon&quot; src=&quot;https://jira.spring.io/images/icons/emoticons/smile.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        10 years, 40 weeks, 5 days ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sat, 25 Mar 2006 06:50:54 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>true</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i046rz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>24472</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>