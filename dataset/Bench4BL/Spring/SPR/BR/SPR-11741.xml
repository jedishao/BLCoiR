<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 20:57:18 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-11741/SPR-11741.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-11741] JdbcTemplate.execute(PreparedStatement) request for ResultSet auto-close support</title>
                <link>https://jira.spring.io/browse/SPR-11741</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;Many of the JdbcTemplate.execute(..) methods take Statement*Callback parameters, which is awesome, and this architecture affords the opportunity to auto-close a statement&apos;s ResultObject in the finally block of the execute(..)  methods right after closeStatement(..) and so remove an easy trap for programmer to fall in by failing to close the ResultSet in their callback. &lt;/p&gt;

&lt;p&gt;Since this auto-close behavior is not in the execute() methods, not even as optional behavior, all users of JdbcTemplate must close the statement at the bottom of their *Statement*Callback methods.&lt;/p&gt;

&lt;p&gt;Perhaps it was preferred this way, to encourage folks to close their resources as soon as possible, rather than wait for an auto-close of the ResultSet in the JdbcTemplate.execute(..) methods.  Its true that the DB resources are precious and for maximum concurrency and throughput, one does not want to wait for the auto-close a hundred or so VM instructions later in JdbcTemplate.execute(..).   That easily must save a fraction of a second of time of holding those resources, but forcing the programmers to do it in their callbacks.&lt;/p&gt;

&lt;p&gt;I understand the concern for maximum DB performance, I really do.  However in this case, I believe the trade-off in terms of API-safety, and lines of code to maintain is steep.&lt;/p&gt;

&lt;p&gt;I am proposing an optional auto-close of ResultSet driven by a -Dproperty.&lt;br/&gt;
	//-------------------------------------------------------------------------&lt;br/&gt;
	// Methods dealing with prepared statements&lt;br/&gt;
	//-------------------------------------------------------------------------&lt;/p&gt;

&lt;p&gt;	public &amp;lt;T&amp;gt; T execute(PreparedStatementCreator psc, PreparedStatementCallback&amp;lt;T&amp;gt; action)&lt;br/&gt;
			throws DataAccessException {&lt;/p&gt;

&lt;p&gt;		Assert.notNull(psc, &quot;PreparedStatementCreator must not be null&quot;);&lt;br/&gt;
		Assert.notNull(action, &quot;Callback object must not be null&quot;);&lt;br/&gt;
		if (logger.isDebugEnabled()) &lt;/p&gt;
{
			String sql = getSql(psc);
			logger.debug(&quot;Executing prepared SQL statement&quot; + (sql != null ? &quot; [&quot; + sql + &quot;]&quot; : &quot;&quot;));
		}

&lt;p&gt;		Connection con = DataSourceUtils.getConnection(getDataSource());&lt;br/&gt;
		PreparedStatement ps = null;&lt;br/&gt;
		try {&lt;br/&gt;
			Connection conToUse = con;&lt;br/&gt;
			if (this.nativeJdbcExtractor != null &amp;amp;&amp;amp;&lt;br/&gt;
					this.nativeJdbcExtractor.isNativeConnectionNecessaryForNativePreparedStatements()) &lt;/p&gt;
{
				conToUse = this.nativeJdbcExtractor.getNativeConnection(con);
			}
&lt;p&gt;			ps = psc.createPreparedStatement(conToUse);&lt;br/&gt;
			applyStatementSettings(ps);&lt;br/&gt;
			PreparedStatement psToUse = ps;&lt;br/&gt;
			if (this.nativeJdbcExtractor != null) &lt;/p&gt;
{
				psToUse = this.nativeJdbcExtractor.getNativePreparedStatement(ps);
			}
&lt;p&gt;			T result = action.doInPreparedStatement(psToUse); // calls DAO HERE, T=MaxVoipLineInfo&lt;br/&gt;
			handleWarnings(ps);&lt;br/&gt;
			return result;&lt;br/&gt;
		}&lt;br/&gt;
		catch (SQLException ex) {&lt;br/&gt;
			// Release Connection early, to avoid potential connection pool deadlock&lt;br/&gt;
			// in the case when the exception translator hasn&apos;t been initialized yet.&lt;br/&gt;
			if (psc instanceof ParameterDisposer) &lt;/p&gt;
{
				((ParameterDisposer) psc).cleanupParameters();
			}&lt;br/&gt;
			String sql = getSql(psc);&lt;br/&gt;
			psc = null;&lt;br/&gt;
			JdbcUtils.closeStatement(ps);&lt;br/&gt;
			ps = null;&lt;br/&gt;
			DataSourceUtils.releaseConnection(con, getDataSource());&lt;br/&gt;
			con = null;&lt;br/&gt;
			throw getExceptionTranslator().translate(&quot;PreparedStatementCallback&quot;, sql, ex);&lt;br/&gt;
		}&lt;br/&gt;
		finally {&lt;br/&gt;
			if (psc instanceof ParameterDisposer) {				((ParameterDisposer) psc).cleanupParameters();			}
&lt;p&gt;			JdbcUtils.closeStatement(ps); &lt;br/&gt;
                        // HERE we would test a JVM property 			             ResultSet rs = ps.getResultSet()   // INS LINE 1&lt;br/&gt;
			if( rs != null ) &lt;/p&gt;
{	  // INS LINE 2
				rs.close();   // INS LINE 3
			}
&lt;p&gt;            // INS LINE 4&lt;br/&gt;
			DataSourceUtils.releaseConnection(con, getDataSource());&lt;br/&gt;
		}&lt;br/&gt;
	}&lt;/p&gt;</description>
            <key id="57372">SPR-11741</key>
            <summary>JdbcTemplate.execute(PreparedStatement) request for ResultSet auto-close support</summary>
                <type id="2" iconUrl="https://jira.spring.io/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="4" iconUrl="https://jira.spring.io/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="3">Duplicate</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="matthew.public1">Matthew Pope</reporter>
                        <labels>
                    </labels>
                <created>Fri, 25 Apr 2014 18:06:43 +0000</created>
                <updated>Sun, 27 Apr 2014 08:37:18 +0000</updated>
                            <resolved>Sun, 27 Apr 2014 08:37:18 +0000</resolved>
                                                                    <component>Data:JDBC</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                    <timeoriginalestimate seconds="86400">3d</timeoriginalestimate>
                            <timeestimate seconds="86400">3d</timeestimate>
                                            <issuelinks>
                            <issuelinktype id="10151">
                    <name>Relate</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="57373">SPR-11742</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        2 years, 34 weeks, 6 days ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>true</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>juergen.hoeller</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i07ic7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>43843</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>