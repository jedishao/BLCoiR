<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 21:11:10 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-5145/SPR-5145.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-5145] Spring TestContext Framework not compatible with JUnit 4.5</title>
                <link>https://jira.spring.io/browse/SPR-5145</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;After upgrading to junit 4.5 my test class which uses the SpringJUnit4ClassRunner gets a NoClassDefFoundError:&lt;/p&gt;

&lt;p&gt;org.apache.maven.surefire.booter.SurefireExecutionException: org/junit/Assume$AssumptionViolatedException; nested exception is java.lang.NoClassDefFoundError: org/junit/Assume$AssumptionViolatedException&lt;br/&gt;
java.lang.NoClassDefFoundError: org/junit/Assume$AssumptionViolatedException&lt;br/&gt;
	at org.springframework.test.context.junit4.SpringMethodRoadie.runTestMethod(SpringMethodRoadie.java:240)&lt;br/&gt;
	at org.springframework.test.context.junit4.SpringMethodRoadie$RunBeforesThenTestThenAfters.run(SpringMethodRoadie.java:333)&lt;br/&gt;
	at org.springframework.test.context.junit4.SpringMethodRoadie.runWithRepetitions(SpringMethodRoadie.java:217)&lt;br/&gt;
	at org.springframework.test.context.junit4.SpringMethodRoadie.runTest(SpringMethodRoadie.java:197)&lt;br/&gt;
	at org.springframework.test.context.junit4.SpringMethodRoadie.run(SpringMethodRoadie.java:143)&lt;br/&gt;
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.invokeTestMethod(SpringJUnit4ClassRunner.java:142)&lt;br/&gt;
	at org.junit.internal.runners.JUnit4ClassRunner.runMethods(JUnit4ClassRunner.java:59)&lt;/p&gt;

&lt;p&gt;etc.&lt;/p&gt;

&lt;p&gt;This is a Junit 4.5 issue.  The static class AssumptionViolatedException within org.junit.Assume that existed in 4.4 has become org.junit.internal.AssumptionViolatedException.&lt;/p&gt;

&lt;p&gt;The file tiger/mock/org/springframework/test/context/junit4/SpringMethodRoadie.java imports org.junit.Assume.AssumptionViolatedException which is why my test is failing.&lt;/p&gt;

&lt;p&gt;Workaround is to stick with Junit 4.4.&lt;/p&gt;

&lt;p&gt;(Aside: are there plans to create a &quot;SpringTEST&quot; component?).&lt;/p&gt;
</description>
            <key id="23918">SPR-5145</key>
            <summary>Spring TestContext Framework not compatible with JUnit 4.5</summary>
                <type id="4" iconUrl="https://jira.spring.io/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="sbrannen">Sam Brannen</assignee>
                                    <reporter username="alisonr">Alison Rosewarne</reporter>
                        <labels>
                    </labels>
                <created>Mon, 8 Sep 2008 12:16:48 +0000</created>
                <updated>Tue, 19 Jun 2012 03:47:37 +0000</updated>
                            <resolved>Wed, 29 Apr 2009 13:47:24 +0000</resolved>
                                    <version>2.5.5</version>
                                    <fixVersion>3.0 M3</fixVersion>
                                    <component>Test</component>
                        <due></due>
                            <votes>3</votes>
                                    <watches>11</watches>
                                                                <comments>
                            <comment id="39586" author="kaipe" created="Sat, 13 Sep 2008 23:29:52 +0000"  >&lt;p&gt;On top of the patch - make sure you also replace the old spring/lib/junit/junit-4.4.jar with the new junit-4.5.jar, which can be downloaded here:&lt;br/&gt;
&lt;a href=&quot;http://sourceforge.net/project/showfiles.php?group_id=15278&amp;amp;package_id=12472&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://sourceforge.net/project/showfiles.php?group_id=15278&amp;amp;package_id=12472&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The patch offers a solution where SpringJUnit4ClassRunner extends the new JUnit4.5 class &quot;BlockJUnit4Runner&quot;, which offers much better possibilities for extension and reuse than the old class JUnit4ClassRunner, which have been deprecated.&lt;/p&gt;

&lt;p&gt;This also means that backward-compability to JUnit-4.4 is broken but I think it is worth it. Its default class-runner JUnit4ClassRunner was not really supposed to be extended the way SpringJUnit4ClassRunner did it. (Not that there was any good alternative but still ...) Also, by switching to JUnit-4.5 the classes SpringTestMethod and SpringMethodRoadie can be removed.&lt;/p&gt;</comment>
                            <comment id="39597" author="juergen.hoeller" created="Sun, 14 Sep 2008 23:29:28 +0000"  >&lt;p&gt;I&apos;m afraid we can&apos;t move to JUnit 4.5+ in the Spring 2.5.x branch. However, in the upcoming Spring 3.0 branch, we&apos;ll build on JUnit 4.5.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="39598" author="koxo" created="Sun, 14 Sep 2008 23:42:48 +0000"  >&lt;p&gt;Please make sure you use junit:junit-dep:4.5 rather than junit:junit:4.5. It properly defines a dependency on org.hamcrest:hamcrest-core:1.1 whereas junit:junit:4.5 bundles the classes inside of itself. This causes problems when using org.jmock:jmock-junit4:2.5.1 because hamcrest classes then appear twice on classpath.&lt;/p&gt;</comment>
                            <comment id="39788" author="paul4christ79" created="Mon, 22 Sep 2008 03:42:14 +0000"  >&lt;p&gt;What prevents the fix in 2.5?&lt;/p&gt;</comment>
                            <comment id="39790" author="juergen.hoeller" created="Mon, 22 Sep 2008 04:06:42 +0000"  >&lt;p&gt;Well, the 2.5 branch entered strict maintenance mode last week. While we are in principle still able to support new versions of third-party dependencies, we can&apos;t raise the minimum level unless the previously supported version was pre-release software. Unfortunately it seems that supporting JUnit 4.5 here means requiring JUnit 4.5+; we can&apos;t do that before Spring 3.0 since all sorts of present build and development environments have JUnit 4.4 baked into them. It&apos;s unpleasant but not our fault - there was no better way of doing the test context framework against the hard-to-extend JUnit 4.4.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="43857" author="sbrannen" created="Mon, 27 Apr 2009 18:27:39 +0000"  >&lt;p&gt;Reopening to complete the migration from JUnit 4.4 to JUnit 4.5 including custom Statements and extension of BlockJUnit4ClassRunner.&lt;/p&gt;</comment>
                            <comment id="43883" author="juergen.zimmermann" created="Wed, 29 Apr 2009 02:26:40 +0000"  >&lt;p&gt;JUnit 4.6 is already available.&lt;/p&gt;</comment>
                            <comment id="43889" author="sbrannen" created="Wed, 29 Apr 2009 13:47:24 +0000"  >&lt;p&gt;The Spring TestContext Framework is now based on JUnit 4.5.&lt;/p&gt;</comment>
                            <comment id="45197" author="leojhartiv" created="Tue, 30 Jun 2009 00:09:35 +0000"  >&lt;p&gt;Is there a patch for Spring 2.5.6 and Junit 4.5 available?  This one seems to only apply to Spring 2.5.5.&lt;/p&gt;</comment>
                            <comment id="45198" author="sbrannen" created="Tue, 30 Jun 2009 02:00:55 +0000"  >&lt;p&gt;Hi Leo,&lt;/p&gt;

&lt;p&gt;The patch you&apos;re referring to was submitted by Henrik Kaipe in September 2008. Thus if you would like to use his work against Spring 2.5.6, you would need to contact him directly or figure out how to upgrade the patch on your own.&lt;/p&gt;

&lt;p&gt;Please note, however, that I upgraded the Spring code base in trunk to work with JUnit 4.5. This code applies to Spring 3.0.0.M3 as well as the upcoming 3.0.0.RC1 and 3.0.0.GA releases. Thus, if you can start using Spring 3.0, you won&apos;t need a patch.&lt;/p&gt;

&lt;p&gt;Regards,&lt;/p&gt;

&lt;p&gt;Sam&lt;/p&gt;</comment>
                            <comment id="45201" author="leojhartiv" created="Tue, 30 Jun 2009 04:39:58 +0000"  >&lt;p&gt;Hi Sam,&lt;/p&gt;

&lt;p&gt;Thanks for your reply!  Unfortunately I can&apos;t go to 3.0 anytime soon.  My company is pretty strict about software versions and probably won&apos;t be &quot;accepting&quot; 3.0 for some time.&lt;/p&gt;

&lt;p&gt;I&apos;m in a bit of a tough spot as we&apos;re using the latest version of Concordion to execute spring injected tests.  This latest version of Concordion requires the 4.5 version of junit to function, which obviously conflicts with what Spring 2.5.6 needs.  Given this combination is only being used in isolated testing, patching the 2.5.6 version shouldn&apos;t be blocked by &quot;the man&quot;.&lt;/p&gt;

&lt;p&gt;I&apos;ll try mucking about with the patch.  First I need to get the spring sources to compile.  build.bat alljars keeps throwing compilation errors (before applying the patch).&lt;/p&gt;

&lt;p&gt;Anyways, thanks!&lt;/p&gt;</comment>
                            <comment id="45203" author="sbrannen" created="Tue, 30 Jun 2009 05:11:17 +0000"  >&lt;p&gt;Leo,&lt;/p&gt;

&lt;p&gt;Disclaimer: I&apos;ve not tried this, and it&apos;s not &quot;supported&quot;, but...&lt;/p&gt;

&lt;p&gt;You could likely take the 2.5.6 build, simply copy the 3.0.0.M3 code for the org.springframework.test package over it, and then create your own &quot;reverse engineered&quot; patch. Obviously the work I did in the 3.0 branch built off the 2.5.6 branch. So theoretically it should work. That might prove easier than reverse engineering the patch in this JIRA, and it would be more likely to be forward compatible.&lt;/p&gt;

&lt;p&gt;Good luck in any case!&lt;/p&gt;

&lt;p&gt;Sam&lt;/p&gt;</comment>
                            <comment id="45239" author="sbrannen" created="Thu, 2 Jul 2009 05:20:21 +0000"  >&lt;p&gt;FYI: For those of you still following this issue, the Spring TestContext Framework is now based on JUnit 4.6.0 as of Spring 3.0.0.RC1.&lt;/p&gt;

&lt;p&gt;See also: &lt;a href=&quot;https://jira.spring.io/browse/SPR-5887&quot; title=&quot;Upgrade the Spring TestContext Framework to JUnit 4.6&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SPR-5887&quot;&gt;&lt;del&gt;SPR-5887&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Regards,&lt;/p&gt;

&lt;p&gt;  Sam&lt;/p&gt;</comment>
                            <comment id="46703" author="froc.tech@gmail.com" created="Mon, 14 Sep 2009 05:09:40 +0000"  >&lt;p&gt;It is still not clear, if Eclipse 3.5 ,  JUnit 4.5 (or 4.6) with  Spring 2.5.6. can work.&lt;/p&gt;

&lt;p&gt;Will there be a patch to support it?&lt;/p&gt;
</comment>
                            <comment id="46704" author="sbrannen" created="Mon, 14 Sep 2009 07:23:50 +0000"  >&lt;p&gt;Hi froc,&lt;/p&gt;

&lt;p&gt;The Spring TestContext Framework in Spring 2.5.6 only works with JUnit 4.4. There unfortunately will not be a patch to support JUnit 4.5 plus with the Spring 2.5.x branch.&lt;/p&gt;

&lt;p&gt;On the other hand, Spring 3.0 supports JUnit 4.5, 4.6, and 4.7.&lt;/p&gt;

&lt;p&gt;That may not be the answer you hoped for, but I hope it clarifies the situation for you.&lt;/p&gt;

&lt;p&gt;Regards,&lt;/p&gt;

&lt;p&gt;Sam&lt;/p&gt;</comment>
                            <comment id="49162" author="wguttmn" created="Wed, 9 Dec 2009 21:44:07 +0000"  >&lt;blockquote&gt;
&lt;p&gt;Well, the 2.5 branch entered strict maintenance mode last week. While we are in principle still able to support new versions of third-party dependencies, we can&apos;t raise the minimum level unless the previously supported version was pre-release software. Unfortunately it seems that supporting JUnit 4.5 here means requiring JUnit 4.5+; we can&apos;t do that before Spring 3.0 since all sorts of present build and development environments have JUnit 4.4 baked into them. It&apos;s unpleasant but not our fault - there was no better way of doing the test context framework against the hard-to-extend JUnit 4.4.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Whilst I understand the main argument made here, this is getting a bit unpleasant now with the release of JUnit 4.7, as basically (given that Spring 3.0 GA has not been made available yet and Spring 2.5.X will not be changed anymore) we are not in a position anymore to simplify (and hence increase the test code quality of ) our test cases based upon the recent additions to JUnit 4.7 (such as new &apos;&apos;expected&apos;&apos; parameter on {{&lt;/p&gt;
{@Test}
&lt;p&gt;}}, etc.).&lt;/p&gt;
</comment>
                            <comment id="49163" author="juergen.hoeller" created="Wed, 9 Dec 2009 22:40:45 +0000"  >&lt;p&gt;Werner, Spring 3.0 GA is now scheduled for Monday Dec 14 (i.e. in four days); it is literally around the corner. Also, using last week&apos;s 3.0 RC3 for the time being is going to ensure a smooth upgrade path to GA, since we are sorting out very specific bugs only at this point. So 3.0 RC3 is a fine release and very recommendable for development purposes already; I just wouldn&apos;t go to production with it yet.&lt;/p&gt;

&lt;p&gt;With respect to using a brand-new JUnit version with older versions of Spring: Fundamentally, there is no reason to keep holding on to Spring 2.5 when upgrading other parts of your stack. Take JUnit, or Tiles, or JRuby - all of which we support in new versions now in Spring 3.0 that did not work with Spring 2.5. All of those libs require Java 5 anyway, so the Java 5+ requirement in Spring 3 shouldn&apos;t be a showstopper for anyone here.&lt;/p&gt;

&lt;p&gt;We are trying to be forward compatible as far possible but well, if JUnit breaks its runner contract from 4.4 to 4.5 and Spring 2.5 only had JUnit 4.4 to work against at the time, there is not much we can do other than catch up with the latest JUnit release in the latest generation of Spring. In particular sine Spring 2.5 has to remain compatible with JUnit 4.4 for support reasons: i.e . for people who stick with their original stack from back in 2007...&lt;/p&gt;

&lt;p&gt;In summary, please give Spring 3.0 RC3 a try and let us know whether its JUnit 4.7 support works for your purposes &lt;img class=&quot;emoticon&quot; src=&quot;https://jira.spring.io/images/icons/emoticons/smile.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="49191" author="wguttmn" created="Thu, 10 Dec 2009 17:57:58 +0000"  >&lt;p&gt;Thanks, J&#252;rgen, for letting me know about the immediate release date for 3.0. This should ease our pain substantially.&lt;/p&gt;

&lt;p&gt;And we will definitely give things a try re: JUnit 4.7, etc.&lt;/p&gt;</comment>
                            <comment id="49333" author="deki" created="Tue, 15 Dec 2009 01:54:44 +0000"  >&lt;p&gt;3.0 GA isn&apos;t released yet, is it?&lt;/p&gt;</comment>
                            <comment id="49334" author="sbrannen" created="Tue, 15 Dec 2009 01:59:47 +0000"  >&lt;p&gt;Dennis, 3.0 GA is tentatively scheduled to be released... today! &lt;img class=&quot;emoticon&quot; src=&quot;https://jira.spring.io/images/icons/emoticons/wink.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="51661" author="neeme" created="Tue, 2 Mar 2010 21:15:49 +0000"  >&lt;p&gt;How about creating a separate artifact for the 2.5 branch with Junit 4.5+ support?&lt;br/&gt;
That would mean that existing users will not be affected and other users who need Junit 4.5+ can declare a different dependency (e.g. org.springframework:spring-test-junit45 or something along those lines).&lt;/p&gt;

&lt;p&gt;Probably you won&apos;t take that route anymore, but still, it&apos;s an idea, at least for the future. &lt;img class=&quot;emoticon&quot; src=&quot;https://jira.spring.io/images/icons/emoticons/wink.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10000">
                    <name>Duplicate</name>
                                                                <inwardlinks description="is duplicated by">
                                        <issuelink>
            <issuekey id="24047">SPR-5171</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10020">
                    <name>Related</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="27156">SPR-5887</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="14674" name="junit4.5.patch" size="45019" author="kaipe" created="Sat, 13 Sep 2008 23:29:52 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        6 years, 43 weeks, 1 day ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sat, 13 Sep 2008 23:29:52 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>true</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i033cn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>18085</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>