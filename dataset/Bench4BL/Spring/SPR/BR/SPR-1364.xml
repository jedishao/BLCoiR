<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 20:59:05 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-1364/SPR-1364.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-1364] Bug in AbstractStatelessSessionBean/WeakReferenceMonitor</title>
                <link>https://jira.spring.io/browse/SPR-1364</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;I&apos;m using a ContextSingletonBeanFactoryLocator:&lt;/p&gt;

&lt;p&gt;public CRGServiceBean(){&lt;br/&gt;
	log.info(&quot;Constructor called&quot;);&lt;br/&gt;
	setBeanFactoryLocator( ContextSingletonBeanFactoryLocator.getInstance() );&lt;br/&gt;
	setBeanFactoryLocatorKey(&quot;application-context&quot;);&lt;br/&gt;
}&lt;/p&gt;

&lt;p&gt;(I&apos;ve also tried to set this in the setSessionContext(SessionContext ctx) like this:&lt;br/&gt;
	super.setSessionContext(ctx);&lt;br/&gt;
	setBeanFactoryLocator( ContextSingletonBeanFactoryLocator.getInstance() );&lt;br/&gt;
	setBeanFactoryLocatorKey(&quot;application-context&quot;);&lt;/p&gt;



&lt;p&gt;But both will fail with this exception if calling a number of create() in parallell (which is very likely to happen in a J2EE production world). Besides it&apos;s a violation to spawn threads inside the container.&lt;/p&gt;

&lt;p&gt;I guess it comes from the unsynchronized variable monitoringThread in the WeakReferenceMonitor class.&lt;/p&gt;

&lt;p&gt;The problem is AFAIK the same under 1.2.4 and 1.2.5.&lt;/p&gt;


&lt;p&gt;Stacktrace:&lt;/p&gt;

&lt;p&gt;Non-application exception occurred while processing method &quot;findAccountData&quot;. Exception data: com.ibm.ejs.container.CreateFailureException: ; nested exception is: &lt;br/&gt;
	java.lang.reflect.InvocationTargetException&lt;br/&gt;
java.lang.reflect.InvocationTargetException: java.lang.IllegalThreadStateException&lt;br/&gt;
	at java.lang.Thread.start(Native Method)&lt;br/&gt;
	at org.springframework.util.WeakReferenceMonitor.addEntry(WeakReferenceMonitor.java:94)&lt;br/&gt;
	at org.springframework.util.WeakReferenceMonitor.monitor(WeakReferenceMonitor.java:78)&lt;br/&gt;
	at org.springframework.ejb.support.AbstractEnterpriseBean.loadBeanFactory(AbstractEnterpriseBean.java:129)&lt;br/&gt;
	at org.springframework.ejb.support.AbstractStatelessSessionBean.ejbCreate(AbstractStatelessSessionBean.java:63)&lt;br/&gt;
	at java.lang.reflect.Method.invoke(Native Method)&lt;br/&gt;
	at com.ibm.ejs.container.StatelessBeanO.&amp;lt;init&amp;gt;(StatelessBeanO.java:132)&lt;br/&gt;
	at com.ibm.ejs.container.CMStatelessBeanO.&amp;lt;init&amp;gt;(CMStatelessBeanO.java:53)&lt;br/&gt;
	at com.ibm.ejs.container.CMStatelessBeanOFactory.create(CMStatelessBeanOFactory.java:40)&lt;br/&gt;
	at com.ibm.ejs.container.EJSHome.createBeanO(EJSHome.java:586)&lt;br/&gt;
	at com.ibm.ejs.container.EJSHome.createBeanO(EJSHome.java:673)&lt;br/&gt;
	at com.ibm.ejs.container.activator.UncachedActivationStrategy.atActivate(UncachedActivationStrategy.java:78)&lt;br/&gt;
	at com.ibm.ejs.container.activator.Activator.activateBean(Activator.java:516)&lt;br/&gt;
	at com.ibm.ejs.container.EJSContainer.preInvoke_internal(EJSContainer.java:2609)&lt;br/&gt;
	at com.ibm.ejs.container.EJSContainer.preInvoke(EJSContainer.java:2337)&lt;br/&gt;
	at com.ibm.ejs.container.EJSContainer.preInvoke(EJSContainer.java:2322)&lt;br/&gt;
	at my.package.crg.server.func.ejb.EJSRemoteStatelessCRGService_692891ba.findAccountData(EJSRemoteStatelessCRGService_692891ba.java:34)&lt;br/&gt;
	at my.package.crg.server.func.ejb._EJSRemoteStatelessCRGService_692891ba_Tie.findAccountData(_EJSRemoteStatelessCRGService_692891ba_Tie.java:158)&lt;br/&gt;
	at my.package.crg.server.func.ejb._EJSRemoteStatelessCRGService_692891ba_Tie._invoke(_EJSRemoteStatelessCRGService_692891ba_Tie.java:82)&lt;br/&gt;
	at com.ibm.CORBA.iiop.ServerDelegate.dispatchInvokeHandler(ServerDelegate.java:615)&lt;br/&gt;
	at com.ibm.CORBA.iiop.ServerDelegate.dispatch(ServerDelegate.java:468)&lt;br/&gt;
	at com.ibm.rmi.iiop.ORB.process(ORB.java:396)&lt;br/&gt;
	at com.ibm.CORBA.iiop.ORB.process(ORB.java:1608)&lt;br/&gt;
	at com.ibm.rmi.iiop.Connection.doWork(Connection.java:2164)&lt;br/&gt;
	at com.ibm.rmi.iiop.WorkUnitImpl.doWork(WorkUnitImpl.java:63)&lt;br/&gt;
	at com.ibm.ejs.oa.pool.PooledThread.run(ThreadPool.java:95)&lt;br/&gt;
	at com.ibm.ws.util.ThreadPool$Worker.run(ThreadPool.java:593)&lt;/p&gt;</description>
            <key id="12518">SPR-1364</key>
            <summary>Bug in AbstractStatelessSessionBean/WeakReferenceMonitor</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="juergen.hoeller">Juergen Hoeller</assignee>
                                    <reporter username="davidkarlsen">David J. M. Karlsen</reporter>
                        <labels>
                    </labels>
                <created>Mon, 10 Oct 2005 01:01:53 +0000</created>
                <updated>Tue, 19 Jun 2012 03:54:34 +0000</updated>
                            <resolved>Wed, 12 Oct 2005 05:18:47 +0000</resolved>
                                    <version>1.2.4</version>
                    <version>1.2.5</version>
                                    <fixVersion>1.2.6</fixVersion>
                                    <component>EJB</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="14934" author="juergen.hoeller" created="Wed, 12 Oct 2005 05:18:47 +0000"  >&lt;p&gt;Indeed, the access to the monitoring thread needs to be synchronized. I&apos;ve fixed this - thanks for pointing it out!&lt;/p&gt;

&lt;p&gt;Regarding the creation of threads: We are aware of the J2EE spec&apos;s restriction in terms of thread starting, of course. However, there are some things that really need to be handled by extra threads. It doesn&apos;t matter whether those threads are managed by the application server, as they do not need any J2EE security or transaction context. It shouldn&apos;t matter that they aren&apos;t pooled either, as long as only a well-controlled number of them gets started.&lt;/p&gt;

&lt;p&gt;After all, many people use Quartz in a J2EE environment, which even manages its own thread pool...&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="14935" author="juergen.hoeller" created="Wed, 12 Oct 2005 05:23:01 +0000"  >&lt;p&gt;Actually, if the EJB container had a proper scope for shared objects - like the Servlet container provides in the shape of the ServletContext -, we wouldn&apos;t need to resort to static context references and hence that weak-reference monitoring in the first place. But unfortunately we can&apos;t do anything about that scenario... In the EJB world, all shared references need to reside in the JNDI environment, which of course is considered as read-only from the application&apos;s point of view.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="14942" author="davidkarlsen" created="Wed, 12 Oct 2005 05:59:31 +0000"  >&lt;p&gt;Excellent! When will 1.2.6 be released? Yes - it works OK (when the one thread is started &lt;img class=&quot;emoticon&quot; src=&quot;https://jira.spring.io/images/icons/emoticons/smile.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;). The spec isn&apos;t vey clear on this point - it just says something like &quot;... shouldn&apos;t control threads inside the beans in the container&quot;... which I guess might be because of the container controlling the pool - but since this doesn&apos;t really rely upon the EJB-instance - it&apos;s not a problem - like you point out. I got problems shutting down the appserver when I stumbled into the problem so I freaked a little out over a potential production problem  &lt;img class=&quot;emoticon&quot; src=&quot;https://jira.spring.io/images/icons/emoticons/smile.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;BTW: A temporary solution is to load the shared application context inside a singleton which I&apos;m sure is created before EJB&apos;s are instanciated.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        11 years, 12 weeks, 1 day ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 12 Oct 2005 05:18:47 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>true</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i020qn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>11829</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>