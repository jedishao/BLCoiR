<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 17:57:20 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-2451/SPR-2451.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-2451] Request scoped typed collection fails when used as a dependency</title>
                <link>https://jira.spring.io/browse/SPR-2451</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;Using the following context fragment to inject a request-scoped collection (the per-request state) into a singleton:&lt;/p&gt;

&lt;p&gt;&amp;lt;bean id=&quot;onLoadScriptManager&quot; class=&quot;bridges.web.view.tags.script.OnLoadScriptManagerImpl&quot;&amp;gt;&lt;br/&gt;
        &amp;lt;property name=&quot;onLoadScripts&quot; ref=&quot;onLoadScripts&quot; /&amp;gt;&lt;br/&gt;
    &amp;lt;/bean&amp;gt;&lt;/p&gt;

&lt;p&gt;    &amp;lt;bean id=&quot;onLoadScripts&quot; class=&quot;java.util.ArrayList&quot; scope=&quot;request&quot;&amp;gt;&lt;br/&gt;
        &amp;lt;aop:scoped-proxy/&amp;gt;&lt;br/&gt;
    &amp;lt;/bean&amp;gt;&lt;/p&gt;

&lt;p&gt;The singleton bean is implemented as:&lt;/p&gt;

&lt;p&gt;public class OnLoadScriptManagerImpl extends WebObjectSupport implements OnLoadScriptManager&lt;br/&gt;
{&lt;br/&gt;
    private List&amp;lt;OnLoadScript&amp;gt; m_onLoadScripts;&lt;br/&gt;
    private Comparator m_comparator = new OrderComparator();&lt;/p&gt;

&lt;p&gt;    public OnLoadScriptManagerImpl()&lt;/p&gt;
    {
        // EMPTY
    }

&lt;p&gt;    @SuppressWarnings( &quot;unchecked&quot; )&lt;br/&gt;
    public void addOnLoadScript( OnLoadScript script )&lt;/p&gt;
    {
        m_onLoadScripts.add( script );
    }

&lt;p&gt;    @SuppressWarnings( &quot;unchecked&quot; )&lt;br/&gt;
    public List&amp;lt;OnLoadScript&amp;gt; getOnLoadScripts()&lt;/p&gt;
    {
        Collections.sort( m_onLoadScripts, m_comparator );
        return m_onLoadScripts;
    }

&lt;p&gt;    @Required&lt;br/&gt;
    public void setOnLoadScripts( List&amp;lt;OnLoadScript&amp;gt; onLoadScripts )&lt;/p&gt;
    {
        m_onLoadScripts = onLoadScripts;
    }

&lt;p&gt;}&lt;/p&gt;


&lt;p&gt;...note the typed collection in setOnLoadScripts.  On context initialization, this fails with the below exception / stack trace:&lt;/p&gt;

&lt;p&gt;org.springframework.beans.factory.BeanCreationException: Error creating bean with name &apos;onLoadScriptManager&apos; defined in file &lt;span class=&quot;error&quot;&gt;&amp;#91;C:\jboss-3.2.6\server\bridges\deploy\bridges\choices-development.ear\shared-webapp-context\web-context.xml&amp;#93;&lt;/span&gt;: Error setting property values; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name &apos;scopedTarget.onLoadScripts&apos;: Scope &apos;request&apos; is not active; nested exception is java.lang.IllegalStateException: No thread-bound request: use RequestContextFilter&lt;br/&gt;
Caused by: &lt;br/&gt;
org.springframework.beans.factory.BeanCreationException: Error creating bean with name &apos;scopedTarget.onLoadScripts&apos;: Scope &apos;request&apos; is not active; nested exception is java.lang.IllegalStateException: No thread-bound request: use RequestContextFilter&lt;br/&gt;
Caused by: &lt;br/&gt;
java.lang.IllegalStateException: No thread-bound request: use RequestContextFilter&lt;br/&gt;
	at org.springframework.web.context.request.RequestContextHolder.currentRequestAttributes(RequestContextHolder.java:62)&lt;br/&gt;
	at org.springframework.web.context.request.AbstractRequestAttributesScope.get(AbstractRequestAttributesScope.java:40)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:276)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:155)&lt;br/&gt;
	at org.springframework.aop.target.AbstractPrototypeBasedTargetSource.newPrototypeInstance(AbstractPrototypeBasedTargetSource.java:58)&lt;br/&gt;
	at org.springframework.aop.target.PrototypeTargetSource.getTarget(PrototypeTargetSource.java:30)&lt;br/&gt;
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.getTarget(Cglib2AopProxy.java:673)&lt;br/&gt;
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:624)&lt;br/&gt;
	at $java.util.ArrayList$$EnhancerByCGLIB$$ab5862d8.size(&amp;lt;generated&amp;gt;)&lt;br/&gt;
	at org.springframework.beans.TypeConverterDelegate.convertToTypedCollection(TypeConverterDelegate.java:301)&lt;br/&gt;
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:189)&lt;br/&gt;
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:127)&lt;br/&gt;
	at org.springframework.beans.BeanWrapperImpl.setPropertyValue(BeanWrapperImpl.java:770)&lt;br/&gt;
	at org.springframework.beans.BeanWrapperImpl.setPropertyValue(BeanWrapperImpl.java:606)&lt;br/&gt;
	at org.springframework.beans.AbstractPropertyAccessor.setPropertyValue(AbstractPropertyAccessor.java:49)&lt;br/&gt;
	at org.springframework.beans.AbstractPropertyAccessor.setPropertyValues(AbstractPropertyAccessor.java:74)&lt;br/&gt;
	at org.springframework.beans.AbstractPropertyAccessor.setPropertyValues(AbstractPropertyAccessor.java:57)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:861)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:624)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:411)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:242)&lt;br/&gt;
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:141)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:239)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:155)&lt;br/&gt;
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:303)&lt;br/&gt;
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:348)&lt;br/&gt;
	at org.springframework.web.context.support.AbstractRefreshableWebApplicationContext.refresh(AbstractRefreshableWebApplicationContext.java:156)&lt;br/&gt;
	at org.springframework.web.context.ContextLoader.createWebApplicationContext(ContextLoader.java:246)&lt;br/&gt;
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:184)&lt;br/&gt;
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:49)&lt;/p&gt;

&lt;p&gt;...it appears that, in the process of converting to a typed collection, the proxy is triggered to fetch the bean from it&apos;s respective scope, which is (generally) non-sensical during initialization.&lt;/p&gt;

&lt;p&gt;Working around this by making an OnLoadState object that contains the collection.&lt;/p&gt;</description>
            <key id="14795">SPR-2451</key>
            <summary>Request scoped typed collection fails when used as a dependency</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="juergen.hoeller">Juergen Hoeller</assignee>
                                    <reporter username="chrislee">Chris Lee</reporter>
                        <labels>
                    </labels>
                <created>Mon, 21 Aug 2006 02:22:55 +0000</created>
                <updated>Tue, 19 Jun 2012 03:50:19 +0000</updated>
                            <resolved>Mon, 28 Aug 2006 06:46:55 +0000</resolved>
                                    <version>2.0 RC3</version>
                                    <fixVersion>2.0 RC4</fixVersion>
                                    <component>Core</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="19229" author="juergen.hoeller" created="Mon, 28 Aug 2006 06:46:55 +0000"  >&lt;p&gt;Thanks for pointing this out - I&apos;ve addressed this issue through a catch block on collection element conversion. Essentially, we do try to convert the elements (if any), but now only if the original Collection/Map is actually accessible (that is, does not throw exceptions from &quot;size()&quot; or &quot;iterator()&quot;). If we can&apos;t access a Collection/Map, we&apos;ll simply inject it as-is, skipping element conversion (which should usually match the configurer&apos;s intent).&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        10 years, 18 weeks, 3 days ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 28 Aug 2006 06:46:55 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>false</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i02rdj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>16144</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>