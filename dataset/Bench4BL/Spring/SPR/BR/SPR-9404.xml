<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 18:29:51 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-9404/SPR-9404.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-9404] Session not flushed with Hibernate 4.1.3, JTA and Spring transaction management integration</title>
                <link>https://jira.spring.io/browse/SPR-9404</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;I have been migrating from hibernate 3.3.x to hibernate 4.1.3-final using Spring 3.1.1-release.&lt;br/&gt;
Besides the hibernate specific refactorings (due to API changes) I thought the only changes for the Spring integration were changing packages names:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Use the LocalSessionFactoryBean from the hibernate4 package&lt;/li&gt;
	&lt;li&gt;Use the HibernateTransactionManger (which we only use for testing) from the hibernate4 package.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;As it turned out the migration when smooth and everything was working on a local tomcat.&lt;br/&gt;
However, once we ran our app on glassfish with the JtaTransactionManager (I tested it on GF3.1.2) we got a &quot;No Session found for current thread&quot; when obtaining sessionFactory.currentSession().&lt;br/&gt;
After checking SpringSessionContext, we learned that if TransactionSynchronizationManager does not return a existing session or SessionHolder, a check&lt;br/&gt;
is performed for a jtaSessionContext, which was null.&lt;br/&gt;
The fact that no SessionHolder is registered made also sense as this done by the HibernateTransactionManager and we are using the JtaTransactionManager.&lt;/p&gt;

&lt;p&gt;So then learned that in case of JTA you have to specify manually how the tx manager/user transaction can be found.&lt;br/&gt;
This was done automatically for you in the hibernate3 LocalSessionFactoryBean, but no longer in the hibernate4 LocalSessionFactoryBean.&lt;br/&gt;
So to solve this we configured: &lt;/p&gt;

&lt;p&gt;hibernate.transaction.jta.platform and set it to SunOneJtaPlatform.&lt;/p&gt;

&lt;p&gt;This resolved the &quot;No Session found for current thread&quot; as it initialized the jtaSessionContext with the txmanager provided by the configured JtaPlatform.&lt;/p&gt;

&lt;p&gt;However, now it turns out that the hibernate session is not flushed before the transaction is commited and hence no modifications are written to database.&lt;br/&gt;
In the supplied sample we have a basic hibernate setup with H2. Next we have a JtaTransactionManager and a transactional facade.&lt;br/&gt;
Next we have a test entity having a single property. The facade has two methods, one to store the entity and one to retrieve the entity.&lt;br/&gt;
They both marked as @Transactional and if called will run in there own transaction.&lt;br/&gt;
The trigger is a plain JEE servlet which retrieves the facade from application context.&lt;br/&gt;
First the store method is called (tx1) then the retrieve method is called (tx2).&lt;br/&gt;
As you will see with the Spring hibernate4 integration there was nothing saved.&lt;br/&gt;
With the hibernate3 integration everything works as expected and the record is saved &lt;br/&gt;
(it can be retrieved by the subsequent retrieval transaction)&lt;/p&gt;

&lt;p&gt;What is also bizarre is that in hibernate3 modus everything goes via the Spring TransactionSynchronizationManager (even in JTA mode).&lt;br/&gt;
Also the current session is bound via a thread local referenced via the synchronization.&lt;br/&gt;
This is bound using a SpringSessionSynchronization which will call flush before transaction completion.&lt;/p&gt;

&lt;p&gt;All of this is gone with the hibernate4 integration from the moment a JTA environment is detected.&lt;br/&gt;
As of then everything goes via the JTA transaction manager, as there where no Spring Transacion management involved.&lt;br/&gt;
This could be normal to a certain extend, but it feels odd compared to the way is was done with hibernate3.&lt;/p&gt;

&lt;p&gt;I supplied two samples:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;hibernate3.zip : this is the working one, deploy it on GF and goto &quot;http://localhost:8080/hibernate3/Persist&quot;&lt;br/&gt;
You will see that it stores a record and is able to retrieve it again&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;hibernate4.zip : the exact same sample as above, but now with hibernate4 and using LocalSessionFactoryBean from the hibernate4 package and the hibernate.transaction.jta.platform set.&lt;br/&gt;
You will see that it stores a record and is NOT able to retrieve it.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Both samples have a POM so it should be trivial to build them.&lt;/p&gt;</description>
            <key id="43325">SPR-9404</key>
            <summary>Session not flushed with Hibernate 4.1.3, JTA and Spring transaction management integration</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://jira.spring.io/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="3">Duplicate</resolution>
                                        <assignee username="juergen.hoeller">Juergen Hoeller</assignee>
                                    <reporter username="koen.serneels">Koen Serneels</reporter>
                        <labels>
                            <label>Hibernate4</label>
                            <label>JTA</label>
                            <label>ORM</label>
                    </labels>
                <created>Sun, 13 May 2012 13:22:30 +0000</created>
                <updated>Fri, 3 Aug 2012 03:53:18 +0000</updated>
                            <resolved>Wed, 25 Jul 2012 04:35:27 +0000</resolved>
                                    <version>3.1.1</version>
                                    <fixVersion>3.1.2</fixVersion>
                    <fixVersion>3.2 M2</fixVersion>
                                    <component>Core</component>
                        <due></due>
                            <votes>5</votes>
                                    <watches>4</watches>
                                                                <comments>
                            <comment id="78748" author="koen.serneels" created="Mon, 14 May 2012 13:38:17 +0000"  >&lt;p&gt;Can someone change this to blocking please&lt;/p&gt;</comment>
                            <comment id="78869" author="klr8" created="Tue, 15 May 2012 23:40:18 +0000"  >&lt;p&gt;Is there documentation available as to how and why the Spring Hibernate integration changed between Hibernate 3 and Hibernate 4?&lt;/p&gt;

&lt;p&gt;From the comments of &lt;a href=&quot;https://jira.spring.io/browse/SPR-8096&quot; title=&quot;Support Hibernate 4.0.x&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SPR-8096&quot;&gt;&lt;del&gt;SPR-8096&lt;/del&gt;&lt;/a&gt;: &quot;Good news: There is a working prototype already, and we decided to promote Hibernate 4.0 support to the Spring 3.1 feature set now. It won&apos;t be a direct 1:1 match with the orm.hibernate3 package but will provide everything needed for doing things the Hibernate 4 way within a Spring-based application. For example, there won&apos;t be a HibernateTemplate anymore, and we rely on Hibernate&apos;s own JTA support for JTA synchronization now.&quot;&lt;/p&gt;

&lt;p&gt;So I have the feeling that we&apos;re missing a bit of context/explanation to setup TX management and JTA properly with Spring 3.1 + Hibernate 4.&lt;/p&gt;</comment>
                            <comment id="79377" author="klr8" created="Tue, 29 May 2012 00:23:47 +0000"  >&lt;p&gt;Seems like indeed we were missing a bit of Hibernate config. Adding the following to the Hibernate properties seems to resolve the problem:&lt;/p&gt;

&lt;p&gt;hibernate.transaction.factory_class=org.hibernate.engine.transaction.internal.jta.JtaTransactionFactory&lt;/p&gt;

&lt;p&gt;So this might be a non-issue as far the Spring source code is concerned, but still important in that there really is a need for a decent explanation on how to migrate your Spring + Hibernate3 config to Spring + Hibernate4. Probably something for the Spring documentation.&lt;/p&gt;</comment>
                            <comment id="79386" author="alysson.rodrigues" created="Tue, 29 May 2012 05:54:35 +0000"  >&lt;p&gt;Instead of bootstrapping the entity manager factory using Spring LocalContainerEntityManagerFactory I have set JBoss AS 7.1 to bootstrap it (declaring a persistence.xml) and get it registered in JNDI, then Spring gets it from there. As soon as I have set it, everything works as expected.&lt;/p&gt;

&lt;p&gt;Here is the persistence unit:&lt;/p&gt;

&lt;p&gt;  &amp;lt;persistence-unit name=&quot;persistenceUnit&quot; transaction-type=&quot;JTA&quot;&amp;gt;&lt;br/&gt;
      &amp;lt;jta-data-source&amp;gt;java:jboss/datasources/dataSourceDefault&amp;lt;/jta-data-source&amp;gt;&lt;br/&gt;
      &amp;lt;properties&amp;gt;&lt;br/&gt;
          &amp;lt;property name=&quot;jboss.entity.manager.factory.jndi.name&quot; value=&quot;java:comp/env/persistence/EntityManagerFactory&quot;/&amp;gt;&lt;br/&gt;
          &amp;lt;property name=&quot;hibernate.dialect&quot; value=&quot;org.hibernate.dialect.MySQLDialect&quot;/&amp;gt;&lt;br/&gt;
          &amp;lt;property name=&quot;hibernate.transaction.factory_class&quot; value=&quot;org.hibernate.engine.transaction.internal.jta.CMTTransactionFactory&quot;/&amp;gt;&lt;br/&gt;
          &amp;lt;property name=&quot;hibernate.transaction.jta.platform&quot; value=&quot;org.hibernate.service.jta.platform.internal.JBossAppServerJtaPlatform&quot;/&amp;gt;&lt;br/&gt;
          &amp;lt;property name=&quot;hibernate.current_session_context_class&quot; value=&quot;jta&quot;/&amp;gt;&lt;br/&gt;
          &amp;lt;property name=&quot;hibernate.show_sql&quot; value=&quot;true&quot;/&amp;gt;&lt;br/&gt;
          &amp;lt;property name=&quot;hibernate.format_sql&quot; value=&quot;true&quot;/&amp;gt;&lt;br/&gt;
          &amp;lt;property name=&quot;hibernate.use_sql_comments&quot; value=&quot;true&quot;/&amp;gt;&lt;br/&gt;
          &amp;lt;property name=&quot;hibernate.hbm2ddl.auto&quot; value=&quot;update&quot;/&amp;gt;&lt;br/&gt;
      &amp;lt;/properties&amp;gt;&lt;br/&gt;
  &amp;lt;/persistence-unit&amp;gt;&lt;/p&gt;

&lt;p&gt;The EntityManagerFactory bean:&lt;/p&gt;


&lt;p&gt;    @Bean&lt;br/&gt;
    public EntityManagerFactory entityManagerFactory() throws NamingException &lt;/p&gt;
{
        Context context = new InitialContext();
        EntityManagerFactory entityManagerFactory =
                (EntityManagerFactory) context.lookup(&quot;java:comp/env/persistence/EntityManagerFactory&quot;);
        return entityManagerFactory;
    }

&lt;p&gt;It looks like something is missing when using LocalContainerEntityManagerFactory. I have tried to use LocalContainerEntityManagerFactory.packagesToScan and it seems to me that the code (DefaultPersistenceUnitManager.buildDefaultPersistenceUnitInfo) that builds PersistenceUnitInfo is not setting the transaction-type as it should do.&lt;/p&gt;

&lt;p&gt;By now I&#180;ll use this approach until some news about it.&lt;/p&gt;

&lt;p&gt;Thanks for answering me.&lt;/p&gt;</comment>
                            <comment id="81729" author="klr8" created="Mon, 16 Jul 2012 02:39:15 +0000"  >&lt;p&gt;I&apos;m guessing this issue can be closed with &lt;a href=&quot;https://jira.spring.io/browse/SPR-9480&quot; title=&quot;Hibernate 4 smart flushing does not work unless CMTTransactionFactory is being specified&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SPR-9480&quot;&gt;&lt;del&gt;SPR-9480&lt;/del&gt;&lt;/a&gt; having been resolved and the docs amended.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10000">
                    <name>Duplicate</name>
                                            <outwardlinks description="duplicates">
                                        <issuelink>
            <issuekey id="43764">SPR-9480</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is duplicated by">
                                        <issuelink>
            <issuekey id="36053">SPR-7916</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="43400">SPR-9424</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="19646" name="hibernate3.zip" size="7505" author="koen.serneels" created="Sun, 13 May 2012 13:22:30 +0000"/>
                            <attachment id="19647" name="hibernate4.zip" size="7523" author="koen.serneels" created="Sun, 13 May 2012 13:22:30 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        4 years, 23 weeks, 3 days ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 15 May 2012 23:40:18 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>false</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>cbeams</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i05kqf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>32565</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>