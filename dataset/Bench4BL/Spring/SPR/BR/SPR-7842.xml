<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 21:24:22 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-7842/SPR-7842.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-7842] DataBinder should be able to define a different strategy for BeanWrapperImpl how autogrowing should handle gaps in collection properties</title>
                <link>https://jira.spring.io/browse/SPR-7842</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;DataBinder which is used by WebRequestDataBinder and ServletRequestDataBinder grows automatically collections when &quot;autoGrowNestedPaths&quot; is on (AFAIK this is the default for the DataBinder).&lt;/p&gt;

&lt;p&gt;The behaviour of DataBinder when &quot;autoGrowNestedPaths&quot; is that a property with a given index N will result in growing a collection to size N if the collection is not large enough. Collection elements with index &amp;lt; N will be initialized with default objects of the collection&apos;s type.&lt;/p&gt;

&lt;p&gt;Based on WebRequestDataBinder it&apos;s therefore easily possible to DoS a web application if it&apos;s allowed to bind against a collection property and the client POSTs a single property using a very large index.&lt;/p&gt;

&lt;p&gt;Sending a single request containing a parameter for a collection property with index 99999999 caused an OOM on a JVM on MacOsX with default memory settings (64MB?). The list type in this case contained 7 String properties and 2 Longs.&lt;/p&gt;

&lt;p&gt;I think there are several things to follow-up:&lt;/p&gt;

&lt;p&gt;1) It would be safer to set autoGrowNestedPaths to false by default. Use of DataBinder and autoGrowNestedPaths then would be more restrictive by default and require explicit action to enable autoGrowing.&lt;/p&gt;

&lt;p&gt;2) The creation of &quot;default&quot; values in BeanWrapperImpl should be more flexible. A strategy for creating default values would allow clients to define how such default values should be created. In the case of WebRequestDataBinder creating empty (null) collection elements instead of default objects is certainly safer to fill the gaps in the collection - especially for exposed applications to the public. Furthermore this does not expose unwanted restrictions like a maximum allowed index limitation etc.&lt;/p&gt;

&lt;p&gt;3) Presumably this could be solved with CustomPropertyEditors. However the majority of developers probably tries to stick with what is available out-of-the box and as the DataBinding in general for &quot;standard&quot; use-cases works fine dealing with the described issue is not obvious and could lead to wide-spread holes.&lt;/p&gt;</description>
            <key id="35627">SPR-7842</key>
            <summary>DataBinder should be able to define a different strategy for BeanWrapperImpl how autogrowing should handle gaps in collection properties</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="2" iconUrl="https://jira.spring.io/images/icons/priorities/critical.png">Critical</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="8">Complete</resolution>
                                        <assignee username="juergen.hoeller">Juergen Hoeller</assignee>
                                    <reporter username="rauar">Alex Rau</reporter>
                        <labels>
                    </labels>
                <created>Tue, 28 Dec 2010 11:14:33 +0000</created>
                <updated>Tue, 29 Jan 2013 06:50:02 +0000</updated>
                            <resolved>Sun, 3 Jul 2011 12:24:33 +0000</resolved>
                                    <version>3.0.5</version>
                                    <fixVersion>3.0.6</fixVersion>
                    <fixVersion>3.1 RC1</fixVersion>
                                    <component>Core</component>
                        <due></due>
                            <votes>7</votes>
                                    <watches>7</watches>
                                                                <comments>
                            <comment id="61772" author="rauar" created="Tue, 28 Dec 2010 17:13:55 +0000"  >&lt;p&gt;The issue introducing autogrowing was &lt;a href=&quot;https://jira.spring.io/browse/SPR-6033&quot; title=&quot;Data Binder: Auto-grow collections as needed to support nested property binding&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SPR-6033&quot;&gt;&lt;del&gt;SPR-6033&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="62850" author="janning" created="Fri, 28 Jan 2011 07:29:07 +0000"  >&lt;p&gt;This issue is very very critical imho. It should be fixed as soon as possible. With autogrowing you can easily crash any webapp using spring with a list form just by sending a very high list index.&lt;/p&gt;</comment>
                            <comment id="66787" author="rauar" created="Wed, 25 May 2011 12:59:20 +0000"  >&lt;p&gt;Is there anything planned on when this issue is going to be fixed ? I guess this issue is a bit underrated in terms of severity - at least in respect to the reporting date and activity. I&apos;m avoiding lists completely right now and use maps instead.&lt;/p&gt;</comment>
                            <comment id="67328" author="juergen.hoeller" created="Mon, 13 Jun 2011 17:19:55 +0000"  >&lt;p&gt;We&apos;ll be picking this up for 3.1 RC1 and also for the upcoming 3.0.6 release.&lt;/p&gt;

&lt;p&gt;Actually, does the OutOfMemoryError cause any long-term damage to the VM in your scenario? I&apos;d expect memory to be made available again right after that exception is being raised... since the allocation of that large chunk of memory clearly failed. In that sort of case, OOMEs should not be fatal but rather indicate a temporary condition only.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="67336" author="janning" created="Tue, 14 Jun 2011 00:10:45 +0000"  >&lt;p&gt;I can&apos;t really remember. But it was something like this: We had some old urls out there which was triggered right after we implemented a behaviour with such lists. So as soon as we deployed our software, we had lots of requests which finally crashed the vm. I don&apos;t know why, we just saw OOME fixed the reason and redployed our software.&lt;/p&gt;

&lt;p&gt;nice to here, that this going to be fixed. I am still waiting for 3.0.6 because of another small bug but it is pending for long time now.&lt;/p&gt;</comment>
                            <comment id="67349" author="rauar" created="Tue, 14 Jun 2011 06:43:09 +0000"  >&lt;p&gt;Hi Juergen,&lt;/p&gt;

&lt;p&gt;unfortunately I did not analyze if the memory was made available afterwards. I changed the implementation in December in a way that I&apos;m using indexed map entries now which does not have the index gap issue.&lt;/p&gt;

&lt;p&gt;I reread my initial issue description and what is missing there is that actually (as just mentioned in the previous sentence) the issue is not directly related to collections per se but afaik list implementations. In contrast maps (and sets as well) are not affected as there&apos;s no element position and therefore no definition of gaps between neighbored collection elements as well.&lt;/p&gt;

&lt;p&gt;I think the root of the problem is that implicit list elements are instantiated even if never required. Solely an assignment of x&lt;span class=&quot;error&quot;&gt;&amp;#91;5&amp;#93;&lt;/span&gt; would create 6 elements on a list of size 6 no matter if the element 0 to 4 would be ever accessed(read or write).&lt;/p&gt;

&lt;p&gt;An alternative would be to size the list to length 6 (again) and only create default elements for positions which are actually accessed (in the above case it&apos;s element 5). That was my intention with the &quot;different strategy&quot;.&lt;/p&gt;


&lt;p&gt;Regarding the OOM: sending excessive requests with high index values affect the system (processes in the same JVM) in a whole - other threads would be unable to request more memory as well and would experience OOMs at the same moment. That could lead to long-term fatal errors in other places and even if the OOM issue described here was a temporary failure or not.&lt;/p&gt;


&lt;p&gt;Good news this is going to be fixed in the 3.0.6 release.&lt;/p&gt;</comment>
                            <comment id="67975" author="juergen.hoeller" created="Sun, 3 Jul 2011 12:24:33 +0000"  >&lt;p&gt;I eventually resolved this through a newly introduced &quot;autoGrowCollectionLimit&quot; setting on BeanWrapper and DataBinder. This seems to be the easiest solution still, since collections are not guaranteed to accept null values. The default limit in DataBinder is 256 now which should be entirely sufficient for typical web data binding purposes.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="67977" author="juergen.hoeller" created="Sun, 3 Jul 2011 12:51:49 +0000"  >&lt;p&gt;Minor correction: With autoGrowNestedPaths=false, we actually do historically try to grow lists but use null values there, failing if null values are not accepted. So semantically, autoGrowNestedPaths=true quite strongly means populating list elements with actual element objects, and the solution above preserves that.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10000">
                    <name>Duplicate</name>
                                                                <inwardlinks description="is duplicated by">
                                        <issuelink>
            <issuekey id="38127">SPR-8375</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10151">
                    <name>Relate</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="27703">SPR-6033</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="47215">SPR-10229</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        5 years, 25 weeks, 4 days ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 28 Jan 2011 07:29:07 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>false</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>juergen.hoeller</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i02a7z:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>13365</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>