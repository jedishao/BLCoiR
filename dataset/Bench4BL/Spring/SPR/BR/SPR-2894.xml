<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 19:01:39 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-2894/SPR-2894.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-2894] Extended EntityManager commit exception swallowed by Spring transaction management</title>
                <link>https://jira.spring.io/browse/SPR-2894</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;When a DML operation fails a constraint (in my case, it was a UNIQUE constraint), the exception that gets thrown is swallowed by the Spring layer, without being passed to the client (it gets reported as an error condition in the logs though)&lt;/p&gt;</description>
            <key id="15590">SPR-2894</key>
            <summary>Extended EntityManager commit exception swallowed by Spring transaction management</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="juergen.hoeller">Juergen Hoeller</assignee>
                                    <reporter username="asavitsky">Alex Savitsky</reporter>
                        <labels>
                    </labels>
                <created>Wed, 29 Nov 2006 04:02:27 +0000</created>
                <updated>Tue, 19 Jun 2012 03:51:21 +0000</updated>
                            <resolved>Thu, 30 Nov 2006 05:11:42 +0000</resolved>
                                    <version>2.0.1</version>
                                    <fixVersion>2.0.2</fixVersion>
                                    <component>Data</component>
                    <component>Transaction</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="21118" author="asavitsky" created="Wed, 29 Nov 2006 04:09:44 +0000"  >&lt;p&gt;Unzip to an Eclipse work folder&lt;/p&gt;

&lt;p&gt;Add libraries for Spring 2.0.1, Hibernate 3.2, Hibernate EM and Hibernate Annotations (not included due to size - see .classpath file)&lt;/p&gt;

&lt;p&gt;Modify the application.properties to set your own DB URL, username, and password&lt;/p&gt;

&lt;p&gt;Execute the following script to create DB data:&lt;/p&gt;

&lt;p&gt;&amp;#8211; start&lt;br/&gt;
CREATE TABLE TAG (&lt;br/&gt;
  ID          NUMBER                            NOT NULL,&lt;br/&gt;
  NAME        VARCHAR2(50 BYTE)                 NOT NULL,&lt;br/&gt;
  CREATED_ON  TIMESTAMP(6)                      DEFAULT SYSTIMESTAMP          NOT NULL,&lt;br/&gt;
  CREATED_BY  VARCHAR2(20 BYTE)                 DEFAULT &apos;ADMIN&apos;               NOT NULL,&lt;br/&gt;
  PRIMARY KEY (ID), UNIQUE (NAME)&lt;br/&gt;
);&lt;/p&gt;

&lt;p&gt;CREATE SEQUENCE SEQ_TAG;&lt;/p&gt;

&lt;p&gt;INSERT INTO TAG (id, name) VALUES (SEQ_TAG.NEXTVAL, &apos;AML TxNx&apos;);&lt;/p&gt;

&lt;p&gt;COMMIT;&lt;br/&gt;
&amp;#8211; end&lt;/p&gt;

&lt;p&gt;Execute Test.java, note that the constraint violation exception (ORA-00001) is not thrown!&lt;/p&gt;</comment>
                            <comment id="21123" author="juergen.hoeller" created="Wed, 29 Nov 2006 09:26:48 +0000"  >&lt;p&gt;Please submit the stacktrace that&apos;s reported in your log... This should allow us to figure out where and when that exception is caught.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="21132" author="asavitsky" created="Thu, 30 Nov 2006 00:00:24 +0000"  >&lt;p&gt;Here it is. I can tell you right away that the exception is reported (and subsequently swallowed) in the TransactionSynchronization.afterCompletion (went in there with a debugger, just to make sure).&lt;/p&gt;

&lt;p&gt;0    &lt;span class=&quot;error&quot;&gt;&amp;#91;main&amp;#93;&lt;/span&gt; ERROR org.hibernate.util.JDBCExceptionReporter  - ORA-00001: unique constraint (COMBRVSTDEV.SYS_C0062330) violated&lt;/p&gt;

&lt;p&gt;0    &lt;span class=&quot;error&quot;&gt;&amp;#91;main&amp;#93;&lt;/span&gt; ERROR org.hibernate.util.JDBCExceptionReporter  - ORA-00001: unique constraint (COMBRVSTDEV.SYS_C0062330) violated&lt;/p&gt;

&lt;p&gt;0    &lt;span class=&quot;error&quot;&gt;&amp;#91;main&amp;#93;&lt;/span&gt; ERROR org.hibernate.event.def.AbstractFlushingEventListener  - Could not synchronize database state with session&lt;br/&gt;
org.hibernate.exception.ConstraintViolationException: Could not execute JDBC batch update&lt;br/&gt;
	at org.hibernate.exception.SQLStateConverter.convert(SQLStateConverter.java:71)&lt;br/&gt;
	at org.hibernate.exception.JDBCExceptionHelper.convert(JDBCExceptionHelper.java:43)&lt;br/&gt;
	at org.hibernate.jdbc.AbstractBatcher.executeBatch(AbstractBatcher.java:249)&lt;br/&gt;
	at org.hibernate.engine.ActionQueue.executeActions(ActionQueue.java:235)&lt;br/&gt;
	at org.hibernate.engine.ActionQueue.executeActions(ActionQueue.java:139)&lt;br/&gt;
	at org.hibernate.event.def.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:298)&lt;br/&gt;
	at org.hibernate.event.def.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:27)&lt;br/&gt;
	at org.hibernate.impl.SessionImpl.flush(SessionImpl.java:1000)&lt;br/&gt;
	at org.hibernate.impl.SessionImpl.managedFlush(SessionImpl.java:338)&lt;br/&gt;
	at org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:106)&lt;br/&gt;
	at org.hibernate.ejb.TransactionImpl.commit(TransactionImpl.java:53)&lt;br/&gt;
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ContainerManagedExtendedEntityManagerSynchronization.afterCompletion(ExtendedEntityManagerCreator.java:347)&lt;br/&gt;
	at org.springframework.transaction.support.TransactionSynchronizationUtils.invokeAfterCompletion(TransactionSynchronizationUtils.java:133)&lt;br/&gt;
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.invokeAfterCompletion(AbstractPlatformTransactionManager.java:847)&lt;br/&gt;
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.triggerAfterCompletion(AbstractPlatformTransactionManager.java:822)&lt;br/&gt;
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:656)&lt;br/&gt;
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:581)&lt;br/&gt;
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:307)&lt;br/&gt;
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:117)&lt;br/&gt;
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:176)&lt;br/&gt;
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:210)&lt;br/&gt;
	at $Proxy14.save(Unknown Source)&lt;br/&gt;
	at test.Test.main(Test.java:15)&lt;br/&gt;
Caused by: java.sql.BatchUpdateException: ORA-00001: unique constraint (COMBRVSTDEV.SYS_C0062330) violated&lt;/p&gt;

&lt;p&gt;	at oracle.jdbc.dbaccess.DBError.throwBatchUpdateException(DBError.java:459)&lt;br/&gt;
	at oracle.jdbc.driver.OraclePreparedStatement.executeBatch(OraclePreparedStatement.java:4133)&lt;br/&gt;
	at org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:48)&lt;br/&gt;
	at org.hibernate.jdbc.AbstractBatcher.executeBatch(AbstractBatcher.java:242)&lt;br/&gt;
	... 20 more&lt;br/&gt;
32   &lt;span class=&quot;error&quot;&gt;&amp;#91;main&amp;#93;&lt;/span&gt; ERROR org.springframework.transaction.support.TransactionSynchronizationUtils  - TransactionSynchronization.afterCompletion threw exception&lt;br/&gt;
javax.persistence.RollbackException: Error while commiting the transaction&lt;br/&gt;
	at org.hibernate.ejb.TransactionImpl.commit(TransactionImpl.java:63)&lt;br/&gt;
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ContainerManagedExtendedEntityManagerSynchronization.afterCompletion(ExtendedEntityManagerCreator.java:347)&lt;br/&gt;
	at org.springframework.transaction.support.TransactionSynchronizationUtils.invokeAfterCompletion(TransactionSynchronizationUtils.java:133)&lt;br/&gt;
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.invokeAfterCompletion(AbstractPlatformTransactionManager.java:847)&lt;br/&gt;
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.triggerAfterCompletion(AbstractPlatformTransactionManager.java:822)&lt;br/&gt;
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:656)&lt;br/&gt;
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:581)&lt;br/&gt;
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:307)&lt;br/&gt;
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:117)&lt;br/&gt;
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:176)&lt;br/&gt;
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:210)&lt;br/&gt;
	at $Proxy14.save(Unknown Source)&lt;br/&gt;
	at test.Test.main(Test.java:15)&lt;br/&gt;
Caused by: org.hibernate.exception.ConstraintViolationException: Could not execute JDBC batch update&lt;br/&gt;
	at org.hibernate.exception.SQLStateConverter.convert(SQLStateConverter.java:71)&lt;br/&gt;
	at org.hibernate.exception.JDBCExceptionHelper.convert(JDBCExceptionHelper.java:43)&lt;br/&gt;
	at org.hibernate.jdbc.AbstractBatcher.executeBatch(AbstractBatcher.java:249)&lt;br/&gt;
	at org.hibernate.engine.ActionQueue.executeActions(ActionQueue.java:235)&lt;br/&gt;
	at org.hibernate.engine.ActionQueue.executeActions(ActionQueue.java:139)&lt;br/&gt;
	at org.hibernate.event.def.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:298)&lt;br/&gt;
	at org.hibernate.event.def.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:27)&lt;br/&gt;
	at org.hibernate.impl.SessionImpl.flush(SessionImpl.java:1000)&lt;br/&gt;
	at org.hibernate.impl.SessionImpl.managedFlush(SessionImpl.java:338)&lt;br/&gt;
	at org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:106)&lt;br/&gt;
	at org.hibernate.ejb.TransactionImpl.commit(TransactionImpl.java:53)&lt;br/&gt;
	... 12 more&lt;br/&gt;
Caused by: java.sql.BatchUpdateException: ORA-00001: unique constraint (COMBRVSTDEV.SYS_C0062330) violated&lt;/p&gt;

&lt;p&gt;	at oracle.jdbc.dbaccess.DBError.throwBatchUpdateException(DBError.java:459)&lt;br/&gt;
	at oracle.jdbc.driver.OraclePreparedStatement.executeBatch(OraclePreparedStatement.java:4133)&lt;br/&gt;
	at org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:48)&lt;br/&gt;
	at org.hibernate.jdbc.AbstractBatcher.executeBatch(AbstractBatcher.java:242)&lt;br/&gt;
	... 20 more&lt;/p&gt;

&lt;p&gt;Note that to get this log output in the attached test case, you&apos;ll need to change the Log4J threshold (in log4j.properties) from FATAL to ERROR. It was set to FATAL to make it clearer to see that the exception never gets to the client.&lt;/p&gt;</comment>
                            <comment id="21134" author="juergen.hoeller" created="Thu, 30 Nov 2006 02:31:00 +0000"  >&lt;p&gt;I see... This happens specifically with JPA, in the case of an extended EntityManager synchronizing itself with an ongoing transaction.&lt;/p&gt;

&lt;p&gt;Our general contract for the &quot;afterCompletion&quot; call is not never propagate any exception there (since other &quot;afterCompletion&quot; methods still need to be called), so the swallowing is basically ok there. However, we can perform the &quot;commit&quot; call earlier, in an &quot;afterCommit&quot; implementation, which does propagate any exception to the caller. &quot;afterCompletion&quot; now only contains the code for the (application-triggered) rollback scenario.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="21136" author="asavitsky" created="Thu, 30 Nov 2006 02:48:25 +0000"  >&lt;p&gt;I see. Yes, as long as the exception eventually gets thrown, any approach is fine by me. One question, though - would the PersistenceExceptionTranslationPostProcessor affect the thrown exception in any way?&lt;/p&gt;

&lt;p&gt;Also, is there currently any definite timeline for 2.0.2 release?&lt;/p&gt;

&lt;p&gt;Alex&lt;/p&gt;</comment>
                            <comment id="21138" author="juergen.hoeller" created="Thu, 30 Nov 2006 05:11:42 +0000"  >&lt;p&gt;I have fixed this in CVS HEAD already; this should be available in the next nightly 2.0.2 snapshot (&lt;a href=&quot;http://www.springframework.org/snapshots&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.springframework.org/snapshots&lt;/a&gt;). Please give it a try and let me know whether it works for you!&lt;/p&gt;

&lt;p&gt;Any such commit exception will be translated to a corresponding DataAccessException before its gets thrown to the caller (that triggered the commit attempt). This should happily coexist with a PersistenceExceptionTranslationPostProcessor that translates (earlier) exceptions at the DAO level.&lt;/p&gt;

&lt;p&gt;The 2.0.2 GA release is planned for late December. I recommend using 2.0.2 snapshots in the meantime, if you need the fix earlier; we do strive for keeping the 2.0.x snapshots as stable as possible - and hence suitable for production use.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="21139" author="asavitsky" created="Thu, 30 Nov 2006 05:16:53 +0000"  >&lt;p&gt;I&apos;ll give it a try sometime next week in my local environment, but overall I&apos;ll have to wait for the official release, due to our policies regarding production libraries.&lt;/p&gt;

&lt;p&gt;Thanks!&lt;/p&gt;

&lt;p&gt;Alex&lt;/p&gt;</comment>
                            <comment id="21221" author="asavitsky" created="Wed, 6 Dec 2006 00:52:43 +0000"  >&lt;p&gt;I tried the snapshot from Dec 6, and it works perfectly.&lt;/p&gt;

&lt;p&gt;Thanks Juergen, great job!&lt;/p&gt;

&lt;p&gt;I&apos;ll be awaiting the GA release.&lt;/p&gt;

&lt;p&gt;Alex&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12250" name="Test.zip" size="6561" author="asavitsky" created="Wed, 29 Nov 2006 04:09:44 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        10 years, 4 weeks, 1 day ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 29 Nov 2006 09:26:48 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>true</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i00v73:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5099</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>