<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 21:12:32 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-5243/SPR-5243.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-5243] Support loading WebApplicationContexts with the TestContext Framework</title>
                <link>https://jira.spring.io/browse/SPR-5243</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;h4&gt;&lt;a name=&quot;StatusQuo&quot;&gt;&lt;/a&gt;Status Quo&lt;/h4&gt;

&lt;p&gt;When the &lt;em&gt;Spring TestContext Framework&lt;/em&gt; was introduced in Spring 2.5, it supported loading an &lt;tt&gt;ApplicationContext&lt;/tt&gt; from either XML or Java Properties files. Spring 3.1 introduced support for loading an &lt;tt&gt;ApplicationContext&lt;/tt&gt; from &lt;em&gt;annotated classes&lt;/em&gt; (e.g., &lt;tt&gt;@Configuration&lt;/tt&gt; classes).&lt;/p&gt;

&lt;p&gt;The underlying implementation for the existing support creates a &lt;tt&gt;GenericApplicationContext&lt;/tt&gt;; however, a &lt;tt&gt;GenericApplicationContext&lt;/tt&gt; is not suitable for testing a web application since a web application relies on an implementation of &lt;tt&gt;WebApplicationContext&lt;/tt&gt; (&lt;em&gt;WAC&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;In order to integration test Spring-powered web applications the Spring TestContext Framework needs to be able to load a &lt;tt&gt;WebApplicationContext&lt;/tt&gt;, either from XML configuration files or from annotated classes. Furthermore, the &lt;tt&gt;ServletContext&lt;/tt&gt; used by such a WAC needs to be configurable within tests, and common context hierarchies must be supported (e.g., &lt;em&gt;root&lt;/em&gt; and &lt;em&gt;dispatcher&lt;/em&gt; WACs in a parent-child relationship).&lt;/p&gt;

&lt;h6&gt;&lt;a name=&quot;OriginalAuthor%27sDescription&quot;&gt;&lt;/a&gt;Original Author&apos;s Description&lt;/h6&gt;

&lt;p&gt;While writing some MVC integration tests, context errors were thrown when loading an &lt;tt&gt;XmlViewResolver&lt;/tt&gt; and when attempting to recover command object property validation errors using the &lt;tt&gt;RequestContext&lt;/tt&gt;. The reason is that each of these requires access to a &lt;tt&gt;WebApplicationContext&lt;/tt&gt;, not a  &lt;tt&gt;GenericApplicationContext&lt;/tt&gt; which the TestContext framework makes available by default.&lt;/p&gt;

&lt;hr /&gt;
&lt;h4&gt;&lt;a name=&quot;Goals&quot;&gt;&lt;/a&gt;Goals&lt;/h4&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Introduce an annotation that allows developers to configure a mock &lt;tt&gt;ServletContext&lt;/tt&gt; from within integration tests.&lt;/li&gt;
	&lt;li&gt;Introduce &lt;tt&gt;SmartContextLoaders&lt;/tt&gt; that can load &lt;tt&gt;WebApplicationContexts&lt;/tt&gt; from either XML or annotated classes, using the configured mock &lt;tt&gt;ServletContext&lt;/tt&gt;.&lt;/li&gt;
	&lt;li&gt;Provide a means for developers to access the mocks for the &lt;tt&gt;HttpServletRequest&lt;/tt&gt; and &lt;tt&gt;HttpServletResponse&lt;/tt&gt; objects and ensure that thread-local state in Spring MVC is kept in sync with these mock objects.&lt;/li&gt;
	&lt;li&gt;Ensure that metadata used to create the &lt;tt&gt;WebApplicationContext&lt;/tt&gt; (e.g., &lt;tt&gt;ServletContext&lt;/tt&gt; path) is used to define the unique application context cache key.&lt;/li&gt;
&lt;/ul&gt;


&lt;hr /&gt;
&lt;h4&gt;&lt;a name=&quot;Deliverables&quot;&gt;&lt;/a&gt;Deliverables&lt;/h4&gt;

&lt;ol&gt;
	&lt;li&gt;&lt;img class=&quot;emoticon&quot; src=&quot;https://jira.spring.io/images/icons/emoticons/check.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; Implement a &lt;tt&gt;SmartContextLoader&lt;/tt&gt; that loads a &lt;tt&gt;WebApplicationContext&lt;/tt&gt; from XML resource locations defined via &lt;tt&gt;@ContextConfiguration&lt;/tt&gt;&lt;/li&gt;
	&lt;li&gt;&lt;img class=&quot;emoticon&quot; src=&quot;https://jira.spring.io/images/icons/emoticons/check.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; Implement a &lt;tt&gt;SmartContextLoader&lt;/tt&gt; that loads a &lt;tt&gt;WebApplicationContext&lt;/tt&gt; from annotated classes defined via &lt;tt&gt;@ContextConfiguration&lt;/tt&gt;&lt;/li&gt;
	&lt;li&gt;&lt;img class=&quot;emoticon&quot; src=&quot;https://jira.spring.io/images/icons/emoticons/check.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; Introduce a new class-level &lt;tt&gt;@WebAppConfiguration&lt;/tt&gt; annotation that allows for configuration of the &lt;tt&gt;ServletContext&lt;/tt&gt; base resource path, using Spring&apos;s &lt;tt&gt;Resource&lt;/tt&gt; abstraction
	&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
		&lt;li&gt;see &lt;tt&gt;ContextMockMvcBuilder.configureWebAppRootDir()&lt;/tt&gt; from &lt;tt&gt;spring-test-mvc&lt;/tt&gt;&lt;/li&gt;
		&lt;li&gt;the base path must be filesystem-based by default, in contrast to the &lt;tt&gt;locations&lt;/tt&gt; attribute in &lt;tt&gt;@ContextConfiguration&lt;/tt&gt; which is classpath-based&lt;/li&gt;
		&lt;li&gt;the base path should default to &lt;em&gt;&quot;src/main/webapp&quot;&lt;/em&gt;, which follows the Maven convention&lt;/li&gt;
		&lt;li&gt;determine if &lt;tt&gt;@WebAppConfiguration&lt;/tt&gt; should be &lt;em&gt;inherited&lt;/em&gt; (i.e., annotated with &lt;tt&gt;@Inherited&lt;/tt&gt;), keeping in mind that the top-level context in an EAR would not be a WAC&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
	&lt;li&gt;&lt;img class=&quot;emoticon&quot; src=&quot;https://jira.spring.io/images/icons/emoticons/check.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; Ensure that the two newly introduced &lt;tt&gt;SmartContextLoader&lt;/tt&gt; implementations create a &lt;tt&gt;MockServletContext&lt;/tt&gt; on demand (i.e., if a root WAC), when the WAC is loaded, and set the &lt;tt&gt;MockServletContext&lt;/tt&gt; as the &lt;tt&gt;ServletContext&lt;/tt&gt; in the application contexts that they load&lt;/li&gt;
	&lt;li&gt;&lt;img class=&quot;emoticon&quot; src=&quot;https://jira.spring.io/images/icons/emoticons/check.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; Set a loaded context as the &lt;tt&gt;ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE&lt;/tt&gt; in the &lt;tt&gt;MockServletContext&lt;/tt&gt; when context hierarchies are not used&lt;/li&gt;
	&lt;li&gt;&lt;img class=&quot;emoticon&quot; src=&quot;https://jira.spring.io/images/icons/emoticons/check.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; Introduce a subclass of &lt;tt&gt;MergedContextConfiguration&lt;/tt&gt; specific for web apps (e.g., &lt;tt&gt;WebMergedContextConfiguration&lt;/tt&gt;) that stores the &lt;tt&gt;ServletContext&lt;/tt&gt; base path
	&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
		&lt;li&gt;the subclass of MCC must override &lt;tt&gt;equals()&lt;/tt&gt; and &lt;tt&gt;hashCode()&lt;/tt&gt; to include the metadata that uniquely identifies the resulting WAC for proper context caching&lt;/li&gt;
		&lt;li&gt;the &lt;tt&gt;buildMergedContextConfiguration()&lt;/tt&gt; method in &lt;tt&gt;ContextLoaderUtils&lt;/tt&gt; will likely need to instantiate either a standard &lt;tt&gt;MergedContextConfiguration&lt;/tt&gt; or a &lt;tt&gt;WebMergedContextConfiguration&lt;/tt&gt;&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
	&lt;li&gt;&lt;img class=&quot;emoticon&quot; src=&quot;https://jira.spring.io/images/icons/emoticons/check.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; Set up &lt;em&gt;default&lt;/em&gt; thread local state via &lt;tt&gt;RequestContextHolder&lt;/tt&gt; before each test method by implementing a new Servlet-specific &lt;tt&gt;TestExecutionListener&lt;/tt&gt;
	&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
		&lt;li&gt;by using the &lt;tt&gt;MockServletContext&lt;/tt&gt; already present in the WAC and by creating a &lt;tt&gt;MockHttpServletRequest&lt;/tt&gt;, &lt;tt&gt;MockHttpServletResponse&lt;/tt&gt;, and &lt;tt&gt;ServletWebRequest&lt;/tt&gt; which will be set in the &lt;tt&gt;RequestContextHolder&lt;/tt&gt;&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
	&lt;li&gt;&lt;img class=&quot;emoticon&quot; src=&quot;https://jira.spring.io/images/icons/emoticons/check.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; Ensure that the &lt;tt&gt;MockServletContext&lt;/tt&gt;, &lt;tt&gt;MockHttpServletRequest&lt;/tt&gt;, &lt;tt&gt;MockHttpServletResponse&lt;/tt&gt;, and &lt;tt&gt;ServletWebRequest&lt;/tt&gt; can be injected into the test instance (e.g., via &lt;tt&gt;@Autowired&lt;/tt&gt;)&lt;/li&gt;
	&lt;li&gt;&lt;img class=&quot;emoticon&quot; src=&quot;https://jira.spring.io/images/icons/emoticons/check.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; Clean up thread locals after each test method&lt;/li&gt;
	&lt;li&gt;&lt;img class=&quot;emoticon&quot; src=&quot;https://jira.spring.io/images/icons/emoticons/check.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; Ensure that the Servlet-specific &lt;tt&gt;TestExecutionListener&lt;/tt&gt; is configured as a default &lt;tt&gt;TestExecutionListener&lt;/tt&gt; &lt;em&gt;before&lt;/em&gt; &lt;tt&gt;DependencyInjectionTestExecutionListener&lt;/tt&gt;&lt;/li&gt;
	&lt;li&gt;&lt;img class=&quot;emoticon&quot; src=&quot;https://jira.spring.io/images/icons/emoticons/check.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; Introduce a new web-specific &lt;tt&gt;DelegatingSmartContextLoader&lt;/tt&gt; to incorporate support for the &lt;tt&gt;SmartContextLoader&lt;/tt&gt; types introduced in this issue and ensure that the correct delegating loader is picked based on the presence or absence of &lt;tt&gt;@WebAppConfiguration&lt;/tt&gt;&lt;/li&gt;
	&lt;li&gt;&lt;img class=&quot;emoticon&quot; src=&quot;https://jira.spring.io/images/icons/emoticons/check.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; Consider being able to accommodate a future request to support mocks for Spring Portlet MVC&lt;/li&gt;
&lt;/ol&gt;


&lt;hr /&gt;
&lt;h4&gt;&lt;a name=&quot;PseudocodeExamples&quot;&gt;&lt;/a&gt;Pseudocode Examples&lt;/h4&gt;

&lt;hr /&gt;
&lt;h5&gt;&lt;a name=&quot;RootWACwithInjectedMocks&quot;&gt;&lt;/a&gt;Root WAC with Injected Mocks&lt;/h5&gt;

&lt;p/&gt;
&lt;div id=&quot;syntaxplugin&quot; class=&quot;syntaxplugin&quot; style=&quot;border: 1px dashed #bbb; border-radius: 5px !important; overflow: auto; max-height: 30em;&quot;&gt;
&lt;table cellspacing=&quot;0&quot; cellpadding=&quot;0&quot; border=&quot;0&quot; width=&quot;100%&quot; style=&quot;font-size: 1em; line-height: 1.4em !important; font-weight: normal; font-style: normal; color: black;&quot;&gt;
		&lt;tbody &gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;  margin-top: 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;@WebAppConfiguration // path defaults to &quot;file:src/main/webapp&quot;&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;@ContextConfiguration(&quot;file:src/main/webapp/WEB-INF/applicationContext.xml&quot;)&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;public class RootWacTests {&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   width: auto; padding: 0;&quot;&gt;&amp;nbsp;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;    @Autowired&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;    private WebApplicationContext wac;&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   width: auto; padding: 0;&quot;&gt;&amp;nbsp;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;    @Autowired&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;    private MockServletContext servletContext;&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   width: auto; padding: 0;&quot;&gt;&amp;nbsp;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;    @Autowired&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;    private MockHttpServletRequest request;&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   width: auto; padding: 0;&quot;&gt;&amp;nbsp;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;    @Autowired&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;    private MockHttpServletResponse response;&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   width: auto; padding: 0;&quot;&gt;&amp;nbsp;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;    @Autowired&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;    private MockHttpSession session;&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   width: auto; padding: 0;&quot;&gt;&amp;nbsp;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;    @Autowired&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;    private ServletWebRequest webRequest;&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   width: auto; padding: 0;&quot;&gt;&amp;nbsp;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;    //...&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   margin-bottom: 10px;  width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;}&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
			&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;p/&gt;

&lt;hr /&gt;
&lt;h4&gt;&lt;a name=&quot;FurtherResources&quot;&gt;&lt;/a&gt;Further Resources&lt;/h4&gt;

&lt;h5&gt;&lt;a name=&quot;BlogsandCustomSolutions&quot;&gt;&lt;/a&gt;Blogs and Custom Solutions&lt;/h5&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;&lt;a href=&quot;http://codinghood.blogspot.com/2009/01/spring-integration-testing-for-web.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://codinghood.blogspot.com/2009/01/spring-integration-testing-for-web.html&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://jamesfarrell129.wordpress.com/2011/04/20/integration-testing-for-spring-portlet-mvc/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://jamesfarrell129.wordpress.com/2011/04/20/integration-testing-for-spring-portlet-mvc/&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://tedyoung.me/2011/02/14/spring-mvc-integration-testing-controllers/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://tedyoung.me/2011/02/14/spring-mvc-integration-testing-controllers/&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://code.google.com/p/ted-young/source/browse/trunk/blog.spring-mvc-integration-testing/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://code.google.com/p/ted-young/source/browse/trunk/blog.spring-mvc-integration-testing/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;h5&gt;&lt;a name=&quot;ForumDiscussions&quot;&gt;&lt;/a&gt;Forum Discussions&lt;/h5&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;&lt;a href=&quot;http://forum.springframework.org/showthread.php?p=210177#post210177&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://forum.springframework.org/showthread.php?p=210177#post210177&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://forum.springframework.org/showthread.php?p=210181&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://forum.springframework.org/showthread.php?p=210181&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://forum.springsource.org/showthread.php?t=76744&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://forum.springsource.org/showthread.php?t=76744&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;hr /&gt;</description>
            <key id="24462">SPR-5243</key>
            <summary>Support loading WebApplicationContexts with the TestContext Framework</summary>
                <type id="2" iconUrl="https://jira.spring.io/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="8">Complete</resolution>
                                        <assignee username="sbrannen">Sam Brannen</assignee>
                                    <reporter username="geoffm">Geoff Metselaar</reporter>
                        <labels>
                    </labels>
                <created>Mon, 27 Oct 2008 22:54:49 +0000</created>
                <updated>Sun, 4 Nov 2012 14:48:44 +0000</updated>
                            <resolved>Sun, 7 Oct 2012 15:51:14 +0000</resolved>
                                    <version>2.5 final</version>
                    <version>3.0 GA</version>
                    <version>3.1 GA</version>
                                    <fixVersion>3.2 RC1</fixVersion>
                                    <component>Test</component>
                    <component>Web</component>
                        <due></due>
                            <votes>30</votes>
                                    <watches>29</watches>
                                            <timeestimate seconds="0">0d</timeestimate>
                            <timespent seconds="115200">4d</timespent>
                                <comments>
                            <comment id="40690" author="narada" created="Tue, 28 Oct 2008 10:30:33 +0000"  >&lt;p&gt;I would absolutely love this.  I&apos;ve spent a lot of time trying to get this to work.  It shouldn&apos;t be this difficult.  It&apos;d be great if this not uncommon use case was available out of the box.  Thanks.&lt;/p&gt;</comment>
                            <comment id="63664" author="gpitteloud" created="Wed, 23 Feb 2011 00:00:38 +0000"  >&lt;p&gt;Loading a WebApplicationContext is not a difficult task on its own : you just provide a @ContextConfiguration.loader that creates a GenericWebApplicationContext. The difficult task is that the basic contract of a WebApplicationContext is that it knows the ServletContext for several reasons.&lt;/p&gt;

&lt;p&gt;I have built a solution based on a test listener (so-called WebListener) that creates the web environment (based on spring mock classes) : Mock ServletContext, Mock request, response, session. The ServletContext is created once (beforeTestClass) for a test class, and is &amp;lt;i&amp;gt;injected&amp;lt;/i&amp;gt; into the ContextLoader (there&apos;s no API to do this, thus I had to do it with reflexion, which is the goal of my TestContextUtils class). I have to ensure that the context is not loaded yet, or this trick will not work (I mark it as dirty for that purpose, and also because it might have been loaded by another test class earlier, or will be used by another test class later on).&lt;/p&gt;

&lt;p&gt;You will find attached the WebListener and Web ContextLoader that are working together.&lt;/p&gt;

&lt;p&gt;The web listener&apos;s duty also includes a way to inject the web mocks (ServletContext, request, response, etc.) into test instance variables that are annotated with @WebResource. I found it quite useful.&lt;/p&gt;

&lt;p&gt;The WebListener is actually split into an AbstractWebListener and its subclass WebListener because I also implemented a JsfListener with the same semantics, with the only jsf mock lib I found so far : shale-test.&lt;/p&gt;

&lt;p&gt;There are tests in the listener that test for the existence of an application context (by looking for a @ContextConfiguration annotation in the test class hiererchy) : the reason for this is that the web listener may also be used without an application context in place, i.e. only for creating a mock web environment.&lt;/p&gt;

&lt;p&gt;The mock objects (request, response, session) are shared for other listeners to use thanks to TestContext internal attributes map, which also happens to be useful.&lt;/p&gt;</comment>
                            <comment id="66993" author="sslavic" created="Wed, 1 Jun 2011 16:20:38 +0000"  >&lt;p&gt;Checkout Spring MVC integration test support Rosen and Arjen have been building @ &lt;a href=&quot;https://github.com/SpringSource/spring-test-mvc&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/SpringSource/spring-test-mvc&lt;/a&gt;&lt;br/&gt;
First heard about it on S2G Forum 2011 Amsterdam, and Spring 3.2 was mentioned as likely target. Not sure if there is separate ticket for this, but I think they are related.&lt;/p&gt;</comment>
                            <comment id="67003" author="rstoya05-aop" created="Thu, 2 Jun 2011 01:26:34 +0000"  >&lt;p&gt;The two might be quite complementary. You could use this to create and initialize a WebApplicationContext once per test fixture and then provide it to the main class of the Spring MVC integration test support.&lt;/p&gt;</comment>
                            <comment id="81832" author="sbrannen" created="Wed, 18 Jul 2012 13:22:53 +0000"  >&lt;p&gt;If you are &lt;em&gt;watching&lt;/em&gt; this issue, please feel free to participate in the discussion regarding the proposed &lt;em&gt;Deliverables&lt;/em&gt; and the corresponding &lt;em&gt;Pseudocode Examples&lt;/em&gt; listed in this issue&apos;s &lt;em&gt;Description&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Thanks!&lt;/p&gt;

&lt;p&gt;Sam&lt;/p&gt;</comment>
                            <comment id="81838" author="gpitteloud" created="Wed, 18 Jul 2012 23:45:38 +0000"  >&lt;p&gt;2 comments:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;When @WebAppConfiguration is present, the WAC should not be cached and reused in next tests that share the same @ContextConfiguration.locations, because the lifespan of its ServletContext is limited to the test class.&lt;/li&gt;
	&lt;li&gt;I found it quite useful to have tests that run with mock environment (mock servlet context, request, response, session), RequestContext thread locals, etc., but that do not need a WAC to be set up. Thus we have lighter tests, still using mock injection and thread locals facilities. It would be nice to allow such tests.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;And 2 questions:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Is there a plan to include some sort of security support, so that &lt;tt&gt;request.isUserInRole(String role)&lt;/tt&gt; and &lt;tt&gt;request.getUserPrincipal()&lt;/tt&gt; return some configurable values ? The idea would be a @Secured annotation on test methods (with username and roles), that defines the security context of a test case.&lt;/li&gt;
	&lt;li&gt;Does all this work with a test execution listener or will it be integrated into the TestContext framework ?&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="81859" author="sbrannen" created="Thu, 19 Jul 2012 09:19:50 +0000"  >&lt;p&gt;Hi Gaetan,&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;When @WebAppConfiguration is present, the WAC should not be cached and reused in next tests that share the same @ContextConfiguration.locations, because the lifespan of its ServletContext is limited to the test class.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;One of the key features of the TestContext framework is caching. Thus the WAC will certainly be cached by default.&lt;/p&gt;

&lt;p&gt;Please note that the proposed subclass of &lt;tt&gt;MergedContextConfiguration&lt;/tt&gt; will be responsible for ensuring that the MCC uniquely identifies the WAC for proper caching.&lt;/p&gt;

&lt;p&gt;Why do you say that &quot;&lt;em&gt;the lifespan of its ServletContext is limited to the test class&lt;/em&gt;&quot;?&lt;/p&gt;

&lt;p&gt;I would argue that the lifespan of the &lt;tt&gt;ServletContext&lt;/tt&gt; is tied directly to the lifespan of the corresponding &lt;tt&gt;WebApplicationContext&lt;/tt&gt;. Thus if the WAC is used across multiple test classes, it should definitely be cached.&lt;/p&gt;

&lt;p&gt;If you want to &lt;em&gt;disable&lt;/em&gt; caching of a WAC after a particular test class, simply annotate the test class with &lt;tt&gt;@DirtiesContext&lt;/tt&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I found it quite useful to have tests that run with mock environment (mock servlet context, request, response, session), RequestContext thread locals, etc., but that do not need a WAC to be set up. Thus we have lighter tests, still using mock injection and thread locals facilities. It would be nice to allow such tests.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;How do you propose to inject the mocks if not from a configured WAC?&lt;/p&gt;

&lt;p&gt;Are you proposing to just have a custom &lt;tt&gt;TestExecutionListener&lt;/tt&gt; for this purpose?&lt;/p&gt;

&lt;p&gt;Can you please provide some pseudocode to demonstrate your use case?&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Is there a plan to include some sort of security support, so that request.isUserInRole(String role) and request.getUserPrincipal() return some configurable values? The idea would be a @Secured annotation on test methods (with username and roles), that defines the security context of a test case.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;No, there is currently no plan to support this, but it is an interesting idea.&lt;/p&gt;

&lt;p&gt;So feel free to create a separate JIRA issue to request it.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Does all this work with a test execution listener or will it be integrated into the TestContext framework ?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The code needed to support the features in this issue will be integrated in the TestContext framework, tentatively including two &lt;tt&gt;SmartContextLoader&lt;/tt&gt; implementations, a subclass of &lt;tt&gt;MergedContextConfiguration&lt;/tt&gt;, a &lt;tt&gt;TestExecutionListener&lt;/tt&gt;, and an annotation.&lt;/p&gt;

&lt;p&gt;Regards,&lt;/p&gt;

&lt;p&gt;Sam&lt;/p&gt;</comment>
                            <comment id="81869" author="gpitteloud" created="Fri, 20 Jul 2012 01:42:12 +0000"  >&lt;p&gt;Hi Sam,&lt;/p&gt;

&lt;p&gt;Thanks for the reply and explanations.&lt;/p&gt;

&lt;p&gt;Regarding caching, I was thinking about a first test with a plain ApplicationContext and a second test with a WebApplicationContext, both defined with similar xml locations. Using current caching facility (key=xml locations), both contexts would be stored under same key.&lt;br/&gt;
But this is now OK as long as the context cache key contains WAC and ServletContext info.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I would argue that the lifespan of the &lt;tt&gt;ServletContext&lt;/tt&gt; is tied directly to the lifespan of the corresponding &lt;tt&gt;WebApplicationContext&lt;/tt&gt;. Thus if the WAC is used across multiple test classes, it should definitely be cached.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;You&apos;re right, the lifespan of the &lt;tt&gt;ServletContext&lt;/tt&gt; is bound to the lifespan of the WAC, not the test that uses the WAC. My first thoughts in implementating this web test feature was a test case that creates a &lt;tt&gt;ServletContext&lt;/tt&gt; in @BeforeClass and then symmetrically &quot;destroys&quot; it in @AfterClass. But the context caching feature introduces another lifecycle that is not bound to the test lifecycle; the &lt;tt&gt;ServletContext&lt;/tt&gt; is definitively part of this alternate lifecycle.&lt;/p&gt;

&lt;p&gt;Regarding web tests without WAC, a simple TestExecutionListener can do the job :&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;before class : introspect the class to find @Autowired fields of type ServletRequest, ServletResponse, HttpSession, ServletContext, etc. (or subclasses).&lt;/li&gt;
	&lt;li&gt;prepare instance : creates mock request, response, etc. and injects them into @Autowired fields&lt;/li&gt;
	&lt;li&gt;before method: register thread local RequestContext&lt;/li&gt;
	&lt;li&gt;after method : reset thread local&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;This helps writing tests for a POJO web controller that does not need application context infrastructure, but just access to a request/response pair and maybe a user session. With such a listener, there&apos;s no need to write a @Before method that creates all these objects. But it&apos;s not linked to WAC and thus not linked to this JIRA issue. I can write such a listener by myself.&lt;/p&gt;

&lt;p&gt;Regarding security, I created the issue &lt;a href=&quot;https://jira.spring.io/browse/SEC-2015&quot; title=&quot;Create spring-security-test module&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SEC-2015&quot;&gt;&lt;del&gt;SEC-2015&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Regards,&lt;br/&gt;
Ga&#235;tan&lt;/p&gt;</comment>
                            <comment id="81880" author="sbrannen" created="Fri, 20 Jul 2012 09:39:16 +0000"  >&lt;p&gt;This issue depends on &lt;a href=&quot;https://jira.spring.io/browse/SPR-5613&quot; title=&quot;Provide support for context hierarchies in the TestContext Framework&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SPR-5613&quot;&gt;&lt;del&gt;SPR-5613&lt;/del&gt;&lt;/a&gt; in order to support common context hierarchies in Spring MVC web applications.&lt;/p&gt;</comment>
                            <comment id="81882" author="rstoya05-aop" created="Fri, 20 Jul 2012 09:41:22 +0000"  >&lt;blockquote&gt;&lt;p&gt;This helps writing tests for a POJO web controller that does not need application context infrastructure, but just access to a request/response pair and maybe a user session.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The spring-test-mvc project (to be included in Spring 3.2) might fit this description. The &quot;standalone&quot; setup does not require an ApplicationContext and uses the mock request/response internally. See &lt;a href=&quot;https://github.com/SpringSource/spring-test-mvc/blob/master/src/test/java/org/springframework/test/web/server/samples/standalone/ResponseBodyTests.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;this example&lt;/a&gt; as well as many others in that package and sub-packages.&lt;/p&gt;</comment>
                            <comment id="84079" author="sbrannen" created="Sun, 7 Oct 2012 12:48:52 +0000"  >&lt;p&gt;If you&apos;re following this issue, you may interested in knowing that support for &lt;tt&gt;WebApplicationContext&lt;/tt&gt; hierarchies in integration tests has been split out into a new issue: &lt;a href=&quot;https://jira.spring.io/browse/SPR-9863&quot; title=&quot;Support WebApplicationContext hierarchies in the TestContext Framework&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SPR-9863&quot;&gt;&lt;del&gt;SPR-9863&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Regards,&lt;/p&gt;

&lt;p&gt;Sam&lt;/p&gt;</comment>
                            <comment id="84081" author="sbrannen" created="Sun, 7 Oct 2012 15:27:28 +0000"  >&lt;p&gt;Pull request submitted: &lt;a href=&quot;https://github.com/SpringSource/spring-framework/pull/160&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/SpringSource/spring-framework/pull/160&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="84082" author="sbrannen" created="Sun, 7 Oct 2012 15:47:09 +0000"  >&lt;p&gt;This work has been addressed as discussed in the comments for &lt;a href=&quot;https://github.com/SpringSource/spring-framework/commit/9937f840d5dbd2be819f45f5101dd6486aa382f6&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;GitHub commit 9937f840d5&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;b&gt;Support loading WebApplicationContexts in the TCF&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Prior to this commit, the Spring TestContext Framework only supported&lt;br/&gt;
loading an ApplicationContext in integration tests from either XML or&lt;br/&gt;
Java Properties files (since Spring 2.5), and Spring 3.1 introduced&lt;br/&gt;
support for loading an ApplicationContext in integration tests from&lt;br/&gt;
annotated classes (e.g., @Configuration classes). All of the&lt;br/&gt;
ContextLoader implementations used to provide this support load a&lt;br/&gt;
GenericApplicationContext. However, a GenericApplicationContext is not&lt;br/&gt;
suitable for testing a web application since a web application relies on&lt;br/&gt;
an implementation of WebApplicationContext (WAC).&lt;/p&gt;

&lt;p&gt;This commit makes it possible to integration test Spring-powered web&lt;br/&gt;
applications by adding the following functionality to the Spring&lt;br/&gt;
TestContext Framework.&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Introduced AbstractGenericWebContextLoader and two concrete&lt;br/&gt;
   subclasses:
	&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
		&lt;li&gt;XmlWebContextLoader&lt;/li&gt;
		&lt;li&gt;AnnotationConfigWebContextLoader&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Pulled up prepareContext(context, mergedConfig) from&lt;br/&gt;
   AbstractGenericContextLoader into AbstractContextLoader to allow it&lt;br/&gt;
   to be shared across web and non-web context loaders.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Introduced AnnotationConfigContextLoaderUtils and refactored&lt;br/&gt;
   AnnotationConfigContextLoader accordingly. These utils are also used&lt;br/&gt;
   by AnnotationConfigWebContextLoader.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Introduced a new @WebAppConfiguration annotation to denote that the&lt;br/&gt;
   ApplicationContext loaded for a test should be a WAC and to configure&lt;br/&gt;
   the base resource path for the root directory of a web application.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Introduced WebMergedContextConfiguration which extends&lt;br/&gt;
   MergedContextConfiguration with support for a baseResourcePath for&lt;br/&gt;
   the root directory of a web application.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;ContextLoaderUtils.buildMergedContextConfiguration() now builds a&lt;br/&gt;
   WebMergedContextConfiguration instead of a standard &lt;br/&gt;
   MergedContextConfiguration if @WebAppConfiguration is present on the&lt;br/&gt;
   test class.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Introduced a configureWebResources() method in&lt;br/&gt;
   AbstractGenericWebContextLoader that is responsible for creating a&lt;br/&gt;
   MockServletContext with a proper ResourceLoader for the &lt;br/&gt;
   resourceBasePath configured in the WebMergedContextConfiguration. The &lt;br/&gt;
   resulting mock ServletContext is set in the WAC, and the WAC is &lt;br/&gt;
   stored as the Root WAC in the ServletContext.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Introduced a WebTestExecutionListener that sets up default thread&lt;br/&gt;
   local state via RequestContextHolder before each test method by using&lt;br/&gt;
   the MockServletContext already present in the WAC and by creating a&lt;br/&gt;
   MockHttpServletRequest, MockHttpServletResponse, and&lt;br/&gt;
   ServletWebRequest that is set in the RequestContextHolder. WTEL also&lt;br/&gt;
   ensures that the MockHttpServletResponse and ServletWebRequest can be&lt;br/&gt;
   injected into the test instance (e.g., via @Autowired) and cleans up&lt;br/&gt;
   thread locals after each test method.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;WebTestExecutionListener is configured as a default&lt;br/&gt;
   TestExecutionListener before DependencyInjectionTestExecutionListener&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Extracted AbstractDelegatingSmartContextLoader from&lt;br/&gt;
   DelegatingSmartContextLoader and introduced a new&lt;br/&gt;
   WebDelegatingSmartContextLoader.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;ContextLoaderUtils now selects the default delegating ContextLoader&lt;br/&gt;
   class name based on the presence of @WebAppConfiguration on the test&lt;br/&gt;
   class.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Tests in the spring-test-mvc module no longer use a custom&lt;br/&gt;
   ContextLoader to load a WebApplicationContext. Instead, they now&lt;br/&gt;
   rely on new core functionality provided in this commit.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;</comment>
                            <comment id="84736" author="sbrannen" created="Wed, 31 Oct 2012 09:54:27 +0000"  >&lt;p&gt;Note that &lt;tt&gt;WebTestExecutionListener&lt;/tt&gt; has been renamed to &lt;tt&gt;ServletTestExecutionListener&lt;/tt&gt;.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10150">
                    <name>Depend</name>
                                            <outwardlinks description="depends on">
                                        <issuelink>
            <issuekey id="26152">SPR-5613</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is depended on by">
                                        <issuelink>
            <issuekey id="45661">SPR-9863</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="21135">SPR-4588</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="45666">SPR-9864</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10000">
                    <name>Duplicate</name>
                                                                <inwardlinks description="is duplicated by">
                                        <issuelink>
            <issuekey id="27008">SPR-5850</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="25278">SPR-5399</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="21924">SPR-4759</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10151">
                    <name>Relate</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="45652">SPR-9859</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="45978">SPR-9955</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="42526">SPR-9211</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10130">
                    <name>Supersede</name>
                                            <outwardlinks description="supersedes">
                                        <issuelink>
            <issuekey id="45424">SPR-9799</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="17654" name="web_listener_loader.zip" size="6856" author="gpitteloud" created="Wed, 23 Feb 2011 00:05:44 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        4 years, 8 weeks, 1 day ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 28 Oct 2008 10:30:33 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>false</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>sbrannen</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i028iv:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>13090</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>