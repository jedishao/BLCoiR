<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 18:50:49 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-2877/SPR-2877.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-2877] Spring Quartz support, persistent jobs. </title>
                <link>https://jira.spring.io/browse/SPR-2877</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;This is mainly a documentation issue. (Although it would be possible to improve on the design as well)&lt;/p&gt;

&lt;p&gt;The problem is the org.springframework.scheduling.quartz.JobDetailBean. It should be clearly stated that this bean cannot be used with a persistent job store. This is such an important issue when using Quartz, that it should be mentioned explicitly. Among other things, a persistent job store is required when running Quartz in a cluster. This is a very common requirement in enterprise applications, and JobDetailBean is therefore not very useful for most applications.&lt;/p&gt;

&lt;p&gt;My problem actually stems from using code copied from the book ProSpring (p 513) by Rob Harrop, where he shows an example of using JobDetailBean with a persistent job store. Clearly, this config has never been tested. This is a widely read book (by an Interface21 guy AFAIK), and this config will be widely read and copied.&lt;/p&gt;

&lt;p&gt;In my opinion the code could be improved:&lt;br/&gt;
The problem stems from JobDetail bean being ApplicationContextAware, which it needn&apos;t be. (It puts the applicationContext in the jobDataMap) SchedulerFactory puts the applicationContext in the schedulerContext anyway, why can not the Job get the applicationContext from there? &lt;/p&gt;

&lt;p&gt;See this thread for some further info:&lt;br/&gt;
&lt;a href=&quot;http://forum.springframework.org/showthread.php?t=31820&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://forum.springframework.org/showthread.php?t=31820&lt;/a&gt;&lt;/p&gt;</description>
            <key id="15563">SPR-2877</key>
            <summary>Spring Quartz support, persistent jobs. </summary>
                <type id="4" iconUrl="https://jira.spring.io/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="4" iconUrl="https://jira.spring.io/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="3">Duplicate</resolution>
                                        <assignee username="juergen.hoeller">Juergen Hoeller</assignee>
                                    <reporter username="superpuma">Jon Are Storl&#248;kken</reporter>
                        <labels>
                    </labels>
                <created>Sun, 26 Nov 2006 23:24:40 +0000</created>
                <updated>Wed, 3 Jan 2007 21:11:25 +0000</updated>
                            <resolved>Wed, 3 Jan 2007 21:11:25 +0000</resolved>
                                    <version>1.2.8</version>
                    <version>2.0.1</version>
                                                    <component>Core</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="21074" author="juergen.hoeller" created="Mon, 27 Nov 2006 08:16:01 +0000"  >&lt;p&gt;Note that JobDetailBean only puts the ApplicationContext into the JobDataMap if you specified an &quot;applicationContextJobDataKey&quot;. So from that perspective, persistence should work fine as long as you don&apos;t specify such a key there.&lt;/p&gt;

&lt;p&gt;I suppose the problem is rather that you use Quartz 1.6. We recently had an issue report (&lt;a href=&quot;https://jira.spring.io/browse/SPR-2850&quot; title=&quot;Upgrade to Quartz 1.6.1 (for trigger persistence with SimpleTriggerBean and CronTriggerBean)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SPR-2850&quot;&gt;&lt;del&gt;SPR-2850&lt;/del&gt;&lt;/a&gt;) that Quartz 1.6 itself explicitly checks for the SimpleTrigger and CronTrigger class now, not allowing for subclasses of those anymore. I assume the same applies to the JobDetail class now...&lt;/p&gt;

&lt;p&gt;Trigger and JobDetail persistence should have worked fine when using Spring&apos;s JobDetailBean etc before, up until Quartz 1.5.x, hence the examples in the books. Note that Quartz 1.6 is still very recent, and not officially supported by Spring 1.2.x... We will try to find a solution for Quartz 1.6+ on Spring 2.0, though.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="21075" author="juergen.hoeller" created="Mon, 27 Nov 2006 08:17:28 +0000"  >&lt;p&gt;Please let me know which Quartz version you actually tested this against! If it&apos;s not 1.6, we&apos;ll have to reconsider what the root cause could be in your case...&lt;/p&gt;</comment>
                            <comment id="21083" author="superpuma" created="Mon, 27 Nov 2006 20:10:45 +0000"  >&lt;p&gt;Yes. I&apos;m using 1.6. &lt;/p&gt;

&lt;p&gt;Checking the source for the offending code (JobStoreSupport.storeTrigger) I see that it has changed from 1.5.2. Instead of using instanceof it now checks the class explicitly.  So, it seems the config actually did work before.&lt;/p&gt;

&lt;p&gt;This now means that the SimpleTriggerBean is now not treated the same as a SimpleTrigger, and it is serialized and stored in the BLOB_TRIGGER table.&lt;/p&gt;
</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10000">
                    <name>Duplicate</name>
                                            <outwardlinks description="duplicates">
                                        <issuelink>
            <issuekey id="15521">SPR-2850</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        10 years, 5 weeks, 2 days ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 27 Nov 2006 08:16:01 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>true</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0393r:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>19017</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>