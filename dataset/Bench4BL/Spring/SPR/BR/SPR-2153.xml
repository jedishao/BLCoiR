<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 19:06:01 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-2153/SPR-2153.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-2153] SqlMapClientTemplate does not work for nested calls (same SqlMapSession)</title>
                <link>https://jira.spring.io/browse/SPR-2153</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;I&apos;ve already commented here &lt;a href=&quot;http://opensource.atlassian.com/projects/spring/browse/SPR-1583&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://opensource.atlassian.com/projects/spring/browse/SPR-1583&lt;/a&gt; that there was introduced a serious bug in Spring&apos;s SqlMapClientTemplate in 1.2.7 and 2.0 M2. &lt;/p&gt;

&lt;p&gt;This bug does not allow to use iBatis properly with SqlMapClientTemplate from the version stated above.&lt;/p&gt;

&lt;p&gt;Please see my comments here &lt;a href=&quot;http://opensource.atlassian.com/projects/spring/browse/SPR-1583#action_17998&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://opensource.atlassian.com/projects/spring/browse/SPR-1583#action_17998&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thanks and regards&lt;/p&gt;
</description>
            <key id="14244">SPR-2153</key>
            <summary>SqlMapClientTemplate does not work for nested calls (same SqlMapSession)</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="juergen.hoeller">Juergen Hoeller</assignee>
                                    <reporter username="borgra">Rafael Borges</reporter>
                        <labels>
                    </labels>
                <created>Sun, 18 Jun 2006 18:16:08 +0000</created>
                <updated>Tue, 19 Jun 2012 03:52:38 +0000</updated>
                            <resolved>Sat, 22 Jul 2006 03:50:04 +0000</resolved>
                                    <version>1.2.7</version>
                    <version>1.2.8</version>
                    <version>2.0 M2</version>
                    <version>2.0 M3</version>
                    <version>2.0 M4</version>
                    <version>2.0 M5</version>
                                    <fixVersion>2.0 RC3</fixVersion>
                                    <component>Data</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="18061" author="juergen.hoeller" created="Mon, 19 Jun 2006 04:32:28 +0000"  >&lt;p&gt;I&apos;ve just verified that this works fine for me in a local test here: with Spring 2.0 RC1&apos;s SqlMapClientTemplate (which has not seen any recent change) and iBATIS 2.1.7, loading an object based on a result map with a select=&quot;...&quot; mapping, both within and outside a transaction.&lt;/p&gt;

&lt;p&gt;Can you please describe the details of your scenario? Which version of iBATIS are you running against? What exception do you get? Can you maybe try to isolate a minimal test case?&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="18180" author="borgra" created="Sat, 24 Jun 2006 22:10:57 +0000"  >&lt;p&gt;Thanks for your help Juergen.&lt;/p&gt;

&lt;p&gt;I made a simple local test and it&apos;s working fine for me too, so this issue is not as bad as I originally thought. But there is an scenario that has been broken (Spring 2.0-m5 + iBatis 2.1.7.597):&lt;/p&gt;

&lt;p&gt;There are several DAOs that use the same SqlMapClient. They work fine as long as they are called on different transaction contexts, that&apos;s where I think the issue is. Better with an example:&lt;/p&gt;

&lt;p&gt;TradeDataDao.getTrade uses these result maps&lt;/p&gt;

&lt;p&gt;  &amp;lt;resultMap&lt;br/&gt;
    id=&quot;getResultMap&quot;&lt;br/&gt;
    class=&quot;com.xxxxx.Trade&quot;&amp;gt;&lt;br/&gt;
    &amp;lt;result property=&quot;id&quot; column=&quot;id&quot;/&amp;gt;&lt;br/&gt;
    &amp;lt;result property=&quot;name&quot; column=&quot;name&quot;/&amp;gt;&lt;br/&gt;
    &amp;lt;result&lt;br/&gt;
      property=&quot;clients&quot;&lt;br/&gt;
      column=&quot;&lt;/p&gt;
{id=id}
&lt;p&gt;&quot;&lt;br/&gt;
      select=&quot;getTradeClients&quot;/&amp;gt;&lt;br/&gt;
  &amp;lt;/resultMap&amp;gt;&lt;/p&gt;

&lt;p&gt;  &amp;lt;resultMap&lt;br/&gt;
    id=&quot;getTradeClientsResultMap&quot;&lt;br/&gt;
    class=&quot;com.xxxxx.TradeClient&quot;&amp;gt;&lt;br/&gt;
    &amp;lt;result property=&quot;notional&quot; column=&quot;client_notional&quot;/&amp;gt;&lt;br/&gt;
    &amp;lt;result&lt;br/&gt;
      property=&quot;client&quot;&lt;br/&gt;
      column=&quot;client_id&quot;      &lt;br/&gt;
      typeHandler=&quot;com.xxxxx.ClientTypeHandler&quot;/&amp;gt;&lt;br/&gt;
  &amp;lt;/resultMap&amp;gt;&lt;/p&gt;

&lt;p&gt;The ClientTypeHandler is a performance optimization: rather than letting iBatis go to the database to get the Client object there is this handler that uses another DAO to retrieve and cache all Clients and so the handler gets the one identified by client_id.&lt;/p&gt;

&lt;p&gt;  public class ClientTypeHandler extends AbstractStaticDataItemTypeHandler {&lt;br/&gt;
    public Object getResult(ResultGetter getter) throws SQLException &lt;/p&gt;
{
      return super.getStaticDataService().getClientById(getter.getBigDecimal());
    }
&lt;p&gt;  }&lt;/p&gt;

&lt;p&gt;The exception I get is just a NullPointerException&lt;/p&gt;

&lt;p&gt;This scenario has been working until Spring 1.2.7 or 2.0-m2. I think the problem here is setting twice the session.setUserConnection(con) for the same session.&lt;/p&gt;

&lt;p&gt;I&apos;ve verified that if the setup is changed so that there are two SqlMapClient instances then everything works fine, although I&apos;d like to have only one if possible (it&apos;s what I&apos;ve seen in Spring+iBatis sample code so far).&lt;/p&gt;

&lt;p&gt;I think there needs to be a way to avoid setting the user connection and let the Spring iBatis integration code works as it did.&lt;/p&gt;</comment>
                            <comment id="18715" author="juergen.hoeller" created="Sat, 22 Jul 2006 03:50:04 +0000"  >&lt;p&gt;I&apos;ve refined SqlMapClientTemplate to allow for nested calls to the same SqlMapSession, checking &quot;getCurrentConnection&quot; and only calling &quot;setUserConnection&quot; if no current connection found there, and also only calling &quot;close&quot; if we actually opened the SqlMapSession at the present level. This should work properly for nested calls like in your scenario.&lt;/p&gt;

&lt;p&gt;As a side note: The SqlMapSession thread-local binding is, IMHO, pretty useless and unintuitive. I have no clue why there is no way to open a SqlMapSession &lt;b&gt;without&lt;/b&gt; thread-local binding, and why &quot;close&quot; doesn&apos;t respect whether the opened SqlMapSession was a newly created one or one cached in the ThreadLocal... The resulting usage pattern is weird, at least for scenarios like the one you outlined. Anyway, the above should work around this correctly...&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="18735" author="borgra" created="Mon, 24 Jul 2006 00:10:31 +0000"  >&lt;p&gt;I&apos;ve tested this fix using 2.0-rc3-build.84 and I&apos;m happy to confirm that it works perfect. Many thanks Juergen.&lt;/p&gt;

&lt;p&gt;I agree on your side note: this is a pretty exotic usage. It&apos;s an alternative solution to avoiding the N + 1 selects (1:N) in iBatis. And in combination of data caches produces great performance improvements.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        10 years, 23 weeks, 3 days ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 19 Jun 2006 04:32:28 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>true</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i01enz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>8253</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>