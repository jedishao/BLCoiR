<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 19:11:45 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-3879/SPR-3879.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-3879] AspectJ pointcut expressions fail to match generically parameterized methods</title>
                <link>https://jira.spring.io/browse/SPR-3879</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;Disclaimer: This may actually be an AspectJ bug.  I can&apos;t tell at this point.&lt;/p&gt;


&lt;p&gt;The problem behavior I&apos;m seeing is a bit hard to describe in prose; the best bet is to take a look at the code, beans xml and attached log output.&lt;/p&gt;

&lt;p&gt;Essentially, it looks like AspectJ pointcut expressions aren&apos;t recognizing methods that override method declarations that take generic parameters.&lt;/p&gt;

&lt;p&gt;For example, if I have a class MySet that implements Set&amp;lt;String&amp;gt;, an AspectJ pointcut expression of &quot;execution(* MySet.*(..))&quot; will NOT properly match MySet.add(String str).  Again, this doesn&apos;t express very well in prose, so take a look at the code (I&apos;ve made it as concise as possible) and see what you can make of it.  I do have a workaround, which is detailed at the bottom of the issue.&lt;/p&gt;

&lt;p&gt;If necessary, I&apos;d be happy to upload a complete testcase.  If there are guidelines for testcase submission, please comment on this issue with a link to that documentation and I&apos;ll follow it.&lt;/p&gt;


&lt;p&gt;Consider the following interfaces and implementation:&lt;/p&gt;

&lt;p&gt;    public interface Repository&amp;lt;T&amp;gt; extends Set&amp;lt;T&amp;gt; {}&lt;/p&gt;

&lt;p&gt;    public interface ProductRepository extends Repository&amp;lt;Product&amp;gt; &lt;/p&gt;
{
            Set&amp;lt;Product&amp;gt; findByCategory(String category);
    }

&lt;p&gt;    public class JdoProductRepositoryImpl extends AbstractSet&amp;lt;Product&amp;gt; implements ProductRepository {&lt;br/&gt;
        private final PersistenceManagerFactory pmf;&lt;/p&gt;

&lt;p&gt;        public JdoProductRepositoryImpl(PersistenceManagerFactory pmf) &lt;/p&gt;
{
            this.pmf = pmf;
        }

&lt;p&gt;       @Override&lt;br/&gt;
       public boolean add(Product product) &lt;/p&gt;
{
           PersistenceManager pm = pmf.getPersistenceManager();
           boolean isNew = !(JDOHelper.isPersistent(product) || JDOHelper.isDetached(product));
           pm.makePersistent(product);
           return isNew;
       }

&lt;p&gt;        // clear(), size(), iterator(), findByCategory() methods omitted for brevity&lt;br/&gt;
    }&lt;/p&gt;


&lt;p&gt;beans.xml:&lt;/p&gt;

&lt;p&gt;&amp;lt;beans&amp;gt;&lt;br/&gt;
  &amp;lt;bean&lt;br/&gt;
    id=&quot;pmf&quot;&lt;br/&gt;
    class=&quot;org.springframework.orm.jdo.LocalPersistenceManagerFactoryBean&quot;&lt;br/&gt;
    p:config-location=&quot;classpath:jpox.properties&quot;/&amp;gt;&lt;/p&gt;

&lt;p&gt;  &amp;lt;bean id=&quot;pmfProxy&quot;&lt;br/&gt;
    class=&quot;org.springframework.orm.jdo.TransactionAwarePersistenceManagerFactoryProxy&quot;&lt;br/&gt;
    p:target-persistence-manager-factory-ref=&quot;pmf&quot;&lt;br/&gt;
    p:allow-create=&quot;true&quot;/&amp;gt;&lt;/p&gt;

&lt;p&gt;  &amp;lt;bean id=&quot;productRepos&quot; class=&quot;demo.product.JdoProductRepositoryImpl&quot;&amp;gt;&lt;br/&gt;
    &amp;lt;constructor-arg ref=&quot;pmfProxy&quot;/&amp;gt;&lt;br/&gt;
  &amp;lt;/bean&amp;gt;&lt;/p&gt;

&lt;p&gt;  &amp;lt;bean id=&quot;txnManager&quot;&lt;br/&gt;
    class=&quot;org.springframework.orm.jdo.JdoTransactionManager&quot;&lt;br/&gt;
    p:persistence-manager-factory-ref=&quot;pmf&quot;/&amp;gt;&lt;/p&gt;

&lt;p&gt;  &amp;lt;tx:advice id=&quot;txnAdvice&quot; transaction-manager=&quot;txnManager&quot;&amp;gt;&lt;br/&gt;
    &amp;lt;tx:attributes&amp;gt;&lt;br/&gt;
      &amp;lt;tx:method name=&quot;clear&quot; propagation=&quot;REQUIRED&quot; read-only=&quot;true&quot;/&amp;gt;&lt;br/&gt;
      &amp;lt;tx:method name=&quot;size&quot; propagation=&quot;REQUIRED&quot; read-only=&quot;true&quot;/&amp;gt;&lt;br/&gt;
      &amp;lt;tx:method name=&quot;find*&quot; propagation=&quot;REQUIRED&quot; read-only=&quot;true&quot;/&amp;gt;&lt;br/&gt;
      &amp;lt;tx:method name=&quot;add&quot; propagation=&quot;REQUIRED&quot; read-only=&quot;false&quot;/&amp;gt;&lt;br/&gt;
    &amp;lt;/tx:attributes&amp;gt;&lt;br/&gt;
  &amp;lt;/tx:advice&amp;gt;&lt;/p&gt;

&lt;p&gt;  &amp;lt;aop:config&amp;gt;&lt;br/&gt;
    &amp;lt;aop:advisor advice-ref=&quot;txnAdvice&quot; pointcut=&quot;execution(* demo.product.Repository+.*(..))&quot;/&amp;gt;&lt;br/&gt;
  &amp;lt;/aop:config&amp;gt;&lt;br/&gt;
&amp;lt;/beans&amp;gt;&lt;/p&gt;


&lt;p&gt;main method:&lt;/p&gt;

&lt;p&gt;    public static void main(String... args) &lt;/p&gt;
{
        ApplicationContext ctx = new ClassPathXmlApplicationContext(&quot;beans.xml&quot;);
        ProductRepository productRepos = (ProductRepository) ctx.getBean(&quot;productRepos&quot;);
        int size;

        productRepos.clear();
        size = productRepos.size();
        logger.info(&quot;size before add: &quot; + size);
        assert size == 0;

        Product product = new Product(&quot;foo&quot;);
        productRepos.add(product); // &amp;lt;-- throws here with the stack trace below

        size = productRepos.size();
        logger.info(&quot;size after add: &quot; + size);
        assert size == 1;

        logger.info(&quot;products with category &apos;foo&apos;: &quot;
                    + productRepos.findByCategory(&quot;foo&quot;).size());

        logger.info(&quot;products with category &apos;bar&apos;: &quot;
                    + productRepos.findByCategory(&quot;bar&quot;).size());
    }

&lt;p&gt;Stack trace:&lt;br/&gt;
Exception in thread &quot;main&quot; org.jpox.jdo.exceptions.TransactionNotActiveException: Transaction is not active. You either need to define a transaction around this, or run your PersistenceManagerFactory with &apos;NontransactionalRead&apos; and &apos;NontransactionalWrite&apos; set to &apos;true&apos;&lt;br/&gt;
	at org.jpox.AbstractPersistenceManager.assertWritable(AbstractPersistenceManager.java:1959)&lt;br/&gt;
	at org.jpox.AbstractPersistenceManager.makePersistent(AbstractPersistenceManager.java:607)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;br/&gt;
	at java.lang.reflect.Method.invoke(Method.java:585)&lt;br/&gt;
	at org.springframework.orm.jdo.TransactionAwarePersistenceManagerFactoryProxy$TransactionAwareInvocationHandler.invoke(TransactionAwarePersistenceManagerFactoryProxy.java:212)&lt;br/&gt;
	at $Proxy2.makePersistent(Unknown Source)&lt;br/&gt;
	at demo.product.JdoProductRepositoryImpl.add(JdoProductRepositoryImpl.java:38)&lt;br/&gt;
	at demo.product.JdoProductRepositoryImpl.add(JdoProductRepositoryImpl.java:1)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;br/&gt;
	at java.lang.reflect.Method.invoke(Method.java:585)&lt;br/&gt;
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:296)&lt;br/&gt;
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:198)&lt;br/&gt;
	at $Proxy1.add(Unknown Source)&lt;br/&gt;
	at demo.app.Main.main(Main.java:33)&lt;/p&gt;

&lt;p&gt;So, as you&apos;ll see in the attached log output, a transaction is opened and closed just fine for the calls to clear() and to size(), but not for the call to add(product).  This appears to be because add(product) is not getting advised by AspectJ whatsoever.&lt;/p&gt;


&lt;p&gt;I have found a simple workaround (that makes this issue feel all the more like a bug to me):&lt;/p&gt;

&lt;p&gt;If I explicitly declare an add(Product) method in the ProductRepository interface as follows, the call to add(product) works just fine (i.e.: a transaction is opened and closed appropriately):&lt;/p&gt;

&lt;p&gt;    public interface ProductRepository extends Repository&amp;lt;Product&amp;gt; &lt;/p&gt;
{
            void add(Product product);
            Set&amp;lt;Product&amp;gt; findByCategory(String category);
    }

&lt;p&gt;See the log.workaround.txt file for full output when this fix is in place.&lt;/p&gt;

&lt;p&gt;I&apos;ve also attached my jpox.properties file for further clarity.&lt;/p&gt;

&lt;p&gt;Hopefully this is just an error on my part in understanding AspectJ pointcut syntax (or something else trivial).&lt;/p&gt;

&lt;p&gt;Again, I&apos;d be happy to put together a more complete testcase if that helps, and/or answer any additional questions.&lt;/p&gt;</description>
            <key id="17935">SPR-3879</key>
            <summary>AspectJ pointcut expressions fail to match generically parameterized methods</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://jira.spring.io/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="3">Duplicate</resolution>
                                        <assignee username="ramnivas">Ramnivas Laddad</assignee>
                                    <reporter username="cbeams">Chris Beams</reporter>
                        <labels>
                    </labels>
                <created>Fri, 14 Sep 2007 14:50:50 +0000</created>
                <updated>Sun, 23 Sep 2007 09:53:26 +0000</updated>
                            <resolved>Fri, 21 Sep 2007 16:39:42 +0000</resolved>
                                    <version>2.0.6</version>
                                                    <component>Core:AOP</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="26273" author="juergen.hoeller" created="Wed, 19 Sep 2007 18:57:46 +0000"  >&lt;p&gt;Ramnivas, can you please have a look at this? This is pretty urgent already, since 2.0.7 is scheduled for immediate release...&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="26292" author="cbeams" created="Thu, 20 Sep 2007 02:27:59 +0000"  >&lt;p&gt;Ramnivas - thanks in advance, and don&apos;t hesitate to ask if you have questions or need additional information.&lt;/p&gt;</comment>
                            <comment id="26298" author="ramnivas" created="Thu, 20 Sep 2007 04:59:38 +0000"  >&lt;p&gt;Chris,&lt;/p&gt;

&lt;p&gt;I will be looking into this bug late today or tomorrow (currently dealing with some client work). Meanwhile, can you please try with the latest nightly build? I have fixed &lt;a href=&quot;https://jira.spring.io/browse/SPR-3556&quot; title=&quot;Spring AOP doesn&amp;#39;t process generics correctly&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SPR-3556&quot;&gt;&lt;del&gt;SPR-3556&lt;/del&gt;&lt;/a&gt; (that was back ported for 2.0.7), which looks very similar to the bug you describe (see GenericBridgeMethodMatchingTests for more details).&lt;/p&gt;

&lt;p&gt;-Ramnivas&lt;/p&gt;</comment>
                            <comment id="26323" author="cbeams" created="Fri, 21 Sep 2007 06:57:11 +0000"  >&lt;p&gt;Ramnivas,&lt;/p&gt;

&lt;p&gt;I have not yet checked this against the latest nightly build, and probably won&apos;t be able to until after the weekend.  The fix you mention does sound promising...  I&apos;ll check it out as soon as possible.  If you can get to it before me, great.&lt;/p&gt;</comment>
                            <comment id="26335" author="cbeams" created="Fri, 21 Sep 2007 16:02:43 +0000"  >&lt;p&gt;Ramnivas, Juergen,&lt;/p&gt;

&lt;p&gt;What&apos;s the best way to get hold of the nightly builds?&lt;/p&gt;</comment>
                            <comment id="26336" author="ramnivas" created="Fri, 21 Sep 2007 16:06:16 +0000"  >&lt;p&gt;You cat get those from &lt;a href=&quot;http://static.springframework.org/downloads/nightly/snapshot-download.php?project=SPR&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://static.springframework.org/downloads/nightly/snapshot-download.php?project=SPR&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="26337" author="cbeams" created="Fri, 21 Sep 2007 16:35:18 +0000"  >&lt;p&gt;Great news - the behavior disappears with the latest nightly build, as expected.  Thanks!&lt;/p&gt;</comment>
                            <comment id="26339" author="ramnivas" created="Fri, 21 Sep 2007 16:39:42 +0000"  >&lt;p&gt;Verified to be duplicate of &lt;a href=&quot;https://jira.spring.io/browse/SPR-3556&quot; title=&quot;Spring AOP doesn&amp;#39;t process generics correctly&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SPR-3556&quot;&gt;&lt;del&gt;SPR-3556&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10000">
                    <name>Duplicate</name>
                                            <outwardlinks description="duplicates">
                                        <issuelink>
            <issuekey id="17019">SPR-3556</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12909" name="jpox.properties" size="682" author="cbeams" created="Fri, 14 Sep 2007 14:52:02 +0000"/>
                            <attachment id="12907" name="log.txt" size="9292" author="cbeams" created="Fri, 14 Sep 2007 14:51:22 +0000"/>
                            <attachment id="12908" name="log.workaround.txt" size="19221" author="cbeams" created="Fri, 14 Sep 2007 14:51:38 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        9 years, 14 weeks, 6 days ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 19 Sep 2007 18:57:46 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>true</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i027qn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>12963</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>