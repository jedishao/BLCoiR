<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 21:11:58 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-8016/SPR-8016.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-8016] RestTemplate - support response mapping to entity with potentially empty response body.</title>
                <link>https://jira.spring.io/browse/SPR-8016</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;I am working with an API which returns an empty response body on http status 200 (OK) &amp;amp; a body which is populated on http status 400 (Bad Request).  &lt;/p&gt;

&lt;p&gt;When using RestTemplate.getForEntity() this is fine for the case where the body is populated, however I get an exception for the &apos;null body&apos; case.&lt;/p&gt;

&lt;p&gt;My understanding is one should provide a class implementing the ResponseBody interface &amp;amp; make the call via the execute() method on the RestTemplate.&lt;/p&gt;

&lt;p&gt;This task is a request to consider that the use case here is common &amp;amp; whether Spring should offer something out of the box for this situation.&lt;/p&gt;


&lt;p&gt;Also See: &lt;a href=&quot;http://stackoverflow.com/questions/3322381/spring-resttemplate-behavior-when-handling-responses-with-a-status-of-no-content/3648447#3648447&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://stackoverflow.com/questions/3322381/spring-resttemplate-behavior-when-handling-responses-with-a-status-of-no-content/3648447#3648447&lt;/a&gt;&lt;/p&gt;
</description>
            <key id="36600">SPR-8016</key>
            <summary>RestTemplate - support response mapping to entity with potentially empty response body.</summary>
                <type id="4" iconUrl="https://jira.spring.io/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="8">Complete</resolution>
                                        <assignee username="bclozel">Brian Clozel</assignee>
                                    <reporter username="dvb123">David Victor</reporter>
                        <labels>
                    </labels>
                <created>Wed, 2 Mar 2011 09:12:55 +0000</created>
                <updated>Thu, 2 Jul 2015 01:18:09 +0000</updated>
                            <resolved>Mon, 9 Feb 2015 06:04:57 +0000</resolved>
                                    <version>3.1 M1</version>
                                    <fixVersion>4.1.5</fixVersion>
                    <fixVersion>4.2 RC1</fixVersion>
                                    <component>Web</component>
                        <due></due>
                            <votes>9</votes>
                                    <watches>19</watches>
                                                                <comments>
                            <comment id="68556" author="sriram.kalakoti" created="Tue, 19 Jul 2011 14:28:22 +0000"  >&lt;p&gt;Same issue for post calls that return 202 accepted with an empty body.&lt;/p&gt;</comment>
                            <comment id="69553" author="emas80" created="Mon, 22 Aug 2011 02:24:35 +0000"  >&lt;p&gt;Same issue for post calls returning 204 - NO CONTENT. The only way to use rest template with this kind of response is to set &quot;null&quot; as ResponseEntity class, but doing so you can&apos;t know what response really you had with your call.&lt;/p&gt;</comment>
                            <comment id="70327" author="electricmonk" created="Sun, 11 Sep 2011 03:22:16 +0000"  >&lt;p&gt;Same issue for any request resulting in 304 Not Modified&lt;/p&gt;</comment>
                            <comment id="72768" author="magnus" created="Thu, 17 Nov 2011 02:02:52 +0000"  >&lt;p&gt;Already fixed.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://jira.spring.io/browse/SPR-7911&quot; title=&quot;Better handling of 204 No Content in RestTemplate&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SPR-7911&quot;&gt;&lt;del&gt;SPR-7911&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="84502" author="dvb123" created="Thu, 25 Oct 2012 00:54:33 +0000"  >&lt;p&gt;Several options documented here too.   &lt;a href=&quot;http://stackoverflow.com/a/5170959/366073&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://stackoverflow.com/a/5170959/366073&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;emoticon&quot; src=&quot;https://jira.spring.io/images/icons/emoticons/smile.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="110204" author="ypetrick" created="Mon, 1 Dec 2014 06:01:58 +0000"  >&lt;p&gt;I reopened the ticket because parts of the issue are still defect. Responses with status 200 (Ok), a single header &quot;Connection close&quot; and no body still don&apos;t get parsed.  &lt;/p&gt;

&lt;p&gt;According to RFC 2616 Section 4.4. Message Length, Part 2 a message can be terminated by closing the connection:&lt;/p&gt;

&lt;p&gt;     If a Transfer-Encoding header field (section 14.41) is present and&lt;br/&gt;
     has any value other than &quot;identity&quot;, then the transfer-length is&lt;br/&gt;
     defined by use of the &quot;chunked&quot; transfer-coding (section 3.6),&lt;br/&gt;
     unless the message is terminated by closing the connection.&lt;/p&gt;</comment>
                            <comment id="110244" author="snicoll" created="Tue, 2 Dec 2014 05:22:41 +0000"  >&lt;p&gt;What about the documented approach on SO (previous comment)? Can you clarify what you&apos;re after please?&lt;/p&gt;</comment>
                            <comment id="110256" author="ypetrick" created="Tue, 2 Dec 2014 10:42:06 +0000"  >&lt;p&gt;The workaround on SO would do for me, but it would requiere a massive refactoring.&lt;br/&gt;
My problem is that I wanted to use nginx as reverse proxy to a legacy backend running on jetty.&lt;/p&gt;

&lt;p&gt;In the current setup nginx modifies the requests to include a header  &quot;Connection close&quot; .&lt;br/&gt;
If jetty recives this header in the request, it also sets a header  &quot;Connection close&quot;  to indicate the length of an empty body. The responose by jetty also had no headers for transfer-encoding, content-type nor content-length, just the header  &quot;Connection close&quot;.&lt;/p&gt;

&lt;p&gt;If I use the rest-template to request an entity from the backend behind nginx (e.g. the next queued job) and none was found I get an exception.&lt;/p&gt;

&lt;p&gt;If I use the rest-tempalte to directly communicate with the jetty the header &quot;Connection close&quot; is not send and jetty sets a header for content-length and it all works.&lt;/p&gt;

&lt;p&gt;There are many solutions to my problem,&lt;br/&gt;
I could send a 204, I could wrap every response in a response object and never would get an empty response body, or I could change my nginx setup.&lt;/p&gt;

&lt;p&gt;But this all are workarounds and in my oppinion the rest-template should be able to handle these responses directy, as they are valid.&lt;/p&gt;


</comment>
                            <comment id="110954" author="cmorelli" created="Wed, 24 Dec 2014 11:37:16 +0000"  >&lt;p&gt;After this change, RestTemplate can no longer communicate with a spring server using Jackson serialization. The server doesn&apos;t include the Content-Length in the response, and the client treats that as an empty response body.&lt;/p&gt;

&lt;p&gt;The commit introduced to fix this issue (&lt;a href=&quot;https://github.com/spring-projects/spring-framework/commit/98870251f9fb27123353c549ae22fcf3679ebbd5&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/spring-projects/spring-framework/commit/98870251f9fb27123353c549ae22fcf3679ebbd5&lt;/a&gt;) actually appears to have caused the issue. The description indicates that support was to better fit RFC 7230 where a connection is closed and there is neither a content length header nor a transfer-encoding header. However, that is true only for requests. Responses follow a different set of rules with regards to the presence of a message body. Below is quoted from Section 3.3 of RFC 7230:&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;For response messages, whether or not a message-body is included with a message is dependent on both the request method and the response status code (section 6.1.1). All responses to the HEAD request method MUST NOT include a message-body, even though the presence of entity- header fields might lead one to believe they do. All 1xx (informational), 204 (no content), and 304 (not modified) responses MUST NOT include a message-body. All other responses do include a message-body, although it MAY be of zero length.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Because of this, the logic in the &quot;hasMessageBody&quot; method is incorrect in assuming that the lack of a content-length header and a closed connection implies that there is no body. HTTP/1.1 specification allows for the server to signal the send of the response body by closing the connection.&lt;/p&gt;</comment>
                            <comment id="110983" author="bclozel" created="Mon, 29 Dec 2014 06:04:29 +0000"  >&lt;p&gt;Hi &lt;a href=&quot;https://jira.spring.io/secure/ViewProfile.jspa?name=cmorelli&quot; class=&quot;user-hover&quot; rel=&quot;cmorelli&quot;&gt;Colin Morelli&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;&lt;a name=&quot;RestTemplateJacksonserializationbroken&quot;&gt;&lt;/a&gt;RestTemplate + Jackson serialization broken&lt;/h3&gt;

&lt;p&gt;Could you elaborate on this?&lt;br/&gt;
In those cases, the server sends a &lt;tt&gt;Transfer-Encoding: chunked&lt;/tt&gt; HTTP header, and this fix checks for those.&lt;br/&gt;
I&apos;ve tried to reproduce this with &lt;a href=&quot;https://github.com/spring-projects/spring-framework-issues/tree/master/SPR-8016&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;a sample project&lt;/a&gt; but couldn&apos;t - could you take a look at it?&lt;/p&gt;

&lt;h3&gt;&lt;a name=&quot;RFC7230&quot;&gt;&lt;/a&gt;RFC 7230&lt;/h3&gt;

&lt;p&gt;The RFC does state that this applies for HTTP responses:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;A response that has neither chunked transfer coding nor Content-Length is terminated by closure of the connection and, thus, is considered complete regardless of the number of message body octets received, provided that the header section was received intact.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Also, &lt;a href=&quot;http://tools.ietf.org/html/rfc7230#section-3.3.3&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;Section 3.3.3&lt;/a&gt; explains a bit better how to asses the message length in each case.&lt;br/&gt;
So it all boils down to &quot;should the hasMessageBody return true if the response has a message body of length 0&quot;?&lt;/p&gt;

&lt;p&gt;This is another question that could be raised in a different JIRA issue; but in my opinion it&apos;s not related to the RestTemplate+Jackson issue, which I think is more important to investigate first.&lt;/p&gt;</comment>
                            <comment id="110986" author="cmorelli" created="Mon, 29 Dec 2014 08:18:47 +0000"  >&lt;p&gt;Brian,&lt;/p&gt;

&lt;p&gt;Looks like you&apos;re right here. After digging deeper into the problem, I found out that it was actually the HAProxy load balancer decoding the transfer encoding and removing the header. It doesn&apos;t add a content-length in this process, although that appears to be intentional as indicated in this section from the HAProxy documentation:&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;In this mode, called the &quot;HTTP close&quot; mode, there are as many connection establishments as there are HTTP transactions. Since the connection is closed by the server after the response, the client does not need to know the content length.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;But this still seems to be a problem, given that the response that HAProxy responds with is a valid HTTP response according to the RFC. My interpretation of:&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;A response that has neither chunked transfer coding nor Content-Length is terminated by closure of the connection and, thus, is considered complete regardless of the number of message body octets received, provided that the header section was received intact.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Is that a response can contain neither transfer-encoding nor content-length, and still contain a 0-n length body where n is the number of bytes received between the completion of the headers and the termination of the connection. In other words, on a closed connection, any content past the HTTP headers should be interpreted as a body. It would appear that browsers treat it this way, given that accessing a page that fails to load in RestTemplate works fine in Chrome, Safari and Firefox.&lt;/p&gt;</comment>
                            <comment id="110990" author="bclozel" created="Mon, 29 Dec 2014 12:09:59 +0000"  >&lt;p&gt;Hi Colin,&lt;/p&gt;

&lt;p&gt;You&apos;re right, there&apos;s something wrong about this fix.&lt;br/&gt;
In fact, it looks like you can&apos;t really tell if there&apos;s a (non null) body without actually reading the input stream.&lt;/p&gt;

&lt;p&gt;I&apos;ll dig into this, but it really looks like I&apos;ve got to revisit this &lt;b&gt;and&lt;/b&gt; HttpMessageConverters implementations to make sure they don&apos;t barf when the body is of size 0 and correctly return a null.&lt;/p&gt;

&lt;p&gt;Unfortunately, the next version is scheduled tomorrow (CET), so this new fix won&apos;t make it.&lt;/p&gt;</comment>
                            <comment id="110992" author="cmorelli" created="Mon, 29 Dec 2014 13:14:00 +0000"  >&lt;p&gt;No problem Brian, thanks for looking into this. In the meantime I can drop down my spring versions and/or change the haproxy configuration to do chunked encoding. A path of least resistance might be to simply wrap the input stream with something that is capable of peeking in on the stream (reading a single byte) to see if there&apos;s any content (and caching the received byte to be returned on any calls to read the stream). Not necessarily the best solution, but potentially saves you from having to mess with the HttpMessageConverters.&lt;/p&gt;</comment>
                            <comment id="111034" author="bclozel" created="Wed, 31 Dec 2014 05:30:18 +0000"  >&lt;p&gt;OK, I&apos;ve got &lt;a href=&quot;https://github.com/spring-projects/spring-framework/pull/715&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;a fix ready in a PR&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="112373" author="koosg" created="Mon, 9 Feb 2015 04:32:55 +0000"  >&lt;p&gt;The fix is giving us issues, and I think it&apos;s wrong...&lt;br/&gt;
Current code in the HttpMessageConverterExtractor, last lines in the hasMessageBody method:&lt;/p&gt;
&lt;p/&gt;
&lt;div id=&quot;syntaxplugin&quot; class=&quot;syntaxplugin&quot; style=&quot;border: 1px dashed #bbb; border-radius: 5px !important; overflow: auto; max-height: 30em;&quot;&gt;
&lt;table cellspacing=&quot;0&quot; cellpadding=&quot;0&quot; border=&quot;0&quot; width=&quot;100%&quot; style=&quot;font-size: 1em; line-height: 1.4em !important; font-weight: normal; font-style: normal; color: black;&quot;&gt;
		&lt;thead&gt;
			&lt;tr id=&quot;syntaxplugin_title&quot;&gt;
			&lt;td bgcolor=&quot;#f5f5f5&quot; style=&quot;font-family: Arial,sans-serif; color: #333; border-bottom: 1px solid #bbb; background-color: #f5f5f5 !important; font-weight: bold; line-height: 1em;&quot; &gt;
				&lt;p style=&quot;margin: 5px 10px; padding: 0;&quot;&gt;HttpMessageConverterExtractor.java&lt;/p&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
			&lt;/thead&gt;
		&lt;tbody &gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;  margin-top: 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;boolean chunked = headers.containsKey(HttpHeaders.TRANSFER_ENCODING)&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;&amp;amp;&amp;amp; headers.get(HttpHeaders.TRANSFER_ENCODING).contains(&quot;chunked&quot;);&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;boolean closed = headers.containsKey(HttpHeaders.CONNECTION)&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;&amp;amp;&amp;amp; headers.getConnection().contains(&quot;close&quot;);&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;if(!chunked &amp;amp;&amp;amp; contentLength == -1 &amp;amp;&amp;amp; closed) {&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;return false;&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   margin-bottom: 10px;  width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;}&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
			&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;p/&gt;
&lt;p&gt;The spec reads:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A response that has neither chunked&lt;br/&gt;
   transfer coding nor Content-Length is terminated by closure of the&lt;br/&gt;
   connection and, thus, is considered complete regardless of the number&lt;br/&gt;
   of message body octets received, provided that the header section was&lt;br/&gt;
   received intact.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;i.e. it is valid if: &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;a content-length is available&lt;/li&gt;
	&lt;li&gt;the content is chunked&lt;/li&gt;
	&lt;li&gt;a close header is available.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;so it should read&lt;/p&gt;
&lt;p/&gt;
&lt;div id=&quot;syntaxplugin&quot; class=&quot;syntaxplugin&quot; style=&quot;border: 1px dashed #bbb; border-radius: 5px !important; overflow: auto; max-height: 30em;&quot;&gt;
&lt;table cellspacing=&quot;0&quot; cellpadding=&quot;0&quot; border=&quot;0&quot; width=&quot;100%&quot; style=&quot;font-size: 1em; line-height: 1.4em !important; font-weight: normal; font-style: normal; color: black;&quot;&gt;
		&lt;tbody &gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;  margin-top: 10px;   margin-bottom: 10px;  width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;if(!chunked &amp;amp;&amp;amp; contentLength == -1 &amp;amp;&amp;amp; !closed)&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
			&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;p/&gt;</comment>
                            <comment id="112374" author="bclozel" created="Mon, 9 Feb 2015 04:59:53 +0000"  >&lt;p&gt;Hi &lt;a href=&quot;https://jira.spring.io/secure/ViewProfile.jspa?name=koosg&quot; class=&quot;user-hover&quot; rel=&quot;koosg&quot;&gt;Koos Gadellaa&lt;/a&gt;&lt;br/&gt;
The code you&apos;re referring to does not exist anymore and has been &lt;a href=&quot;https://github.com/spring-projects/spring-framework/commit/b6675b6167f3580fcc03b8d725db482e1e2e44e7&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;replaced by the latest fix&lt;/a&gt;, this will be released with 4.1.5.&lt;br/&gt;
Do you still have concerns about that new fix?&lt;/p&gt;</comment>
                            <comment id="112375" author="koosg" created="Mon, 9 Feb 2015 05:50:06 +0000"  >&lt;p&gt;Ah! I was looking at the 4.1.x branch, and apparently the fix hasn&apos;t been merged to it yet...&lt;/p&gt;

&lt;p&gt;It&apos;ll probably work for me, but I currently can&apos;t see any checks if the body is valid as given in &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.4&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://tools.ietf.org/html/rfc7230#section-3.4&lt;/a&gt; (which was originaly referred). &lt;br/&gt;
However, adhering to that part is a bit of a nuisance, as it effectively blocks users from getting a body, and I think that should be left to the user of the library (it&apos;s better to have the body as is, even if it turns out to be invalid, then no body at all)... so I&apos;m all for it!&lt;br/&gt;
(in the meantime, I&apos;ll work around it myself, as I can&apos;t wait for tomorrow &lt;img class=&quot;emoticon&quot; src=&quot;https://jira.spring.io/images/icons/emoticons/wink.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; )&lt;/p&gt;</comment>
                            <comment id="112376" author="bclozel" created="Mon, 9 Feb 2015 06:04:58 +0000"  >&lt;p&gt;I&apos;ll backport this right now.&lt;/p&gt;</comment>
                            <comment id="112531" author="sreddy" created="Mon, 16 Feb 2015 13:34:12 +0000"  >&lt;p&gt;we are upgrading from Spring 3.2.2 to Spring 4.1.3/4.1.4 and what used to work earlier started failing due to the logic in hasMessageBody. I looked at 4.1.5 and that may work. But it may be a while before 4.1.5 is released. In our case, server is responding with a body, but with no Content-Length header and with Connection: close.&lt;/p&gt;</comment>
                            <comment id="112532" author="bclozel" created="Mon, 16 Feb 2015 13:38:06 +0000"  >&lt;p&gt;Hi &lt;a href=&quot;https://jira.spring.io/secure/ViewProfile.jspa?name=sreddy&quot; class=&quot;user-hover&quot; rel=&quot;sreddy&quot;&gt;Satyapal Reddy&lt;/a&gt;&lt;br/&gt;
Sorry for this inconvenience.&lt;br/&gt;
4.1.5 is scheduled in a few days, you can check its status at any given time &lt;a href=&quot;https://jira.spring.io/browse/SPR/fixforversion/14861&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;here&lt;/a&gt;.&lt;br/&gt;
You can already test this by using 4.1.5-BUILD-SNAPSHOT builds; you just need to add &lt;tt&gt;&lt;a href=&quot;https://repo.spring.io/libs-snapshot/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://repo.spring.io/libs-snapshot/&lt;/a&gt;&lt;/tt&gt; as a snapshot-enabled repository in your maven configuration.&lt;/p&gt;

&lt;p&gt;Thanks,&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10000">
                    <name>Duplicate</name>
                                            <outwardlinks description="duplicates">
                                        <issuelink>
            <issuekey id="36027">SPR-7911</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is duplicated by">
                                        <issuelink>
            <issuekey id="63504">SPR-12968</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="62210">SPR-12712</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        1 year, 44 weeks, 3 days ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 2 Mar 2011 13:53:08 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>false</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>bclozel</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i00h6f:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2828</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>