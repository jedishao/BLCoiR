<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 20:30:31 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-675/SPR-675.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-675] StringUtils.trimLeadingWhitespace causes &quot;String index out of range&quot;</title>
                <link>https://jira.spring.io/browse/SPR-675</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;StringUtils.trimLeadingWhitespace doesn&apos;t check for empty String that have no &quot;charAt(0)&quot; value. If result on a StringIndexOutOfBoundsException: String index out of range: 0&lt;/p&gt;

&lt;p&gt;This appears when Spring is used to access some .properties resources that have blank lines.&lt;/p&gt;</description>
            <key id="11087">SPR-675</key>
            <summary>StringUtils.trimLeadingWhitespace causes &quot;String index out of range&quot;</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="juergen.hoeller">Juergen Hoeller</assignee>
                                    <reporter username="ndeloof">nicolas de loof</reporter>
                        <labels>
                    </labels>
                <created>Tue, 1 Feb 2005 21:13:15 +0000</created>
                <updated>Thu, 3 Feb 2005 06:05:54 +0000</updated>
                            <resolved>Wed, 2 Feb 2005 03:22:26 +0000</resolved>
                                    <version>1.1.4</version>
                                    <fixVersion>1.1.5</fixVersion>
                                    <component>Core</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12186" author="ndeloof" created="Tue, 1 Feb 2005 21:23:42 +0000"  >&lt;p&gt;Please notice another related bug :&lt;/p&gt;

&lt;p&gt;when parsing properties, Spring DefaultPropertiesPersister.load() reads property value from separatorIndex (=) + 1 to end.&lt;/p&gt;

&lt;p&gt;It produces an ArrayIndexOutOfBound if a property is set with empty string value :&lt;/p&gt;

&lt;p&gt;myprop =&lt;/p&gt;
</comment>
                            <comment id="12190" author="juergen.hoeller" created="Wed, 2 Feb 2005 03:22:26 +0000"  >&lt;p&gt;Thanks for the report! Unfortunately, this slipped in during the complete rewrite of DefaultPropertiesPersister for the 1.1.4 release (to avoid licensing issues with the previous code which was directly based on code copied-and-pasted from Sun&apos;s java.util.Properties).&lt;/p&gt;

&lt;p&gt;I&apos;ve also added a test case for this scenario. Previously, all files that DefaultPropertiesPersister has been tested against obviously didn&apos;t have empty values. BTW, this problem just occurs when explicitly specifying a file encoding.&lt;/p&gt;

&lt;p&gt;The fix should be available in the next nightly snapshot (&lt;a href=&quot;http://www.springframework.org/downloads/nightly&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.springframework.org/downloads/nightly&lt;/a&gt;). Please give it a try, and let me know about any further issues you may find (in particular regarding DefaultPropertiesPersister&apos;s compatibility with standard java.util.Properties behavior).&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="12201" author="juergen.hoeller" created="Wed, 2 Feb 2005 05:33:45 +0000"  >&lt;p&gt;The code in DefaultPropertiesPersister.load itself does not seem to cause a problem: substring(separatorIndex + 1) simply produces an empty string in case of an empty value. The test case passes with the fix in StringUtils.trimLeadingWhitespace.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="12214" author="ndeloof" created="Wed, 2 Feb 2005 19:38:10 +0000"  >&lt;p&gt;Works fine, thanks for fix.&lt;/p&gt;

&lt;p&gt;Please notice (may I open another issue ?) maven project.properties does define jar override for jasperassistant and ehcache with wrong versions.&lt;/p&gt;

&lt;p&gt;Nico.&lt;/p&gt;</comment>
                            <comment id="12218" author="daneverton" created="Thu, 3 Feb 2005 00:50:01 +0000"  >&lt;p&gt;This doesn&apos;t seem to be fixed in 1.1.5 CVS as far as I can tell. Both trimLeadingWhitespace and trimTrailingWhitespace still fail for strings that contain only whitespace.&lt;/p&gt;

&lt;p&gt;For example the following test fails&lt;/p&gt;

&lt;p&gt;    public void testTrimLeadingWhiteSpace() throws Exception {&lt;br/&gt;
        try &lt;/p&gt;
{
            String result = StringUtils.trimLeadingWhitespace(&quot; &quot;);
            
            assertEquals(&quot;&quot;,  result);
        }
&lt;p&gt; catch (IndexOutOfBoundsException ioobe) &lt;/p&gt;
{
            fail(&quot;Should not die&quot;);
        }
&lt;p&gt;    }&lt;/p&gt;

&lt;p&gt;Note that the test string consists solely of whitespace.&lt;/p&gt;</comment>
                            <comment id="12219" author="daneverton" created="Thu, 3 Feb 2005 00:57:06 +0000"  >&lt;p&gt;The easy fix is a patch something like this:&lt;/p&gt;

&lt;p&gt;&amp;#8212; src/org/springframework/util/StringUtils.java.old   2005-02-03 14:52:11.962730852 +0000&lt;br/&gt;
+++ src/org/springframework/util/StringUtils.java       2005-02-03 14:53:32.132033539 +0000&lt;br/&gt;
@@ -110,7 +110,7 @@&lt;br/&gt;
                        return str;&lt;br/&gt;
                }&lt;br/&gt;
                StringBuffer buf = new StringBuffer(str);&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;while (Character.isWhitespace(buf.charAt(0))) 
&lt;div class=&quot;error&quot;&gt;&lt;span class=&quot;error&quot;&gt;Unknown macro: {+               while (buf.length() &amp;gt; 0 &amp;amp;&amp;amp; Character.isWhitespace(buf.charAt(0))) {
                        buf.deleteCharAt(0);
                }                return buf.toString();@@ -127,7 +127,7 @@                        return str;                }&lt;/span&gt; &lt;/div&gt;
&lt;p&gt;                StringBuffer buf = new StringBuffer(str);&lt;/p&gt;&lt;/li&gt;
	&lt;li&gt;while (Character.isWhitespace(buf.charAt(buf.length() - 1))) {&lt;br/&gt;
+               while (buf.length() &amp;gt; 0 &amp;amp;&amp;amp; Character.isWhitespace(buf.charAt(buf.length() - 1))) 
{
                        buf.deleteCharAt(buf.length() - 1);
                }
&lt;p&gt;                return buf.toString();&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12227" author="juergen.hoeller" created="Thu, 3 Feb 2005 05:51:07 +0000"  >&lt;p&gt;This &lt;b&gt;is&lt;/b&gt; already fixed in CVS, through a length check at the beginning that returns the string as-is if it is empty. Note that public CVS is a couple of hours behind developer CVS, so might not have seen the most current code.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="12228" author="juergen.hoeller" created="Thu, 3 Feb 2005 06:05:54 +0000"  >&lt;p&gt;Sorry for the premature response, and the blaming of public CVS synchronization. I just noticed that the case of a string that contains only whitespace is indeed not fixed and needs such a buf.length() check. Thanks for pointing it out!&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        11 years, 48 weeks ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 2 Feb 2005 03:22:26 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>false</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i04xlb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>28816</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>