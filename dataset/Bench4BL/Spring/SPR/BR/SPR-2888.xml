<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 18:32:22 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-2888/SPR-2888.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-2888] Potential deadlock in lazy-init FactoryBean instantiation</title>
                <link>https://jira.spring.io/browse/SPR-2888</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;While I have marked this Major, we have no urgent need for a fix - it just seemed important to the community.&amp;#93;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;On thread 1:&lt;/p&gt;

&lt;p&gt;DefaultSingletonBeanRegistry.getSingleton() gets SingletonCache lock, then indirectly calls&lt;br/&gt;
AbstractBeanFactory.getObjectForBeanInstance(), which tries for FactoryBeanInstanceCache lock.&lt;/p&gt;

&lt;p&gt;On thread 2, exactly the opposite: &lt;/p&gt;

&lt;p&gt;AbstractBeanFactory.getObjectForBeanInstance() gets FactoryBeanInstanceCache lock, then indirectly calls&lt;br/&gt;
DefaultSingletonBeanRegistry.getSingleton(), which tries for SingletonCache lock - DEADLOCK!&lt;/p&gt;


&lt;p&gt;Detailed stack traces:&lt;/p&gt;



&lt;p&gt;Thread &quot;Thread-2&quot;@3,686 in group &quot;main&quot; status: MONITOR &lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;getObjectForBeanInstance():958, org.springframework.beans.factory.support.AbstractBeanFactory&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;resolveInnerBeanDefinition():202, org.springframework.beans.factory.support.BeanDefinitionValueResolver&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;resolveValueIfNecessary():111, org.springframework.beans.factory.support.BeanDefinitionValueResolver&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;applyPropertyValues():955, org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;populateBean():729, org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;createBean():416, org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;getObject():245, org.springframework.beans.factory.support.AbstractBeanFactory$1&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;getSingleton():141, org.springframework.beans.factory.support.DefaultSingletonBeanRegistry&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;getBean():242, org.springframework.beans.factory.support.AbstractBeanFactory&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;getBean():156, org.springframework.beans.factory.support.AbstractBeanFactory&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;getBean():642, org.springframework.context.support.AbstractApplicationContext&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;handleLookup():110, com.granite.mock.spring.MockContextFactory&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;Thread &quot;main&quot;@1 in group &quot;main&quot; status: MONITOR &lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;getSingleton():115, org.springframework.beans.factory.support.DefaultSingletonBeanRegistry&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;getBean():187, org.springframework.beans.factory.support.AbstractBeanFactory&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;getBean():156, org.springframework.beans.factory.support.AbstractBeanFactory&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;createNewInstance():99, com.granite.mock.spring.EjbHomeFactoryBean&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;getObject():80, com.granite.mock.spring.EjbHomeFactoryBean&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;getObjectFromFactoryBean():994, org.springframework.beans.factory.support.AbstractBeanFactory&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;getObjectForBeanInstance():960, org.springframework.beans.factory.support.AbstractBeanFactory&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;getBean():256, org.springframework.beans.factory.support.AbstractBeanFactory&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;getBean():156, org.springframework.beans.factory.support.AbstractBeanFactory&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;getBean():642, org.springframework.context.support.AbstractApplicationContext&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;handleLookup():110, com.granite.mock.spring.MockContextFactory&lt;/li&gt;
&lt;/ul&gt;
</description>
            <key id="15575">SPR-2888</key>
            <summary>Potential deadlock in lazy-init FactoryBean instantiation</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="juergen.hoeller">Juergen Hoeller</assignee>
                                    <reporter username="estaub">Ed Staub</reporter>
                        <labels>
                    </labels>
                <created>Tue, 28 Nov 2006 02:33:18 +0000</created>
                <updated>Tue, 19 Jun 2012 03:50:42 +0000</updated>
                            <resolved>Wed, 29 Nov 2006 03:33:27 +0000</resolved>
                                    <version>2.0 final</version>
                                    <fixVersion>2.0.2</fixVersion>
                                    <component>Core</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="21101" author="juergen.hoeller" created="Tue, 28 Nov 2006 07:57:44 +0000"  >&lt;p&gt;Thanks for pointing this out! We need to fix this ASAP... I suppose this happened with lazy-init FactoryBeans?&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="21102" author="estaub" created="Tue, 28 Nov 2006 08:09:23 +0000"  >&lt;p&gt;Right - and of course it &quot;helps&quot; if they are slow or block a little during construction.&lt;/p&gt;</comment>
                            <comment id="21113" author="juergen.hoeller" created="Wed, 29 Nov 2006 03:33:27 +0000"  >&lt;p&gt;OK, this should be fixed now, through the use of a unified mutex for singleton access. This is already committed to CVS HEAD and will be available in the next nightly snapshot. Feel free to give it a try!&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        10 years, 5 weeks, 1 day ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 28 Nov 2006 07:57:44 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>false</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i00v87:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5104</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>