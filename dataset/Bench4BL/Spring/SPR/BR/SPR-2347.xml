<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 18:28:01 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-2347/SPR-2347.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-2347] Aspectj weaving fails unless spring provided aspectj jars are used</title>
                <link>https://jira.spring.io/browse/SPR-2347</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;Unless I use the RC2 aspectj jars (and the required xerces jar) I get failures in weaving. The weaving is being initiated by concrete instances of AbstractAspectjJpaTests. A sample class file dump resulting in an NPE is shown below.&lt;/p&gt;

&lt;p&gt;The very strange thing is that I get these errors if I use my own 1.5.2 aspectj jars OR if I use the aspectj jars provided from RC3/head. Only if I use the RC2 jars can I get a clean run.&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;info weaving &apos;org/opentrader/infra/validation/BeanValidator&apos;&lt;br/&gt;
abort trouble in: &lt;br/&gt;
public class org.opentrader.infra.validation.BeanValidator extends java.lang.Object:&lt;br/&gt;
  private final org.apache.log4j.Logger log&lt;br/&gt;
  private java.util.Map classValidators &lt;span class=&quot;error&quot;&gt;&amp;#91;Signature(Ljava/util/Map&amp;lt;Ljava/lang/Class&amp;lt;*&amp;gt;;Lorg/hibernate/validator/ClassValidator&amp;lt;*&amp;gt;;&amp;gt;;)&amp;#93;&lt;/span&gt;&lt;br/&gt;
  public void &amp;lt;init&amp;gt;():&lt;br/&gt;
                    ALOAD_0     // Lorg/opentrader/infra/validation/BeanValidator; this   (line 13)&lt;br/&gt;
                    INVOKESPECIAL java.lang.Object.&amp;lt;init&amp;gt; ()V&lt;br/&gt;
    constructor-execution(void org.opentrader.infra.validation.BeanValidator.&amp;lt;init&amp;gt;())&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;               ALOAD_0     // Lorg/opentrader/infra/validation/BeanValidator; this   (line 15)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;               ALOAD_0     // Lorg/opentrader/infra/validation/BeanValidator; this&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;               INVOKEVIRTUAL java.lang.Object.getClass ()Ljava/lang/Class;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;               INVOKESTATIC org.apache.log4j.Logger.getLogger (Ljava/lang/Class;)Lorg/apache/log4j/Logger;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;               PUTFIELD org.opentrader.infra.validation.BeanValidator.log Lorg/apache/log4j/Logger;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;               ALOAD_0     // Lorg/opentrader/infra/validation/BeanValidator; this   (line 17)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;               NEW java.util.HashMap&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;               DUP&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;               INVOKESPECIAL java.util.HashMap.&amp;lt;init&amp;gt; ()V&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;               PUTFIELD org.opentrader.infra.validation.BeanValidator.classValidators Ljava/util/Map;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;               RETURN   (line 13)&lt;br/&gt;
    constructor-execution(void org.opentrader.infra.validation.BeanValidator.&amp;lt;init&amp;gt;())&lt;br/&gt;
  end public void &amp;lt;init&amp;gt;()&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;


&lt;p&gt;   ... gobs and gobs of class dumps&lt;/p&gt;

&lt;p&gt; &amp;#8211; (NullPointerException) null&lt;br/&gt;
null&lt;br/&gt;
java.lang.NullPointerException&lt;br/&gt;
	at org.aspectj.apache.bcel.util.ClassLoaderRepository.loadClass(ClassLoaderRepository.java:128)&lt;br/&gt;
	at org.aspectj.apache.bcel.util.ClassLoaderRepository.loadClass(ClassLoaderRepository.java:146)&lt;br/&gt;
	at org.aspectj.weaver.reflect.Java15AnnotationFinder.getAnnotations(Java15AnnotationFinder.java:143)&lt;br/&gt;
	at org.aspectj.weaver.reflect.Java15ReflectionBasedReferenceTypeDelegate.getAnnotationTypes(Java15ReflectionBasedReferenceTypeDelegate.java:86)&lt;br/&gt;
	at org.aspectj.weaver.reflect.Java15ReflectionBasedReferenceTypeDelegate.hasAnnotation(Java15ReflectionBasedReferenceTypeDelegate.java:92)&lt;br/&gt;
	at org.aspectj.weaver.ReferenceType.hasAnnotation(ReferenceType.java:151)&lt;br/&gt;
	at org.aspectj.weaver.patterns.ExactAnnotationTypePattern.matches(ExactAnnotationTypePattern.java:95)&lt;br/&gt;
	at org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern.matchesExactly(TypePattern.java:470)&lt;br/&gt;
	at org.aspectj.weaver.patterns.TypePattern.matchesStatically(TypePattern.java:121)&lt;br/&gt;
	at org.aspectj.weaver.patterns.SignaturePattern.matchesExactlyConstructor(SignaturePattern.java:405)&lt;br/&gt;
	at org.aspectj.weaver.patterns.SignaturePattern.matchesExactly(SignaturePattern.java:327)&lt;br/&gt;
	at org.aspectj.weaver.patterns.SignaturePattern.matches(SignaturePattern.java:289)&lt;br/&gt;
	at org.aspectj.weaver.patterns.KindedPointcut.matchInternal(KindedPointcut.java:106)&lt;br/&gt;
	at org.aspectj.weaver.patterns.Pointcut.match(Pointcut.java:146)&lt;br/&gt;
	at org.aspectj.weaver.patterns.AndPointcut.matchInternal(AndPointcut.java:51)&lt;br/&gt;
	at org.aspectj.weaver.patterns.Pointcut.match(Pointcut.java:146)&lt;br/&gt;
	at org.aspectj.weaver.patterns.AndPointcut.matchInternal(AndPointcut.java:51)&lt;br/&gt;
	at org.aspectj.weaver.patterns.Pointcut.match(Pointcut.java:146)&lt;br/&gt;
	at org.aspectj.weaver.ShadowMunger.match(ShadowMunger.java:71)&lt;br/&gt;
	at org.aspectj.weaver.Advice.match(Advice.java:111)&lt;br/&gt;
	at org.aspectj.weaver.bcel.BcelAdvice.match(BcelAdvice.java:107)&lt;br/&gt;
	at org.aspectj.weaver.bcel.BcelClassWeaver.match(BcelClassWeaver.java:2799)&lt;br/&gt;
	at org.aspectj.weaver.bcel.BcelClassWeaver.matchInit(BcelClassWeaver.java:2401)&lt;br/&gt;
	at org.aspectj.weaver.bcel.BcelClassWeaver.match(BcelClassWeaver.java:2292)&lt;br/&gt;
	at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:490)&lt;br/&gt;
	at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:115)&lt;br/&gt;
	at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1574)&lt;br/&gt;
	at org.aspectj.weaver.bcel.BcelWeaver.weaveWithoutDump(BcelWeaver.java:1525)&lt;br/&gt;
	at org.aspectj.weaver.bcel.BcelWeaver.weaveAndNotify(BcelWeaver.java:1305)&lt;br/&gt;
	at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1127)&lt;br/&gt;
	at org.aspectj.weaver.tools.WeavingAdaptor.getWovenBytes(WeavingAdaptor.java:284)&lt;br/&gt;
	at org.aspectj.weaver.tools.WeavingAdaptor.weaveClass(WeavingAdaptor.java:212)&lt;br/&gt;
	at org.aspectj.weaver.loadtime.Aj.preProcess(Aj.java:65)&lt;br/&gt;
	at org.aspectj.weaver.loadtime.ClassPreProcessorAgentAdapter.transform(ClassPreProcessorAgentAdapter.java:55)&lt;br/&gt;
	at org.springframework.instrument.classloading.ShadowingClassLoader.applyTransformers(ShadowingClassLoader.java:119)&lt;br/&gt;
	at org.springframework.instrument.classloading.ShadowingClassLoader.doLoadClass(ShadowingClassLoader.java:101)&lt;br/&gt;
	at org.springframework.instrument.classloading.ShadowingClassLoader.loadClass(ShadowingClassLoader.java:58)&lt;br/&gt;
	at java.lang.ClassLoader.loadClassInternal(Unknown Source)&lt;br/&gt;
	at java.lang.Class.forName0(Native Method)&lt;br/&gt;
	at java.lang.Class.forName(Unknown Source)&lt;br/&gt;
	at org.springframework.util.ClassUtils.forName(ClassUtils.java:160)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractBeanDefinition.resolveBeanClass(AbstractBeanDefinition.java:324)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveBeanClass(AbstractBeanFactory.java:834)&lt;br/&gt;
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:138)&lt;br/&gt;
	at org.springframework.context.support.AbstractApplicationContext.getBeanNamesForType(AbstractApplicationContext.java:657)&lt;br/&gt;
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:387)&lt;br/&gt;
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:319)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&lt;br/&gt;
	at java.lang.reflect.Method.invoke(Unknown Source)&lt;br/&gt;
	at org.springframework.test.jpa.AbstractJpaTests.runBare(AbstractJpaTests.java:212)&lt;br/&gt;
	at org.opentrader.itest.IntegrationTestCase.runBare(IntegrationTestCase.java:34)&lt;br/&gt;
	at junit.framework.TestResult$1.protect(TestResult.java:110)&lt;br/&gt;
	at junit.framework.TestResult.runProtected(TestResult.java:128)&lt;br/&gt;
	at junit.framework.TestResult.run(TestResult.java:113)&lt;br/&gt;
	at junit.framework.TestCase.run(TestCase.java:120)&lt;br/&gt;
	at junit.framework.TestSuite.runTest(TestSuite.java:228)&lt;br/&gt;
	at junit.framework.TestSuite.run(TestSuite.java:223)&lt;br/&gt;
	at org.junit.internal.runners.OldTestClassRunner.run(OldTestClassRunner.java:35)&lt;br/&gt;
	at org.junit.internal.runners.CompositeRunner.run(CompositeRunner.java:29)&lt;br/&gt;
	at org.junit.internal.runners.TestClassRunner$1.runUnprotected(TestClassRunner.java:42)&lt;br/&gt;
	at org.junit.internal.runners.BeforeAndAfterRunner.runProtected(BeforeAndAfterRunner.java:34)&lt;br/&gt;
	at org.junit.internal.runners.TestClassRunner.run(TestClassRunner.java:52)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:38)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:460)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:673)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:386)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:196)&lt;/p&gt;
&lt;hr /&gt;</description>
            <key id="14605">SPR-2347</key>
            <summary>Aspectj weaving fails unless spring provided aspectj jars are used</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="adrian.colyer">Adrian Colyer</assignee>
                                    <reporter username="memelet">Barry Kaplan</reporter>
                        <labels>
                    </labels>
                <created>Tue, 25 Jul 2006 08:23:32 +0000</created>
                <updated>Tue, 19 Jun 2012 03:50:06 +0000</updated>
                            <resolved>Wed, 6 Dec 2006 14:37:56 +0000</resolved>
                                    <version>2.0 RC2</version>
                    <version>2.0 RC3</version>
                                    <fixVersion>2.0.2</fixVersion>
                                    <component>Core</component>
                    <component>Core:AOP</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="19061" author="muellerc" created="Tue, 15 Aug 2006 00:41:57 +0000"  >&lt;p&gt;AspectJ LTW fails also in Spring RC-3 WITH spring provided aspectjweaver.jar and aspectjrt.jar (both versions are 1.5.2).&lt;/p&gt;</comment>
                            <comment id="19066" author="memelet" created="Tue, 15 Aug 2006 10:41:16 +0000"  >&lt;p&gt;Yes, with the RC3 included aspectj libs the above error occurs. With the aspect 1.5.2 distrubution the above error occurs. But with the aspectj libs included with RC2, the above error does not occur. &lt;/p&gt;

&lt;p&gt;It can&apos;t be that only I and Christian are using aspectj with spring and LTWing. As anybody on the spring been able to reproduce this issue?&lt;/p&gt;</comment>
                            <comment id="19097" author="juergen.hoeller" created="Thu, 17 Aug 2006 03:54:07 +0000"  >&lt;p&gt;Adrian, can you please clarify this? Seems to have to do with the exact version of the AspectJ jars...&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="19125" author="adrian.colyer" created="Fri, 18 Aug 2006 05:22:09 +0000"  >&lt;p&gt;This also came up on the Spring user list. It&apos;s caused by an &quot;improvement&quot; to load-time weaving in the AspectJ 1.5.2 release that causes the NPE you are seeing when load-time weaving using an aspect that wants to look for annotations on types, and sees a type loaded via the boot class path.&lt;/p&gt;

&lt;p&gt;I raised AspectJ bug 153572 (&lt;a href=&quot;https://bugs.eclipse.org/bugs/show_bug.cgi?id=153572&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://bugs.eclipse.org/bugs/show_bug.cgi?id=153572&lt;/a&gt;) to cover this issue on the 11th August, and have committed a fix into AspectJ head (1.5.3 dev. stream). I&apos;m also building a 1.5.2a AspectJ release that is AspectJ 1.5.2 + this one fix so that Spring 2.0 can depend on a final and released version of the AspectJ compiler. I will upgrade the Spring distribution to include the 1.5.2a libraries as soon as they are available (probably Monday).&lt;/p&gt;

&lt;p&gt;It occurs in RC3 of Spring because we upgraded AspectJ to the 1.5.2 final version of AspectJ during RC3 (RC2 was based on an earlier AspectJ).&lt;/p&gt;</comment>
                            <comment id="19148" author="adrian.colyer" created="Sun, 20 Aug 2006 20:32:56 +0000"  >&lt;p&gt;Spring jars have been updated to AspectJ 1.5.2a, which fixes this issue.&lt;br/&gt;
AspectJ 1.5.2a is also available for download from the AspectJ project downloads page.&lt;/p&gt;</comment>
                            <comment id="19190" author="al0" created="Thu, 24 Aug 2006 07:39:50 +0000"  >&lt;p&gt;I as well had this issue, but in AspectJ 1.5.2a (released on 21.08.2006) it is resolved, so there is no need to wait 1.5.3.&lt;/p&gt;</comment>
                            <comment id="19193" author="al0" created="Thu, 24 Aug 2006 08:01:20 +0000"  >&lt;p&gt;One more strange thing with this issue - exception has not been logged to log file (unlike any other). Seems that somwhere at this point is an exception-handling problem.&lt;/p&gt;</comment>
                            <comment id="19194" author="al0" created="Thu, 24 Aug 2006 08:14:43 +0000"  >&lt;p&gt;Please, disregard my previous comment, it is wrong, not looged AOP-related exception exists, but in different situation. I would  open separate bug for it.&lt;/p&gt;</comment>
                            <comment id="20174" author="memelet" created="Mon, 9 Oct 2006 22:22:33 +0000"  >&lt;p&gt;I&apos;m still seeing problems. I&apos;m using spring-2.0 with the included aspectj jars (ie, 1.5.2a). I do not see this problem if I use the spring-RC2 aspectj jars.&lt;/p&gt;

&lt;p&gt;java.lang.NullPointerException&lt;br/&gt;
	at org.aspectj.weaver.tools.WeavingAdaptor$WeavingClassFileProvider.&amp;lt;init&amp;gt;(WeavingAdaptor.java:479)&lt;br/&gt;
	at org.aspectj.weaver.tools.WeavingAdaptor.getWovenBytes(WeavingAdaptor.java:283)&lt;br/&gt;
	at org.aspectj.weaver.tools.WeavingAdaptor.weaveClass(WeavingAdaptor.java:212)&lt;br/&gt;
	at org.aspectj.weaver.loadtime.Aj.preProcess(Aj.java:65)&lt;br/&gt;
	at org.aspectj.weaver.loadtime.ClassPreProcessorAgentAdapter.transform(ClassPreProcessorAgentAdapter.java:55)&lt;br/&gt;
	at org.springframework.instrument.classloading.ShadowingClassLoader.applyTransformers(ShadowingClassLoader.java:122)&lt;br/&gt;
	at org.springframework.instrument.classloading.ShadowingClassLoader.doLoadClass(ShadowingClassLoader.java:104)&lt;br/&gt;
	at org.springframework.instrument.classloading.ShadowingClassLoader.loadClass(ShadowingClassLoader.java:61)&lt;br/&gt;
	at org.xml.sax.helpers.NewInstance.newInstance(Unknown Source)&lt;br/&gt;
	at org.xml.sax.helpers.XMLReaderFactory.loadClass(Unknown Source)&lt;br/&gt;
	at org.xml.sax.helpers.XMLReaderFactory.createXMLReader(Unknown Source)&lt;br/&gt;
	at org.aspectj.weaver.loadtime.definition.DocumentParser.getXMLReader(DocumentParser.java:124)&lt;br/&gt;
	at org.aspectj.weaver.loadtime.definition.DocumentParser.parse(DocumentParser.java:85)&lt;br/&gt;
	at org.aspectj.weaver.loadtime.ClassLoaderWeavingAdaptor.parseDefinitions(ClassLoaderWeavingAdaptor.java:170)&lt;br/&gt;
	at org.aspectj.weaver.loadtime.ClassLoaderWeavingAdaptor.initialize(ClassLoaderWeavingAdaptor.java:104)&lt;br/&gt;
	at org.aspectj.weaver.loadtime.Aj$ExplicitlyInitializedClassLoaderWeavingAdaptor.initialize(Aj.java:130)&lt;br/&gt;
	at org.aspectj.weaver.loadtime.Aj$ExplicitlyInitializedClassLoaderWeavingAdaptor.getWeavingAdaptor(Aj.java:135)&lt;br/&gt;
	at org.aspectj.weaver.loadtime.Aj$WeaverContainer.getWeaver(Aj.java:101)&lt;br/&gt;
	at org.aspectj.weaver.loadtime.Aj.preProcess(Aj.java:61)&lt;br/&gt;
	at org.aspectj.weaver.loadtime.ClassPreProcessorAgentAdapter.transform(ClassPreProcessorAgentAdapter.java:55)&lt;br/&gt;
	at org.springframework.instrument.classloading.ShadowingClassLoader.applyTransformers(ShadowingClassLoader.java:122)&lt;br/&gt;
	at org.springframework.instrument.classloading.ShadowingClassLoader.doLoadClass(ShadowingClassLoader.java:104)&lt;br/&gt;
	at org.springframework.instrument.classloading.ShadowingClassLoader.loadClass(ShadowingClassLoader.java:61)&lt;br/&gt;
	at org.apache.commons.logging.impl.LogFactoryImpl$1.run(LogFactoryImpl.java:441)&lt;br/&gt;
	at java.security.AccessController.doPrivileged(Native Method)&lt;br/&gt;
	at org.apache.commons.logging.impl.LogFactoryImpl.loadClass(LogFactoryImpl.java:435)&lt;br/&gt;
	at org.apache.commons.logging.impl.LogFactoryImpl.isLog4JAvailable(LogFactoryImpl.java:505)&lt;br/&gt;
	at org.apache.commons.logging.impl.LogFactoryImpl.getLogClassName(LogFactoryImpl.java:327)&lt;br/&gt;
	at org.apache.commons.logging.impl.LogFactoryImpl.getLogConstructor(LogFactoryImpl.java:368)&lt;br/&gt;
	at org.apache.commons.logging.impl.LogFactoryImpl.newInstance(LogFactoryImpl.java:529)&lt;br/&gt;
	at org.apache.commons.logging.impl.LogFactoryImpl.getInstance(LogFactoryImpl.java:235)&lt;br/&gt;
	at org.apache.commons.logging.impl.LogFactoryImpl.getInstance(LogFactoryImpl.java:209)&lt;br/&gt;
	at org.apache.commons.logging.LogFactory.getLog(LogFactory.java:351)&lt;br/&gt;
	at org.springframework.util.FileCopyUtils.&amp;lt;clinit&amp;gt;(FileCopyUtils.java:49)&lt;br/&gt;
	at org.springframework.instrument.classloading.ShadowingClassLoader.doLoadClass(ShadowingClassLoader.java:103)&lt;br/&gt;
	at org.springframework.instrument.classloading.ShadowingClassLoader.loadClass(ShadowingClassLoader.java:61)&lt;br/&gt;
	at org.springframework.test.jpa.AbstractJpaTests.runBare(AbstractJpaTests.java:179)&lt;br/&gt;
	at junit.framework.TestResult$1.protect(TestResult.java:110)&lt;br/&gt;
	at junit.framework.TestResult.runProtected(TestResult.java:128)&lt;br/&gt;
	at junit.framework.TestResult.run(TestResult.java:113)&lt;br/&gt;
	at junit.framework.TestCase.run(TestCase.java:120)&lt;br/&gt;
	at junit.framework.TestSuite.runTest(TestSuite.java:228)&lt;br/&gt;
	at junit.framework.TestSuite.run(TestSuite.java:223)&lt;br/&gt;
	at org.junit.internal.runners.OldTestClassRunner.run(OldTestClassRunner.java:35)&lt;br/&gt;
	at org.junit.internal.runners.CompositeRunner.run(CompositeRunner.java:29)&lt;br/&gt;
	at org.junit.internal.runners.TestClassRunner$1.runUnprotected(TestClassRunner.java:42)&lt;br/&gt;
	at org.junit.internal.runners.BeforeAndAfterRunner.runProtected(BeforeAndAfterRunner.java:34)&lt;br/&gt;
	at org.junit.internal.runners.TestClassRunner.run(TestClassRunner.java:52)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:38)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:460)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:673)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:386)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:196)&lt;/p&gt;</comment>
                            <comment id="20183" author="juergen.hoeller" created="Tue, 10 Oct 2006 20:58:47 +0000"  >&lt;p&gt;Adrian, can you please have a look at this? Seems to be an NPE within AspectJ... Maybe we&apos;re passing in an incorrect argument there?&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="20398" author="memelet" created="Mon, 23 Oct 2006 04:27:56 +0000"  >&lt;p&gt;Any new info on this? Its blocking our upgrade to 2.0final. Anything I can do to help?&lt;/p&gt;</comment>
                            <comment id="20536" author="adrian.colyer" created="Mon, 30 Oct 2006 01:06:33 +0000"  >&lt;p&gt;Hi Barry, sorry for the delay in getting to this, I&apos;ve been on the road and then out on vacation last week.  I tried to reproduce this with a simple test case today, but couldn&apos;t trigger the same failure. Do you have a small test case I could use to reproduce this please? Also, the AspectJ code base has undergone some significant revision in this area since 1.5.2 ( and 1.5.2a). Could you retry your failing test case with the latest AspectJ development build (&lt;a href=&quot;http://www.eclipse.org/aspectj/downloads.php&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.eclipse.org/aspectj/downloads.php&lt;/a&gt;) please and let me know whether or not it works, and if it is failing, post the updated stack trace please?&lt;/p&gt;

&lt;p&gt;I&apos;ll keep poking around in the meantime.&lt;/p&gt;

&lt;p&gt;Thanks, Adrian.  &lt;/p&gt;</comment>
                            <comment id="20563" author="memelet" created="Tue, 31 Oct 2006 00:59:14 +0000"  >&lt;p&gt;I&apos;ve upgraded to 1.5.2-dev and Spring 2.0 final &amp;#8211; the above problem no longer occurs &lt;img class=&quot;emoticon&quot; src=&quot;https://jira.spring.io/images/icons/emoticons/smile.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;  &lt;/p&gt;

&lt;p&gt;I tried to create a simple test case for the regression suite, but could not reproduce it outside of our full application. &lt;/p&gt;</comment>
                            <comment id="20582" author="juergen.hoeller" created="Wed, 1 Nov 2006 04:50:53 +0000"  >&lt;p&gt;So does this mean that updating the AspectJ jars (that we ship) to 1.5.2-dev, or ideally a 1.5.2b release or the like, would solve the problem? What can we do in that respect in the 2.0.1 timeframe - that is, within the next 2 days? If that doesn&apos;t work out, we should at least have everything in proper place for 2.0.2 in early December...&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="20583" author="memelet" created="Wed, 1 Nov 2006 05:09:20 +0000"  >&lt;p&gt;Yes, packaging the 1.5.2-dev seems to work great. Unless there is a 1.5.2b in the 2.0.1 timeframe, I guess you would need to ship development jars. But how many people have encountered this problem? Waiting for a aspectj release build for 2.0.2 would be fine by me.&lt;/p&gt;

&lt;p&gt;-barry&lt;/p&gt;</comment>
                            <comment id="20597" author="adrian.colyer" created="Thu, 2 Nov 2006 00:09:47 +0000"  >&lt;p&gt;Unfortunately one of the &quot;benefits&quot; of AspectJ and AJDT being promoted to &quot;tools&quot; projects rather than &quot;technology&quot; projects on eclipse is that I can no longer put out a point release at the drop of a hat - instead we have to go through the Eclipse legal reviews and release approvals process. We&apos;re currently doing that right now so that we can put out 1.5.3, but this won&apos;t be through in time for Spring 2.0.1. Given that anyone encountering this issue (so far only Barry that I know of -  the circumstances that trigger it should be relatively rare) can always use the latest AJ development build as a workaround I think we&apos;re best off leaving this open for the time being, and upgrading Spring to AspectJ 1.5.3 as soon as it becomes available. I wouldn&apos;t like to put out Spring 2.0.1 bundled with a non-released version of AspectJ...&lt;/p&gt;</comment>
                            <comment id="20601" author="juergen.hoeller" created="Thu, 2 Nov 2006 00:18:10 +0000"  >&lt;p&gt;Sounds fine to me. Let&apos;s keep AspectJ 1.5.2a for the time being then, and upgrade to 1.5.3 for Spring 2.0.2 (early December).&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="21232" author="juergen.hoeller" created="Wed, 6 Dec 2006 14:37:56 +0000"  >&lt;p&gt;I&apos;ve updated the AspectJ jars to 1.5.3 for the Spring 2.0.2 release.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        10 years, 4 weeks, 1 day ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 15 Aug 2006 00:41:57 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>false</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i00htj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2932</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>