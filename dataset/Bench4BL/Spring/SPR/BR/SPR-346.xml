<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 19:02:09 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-346/SPR-346.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-346] BlobSerializableType doesn&apos;t set BLOB column to NULL</title>
                <link>https://jira.spring.io/browse/SPR-346</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;Hi, I think the nullSafeSet and nullSafeGet implementation in class org.springframework.orm.hibernate.support.BlobSerializableType does not handle the NULL value correctly.&lt;/p&gt;

&lt;p&gt;Right now the implementation doesn&apos;t set the BLOB column in table to NULL if the persist object is null. This makes it impossible to use HQL &quot;IS NULL&quot; to test the column in a query, because the column will always have something even when the object passed in is a null.&lt;/p&gt;

&lt;p&gt;I think the above 2 methods should be change to:&lt;/p&gt;

&lt;p&gt;	protected Object nullSafeGetInternal(&lt;br/&gt;
		ResultSet rs,&lt;br/&gt;
		int index,&lt;br/&gt;
		LobHandler lobHandler)&lt;br/&gt;
		throws SQLException, IOException&lt;br/&gt;
	{&lt;br/&gt;
		InputStream is = lobHandler.getBlobAsBinaryStream(rs, index);&lt;br/&gt;
		if (is.available() &amp;lt;= 0)&lt;br/&gt;
			return null;&lt;/p&gt;

&lt;p&gt;		ObjectInputStream ois = new ObjectInputStream(is);&lt;br/&gt;
		try&lt;/p&gt;
		{
			return ois.readObject();
		}
&lt;p&gt;		catch (ClassNotFoundException ex)&lt;/p&gt;
		{
			throw new IOException(
				&quot;Could not deserialize BLOB contents: &quot; + ex.getMessage());
		}
&lt;p&gt;		finally&lt;/p&gt;
		{
			ois.close();
		}
&lt;p&gt;	}&lt;/p&gt;

&lt;p&gt;	protected void nullSafeSetInternal(&lt;br/&gt;
		PreparedStatement ps,&lt;br/&gt;
		int index,&lt;br/&gt;
		Object value,&lt;br/&gt;
		LobCreator lobCreator)&lt;br/&gt;
		throws SQLException, IOException&lt;br/&gt;
	{&lt;br/&gt;
		if (value == null)&lt;/p&gt;
		{
			lobCreator.setBlobAsBytes(ps, index, null);
		}
&lt;p&gt;		else&lt;br/&gt;
		{&lt;br/&gt;
			ByteArrayOutputStream baos = new ByteArrayOutputStream();&lt;br/&gt;
			ObjectOutputStream oos = new ObjectOutputStream(baos);&lt;br/&gt;
			try&lt;/p&gt;
			{
				oos.writeObject(value);
				oos.flush();
				lobCreator.setBlobAsBytes(ps, index, baos.toByteArray());
			}
&lt;p&gt;			finally&lt;/p&gt;
			{
				oos.close();
			}
&lt;p&gt;		}&lt;br/&gt;
	}&lt;/p&gt;</description>
            <key id="10579">SPR-346</key>
            <summary>BlobSerializableType doesn&apos;t set BLOB column to NULL</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="juergen.hoeller">Juergen Hoeller</assignee>
                                    <reporter username="victorwon">Victor</reporter>
                        <labels>
                    </labels>
                <created>Fri, 24 Sep 2004 04:07:08 +0000</created>
                <updated>Tue, 28 Sep 2004 06:24:34 +0000</updated>
                            <resolved>Fri, 24 Sep 2004 04:46:27 +0000</resolved>
                                    <version>1.1.1</version>
                                    <fixVersion>1.1.1</fixVersion>
                                    <component>Data</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="11086" author="victorwon" created="Fri, 24 Sep 2004 04:24:27 +0000"  >&lt;p&gt;On a second thought, I revised the change to following:&lt;/p&gt;

&lt;p&gt;1. move the is.available() test into the try/catch block so that the stream can be closed() in final block.&lt;/p&gt;

&lt;p&gt;2. use lobCreator.setBlobAsBinaryStream instead of lobCreator.setBlobAsBytes to create NULL column (just to make it more consistent)&lt;/p&gt;

&lt;p&gt;thanks.&lt;br/&gt;
=================&lt;/p&gt;

&lt;p&gt;	protected Object nullSafeGetInternal(&lt;br/&gt;
		ResultSet rs,&lt;br/&gt;
		int index,&lt;br/&gt;
		LobHandler lobHandler)&lt;br/&gt;
		throws SQLException, IOException&lt;br/&gt;
	{&lt;br/&gt;
		InputStream is = lobHandler.getBlobAsBinaryStream(rs, index);&lt;br/&gt;
		ObjectInputStream ois = new ObjectInputStream(is);&lt;br/&gt;
		try&lt;/p&gt;
		{
			if (is.available() &amp;lt;= 0)
				return null;
			else
				return ois.readObject();
		}
&lt;p&gt;		catch (ClassNotFoundException ex)&lt;/p&gt;
		{
			throw new IOException(
				&quot;Could not deserialize BLOB contents: &quot; + ex.getMessage());
		}
&lt;p&gt;		finally&lt;/p&gt;
		{
			ois.close();
		}
&lt;p&gt;	}&lt;/p&gt;

&lt;p&gt;	protected void nullSafeSetInternal(&lt;br/&gt;
		PreparedStatement ps,&lt;br/&gt;
		int index,&lt;br/&gt;
		Object value,&lt;br/&gt;
		LobCreator lobCreator)&lt;br/&gt;
		throws SQLException, IOException&lt;br/&gt;
	{&lt;br/&gt;
		if (value == null)&lt;/p&gt;
		{
			lobCreator.setBlobAsBinaryStream(ps, index, null, 0);
		}
&lt;p&gt;		else&lt;br/&gt;
		{&lt;br/&gt;
			ByteArrayOutputStream baos = new ByteArrayOutputStream();&lt;br/&gt;
			ObjectOutputStream oos = new ObjectOutputStream(baos);&lt;br/&gt;
			try&lt;/p&gt;
			{
				oos.writeObject(value);
				oos.flush();
				lobCreator.setBlobAsBytes(ps, index, baos.toByteArray());
			}
&lt;p&gt;			finally&lt;/p&gt;
			{
				oos.close();
			}
&lt;p&gt;		}&lt;br/&gt;
	}&lt;/p&gt;</comment>
                            <comment id="11088" author="juergen.hoeller" created="Fri, 24 Sep 2004 04:46:27 +0000"  >&lt;p&gt;Thanks for spotting this - I&apos;ve just fixed it. I&apos;ve assumed that LobHandler.getBlobAsBytes returns null in case of SQL NULL, though; I&apos;m gonna respond to that in your other issue.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="11092" author="juergen.hoeller" created="Fri, 24 Sep 2004 05:46:16 +0000"  >&lt;p&gt;Victor, it would be great if you could give a current CVS snapshot a try at your earliest convenience (once the change is visible in public CVS). We&apos;re about to release 1.1.1 next week, and it would be good to have this fully tested before. (I did some basic tests against an Oracle instance myself, but nothing fancy.)&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="11093" author="victorwon" created="Fri, 24 Sep 2004 07:31:14 +0000"  >&lt;p&gt;Thanks Juergen. I&apos;ll try 1.1.1 first thing next monday.&lt;/p&gt;

&lt;p&gt;And I just found my previous code had errors, I have tested the following which truly works. Sorry for my cautiousless. &lt;img class=&quot;emoticon&quot; src=&quot;https://jira.spring.io/images/icons/emoticons/tongue.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;


&lt;p&gt;	protected Object nullSafeGetInternal(&lt;br/&gt;
		ResultSet rs,&lt;br/&gt;
		int index,&lt;br/&gt;
		LobHandler lobHandler)&lt;br/&gt;
		throws SQLException, IOException&lt;br/&gt;
	{&lt;br/&gt;
		InputStream is = lobHandler.getBlobAsBinaryStream(rs, index);	&lt;br/&gt;
		if (rs.wasNull())&lt;/p&gt;
		{
			is.close();
			return null;
		}

&lt;p&gt;		ObjectInputStream ois = new ObjectInputStream(is);&lt;br/&gt;
		try&lt;/p&gt;
		{
			return ois.readObject();
		}
&lt;p&gt;		catch (ClassNotFoundException ex)&lt;/p&gt;
		{
			throw new IOException(
				&quot;Could not deserialize BLOB contents: &quot; + ex.getMessage());
		}
&lt;p&gt;		finally&lt;/p&gt;
		{
			ois.close();
		}
&lt;p&gt;	}&lt;/p&gt;

&lt;p&gt;	protected void nullSafeSetInternal(&lt;br/&gt;
		PreparedStatement ps,&lt;br/&gt;
		int index,&lt;br/&gt;
		Object value,&lt;br/&gt;
		LobCreator lobCreator)&lt;br/&gt;
		throws SQLException, IOException&lt;br/&gt;
	{&lt;br/&gt;
		if (value == null)&lt;/p&gt;
		{
			lobCreator.setBlobAsBytes(ps, index, null);
		}
&lt;p&gt;		else&lt;br/&gt;
		{&lt;br/&gt;
			ByteArrayOutputStream baos = new ByteArrayOutputStream();&lt;br/&gt;
			ObjectOutputStream oos = new ObjectOutputStream(baos);&lt;br/&gt;
			try&lt;/p&gt;
			{
				oos.writeObject(value);
				oos.flush();
				lobCreator.setBlobAsBytes(ps, index, baos.toByteArray());
			}
&lt;p&gt;			finally&lt;/p&gt;
			{
				oos.close();
			}
&lt;p&gt;		}&lt;br/&gt;
	}&lt;/p&gt;</comment>
                            <comment id="11162" author="victorwon" created="Tue, 28 Sep 2004 06:24:34 +0000"  >&lt;p&gt;I tried 1.1.1 and it works fine. Thanks&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        12 years, 14 weeks, 2 days ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 24 Sep 2004 04:46:27 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>true</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i01fqv:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>8428</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>