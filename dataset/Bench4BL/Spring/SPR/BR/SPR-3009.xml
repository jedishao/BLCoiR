<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 21:22:46 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-3009/SPR-3009.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-3009] fix of SPR-2721 broke nested proxies</title>
                <link>https://jira.spring.io/browse/SPR-3009</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description></description>
            <key id="15815">SPR-3009</key>
            <summary>fix of SPR-2721 broke nested proxies</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="juergen.hoeller">Juergen Hoeller</assignee>
                                    <reporter username="robertm">Robert Macaulay</reporter>
                        <labels>
                    </labels>
                <created>Wed, 3 Jan 2007 02:48:02 +0000</created>
                <updated>Tue, 19 Jun 2012 03:50:25 +0000</updated>
                            <resolved>Thu, 4 Jan 2007 00:59:18 +0000</resolved>
                                    <version>2.0.1</version>
                                    <fixVersion>2.0.2</fixVersion>
                                    <component>Core:AOP</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="21580" author="robertm" created="Wed, 3 Jan 2007 02:55:01 +0000"  >&lt;p&gt;Our spring 1.2 aspect config uses various BeanNameAutoProxyCreators. Many times, a bean is processed many times by various different proxy Creators, resulting in a chain of proxies. In 2.0, that seems to be no longer possible &lt;/p&gt;

&lt;p&gt;We have attempted to use the DefaultAutoProxyCreator, but the problem with that is semi-circular dependencies. Some advisors use our DAO infrastructure, which causes that to be loaded. But after the DAOs are loaded, they will no longer be eligible for proxying by later Advisors in the defaultAutoProxy loop (ie, an advisor matching  &lt;b&gt;DAO.save&lt;/b&gt; would no longer be applied to the DAOs).&lt;/p&gt;

&lt;p&gt;Its semi-circular since the DAOs that are used would not match the pointcut that the particular advisor that loaded them calls. But once the DAO is loaded, that reference is given to anyone who needs it, including those that should have been matched.&lt;/p&gt;
</comment>
                            <comment id="21581" author="robh" created="Wed, 3 Jan 2007 03:19:36 +0000"  >&lt;p&gt;Robert,&lt;/p&gt;

&lt;p&gt;Can you post a test case that highlights the failure here. I not sure exactly what the problem is - you should still be able to chain multiple advisors together in the manner you describe but without creating unnecessary double proxies.&lt;/p&gt;

&lt;p&gt;Rob&lt;/p&gt;</comment>
                            <comment id="21584" author="robertm" created="Wed, 3 Jan 2007 06:36:19 +0000"  >&lt;p&gt;Have junit, spring, spring-mock, and commons-logging in the classpath.&lt;/p&gt;

&lt;p&gt;The test is ProxyTest. When I run it on 1.2.6 spring, I get the testNested test to pass, and the other test to fail(as expected).&lt;/p&gt;

&lt;p&gt;On 2.0.1, both tests fail.&lt;/p&gt;

&lt;p&gt;We have extensive use of the multiple BeanNameAutoProxyCreators. It seems that on 2.0.1, a bean can be post processed by at most one BeanNameAutoProxy&lt;/p&gt;
</comment>
                            <comment id="21586" author="juergen.hoeller" created="Wed, 3 Jan 2007 07:23:38 +0000"  >&lt;p&gt;This probably duplicates &lt;a href=&quot;https://jira.spring.io/browse/SPR-2972&quot; title=&quot;use of multiple BeanNameAutoProxyCreators broke when we upgraded from 1.2.8 to 2.0.1&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SPR-2972&quot;&gt;&lt;del&gt;SPR-2972&lt;/del&gt;&lt;/a&gt;, where the report also says that multiple BeanNameAutoProxyCreators no longer work in 2.0.1.&lt;/p&gt;

&lt;p&gt;Thanks for the test, we&apos;ll have a look at it ASAP...&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="21588" author="robertm" created="Wed, 3 Jan 2007 08:26:25 +0000"  >&lt;p&gt;One feature that I started to implement but ran into issues with was the idea of altering the if block that determined that is was already a proxy. Was trying to do it in a subclass, but too many things were private. If it was already a proxy, I was going to see if it were possible to add the advisor to the existing chain assuming the proxy was not frozen(frozen would default back to nesting). &lt;/p&gt;

&lt;p&gt;Will try to implement as a patch, unless there is a good reason that you know of that I haven&apos;t ran into yet.&lt;/p&gt;
</comment>
                            <comment id="21609" author="juergen.hoeller" created="Thu, 4 Jan 2007 00:59:18 +0000"  >&lt;p&gt;I&apos;ve addressed this through reworking the &quot;avoid double proxying&quot; check: Instead of considering every existing AOP proxy as not-to-be-touched, each AutoProxyCreator now keeps a list of bean names that it created custom TargetSources for, and simply ignores those in its &quot;postProcessAfterInitialization&quot; method.&lt;/p&gt;

&lt;p&gt;The root of this problem is actually in the fix for &lt;a href=&quot;https://jira.spring.io/browse/SPR-1879&quot; title=&quot;Cannot proxy scripted beans&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SPR-1879&quot;&gt;&lt;del&gt;SPR-1879&lt;/del&gt;&lt;/a&gt;, where &quot;postProcessAfterInitialization&quot; was now called for components that have been &apos;short-circuited&apos; via &quot;postProcessBeforeInstantiation&quot; (which in particular affects scripted objects). Unfortunately, this meant that any use of custom TargetSource led to double-proxying now, since an AutoProxyCreator&apos;s &quot;postProcessAfterInitialization&quot; was called now even for beans where the same AutoProxyCreator triggered a short-circuit via &quot;postProcessBeforeInstantiation&quot;. Which was why such an explicit &quot;do not proxy again&quot; check suddenly became necessary, and unfortunately was too eager... The above solution should fix that again.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10000">
                    <name>Duplicate</name>
                                            <outwardlinks description="duplicates">
                                        <issuelink>
            <issuekey id="15742">SPR-2972</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12317" name="test.zip" size="1837" author="" created="Wed, 3 Jan 2007 06:34:01 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        10 years ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 3 Jan 2007 03:19:36 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>false</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i00uwn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5052</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>