<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 18:59:03 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-696/SPR-696.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-696] Remote EJB access lacks narrowing</title>
                <link>https://jira.spring.io/browse/SPR-696</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;The access to the remote home interface via spring lacks the required narrowing. See forum thread &lt;a href=&quot;http://forum.springframework.org/viewtopic.php?t=3380&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://forum.springframework.org/viewtopic.php?t=3380&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I propose the following patch in AbstractSlsbInvokerInterceptor:&lt;/p&gt;

&lt;p&gt;  protected Object getHome() throws NamingException {&lt;br/&gt;
    if (!this.cacheHome &lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; (this.lookupHomeOnStartup &amp;amp;&amp;amp; !isHomeRefreshable())) 
{
      return (this.cachedHome != null ? this.cachedHome: lookup());
    }
&lt;p&gt;    else {&lt;br/&gt;
      synchronized (this) &lt;/p&gt;
&lt;div class=&quot;error&quot;&gt;&lt;span class=&quot;error&quot;&gt;Unknown macro: {        if (this.cachedHome == null) {
          EJBHome ejbHome = (EJBHome)   
              PortableRemoteObject.narrow(lookup(), EJBHome.class);
          Class homeClass =
              ejbHome.getEJBMetaData().getHomeInterfaceClass();
          this.cachedHome = 
              PortableRemoteObject.narrow(ejbHome, homeClass);
          
          this.createMethod = getCreateMethod(this.cachedHome);
        }        return this.cachedHome;      }&lt;/span&gt; &lt;/div&gt;
&lt;p&gt;    }&lt;br/&gt;
  }&lt;/p&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;



&lt;p&gt;Regards,&lt;br/&gt;
Andreas&lt;/p&gt;</description>
            <key id="11117">SPR-696</key>
            <summary>Remote EJB access lacks narrowing</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="juergen.hoeller">Juergen Hoeller</assignee>
                                    <reporter username="asenft">Andreas Senft</reporter>
                        <labels>
                    </labels>
                <created>Mon, 7 Feb 2005 19:31:46 +0000</created>
                <updated>Tue, 14 Nov 2006 17:50:19 +0000</updated>
                            <resolved>Sun, 27 Feb 2005 19:10:02 +0000</resolved>
                                                    <fixVersion>1.1.5</fixVersion>
                                    <component>EJB</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12267" author="szhrmp" created="Wed, 9 Feb 2005 01:26:31 +0000"  >&lt;p&gt;This works for me Websphere:&lt;/p&gt;

&lt;p&gt;synchronized (this) {&lt;br/&gt;
  if (this.cachedHome == null) &lt;/p&gt;
{
  EJBHome ejbHome = (EJBHome) PortableRemoteObject.narrow(lookup(), EJBHome.class);

  this.cachedHome = ejbHome;

  this.createMethod = getCreateMethod(this.cachedHome);
  }
&lt;p&gt;  return this.cachedHome;&lt;br/&gt;
}&lt;/p&gt;


&lt;p&gt;The method &quot;getEJBMetaData&quot; throws a strange corba error inside WSAD, the code above fixes the class loader issue.&lt;/p&gt;</comment>
                            <comment id="12272" author="juergen.hoeller" created="Wed, 9 Feb 2005 06:32:49 +0000"  >&lt;p&gt;Thanks for the suggestion, Andreas. I consider adding this for 1.1.5.&lt;/p&gt;

&lt;p&gt;Have you tested this double narrowing against a concrete case that would fail without it, e.g. on WebSphere which requires narrowing to change the class loader (as indicated on the forum)? Please double-check that the narrow calls actually change the behavior.&lt;/p&gt;

&lt;p&gt;An interesting thing in the case illustrated at the forum is that the &quot;create&quot; call doesn&apos;t fail - only the &quot;doit&quot; call on the EJB interface itself does. I would have expected access to home interface methods to fail in such a case...&lt;/p&gt;

&lt;p&gt;It feels a bit odd to perform narrowing twice (once for getting access to EJBHome, a second time for the actual home interface that defines the create method), but I guess it could work. Only narrow to EJBHome might be sufficient, though, depending on how the narrowing is implemented in the EJB client infrastructure.&lt;/p&gt;

&lt;p&gt;We also need to test the EJB accessors against EJB servers that do not require narrow calls again. Some odd circumstances might lead to narrow calls (or double narrow calls) failing on such servers, which would mean that we shouldn&apos;t perform narrowing by default (only when activated through some flag).&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="12273" author="juergen.hoeller" created="Wed, 9 Feb 2005 06:36:02 +0000"  >&lt;p&gt;BTW, JndiRmiProxyFactoryBean in the remoting.rmi package performs narrowing to the service interface. This is only meant to be used with plain RMI-IIOP, but should also work for remote EJB homes: for example, for Stateful Session Beans (with custom create methods on the home, to be used by clients in a specific fashion).&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="12274" author="szhrmp" created="Wed, 9 Feb 2005 08:15:35 +0000"  >&lt;p&gt;As mentioned, I think one narrow call should be enough (tested in Websphere 5.0).&lt;/p&gt;

&lt;p&gt;The reason why the doit doesn&apos;t work and the create works is because the doit has a parameter from a different class loader (e.g. loaded in the second ear). Passing stuff like Integer works.&lt;/p&gt;

&lt;p&gt;I guess the create works fine because you don&apos;t pass a parameter and because you are lucky, at least the ejb spec states that you should  narrow the reference.&lt;/p&gt;</comment>
                            <comment id="12275" author="juergen.hoeller" created="Wed, 9 Feb 2005 08:24:24 +0000"  >&lt;p&gt;So you mean that one narrow operation for EJBHome.class would be sufficient, simply calling the parameterless &quot;create&quot; method on it via reflection? The question is whether there are cases where we actually need to narrow to the concrete home interface of the bean rather than the generic EJBHome interface.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="12276" author="asenft" created="Wed, 9 Feb 2005 17:24:09 +0000"  >
&lt;p&gt;Hi J&#252;rgen and Peter,&lt;/p&gt;

&lt;p&gt;currently I have no problems with the implementation lacking the cast. However I remember a project some time ago, when accessing the home interface without narrowing didn&apos;t work (I think it was an older WebLogic version).&lt;/p&gt;

&lt;p&gt;On one side the EJB-spec requires narrowing and on the other side the reflection solution (the only I&apos;m aware of) seems to be problematic. So I would propose (agreeing with J&#252;rgen) to make this configurable. Maybe in the configuration one could discern the level of &quot;narrowing support&quot; (none, narrowing to EJBHome, double narrowing to concrete class). So (iI hope) all cases can be handled.&lt;/p&gt;

&lt;p&gt;By the way It seems that EJBMetaData is a point of inconsistency...&lt;br/&gt;
See: &lt;a href=&quot;http://forums.bea.com/bea/message.jspa?messageID=202441356&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://forums.bea.com/bea/message.jspa?messageID=202441356&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Regards,&lt;br/&gt;
Andreas&lt;/p&gt;</comment>
                            <comment id="12443" author="juergen.hoeller" created="Sun, 27 Feb 2005 19:10:02 +0000"  >&lt;p&gt;I&apos;ve addressed this through adding a &quot;homeInterface&quot; property to AbstractSlsbInvokerInterceptor, for specifying the home interface that the invoker should explicitly narrow to.&lt;/p&gt;

&lt;p&gt;The default is none. Specifying &quot;javax.ejb.EJBHome&quot; is supposedly sufficient for WebSphere Remote SLSBs. On other servers, the specific home interface for the target SLSB might be necessary.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="12444" author="juergen.hoeller" created="Sun, 27 Feb 2005 19:16:52 +0000"  >&lt;p&gt;I&apos;ve just moved the &quot;homeInterface&quot; property and the narrow call down to AbstractRemoteSlsbInvokerInterceptor. It does not add any value for local SLSB invokers. And PortableRemoteObject.narrow resides in the javax.rmi package, looking a bit odd in the generic invoker base class.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="16560" author="ylandman" created="Wed, 22 Feb 2006 20:08:52 +0000"  >&lt;p&gt;FWIW, WebSphere 6 &lt;b&gt;does&lt;/b&gt; require specifying the specific home interface for the target SLSB.&lt;/p&gt;</comment>
                            <comment id="20837" author="cyberguide" created="Tue, 14 Nov 2006 17:50:19 +0000"  >&lt;p&gt;FYI, I experienced that in WebSphere environments (5 or 6 or mixed) you sometimes are required to use the concrete home interface for the narrowing operation while at other times, the generic EJBHome.class is sufficient. This is probably highly dependent on the environment in use. However, the generic solution worked on the client side, while on the server side (narrowing to another remote ejb home) required the concrete home class. Client was SUN VM, server not.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        10 years, 7 weeks, 2 days ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 9 Feb 2005 01:26:31 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>true</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i04u4f:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>28254</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>