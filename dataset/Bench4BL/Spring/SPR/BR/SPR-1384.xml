<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 20:04:35 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-1384/SPR-1384.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-1384] IllegalStateException thrown by JBoss 4.0.3 when PROPAGATION_REQUIRES_NEW used during active transaction in MessageBean with BMT</title>
                <link>https://jira.spring.io/browse/SPR-1384</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;Deploy a MessageBean that is using BMT.  The following sequence of events in the onMessage() method will cause the IllegalStateException:&lt;/p&gt;

&lt;p&gt;1. create TransactionTemplate with PROPAGATION_REQUIRED&lt;br/&gt;
2. in the execute do this:&lt;br/&gt;
  2a. Connection conn = DataSourceUtils.getConnection(ds);&lt;br/&gt;
  2b. DataSourceUtils.releaseConnection(conn, ds);&lt;br/&gt;
  2c. call method that does the following:&lt;br/&gt;
        I. create TransactionTemplate with PROPAGATION_REQUIRES_NEW&lt;br/&gt;
        II. call execute and the exception is thrown.&lt;/p&gt;

&lt;p&gt;Here is the debug and stacktrace:&lt;/p&gt;

&lt;p&gt;12:03:50,703 INFO  &lt;span class=&quot;error&quot;&gt;&amp;#91;STDOUT&amp;#93;&lt;/span&gt; MyMessageBean got message!&lt;br/&gt;
12:03:50,705 INFO  &lt;span class=&quot;error&quot;&gt;&amp;#91;STDOUT&amp;#93;&lt;/span&gt; // obtain DataSource&lt;br/&gt;
12:03:50,707 INFO  &lt;span class=&quot;error&quot;&gt;&amp;#91;STDOUT&amp;#93;&lt;/span&gt; *** Create TransactionManager&lt;br/&gt;
12:03:50,900 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;org.springframework.transaction.jta.JtaTransactionManager&amp;#93;&lt;/span&gt; Retrieving JTA UserTransaction from JNDI location &lt;span class=&quot;error&quot;&gt;&amp;#91;java:comp/UserTransaction&amp;#93;&lt;/span&gt;&lt;br/&gt;
12:03:50,901 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;org.springframework.jndi.JndiTemplate&amp;#93;&lt;/span&gt; Looking up JNDI object with name &lt;span class=&quot;error&quot;&gt;&amp;#91;java:comp/UserTransaction&amp;#93;&lt;/span&gt;&lt;br/&gt;
12:03:50,981 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;org.springframework.transaction.jta.JtaTransactionManager&amp;#93;&lt;/span&gt; Retrieving JTA TransactionManager from JNDI location &lt;span class=&quot;error&quot;&gt;&amp;#91;java:/TransactionManager&amp;#93;&lt;/span&gt;&lt;br/&gt;
12:03:50,983 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;org.springframework.jndi.JndiTemplate&amp;#93;&lt;/span&gt; Looking up JNDI object with name &lt;span class=&quot;error&quot;&gt;&amp;#91;java:/TransactionManager&amp;#93;&lt;/span&gt;&lt;br/&gt;
12:03:50,985 INFO  &lt;span class=&quot;error&quot;&gt;&amp;#91;org.springframework.transaction.jta.JtaTransactionManager&amp;#93;&lt;/span&gt; Using JTA UserTransaction: org.jboss.ejb.EnterpriseContext$UserTransactionImpl@66d882&lt;br/&gt;
12:03:50,987 INFO  &lt;span class=&quot;error&quot;&gt;&amp;#91;org.springframework.transaction.jta.JtaTransactionManager&amp;#93;&lt;/span&gt; Using JTA TransactionManager: org.jboss.tm.TxManager@104e65&lt;br/&gt;
12:03:50,988 INFO  &lt;span class=&quot;error&quot;&gt;&amp;#91;STDOUT&amp;#93;&lt;/span&gt; *** Create TransactionTemplate&lt;br/&gt;
12:03:50,997 INFO  &lt;span class=&quot;error&quot;&gt;&amp;#91;STDOUT&amp;#93;&lt;/span&gt; *** Propagation=0&lt;br/&gt;
12:03:51,005 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;org.springframework.transaction.jta.JtaTransactionManager&amp;#93;&lt;/span&gt; Using transaction object &lt;span class=&quot;error&quot;&gt;&amp;#91;org.springframework.transaction.jta.JtaTransactionObject@401ab1&amp;#93;&lt;/span&gt;&lt;br/&gt;
12:03:51,007 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;org.springframework.transaction.jta.JtaTransactionManager&amp;#93;&lt;/span&gt; Creating new transaction with name &lt;span class=&quot;error&quot;&gt;&amp;#91;null&amp;#93;&lt;/span&gt;&lt;br/&gt;
12:03:51,017 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;org.springframework.transaction.support.TransactionSynchronizationManager&amp;#93;&lt;/span&gt; Initializing transaction synchronization&lt;br/&gt;
12:03:51,026 INFO  &lt;span class=&quot;error&quot;&gt;&amp;#91;STDOUT&amp;#93;&lt;/span&gt; *** doInTransaction org.springframework.transaction.support.DefaultTransactionStatus@bc60f2&lt;br/&gt;
12:03:51,056 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;org.springframework.jdbc.datasource.DataSourceUtils&amp;#93;&lt;/span&gt; Fetching JDBC Connection from DataSource&lt;br/&gt;
12:03:53,260 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;org.springframework.jdbc.datasource.DataSourceUtils&amp;#93;&lt;/span&gt; Registering transaction synchronization for JDBC Connection&lt;br/&gt;
12:03:53,419 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;org.springframework.transaction.support.TransactionSynchronizationManager&amp;#93;&lt;/span&gt; Bound value &lt;span class=&quot;error&quot;&gt;&amp;#91;org.springframework.jdbc.datasource.ConnectionHolder@2900c9&amp;#93;&lt;/span&gt; for key &lt;span class=&quot;error&quot;&gt;&amp;#91;org.jboss.resource.adapter.jdbc.WrapperDataSource@bf2c98&amp;#93;&lt;/span&gt; to thread &lt;span class=&quot;error&quot;&gt;&amp;#91;JMS SessionPool Worker-0&amp;#93;&lt;/span&gt;&lt;br/&gt;
12:03:53,420 INFO  &lt;span class=&quot;error&quot;&gt;&amp;#91;STDOUT&amp;#93;&lt;/span&gt; *** doInConnection&lt;br/&gt;
12:03:53,420 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;org.springframework.transaction.support.TransactionSynchronizationManager&amp;#93;&lt;/span&gt; Retrieved value &lt;span class=&quot;error&quot;&gt;&amp;#91;org.springframework.jdbc.datasource.ConnectionHolder@2900c9&amp;#93;&lt;/span&gt; for key &lt;span class=&quot;error&quot;&gt;&amp;#91;org.jboss.resource.adapter.jdbc.WrapperDataSource@bf2c98&amp;#93;&lt;/span&gt; bound to thread &lt;span class=&quot;error&quot;&gt;&amp;#91;JMS SessionPool Worker-0&amp;#93;&lt;/span&gt;&lt;br/&gt;
12:03:53,421 INFO  &lt;span class=&quot;error&quot;&gt;&amp;#91;STDOUT&amp;#93;&lt;/span&gt; === Create TransactionTemplate 2&lt;br/&gt;
12:03:53,422 INFO  &lt;span class=&quot;error&quot;&gt;&amp;#91;STDOUT&amp;#93;&lt;/span&gt; === Propagation=3&lt;br/&gt;
12:03:53,424 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;org.springframework.transaction.jta.JtaTransactionManager&amp;#93;&lt;/span&gt; Using transaction object &lt;span class=&quot;error&quot;&gt;&amp;#91;org.springframework.transaction.jta.JtaTransactionObject@1548ee&amp;#93;&lt;/span&gt;&lt;br/&gt;
12:03:53,424 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;org.springframework.transaction.jta.JtaTransactionManager&amp;#93;&lt;/span&gt; Suspending current transaction, creating new transaction with name &lt;span class=&quot;error&quot;&gt;&amp;#91;null&amp;#93;&lt;/span&gt;&lt;br/&gt;
12:03:53,425 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;org.springframework.transaction.support.TransactionSynchronizationManager&amp;#93;&lt;/span&gt; Removed value &lt;span class=&quot;error&quot;&gt;&amp;#91;org.springframework.jdbc.datasource.ConnectionHolder@2900c9&amp;#93;&lt;/span&gt; for key &lt;span class=&quot;error&quot;&gt;&amp;#91;org.jboss.resource.adapter.jdbc.WrapperDataSource@bf2c98&amp;#93;&lt;/span&gt; from thread &lt;span class=&quot;error&quot;&gt;&amp;#91;JMS SessionPool Worker-0&amp;#93;&lt;/span&gt;&lt;br/&gt;
12:03:53,433 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;org.springframework.transaction.support.TransactionSynchronizationManager&amp;#93;&lt;/span&gt; Clearing transaction synchronization&lt;br/&gt;
12:03:53,438 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;org.springframework.transaction.support.TransactionTemplate&amp;#93;&lt;/span&gt; Initiating transaction rollback on application exception&lt;br/&gt;
java.lang.IllegalStateException: Trying to change transaction TransactionImpl:XidImpl&lt;span class=&quot;error&quot;&gt;&amp;#91;FormatId=257, GlobalId=samoa.local/20, BranchQual=, localId=20&amp;#93;&lt;/span&gt; in enlist!&lt;br/&gt;
        at org.jboss.resource.connectionmanager.TxConnectionManager$TxConnectionEventListener.enlist(TxConnectionManager.java:551)&lt;br/&gt;
        at org.jboss.resource.connectionmanager.TxConnectionManager.transactionStarted(TxConnectionManager.java:357)&lt;br/&gt;
        at org.jboss.resource.connectionmanager.CachedConnectionManager.userTransactionStarted(CachedConnectionManager.java:403)&lt;br/&gt;
        at org.jboss.ejb.EnterpriseContext$UserTransactionImpl.begin(EnterpriseContext.java:576)&lt;br/&gt;
        at org.springframework.transaction.jta.JtaTransactionManager.doJtaBegin(JtaTransactionManager.java:664)&lt;br/&gt;
        at org.springframework.transaction.jta.JtaTransactionManager.doBegin(JtaTransactionManager.java:622)&lt;br/&gt;
        at org.springframework.transaction.support.AbstractPlatformTransactionManager.handleExistingTransaction(AbstractPlatformTransactionManager.java:320)&lt;br/&gt;
        at org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:262)&lt;br/&gt;
        at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:111)&lt;br/&gt;
        at com.springdeveloper.ejb.MyMessageBean.testSpring2(MyMessageBean.java:95)&lt;br/&gt;
        at com.springdeveloper.ejb.MyMessageBean.access$100(MyMessageBean.java:24)&lt;br/&gt;
        at com.springdeveloper.ejb.MyMessageBean$1.doInTransactionWithoutResult(MyMessageBean.java:80)&lt;br/&gt;
        at org.springframework.transaction.support.TransactionCallbackWithoutResult.doInTransaction(TransactionCallbackWithoutResult.java:33)&lt;br/&gt;
        at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:114)&lt;br/&gt;
        at com.springdeveloper.ejb.MyMessageBean.testSpring(MyMessageBean.java:71)&lt;br/&gt;
        at com.springdeveloper.ejb.MyMessageBean.onMessage(MyMessageBean.java:54)&lt;br/&gt;
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)&lt;br/&gt;
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;br/&gt;
        at java.lang.reflect.Method.invoke(Method.java:585)&lt;br/&gt;
        at org.jboss.invocation.Invocation.performCall(Invocation.java:345)&lt;br/&gt;
        at org.jboss.ejb.MessageDrivenContainer$ContainerInterceptor.invoke(MessageDrivenContainer.java:475)&lt;br/&gt;
        at org.jboss.resource.connectionmanager.CachedConnectionInterceptor.invoke(CachedConnectionInterceptor.java:149)&lt;br/&gt;
        at org.jboss.ejb.plugins.CallValidationInterceptor.invoke(CallValidationInterceptor.java:48)&lt;br/&gt;
        at org.jboss.ejb.plugins.AbstractTxInterceptor.invokeNext(AbstractTxInterceptor.java:106)&lt;br/&gt;
        at org.jboss.ejb.plugins.AbstractTxInterceptorBMT.invokeNext(AbstractTxInterceptorBMT.java:158)&lt;br/&gt;
        at org.jboss.ejb.plugins.MessageDrivenTxInterceptorBMT.invoke(MessageDrivenTxInterceptorBMT.java:32)&lt;br/&gt;
        at org.jboss.ejb.plugins.MessageDrivenInstanceInterceptor.invoke(MessageDrivenInstanceInterceptor.java:101)&lt;br/&gt;
        at org.jboss.ejb.plugins.RunAsSecurityInterceptor.invoke(RunAsSecurityInterceptor.java:94)&lt;br/&gt;
        at org.jboss.ejb.plugins.LogInterceptor.invoke(LogInterceptor.java:192)&lt;br/&gt;
        at org.jboss.ejb.plugins.ProxyFactoryFinderInterceptor.invoke(ProxyFactoryFinderInterceptor.java:122)&lt;br/&gt;
        at org.jboss.ejb.MessageDrivenContainer.internalInvoke(MessageDrivenContainer.java:389)&lt;br/&gt;
        at org.jboss.ejb.Container.invoke(Container.java:873)&lt;br/&gt;
        at org.jboss.ejb.plugins.jms.JMSContainerInvoker.invoke(JMSContainerInvoker.java:1077)&lt;br/&gt;
        at org.jboss.ejb.plugins.jms.JMSContainerInvoker$MessageListenerImpl.onMessage(JMSContainerInvoker.java:1379)&lt;br/&gt;
        at org.jboss.jms.asf.StdServerSession.onMessage(StdServerSession.java:256)&lt;br/&gt;
        at org.jboss.mq.SpyMessageConsumer.sessionConsumerProcessMessage(SpyMessageConsumer.java:904)&lt;br/&gt;
        at org.jboss.mq.SpyMessageConsumer.addMessage(SpyMessageConsumer.java:160)&lt;br/&gt;
        at org.jboss.mq.SpySession.run(SpySession.java:333)&lt;br/&gt;
        at org.jboss.jms.asf.StdServerSession.run(StdServerSession.java:180)&lt;br/&gt;
        at EDU.oswego.cs.dl.util.concurrent.PooledExecutor$Worker.run(PooledExecutor.java:743)&lt;br/&gt;
        at java.lang.Thread.run(Thread.java:613)&lt;br/&gt;
12:03:53,447 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;org.springframework.transaction.jta.JtaTransactionManager&amp;#93;&lt;/span&gt; Triggering beforeCompletion synchronization&lt;br/&gt;
12:03:53,448 ERROR &lt;span class=&quot;error&quot;&gt;&amp;#91;org.springframework.transaction.support.TransactionTemplate&amp;#93;&lt;/span&gt; Application exception overridden by rollback exception&lt;br/&gt;
java.lang.IllegalStateException: Trying to change transaction TransactionImpl:XidImpl&lt;span class=&quot;error&quot;&gt;&amp;#91;FormatId=257, GlobalId=samoa.local/20, BranchQual=, localId=20&amp;#93;&lt;/span&gt; in enlist!&lt;br/&gt;
        at org.jboss.resource.connectionmanager.TxConnectionManager$TxConnectionEventListener.enlist(TxConnectionManager.java:551)&lt;br/&gt;
        at org.jboss.resource.connectionmanager.TxConnectionManager.transactionStarted(TxConnectionManager.java:357)&lt;br/&gt;
        at org.jboss.resource.connectionmanager.CachedConnectionManager.userTransactionStarted(CachedConnectionManager.java:403)&lt;br/&gt;
        at org.jboss.ejb.EnterpriseContext$UserTransactionImpl.begin(EnterpriseContext.java:576)&lt;br/&gt;
        at org.springframework.transaction.jta.JtaTransactionManager.doJtaBegin(JtaTransactionManager.java:664)&lt;br/&gt;
        at org.springframework.transaction.jta.JtaTransactionManager.doBegin(JtaTransactionManager.java:622)&lt;br/&gt;
        at org.springframework.transaction.support.AbstractPlatformTransactionManager.handleExistingTransaction(AbstractPlatformTransactionManager.java:320)&lt;br/&gt;
        at org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:262)&lt;br/&gt;
        at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:111)&lt;br/&gt;
        at com.springdeveloper.ejb.MyMessageBean.testSpring2(MyMessageBean.java:95)&lt;br/&gt;
        at com.springdeveloper.ejb.MyMessageBean.access$100(MyMessageBean.java:24)&lt;br/&gt;
        at com.springdeveloper.ejb.MyMessageBean$1.doInTransactionWithoutResult(MyMessageBean.java:80)&lt;br/&gt;
        at org.springframework.transaction.support.TransactionCallbackWithoutResult.doInTransaction(TransactionCallbackWithoutResult.java:33)&lt;br/&gt;
        at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:114)&lt;br/&gt;
        at com.springdeveloper.ejb.MyMessageBean.testSpring(MyMessageBean.java:71)&lt;br/&gt;
        at com.springdeveloper.ejb.MyMessageBean.onMessage(MyMessageBean.java:54)&lt;br/&gt;
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)&lt;br/&gt;
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;br/&gt;
        at java.lang.reflect.Method.invoke(Method.java:585)&lt;br/&gt;
        at org.jboss.invocation.Invocation.performCall(Invocation.java:345)&lt;br/&gt;
        at org.jboss.ejb.MessageDrivenContainer$ContainerInterceptor.invoke(MessageDrivenContainer.java:475)&lt;br/&gt;
        at org.jboss.resource.connectionmanager.CachedConnectionInterceptor.invoke(CachedConnectionInterceptor.java:149)&lt;br/&gt;
        at org.jboss.ejb.plugins.CallValidationInterceptor.invoke(CallValidationInterceptor.java:48)&lt;br/&gt;
        at org.jboss.ejb.plugins.AbstractTxInterceptor.invokeNext(AbstractTxInterceptor.java:106)&lt;br/&gt;
        at org.jboss.ejb.plugins.AbstractTxInterceptorBMT.invokeNext(AbstractTxInterceptorBMT.java:158)&lt;br/&gt;
        at org.jboss.ejb.plugins.MessageDrivenTxInterceptorBMT.invoke(MessageDrivenTxInterceptorBMT.java:32)&lt;br/&gt;
        at org.jboss.ejb.plugins.MessageDrivenInstanceInterceptor.invoke(MessageDrivenInstanceInterceptor.java:101)&lt;br/&gt;
        at org.jboss.ejb.plugins.RunAsSecurityInterceptor.invoke(RunAsSecurityInterceptor.java:94)&lt;br/&gt;
        at org.jboss.ejb.plugins.LogInterceptor.invoke(LogInterceptor.java:192)&lt;br/&gt;
        at org.jboss.ejb.plugins.ProxyFactoryFinderInterceptor.invoke(ProxyFactoryFinderInterceptor.java:122)&lt;br/&gt;
        at org.jboss.ejb.MessageDrivenContainer.internalInvoke(MessageDrivenContainer.java:389)&lt;br/&gt;
        at org.jboss.ejb.Container.invoke(Container.java:873)&lt;br/&gt;
        at org.jboss.ejb.plugins.jms.JMSContainerInvoker.invoke(JMSContainerInvoker.java:1077)&lt;br/&gt;
        at org.jboss.ejb.plugins.jms.JMSContainerInvoker$MessageListenerImpl.onMessage(JMSContainerInvoker.java:1379)&lt;br/&gt;
        at org.jboss.jms.asf.StdServerSession.onMessage(StdServerSession.java:256)&lt;br/&gt;
        at org.jboss.mq.SpyMessageConsumer.sessionConsumerProcessMessage(SpyMessageConsumer.java:904)&lt;br/&gt;
        at org.jboss.mq.SpyMessageConsumer.addMessage(SpyMessageConsumer.java:160)&lt;br/&gt;
        at org.jboss.mq.SpySession.run(SpySession.java:333)&lt;br/&gt;
        at org.jboss.jms.asf.StdServerSession.run(StdServerSession.java:180)&lt;br/&gt;
        at EDU.oswego.cs.dl.util.concurrent.PooledExecutor$Worker.run(PooledExecutor.java:743)&lt;br/&gt;
        at java.lang.Thread.run(Thread.java:613)&lt;br/&gt;
12:03:53,461 INFO  &lt;span class=&quot;error&quot;&gt;&amp;#91;org.jboss.resource.connectionmanager.CachedConnectionManager&amp;#93;&lt;/span&gt; Closing a connection for you.  Please close them yourself: org.jboss.resource.adapter.jdbc.WrappedConnection@d698d3&lt;br/&gt;
java.lang.Throwable: STACKTRACE&lt;br/&gt;
        at org.jboss.resource.connectionmanager.CachedConnectionManager.registerConnection(CachedConnectionManager.java:333)&lt;br/&gt;
        at org.jboss.resource.connectionmanager.BaseConnectionManager2.allocateConnection(BaseConnectionManager2.java:482)&lt;br/&gt;
        at org.jboss.resource.connectionmanager.BaseConnectionManager2$ConnectionManagerProxy.allocateConnection(BaseConnectionManager2.java:894)&lt;br/&gt;
        at org.jboss.resource.adapter.jdbc.WrapperDataSource.getConnection(WrapperDataSource.java:73)&lt;br/&gt;
        at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:107)&lt;br/&gt;
        at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:77)&lt;br/&gt;
        at com.springdeveloper.ejb.MyMessageBean$1.doInTransactionWithoutResult(MyMessageBean.java:76)&lt;br/&gt;
        at org.springframework.transaction.support.TransactionCallbackWithoutResult.doInTransaction(TransactionCallbackWithoutResult.java:33)&lt;br/&gt;
        at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:114)&lt;br/&gt;
        at com.springdeveloper.ejb.MyMessageBean.testSpring(MyMessageBean.java:71)&lt;br/&gt;
        at com.springdeveloper.ejb.MyMessageBean.onMessage(MyMessageBean.java:54)&lt;br/&gt;
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)&lt;br/&gt;
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;br/&gt;
        at java.lang.reflect.Method.invoke(Method.java:585)&lt;br/&gt;
        at org.jboss.invocation.Invocation.performCall(Invocation.java:345)&lt;br/&gt;
        at org.jboss.ejb.MessageDrivenContainer$ContainerInterceptor.invoke(MessageDrivenContainer.java:475)&lt;br/&gt;
        at org.jboss.resource.connectionmanager.CachedConnectionInterceptor.invoke(CachedConnectionInterceptor.java:149)&lt;br/&gt;
        at org.jboss.ejb.plugins.CallValidationInterceptor.invoke(CallValidationInterceptor.java:48)&lt;br/&gt;
        at org.jboss.ejb.plugins.AbstractTxInterceptor.invokeNext(AbstractTxInterceptor.java:106)&lt;br/&gt;
        at org.jboss.ejb.plugins.AbstractTxInterceptorBMT.invokeNext(AbstractTxInterceptorBMT.java:158)&lt;br/&gt;
        at org.jboss.ejb.plugins.MessageDrivenTxInterceptorBMT.invoke(MessageDrivenTxInterceptorBMT.java:32)&lt;br/&gt;
        at org.jboss.ejb.plugins.MessageDrivenInstanceInterceptor.invoke(MessageDrivenInstanceInterceptor.java:101)&lt;br/&gt;
        at org.jboss.ejb.plugins.RunAsSecurityInterceptor.invoke(RunAsSecurityInterceptor.java:94)&lt;br/&gt;
        at org.jboss.ejb.plugins.LogInterceptor.invoke(LogInterceptor.java:192)&lt;br/&gt;
        at org.jboss.ejb.plugins.ProxyFactoryFinderInterceptor.invoke(ProxyFactoryFinderInterceptor.java:122)&lt;br/&gt;
        at org.jboss.ejb.MessageDrivenContainer.internalInvoke(MessageDrivenContainer.java:389)&lt;br/&gt;
        at org.jboss.ejb.Container.invoke(Container.java:873)&lt;br/&gt;
        at org.jboss.ejb.plugins.jms.JMSContainerInvoker.invoke(JMSContainerInvoker.java:1077)&lt;br/&gt;
        at org.jboss.ejb.plugins.jms.JMSContainerInvoker$MessageListenerImpl.onMessage(JMSContainerInvoker.java:1379)&lt;br/&gt;
        at org.jboss.jms.asf.StdServerSession.onMessage(StdServerSession.java:256)&lt;br/&gt;
        at org.jboss.mq.SpyMessageConsumer.sessionConsumerProcessMessage(SpyMessageConsumer.java:904)&lt;br/&gt;
        at org.jboss.mq.SpyMessageConsumer.addMessage(SpyMessageConsumer.java:160)&lt;br/&gt;
        at org.jboss.mq.SpySession.run(SpySession.java:333)&lt;br/&gt;
        at org.jboss.jms.asf.StdServerSession.run(StdServerSession.java:180)&lt;br/&gt;
        at EDU.oswego.cs.dl.util.concurrent.PooledExecutor$Worker.run(PooledExecutor.java:743)&lt;br/&gt;
        at java.lang.Thread.run(Thread.java:613)&lt;br/&gt;
12:03:53,473 ERROR &lt;span class=&quot;error&quot;&gt;&amp;#91;org.jboss.ejb.plugins.MessageDrivenTxInterceptorBMT&amp;#93;&lt;/span&gt; Application error: BMT stateless bean MyMessageBean should complete transactions before returning (ejb1.1 spec, 11.6.1)&lt;br/&gt;
12:03:53,478 ERROR &lt;span class=&quot;error&quot;&gt;&amp;#91;org.jboss.ejb.plugins.jms.JMSContainerInvoker&amp;#93;&lt;/span&gt; Exception in JMSCI message listener&lt;br/&gt;
javax.ejb.EJBException: null; CausedByException is:&lt;br/&gt;
        Application error: BMT stateless bean MyMessageBean should complete transactions before returning (ejb1.1 spec, 11.6.1)&lt;br/&gt;
        at org.jboss.ejb.plugins.LogInterceptor.handleException(LogInterceptor.java:411)&lt;br/&gt;
        at org.jboss.ejb.plugins.LogInterceptor.invoke(LogInterceptor.java:196)&lt;br/&gt;
        at org.jboss.ejb.plugins.ProxyFactoryFinderInterceptor.invoke(ProxyFactoryFinderInterceptor.java:122)&lt;br/&gt;
        at org.jboss.ejb.MessageDrivenContainer.internalInvoke(MessageDrivenContainer.java:389)&lt;br/&gt;
        at org.jboss.ejb.Container.invoke(Container.java:873)&lt;br/&gt;
        at org.jboss.ejb.plugins.jms.JMSContainerInvoker.invoke(JMSContainerInvoker.java:1077)&lt;br/&gt;
        at org.jboss.ejb.plugins.jms.JMSContainerInvoker$MessageListenerImpl.onMessage(JMSContainerInvoker.java:1379)&lt;br/&gt;
        at org.jboss.jms.asf.StdServerSession.onMessage(StdServerSession.java:256)&lt;br/&gt;
        at org.jboss.mq.SpyMessageConsumer.sessionConsumerProcessMessage(SpyMessageConsumer.java:904)&lt;br/&gt;
        at org.jboss.mq.SpyMessageConsumer.addMessage(SpyMessageConsumer.java:160)&lt;br/&gt;
        at org.jboss.mq.SpySession.run(SpySession.java:333)&lt;br/&gt;
        at org.jboss.jms.asf.StdServerSession.run(StdServerSession.java:180)&lt;br/&gt;
        at EDU.oswego.cs.dl.util.concurrent.PooledExecutor$Worker.run(PooledExecutor.java:743)&lt;br/&gt;
        at java.lang.Thread.run(Thread.java:613)&lt;br/&gt;
java.rmi.RemoteException: Application error: BMT stateless bean MyMessageBean should complete transactions before returning (ejb1.1 spec, 11.6.1)&lt;br/&gt;
        at org.jboss.ejb.plugins.AbstractTxInterceptorBMT.checkStatelessDone(AbstractTxInterceptorBMT.java:225)&lt;br/&gt;
        at org.jboss.ejb.plugins.AbstractTxInterceptorBMT.invokeNext(AbstractTxInterceptorBMT.java:165)&lt;br/&gt;
        at org.jboss.ejb.plugins.MessageDrivenTxInterceptorBMT.invoke(MessageDrivenTxInterceptorBMT.java:32)&lt;br/&gt;
        at org.jboss.ejb.plugins.MessageDrivenInstanceInterceptor.invoke(MessageDrivenInstanceInterceptor.java:101)&lt;br/&gt;
        at org.jboss.ejb.plugins.RunAsSecurityInterceptor.invoke(RunAsSecurityInterceptor.java:94)&lt;br/&gt;
        at org.jboss.ejb.plugins.LogInterceptor.invoke(LogInterceptor.java:192)&lt;br/&gt;
        at org.jboss.ejb.plugins.ProxyFactoryFinderInterceptor.invoke(ProxyFactoryFinderInterceptor.java:122)&lt;br/&gt;
        at org.jboss.ejb.MessageDrivenContainer.internalInvoke(MessageDrivenContainer.java:389)&lt;br/&gt;
        at org.jboss.ejb.Container.invoke(Container.java:873)&lt;br/&gt;
        at org.jboss.ejb.plugins.jms.JMSContainerInvoker.invoke(JMSContainerInvoker.java:1077)&lt;br/&gt;
        at org.jboss.ejb.plugins.jms.JMSContainerInvoker$MessageListenerImpl.onMessage(JMSContainerInvoker.java:1379)&lt;br/&gt;
        at org.jboss.jms.asf.StdServerSession.onMessage(StdServerSession.java:256)&lt;br/&gt;
        at org.jboss.mq.SpyMessageConsumer.sessionConsumerProcessMessage(SpyMessageConsumer.java:904)&lt;br/&gt;
        at org.jboss.mq.SpyMessageConsumer.addMessage(SpyMessageConsumer.java:160)&lt;br/&gt;
        at org.jboss.mq.SpySession.run(SpySession.java:333)&lt;br/&gt;
        at org.jboss.jms.asf.StdServerSession.run(StdServerSession.java:180)&lt;br/&gt;
        at EDU.oswego.cs.dl.util.concurrent.PooledExecutor$Worker.run(PooledExecutor.java:743)&lt;br/&gt;
        at java.lang.Thread.run(Thread.java:613)&lt;/p&gt;

</description>
            <key id="12553">SPR-1384</key>
            <summary>IllegalStateException thrown by JBoss 4.0.3 when PROPAGATION_REQUIRES_NEW used during active transaction in MessageBean with BMT</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="juergen.hoeller">Juergen Hoeller</assignee>
                                    <reporter username="thomas.risberg">Thomas Risberg</reporter>
                        <labels>
                    </labels>
                <created>Sat, 15 Oct 2005 03:16:56 +0000</created>
                <updated>Tue, 19 Jun 2012 03:54:19 +0000</updated>
                            <resolved>Wed, 19 Oct 2005 00:59:57 +0000</resolved>
                                    <version>1.2.5</version>
                                    <fixVersion>1.2.6</fixVersion>
                                    <component>Transaction</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="14984" author="thomas.risberg" created="Sat, 15 Oct 2005 04:29:08 +0000"  >&lt;p&gt;Here is the source for the MessageDrivenBean:&lt;/p&gt;

&lt;p&gt;package com.springdeveloper.ejb;&lt;/p&gt;

&lt;p&gt;import org.springframework.jdbc.datasource.DataSourceUtils;&lt;br/&gt;
import org.springframework.transaction.PlatformTransactionManager;&lt;br/&gt;
import org.springframework.transaction.TransactionDefinition;&lt;br/&gt;
import org.springframework.transaction.TransactionStatus;&lt;br/&gt;
import org.springframework.transaction.jta.JtaTransactionManager;&lt;br/&gt;
import org.springframework.transaction.support.TransactionCallbackWithoutResult;&lt;br/&gt;
import org.springframework.transaction.support.TransactionTemplate;&lt;/p&gt;

&lt;p&gt;import javax.ejb.EJBException;&lt;br/&gt;
import javax.ejb.MessageDrivenBean;&lt;br/&gt;
import javax.ejb.MessageDrivenContext;&lt;br/&gt;
import javax.jms.Message;&lt;br/&gt;
import javax.jms.MessageListener;&lt;br/&gt;
import javax.naming.InitialContext;&lt;br/&gt;
import javax.sql.DataSource;&lt;br/&gt;
import java.sql.Connection;&lt;/p&gt;

&lt;p&gt;public class MyMessageBean implements MessageDrivenBean, MessageListener {&lt;/p&gt;

&lt;p&gt;    private MessageDrivenContext ctx = null;&lt;br/&gt;
    private DataSource ds = null;&lt;/p&gt;

&lt;p&gt;    public MyMessageBean() {&lt;/p&gt;

&lt;p&gt;    }&lt;/p&gt;

&lt;p&gt;    //--- MessageDrivenBean&lt;br/&gt;
    public void setMessageDrivenContext(MessageDrivenContext ctx)&lt;br/&gt;
            throws EJBException &lt;/p&gt;
{

        this.ctx = ctx;

    }

&lt;p&gt;    public void ejbCreate() {&lt;br/&gt;
    }&lt;/p&gt;

&lt;p&gt;    public void ejbRemove() &lt;/p&gt;
{
        ctx = null;
    }

&lt;p&gt;    //--- MessageListener&lt;br/&gt;
    public void onMessage(Message message) &lt;/p&gt;
{

        System.err.println(&quot;MyMessageBean got message!&quot;);

        init();
        testSpring();

    }

&lt;p&gt;    private void testSpring() {&lt;/p&gt;

&lt;p&gt;        System.err.println(&quot;*** Create TransactionManager&quot;);&lt;br/&gt;
        final JtaTransactionManager transactionManager = new JtaTransactionManager();&lt;br/&gt;
        transactionManager.setTransactionManagerName(&quot;java:/TransactionManager&quot;);&lt;br/&gt;
        transactionManager.afterPropertiesSet();&lt;/p&gt;

&lt;p&gt;        System.err.println(&quot;*** Create TransactionTemplate&quot;);&lt;br/&gt;
        TransactionTemplate transactionTemplate = new TransactionTemplate(transactionManager);&lt;br/&gt;
        transactionTemplate.setPropagationBehavior(TransactionDefinition.&lt;br/&gt;
                PROPAGATION_REQUIRED);&lt;br/&gt;
        transactionTemplate.afterPropertiesSet();&lt;br/&gt;
        System.err.println(&quot;*** Propagation=&quot; + transactionTemplate.getPropagationBehavior());&lt;br/&gt;
        transactionTemplate.execute(new TransactionCallbackWithoutResult() {&lt;br/&gt;
            public void doInTransactionWithoutResult(TransactionStatus status) &lt;/p&gt;
{
                System.err.println(&quot;*** doInTransaction &quot; + status);
                // My code goes here
                Connection conn = DataSourceUtils.getConnection(ds);
                System.err.println(&quot;*** doInConnection&quot;);
                DataSourceUtils.releaseConnection(conn, ds);
                // do the second transactuion
                testSpring2(transactionManager);
            }
&lt;p&gt;        });&lt;br/&gt;
        System.err.println(&quot;*** Done. &quot;);&lt;/p&gt;

&lt;p&gt;    }&lt;/p&gt;

&lt;p&gt;    private void testSpring2(PlatformTransactionManager transactionManager) {&lt;/p&gt;

&lt;p&gt;        System.err.println(&quot;=== Create TransactionTemplate 2&quot;);&lt;br/&gt;
        TransactionTemplate transactionTemplate = new TransactionTemplate(transactionManager);&lt;br/&gt;
        transactionTemplate.setPropagationBehavior(TransactionDefinition.&lt;br/&gt;
                PROPAGATION_REQUIRES_NEW);&lt;br/&gt;
        transactionTemplate.afterPropertiesSet();&lt;br/&gt;
        System.err.println(&quot;=== Propagation=&quot; + transactionTemplate.getPropagationBehavior());&lt;br/&gt;
        transactionTemplate.execute(new TransactionCallbackWithoutResult() {&lt;br/&gt;
            public void doInTransactionWithoutResult(TransactionStatus status) &lt;/p&gt;
{
                System.err.println(&quot;=== doInTransaction 2 &quot; + status);
                // My code goes here
            }
&lt;p&gt;        });&lt;/p&gt;

&lt;p&gt;    }&lt;/p&gt;

&lt;p&gt;    private void init() {&lt;br/&gt;
        InitialContext ctx;&lt;br/&gt;
        try &lt;/p&gt;
{
            ctx = new InitialContext();

            System.err.println(&quot;// obtain DataSource&quot;);
            ds = getDataSource(ctx);

        }
&lt;p&gt; catch (Exception e) &lt;/p&gt;
{
            e.printStackTrace();
        }
&lt;p&gt;    }&lt;/p&gt;

&lt;p&gt;    private DataSource getDataSource(InitialContext ctx)&lt;br/&gt;
            throws Exception {&lt;br/&gt;
        try &lt;/p&gt;
{
            // JBoss
            return (DataSource)
                    ctx.lookup(&quot;java:/XAOracleDS&quot;);
        }
&lt;p&gt;            catch (Exception e) &lt;/p&gt;
{
                e.printStackTrace();
        }
&lt;p&gt;        return null;&lt;br/&gt;
    }&lt;br/&gt;
}&lt;/p&gt;</comment>
                            <comment id="14987" author="juergen.hoeller" created="Sat, 15 Oct 2005 21:39:54 +0000"  >&lt;p&gt;Interesting... seems that JBoss tries to enlist the Connection handle from the first transaction, which of course is already enlisted with the outer transaction.&lt;br/&gt;
Obviously JBoss didn&apos;t delist the Connection handle (which is still kept by Spring at that time) on suspend of the outer transaction, but tried to re-enlist it on begin of the inner transaction...&lt;/p&gt;

&lt;p&gt;We recently had a report on something similar: &lt;a href=&quot;http://opensource2.atlassian.com/projects/spring/browse/SPR-1206&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://opensource2.atlassian.com/projects/spring/browse/SPR-1206&lt;/a&gt;&lt;br/&gt;
JBoss has quite peculiar resource handling. It does not seem to delist active resources if a transaction gets suspended (which it arguably should, and which WebLogic does).&lt;br/&gt;
On the other hand, it seems to aggressively try to enlist existing Connection handles that it returned to the application, as per the given issue...&lt;/p&gt;

&lt;p&gt;Thomas, could you please give this a try with Spring transaction synchronization turned off: that is, with JtaTransactionManager&apos;s &quot;transactionSynchronization&quot; property set to SYNCHRONIZATION_NEVER?&lt;br/&gt;
With synchronization off, Spring will return the Connection handle for the outer transaction eagerly, instead of keeping it until completion of the outer transaction.&lt;br/&gt;
I would expect the JBoss IllegalStateException to not occur anymore then.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="14991" author="thomas.risberg" created="Sun, 16 Oct 2005 03:05:24 +0000"  >&lt;p&gt;You &quot;guessed&quot; right.  I can reproduce this error by just holding on to an open connection even without using Spring&apos;s connection management.  So the isssue is that JBoss does not allow you to suspend a transaction while you are holding on to a connection object.&lt;/p&gt;

&lt;p&gt;Everything works fine by setting the &quot;transactionSynchronization&quot; property to SYNCHRONIZATION_NEVER.  I assume that the appserver (JBoss) will synchronize connections/transactions but that there is no guarantee that I will use the same connection for all my work within a transaction.  Any other drawbacks that this setting brings?&lt;/p&gt;</comment>
                            <comment id="14996" author="juergen.hoeller" created="Mon, 17 Oct 2005 04:31:25 +0000"  >&lt;p&gt;OK, so this is closely related to that previous JBoss issue. Thanks for confirming this.&lt;/p&gt;

&lt;p&gt;The main problem here is that turning off transaction synchronization will even turn off Hibernate Session synchronization and co. Hence, the application would then solely rely on direct JTA synchronization, which will work for Hibernate - but only with proper JTA setup. Similarly for TopLink and JDO.&lt;/p&gt;

&lt;p&gt;To keep transaction synchronization on, we could return the JDBC Connection on suspend and fetch a new one on resume. This would guarantee to use the same JDBC Connection for every phase of the transaction, but not guarantee that it&apos;s gonna be the same Connection before and after an inner transaction. This might be an acceptable tradeoff, and should work properly even on JBoss, as Spring wouldn&apos;t keep hold of an existing Connection handle during suspend anymore. Of course, that would only apply to synchronized Connections - that is, running within transactions driven by JtaTransactionManager -, not to Connections managed by our JDBC DataSourceTransactionManager, which absolutely needs to use the same Connections for every level of transaction.&lt;/p&gt;

&lt;p&gt;To make the latter tradeoff work with Hibernate, the Hibernate connection release mode would have to be set to &quot;after_statement&quot;, which they recommend for Hibernate3 in a JTA environment anyway. Else, the Hibernate Session would keep hold of an existing Connection handle even on suspend, incurring the original problem again...&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="15029" author="juergen.hoeller" created="Wed, 19 Oct 2005 00:59:57 +0000"  >&lt;p&gt;I&apos;ve addressed this as elaborated in my last comment. Our JTA synchronization will now release a JDBC Connection on suspend (provided that the application doesn&apos;t hold an open reference to it) and fetch the handle again after resume, if necessary. This should properly work on JBoss, even with transaction suspension.&lt;/p&gt;

&lt;p&gt;Could you please give this a try, Thomas? It&apos;s already in CVS.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="15056" author="thomas.risberg" created="Thu, 20 Oct 2005 12:22:06 +0000"  >&lt;p&gt;Are you sure it&apos;s in CVS - the only recent change (other than polishing) that I can see is &quot;optimized to perform synchronization sort lazily (in &quot;getSynchronizations&quot;)&quot;.&lt;/p&gt;</comment>
                            <comment id="15149" author="thomas.risberg" created="Wed, 26 Oct 2005 11:58:48 +0000"  >&lt;p&gt;This did fix it.  I was able to verify that after this fix I don&apos;t get the IllegalStateExecption anymore.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10000">
                    <name>Duplicate</name>
                                                                <inwardlinks description="is duplicated by">
                                        <issuelink>
            <issuekey id="22569">SPR-4916</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10020">
                    <name>Related</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="18468">SPR-4077</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        11 years, 10 weeks, 1 day ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sat, 15 Oct 2005 21:39:54 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>false</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i020on:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>11820</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>