<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 20:18:27 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-2334/SPR-2334.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-2334] FactoryBeans and their dependencies do not get auto-proxied</title>
                <link>https://jira.spring.io/browse/SPR-2334</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;FBs themselves are not proxied (which is probably not such a big issue) but&lt;br/&gt;
objects FBs depend on (collaborating objects) are not auto-proxied either.&lt;br/&gt;
Example:&lt;/p&gt;

&lt;p&gt;&amp;lt;bean id=&quot;myObject&quot; class=&quot;MyFactoryBean&quot;&amp;gt;&lt;br/&gt;
    &amp;lt;property name=&quot;someDependency&quot; ref=&quot;myReference&quot;/&amp;gt; &amp;lt;/bean&amp;gt;&lt;/p&gt;

&lt;p&gt;The &amp;lt;code&amp;gt;myReference&amp;lt;/code&amp;gt; bean is not auto-proxied because the&lt;br/&gt;
&amp;lt;code&amp;gt;myObject&amp;lt;/code&amp;gt; FB is created by getType(). I&apos;ve used&lt;br/&gt;
LazyInitTargetSourceCreator as a work around.&lt;/p&gt;


&lt;p&gt;&amp;gt; &amp;gt; Do you mean that FBs themselves are not autoproxied or the result of &lt;br/&gt;
&amp;gt; &amp;gt; the call to FB.getObject()?&lt;br/&gt;
&amp;gt; &amp;gt;&lt;br/&gt;
&amp;gt; &amp;gt;&lt;br/&gt;
&amp;gt;&amp;gt; &amp;gt;&amp;gt; AnnotationAwareAspectJAutoProxyCreator does a getType() of all bean &lt;br/&gt;
&amp;gt;&amp;gt; &amp;gt;&amp;gt; definitions in the BeanFactory which instantiates FactoryBeans. As a &lt;br/&gt;
&amp;gt;&amp;gt; &amp;gt;&amp;gt; side-effect of this FactoryBeans and any beans FactoryBeans have a &lt;br/&gt;
&amp;gt;&amp;gt; &amp;gt;&amp;gt; dependency on will not be auto-proxied.&lt;br/&gt;
&amp;gt;&amp;gt; &amp;gt;&amp;gt;&lt;br/&gt;
&amp;gt;&amp;gt; &amp;gt;&amp;gt; It took me about 3 hours to figure out why some bean did not get &lt;br/&gt;
&amp;gt;&amp;gt; &amp;gt;&amp;gt; auto-proxied so even if we can&apos;t fix this I think it should be &lt;br/&gt;
&amp;gt;&amp;gt; &amp;gt;&amp;gt; documented.&lt;/p&gt;</description>
            <key id="14585">SPR-2334</key>
            <summary>FactoryBeans and their dependencies do not get auto-proxied</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="juergen.hoeller">Juergen Hoeller</assignee>
                                    <reporter username="devijvers">Steven Devijver</reporter>
                        <labels>
                    </labels>
                <created>Sun, 23 Jul 2006 11:20:45 +0000</created>
                <updated>Tue, 19 Jun 2012 03:50:27 +0000</updated>
                            <resolved>Tue, 25 Jul 2006 11:36:23 +0000</resolved>
                                    <version>2.0 RC2</version>
                                    <fixVersion>2.0 RC3</fixVersion>
                                    <component>Core:AOP</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="18743" author="grant.gochnauer" created="Mon, 24 Jul 2006 08:25:27 +0000"  >&lt;p&gt;Costin thinks this also might be causing the following problem as well:&lt;br/&gt;
&lt;a href=&quot;http://forum.springframework.org/showthread.php?t=27276&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://forum.springframework.org/showthread.php?t=27276&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="18744" author="juergen.hoeller" created="Mon, 24 Jul 2006 09:58:29 +0000"  >&lt;p&gt;Steven, I have trouble reproducing this. Do you have a handy test case around? Did you test this against 2.0 RC1/RC2 or against a recent nightly snapshot? There have been quite a few changes in this area...&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="18745" author="grant.gochnauer" created="Mon, 24 Jul 2006 10:03:22 +0000"  >&lt;p&gt;Juergen,&lt;/p&gt;

&lt;p&gt;To test my problem, in the thread I posted above, just add:&lt;/p&gt;

&lt;p&gt;&amp;lt;bean id=&quot;orderJobDetail&quot; class=&quot;com.SomeBean&quot;&amp;gt;&lt;br/&gt;
        &amp;lt;property name=&quot;commerceManager&quot; ref=&quot;commerceManager&quot;/&amp;gt;&lt;br/&gt;
    &amp;lt;/bean&amp;gt;&lt;/p&gt;

&lt;p&gt;    &amp;lt;bean id=&quot;orderStatusManagerJobDetail&quot; class=&quot;org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean&quot;&amp;gt;&lt;br/&gt;
        &amp;lt;!--Name of your bean goes here --&amp;gt;&lt;br/&gt;
        &amp;lt;property name=&quot;targetObject&quot; ref=&quot;orderJobDetail&quot;/&amp;gt;&lt;br/&gt;
        &amp;lt;!-- Name of your method goes here --&amp;gt;&lt;br/&gt;
        &amp;lt;property name=&quot;targetMethod&quot; value=&quot;processOrderStatuses&quot;/&amp;gt;&lt;br/&gt;
        &amp;lt;!-- This lets quartz know that 2 instances of this job cannot be run at the same time --&amp;gt;&lt;br/&gt;
        &amp;lt;property name=&quot;concurrent&quot; value=&quot;false&quot;/&amp;gt;&lt;br/&gt;
    &amp;lt;/bean&amp;gt;&lt;/p&gt;

&lt;p&gt;Then create an empty method in SomeBean&lt;br/&gt;
    public void processOrderStatuses()&lt;/p&gt;
    {
        _logger.debug(&quot;#### &quot; + &quot;Starting to process order statuses in background quartz thread&quot;);
    }

&lt;p&gt;After you add this, the transaction&apos;s no longer work in the application with the message:&lt;br/&gt;
org.springframework.dao.InvalidDataAccessApiUsageException: Write operations are not allowed in read-only mode (FlushMode.NEVER) - turn your Session into FlushMode.AUTO or remove &apos;readOnly&apos; marker from transaction definition&lt;/p&gt;

&lt;p&gt;If you remove the bean definition from the context, everything works as normal. During this time, I never changed any transaction flush modes or anything else.&lt;/p&gt;</comment>
                            <comment id="18746" author="grant.gochnauer" created="Mon, 24 Jul 2006 10:04:09 +0000"  >&lt;p&gt;This is tested against the 07-23-2006 nightly build. &lt;/p&gt;</comment>
                            <comment id="18774" author="juergen.hoeller" created="Tue, 25 Jul 2006 11:36:23 +0000"  >&lt;p&gt;The problem turned out to be the &lt;b&gt;raw&lt;/b&gt; target instance (that is, without transactional proxy) injected into the FactoryBean as part of the aspect autodetection process. I&apos;ve addressed this in AnnotationAwareAspectJAutoProxyCreator, which explicitly ignores FactoryBeans now when looking for aspects, and in AbstractAutowireCapableBeanFactory, where we check for any raw instances injected during circular reference resolution (when we know that the bean instance eventually got wrapped, for example by an auto-proxy creator).&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        10 years, 23 weeks, 2 days ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 24 Jul 2006 08:25:27 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>false</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i03o27:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>21440</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>