<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 21:14:35 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-8368/SPR-8368.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-8368] Spring XSD validation fails in the presence of non-standard classloaders due to problems resolving &quot;schema.handlers&quot; etc.</title>
                <link>https://jira.spring.io/browse/SPR-8368</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;With the splitting of Spring Framework into multiple jar files in v3.0, there are now several files named &quot;META-INF/spring.handlers&quot;, &quot;spring.schemas&quot; and &quot;spring.tooling&quot;. This is not a problem when running in a normal servlet container, but poses problems when e.g. creating an executable JAR file from a webapp using an embedded web server such as Jetty, or running GWT in &quot;Dev Mode&quot;, which uses a custom class loader.&lt;/p&gt;

&lt;p&gt;In the former scenario, a typical approach is to use a Maven assembly to extract all .class files from the project dependencies and merge them into one hierarchy, as a way of packaging all the dependencies and the webapp itself into one JAR file.&lt;/p&gt;

&lt;p&gt;However, in this case only one copy of &quot;spring.handlers/schemas/tooling&quot; can exist, and so any schemas that are used and /not/ in the one copy cannot be validated. This leads to exceptions such as this one:&lt;/p&gt;

&lt;p&gt;org.springframework.beans.factory.xml.XmlBeanDefinitionStoreException: Line 65 in XML document from class path resource &lt;span class=&quot;error&quot;&gt;&amp;#91;spring/beans.xml&amp;#93;&lt;/span&gt; is invalid; nested exception is org.xml.sax.SAXParseException: cvc-complex-type.2.4.c: The matching wildcard is strict, but no declaration can be found for element &apos;context:annotation-config&apos;.&lt;br/&gt;
	at org.springframework.beans.factory.parsing.FailFastProblemReporter.error(FailFastProblemReporter.java:68)&lt;br/&gt;
	at org.springframework.beans.factory.parsing.ReaderContext.error(ReaderContext.java:85)&lt;br/&gt;
	at org.springframework.beans.factory.parsing.ReaderContext.error(ReaderContext.java:76)&lt;br/&gt;
	at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.importBeanDefinitionResource(DefaultBeanDefinitionDocumentReader.java:218)&lt;br/&gt;
	at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.parseDefaultElement(DefaultBeanDefinitionDocumentReader.java:147)&lt;/p&gt;

&lt;p&gt;Other people reporting similar problems can be found at Stack Overflow here and here.&lt;/p&gt;

&lt;p&gt;The workaround is to construct your own &quot;custom&quot; version of these three files, merging all the copies into one like so:&lt;/p&gt;

&lt;p&gt;//IOUtils and FileUtils come from Apache Commons IOfor(String s : new String[] &lt;/p&gt;
{&quot;spring.schemas&quot;, &quot;spring.handlers&quot;, &quot;spring.tooling&quot;}
&lt;p&gt;) {&lt;br/&gt;
	Enumeration&amp;lt;?&amp;gt; e = Test.class.getClassLoader().getResources(&quot;META-INF/&quot;+s);&lt;br/&gt;
	StringBuilder out = new StringBuilder();while(e.hasMoreElements()) &lt;/p&gt;
{
		URL u = (URL) e.nextElement();
		out.append(IOUtils.toString(u.openStream())).append(&quot;\n&quot;);
	}
&lt;p&gt;	File outf = new File(s);&lt;br/&gt;
	FileUtils.writeStringToFile(outf, out.toString(), &quot;UTF-8&quot;);&lt;br/&gt;
}&lt;/p&gt;

&lt;p&gt;However, the proper fix would be to use a different file-name for each instance of the schemas/handlers/tooling files. For example, inside &quot;org.springframework.aop-3.0.5.RELEASE.jar/META-INF&quot; you would find &quot;spring-aop.schemas&quot;, &quot;spring-aop.handlers&quot; and &quot;spring-aop.tooling&quot;.&lt;/p&gt;

&lt;p&gt;I&apos;m afraid I&apos;m not sufficiently up-to-speed with the Spring code-base to give you a patch to do this, however a brief investigation shows that &quot;spring.handlers&quot; and &quot;spring.schemas&quot; are specified in org.springframework.beans.factory.xml.PluggableSchemaResolver and DefaultNamespaceHandlerResolver, and that constructors exist for specifying different locations for these files. I hope you find this information useful.&lt;/p&gt;

&lt;p&gt;Best regards,&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Ian&lt;/li&gt;
&lt;/ul&gt;
</description>
            <key id="38098">SPR-8368</key>
            <summary>Spring XSD validation fails in the presence of non-standard classloaders due to problems resolving &quot;schema.handlers&quot; etc.</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://jira.spring.io/images/icons/priorities/minor.png">Minor</priority>
                        <status id="5" iconUrl="https://jira.spring.io/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="6">Invalid</resolution>
                                        <assignee username="costin">Costin Leau</assignee>
                                    <reporter username="ianso">Ian Sollars</reporter>
                        <labels>
                    </labels>
                <created>Tue, 24 May 2011 01:28:28 +0000</created>
                <updated>Tue, 22 Sep 2015 15:56:46 +0000</updated>
                            <resolved>Tue, 22 Sep 2015 15:56:46 +0000</resolved>
                                    <version>3.0.5</version>
                                                    <component>Core</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>4</watches>
                                                                <comments>
                            <comment id="68631" author="costin" created="Fri, 22 Jul 2011 03:12:04 +0000"  >&lt;p&gt;There isn&apos;t an easy fix to this problem. By the looks of it, the issue lies with the way the GWT dev-mode works:&lt;br/&gt;
&lt;a href=&quot;http://groups.google.com/group/google-web-toolkit/browse_thread/thread/ac495ee6605d21b4?pli=1&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://groups.google.com/group/google-web-toolkit/browse_thread/thread/ac495ee6605d21b4?pli=1&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Basically it overrides findResources() delegating to the system classloader which obviously doesn&apos;t find the dev resources. This is a critical piece of functionality and to make it work we would have to rewrite it somehow to use only one resource (as oppose to multiple resources).&lt;br/&gt;
Aggregating the XSD is not really a solution since it&apos;s easy to get into conflicts if there are different versions of the same jar or namespaces that declare the same element name.&lt;/p&gt;</comment>
                            <comment id="68632" author="ianso" created="Fri, 22 Jul 2011 03:57:06 +0000"  >&lt;p&gt;Hi Costin,&lt;/p&gt;

&lt;p&gt;I agree that aggregating the XSD isn&apos;t a proper solution, however, how about changing the file name of the &quot;spring.*&quot; files to indicate which JAR file they belong to, like I suggested in the second-to-last paragraph? e.g. spring-aop.handlers, etc.&lt;/p&gt;

&lt;p&gt;This wouldn&apos;t stop the problem of having different versions of the same jar, but would solve the problem of spring XML configuration files being unusable in certain environments.&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;I&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="68634" author="costin" created="Fri, 22 Jul 2011 04:11:43 +0000"  >&lt;p&gt;That would cause several other problems such as:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;breaks backwards compatibility - tools relying on spring.handlers to exist, would not find the file. We would still have to provide these as some sort of alias (either by including or literally copying the renamed files).&lt;/li&gt;
	&lt;li&gt;breaks the discovery process. The use of the same name is on purpose - ClassLoader.get/findResources() do not support pattern matching so one can&apos;t do a portable get(&quot;spring-*.handlers&quot;).&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I&apos;d like to address your problem but I can&apos;t think of a way to do that w/o breaking existing functionality. To recap, multiple namespaces can exist (think of a library that provides a Spring namespace) and to find what&apos;s available one can only use get/findResources() - if that method is not implemented properly, multiple files are simply not supported. Which is not an option for us.&lt;br/&gt;
Extending the dev classloader to properly implement get/findResources() seems like a much nicer (not to mention) easier solution.&lt;/p&gt;

&lt;p&gt;P.S. Seems that the broken classloader method has been implemented post GWT 1.7 - I wonder why. Have you consider raising this problem with the GWT team?&lt;/p&gt;</comment>
                            <comment id="68635" author="ianso" created="Fri, 22 Jul 2011 04:25:27 +0000"  >&lt;p&gt;Hi Costin,&lt;/p&gt;

&lt;p&gt;Thanks for the short education &lt;img class=&quot;emoticon&quot; src=&quot;https://jira.spring.io/images/icons/emoticons/smile.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; You&apos;re right, it seems more of a GWT/classloader design problem than a Spring problem. I&apos;ll go take it up with them.&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;I&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="70325" author="mich" created="Sun, 11 Sep 2011 02:06:44 +0000"  >&lt;p&gt;I&apos;m currently struggling with this problem. However I&apos;m not using Gwt Dev mode nor embedded jetty but gwt-maven-plugin with standalone jetty.&lt;/p&gt;</comment>
                            <comment id="70326" author="mich" created="Sun, 11 Sep 2011 03:06:30 +0000"  >&lt;p&gt;Sorry, It was my mistake. Everything works under gwt-maven-plugin.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10000">
                    <name>Duplicate</name>
                                                                <inwardlinks description="is duplicated by">
                                        <issuelink>
            <issuekey id="38766">SPR-8531</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        5 years, 15 weeks, 4 days ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 15 Jul 2011 13:10:57 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>true</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>juergen.hoeller</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i00oon:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4044</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>