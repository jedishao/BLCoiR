<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 20:45:08 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-2286/SPR-2286.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-2286] Bad diagnostics if cannot set some properties (and wrapped in a standard JDK exception)</title>
                <link>https://jira.spring.io/browse/SPR-2286</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;Context cannot be initialized.&lt;/p&gt;

&lt;p&gt;Have stack trace in logs:&lt;/p&gt;

&lt;p&gt;===&lt;br/&gt;
java.lang.ExceptionInInitializerError&lt;br/&gt;
        at ru.yandex.market_bo.Main.main(Main.java:41)&lt;br/&gt;
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name &apos;marketBackOffice&apos; defined in URL &lt;span class=&quot;error&quot;&gt;&amp;#91;jar:file:/opt/home/nga/devel/market-svn/mbo/app/trunk/target/market-back-office.jar!/conf/applicationContext-mbo-servant.xml&amp;#93;&lt;/span&gt;: Error setting property values; nested exception is PropertyAccessExceptionsException (1 errors)&lt;br/&gt;
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:821)&lt;br/&gt;
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:592)&lt;br/&gt;
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:392)&lt;br/&gt;
        at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:240)&lt;br/&gt;
        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:132)&lt;br/&gt;
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:237)&lt;br/&gt;
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:153)&lt;br/&gt;
        at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:254)&lt;br/&gt;
        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:337)&lt;br/&gt;
        at org.springframework.context.support.ClassPathXmlApplicationContext.&amp;lt;init&amp;gt;(ClassPathXmlApplicationContext.java:92)&lt;br/&gt;
        at org.springframework.context.support.ClassPathXmlApplicationContext.&amp;lt;init&amp;gt;(ClassPathXmlApplicationContext.java:77)&lt;br/&gt;
        at org.springframework.context.support.ClassPathXmlApplicationContext.&amp;lt;init&amp;gt;(ClassPathXmlApplicationContext.java:68)&lt;br/&gt;
        at ru.yandex.market_bo.utils.spring.EvilGlueCode.&amp;lt;clinit&amp;gt;(EvilGlueCode.java:21)&lt;br/&gt;
        ... 1 more&lt;br/&gt;
Caused by: PropertyAccessExceptionsException (1 errors)&lt;br/&gt;
        at org.springframework.beans.AbstractPropertyAccessor.setPropertyValues(AbstractPropertyAccessor.java:85)&lt;br/&gt;
        at org.springframework.beans.AbstractPropertyAccessor.setPropertyValues(AbstractPropertyAccessor.java:57)&lt;br/&gt;
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:816)&lt;br/&gt;
        ... 13 more&lt;br/&gt;
===&lt;/p&gt;

&lt;p&gt;This stack trace is created with e.printStackTrace().&lt;/p&gt;

&lt;p&gt;So I can&apos;t find, why Spring cannot set property values, and even don&apos;t know what properties cannot be set.&lt;/p&gt;</description>
            <key id="14505">SPR-2286</key>
            <summary>Bad diagnostics if cannot set some properties (and wrapped in a standard JDK exception)</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://jira.spring.io/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="juergen.hoeller">Juergen Hoeller</assignee>
                                    <reporter username="yozh">Stepan Koltsov</reporter>
                        <labels>
                    </labels>
                <created>Wed, 12 Jul 2006 02:41:18 +0000</created>
                <updated>Tue, 19 Jun 2012 03:52:29 +0000</updated>
                            <resolved>Wed, 9 Aug 2006 03:09:02 +0000</resolved>
                                    <version>1.2.8</version>
                    <version>2.0 RC2</version>
                                    <fixVersion>2.0 RC3</fixVersion>
                    <fixVersion>1.2.9</fixVersion>
                                    <component>Core</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="18547" author="yozh" created="Wed, 12 Jul 2006 02:50:57 +0000"  >&lt;p&gt;The error was that SF could not convert value to required type.&lt;/p&gt;</comment>
                            <comment id="18617" author="robh" created="Mon, 17 Jul 2006 00:38:55 +0000"  >&lt;p&gt;Stepan,&lt;/p&gt;

&lt;p&gt;Can you send copies of the classes and configuration file that caused this error so we can improve the diagnostics.&lt;/p&gt;

&lt;p&gt;Rob&lt;/p&gt;</comment>
                            <comment id="18658" author="yozh" created="Wed, 19 Jul 2006 00:01:02 +0000"  >&lt;p&gt;I&apos;ve found when problem happens: when Spring exception is wrapped in any JDK exception. In my case exception was wrapped in JDK&apos;s ExceptionInInitializerError because context was initialized from static class initializer, like:&lt;/p&gt;

&lt;p&gt;===&lt;br/&gt;
class X {&lt;br/&gt;
    static &lt;/p&gt;
{
        context = new ClassPathXmlApplicationContext(...);
    }
&lt;p&gt;}&lt;br/&gt;
===&lt;/p&gt;

&lt;p&gt;The code is to represent this error is trivial:&lt;/p&gt;

&lt;p&gt;===&lt;br/&gt;
    static void something() {&lt;br/&gt;
        try &lt;/p&gt;
{
            new ClassPathXmlApplicationContext(&quot;classpath:applicationContext.xml&quot;);
        }
&lt;p&gt; catch (BeansException e) &lt;/p&gt;
{
            throw new RuntimeException(e);
        }
&lt;p&gt;    }&lt;/p&gt;

&lt;p&gt;    public static void main(String[] args) throws Exception {&lt;br/&gt;
        try &lt;/p&gt;
{
            something();
        }
&lt;p&gt; catch (Throwable e) &lt;/p&gt;
{
            e.printStackTrace();
        }
&lt;p&gt;    }&lt;br/&gt;
===&lt;/p&gt;

&lt;p&gt;with applicationContext.xml:&lt;/p&gt;

&lt;p&gt;===&lt;br/&gt;
    &amp;lt;bean id=&quot;object&quot; class=&quot;java.lang.Object&quot;/&amp;gt;&lt;/p&gt;

&lt;p&gt;    &amp;lt;bean class=&quot;org.springframework.jdbc.core.JdbcTemplate&quot;&amp;gt;&lt;br/&gt;
        &amp;lt;property name=&quot;dataSource&quot; ref=&quot;object&quot;/&amp;gt;&lt;br/&gt;
    &amp;lt;/bean&amp;gt;&lt;br/&gt;
===&lt;/p&gt;

&lt;p&gt;The problem happens because Throwable.printStackTrace() does not invoke printStackTrace() on getCause(). Look at Throwable.printStackTrace() (from JDK1.5):&lt;/p&gt;

&lt;p&gt;===&lt;br/&gt;
    public void printStackTrace(PrintStream s) {&lt;br/&gt;
        synchronized (s) &lt;/p&gt;
{
            s.println(this);
            StackTraceElement[] trace = getOurStackTrace();
            for (int i=0; i &amp;lt; trace.length; i++)
                s.println(&quot;\tat &quot; + trace[i]);

            Throwable ourCause = getCause();
            if (ourCause != null)
                ourCause.printStackTraceAsCause(s, trace);
        }
&lt;p&gt;    }&lt;br/&gt;
===&lt;/p&gt;

&lt;p&gt;So I don&apos;t know how Spring can print stack traces of all nested property access exeptions.&lt;/p&gt;

&lt;p&gt;Now PropertyAccessExceptionsException.getCause() should at least return first exception, if propertyAccessExceptions.length == 1, and maybe should return first exception even if there is more then one propertyAccessException.&lt;/p&gt;

&lt;p&gt;Maybe PropertyAccessExceptionsException.toString() should be adjusted.&lt;/p&gt;</comment>
                            <comment id="18960" author="juergen.hoeller" created="Wed, 9 Aug 2006 03:09:02 +0000"  >&lt;p&gt;I&apos;ve refined PropertyAccessExceptionsException to show nested details even when wrapped in a standard JDK exception. I&apos;ve opted for more extensive &quot;toString()&quot; output rather than overriding &quot;getCause()&quot;, since its more concise while still showing a summary of all nested PropertyAccessExceptions.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        10 years, 21 weeks, 1 day ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 17 Jul 2006 00:38:55 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>false</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i03a73:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>19194</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>