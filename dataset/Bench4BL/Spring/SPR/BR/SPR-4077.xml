<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 21:05:03 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-4077/SPR-4077.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-4077] PROPAGATION_REQUIRES_NEW fails on JBoss 4.2.1 when using Hibernate connection release mode &quot;on_close&quot;</title>
                <link>https://jira.spring.io/browse/SPR-4077</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;My Issue is same as of the BUG which was already disucssed and fixed in the following URL&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://opensource.atlassian.com/projects/spring/browse/SPR-1384&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://opensource.atlassian.com/projects/spring/browse/SPR-1384&lt;/a&gt;&lt;/p&gt;</description>
            <key id="18468">SPR-4077</key>
            <summary>PROPAGATION_REQUIRES_NEW fails on JBoss 4.2.1 when using Hibernate connection release mode &quot;on_close&quot;</summary>
                <type id="4" iconUrl="https://jira.spring.io/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="juergen.hoeller">Juergen Hoeller</assignee>
                                    <reporter username="muthukumaran_m">Muthukumaran Madialagan</reporter>
                        <labels>
                    </labels>
                <created>Fri, 9 Nov 2007 08:31:03 +0000</created>
                <updated>Tue, 19 Jun 2012 03:47:21 +0000</updated>
                            <resolved>Mon, 12 Nov 2007 09:14:32 +0000</resolved>
                                    <version>2.0.2</version>
                                    <fixVersion>2.5 final</fixVersion>
                                    <component>Transaction</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="27473" author="juergen.hoeller" created="Fri, 9 Nov 2007 20:19:13 +0000"  >&lt;p&gt;Could please provide details on the failure in your scenario: stacktrace etc?&lt;/p&gt;

&lt;p&gt;That previous bug was fixed, so we&apos;re not aware of any remaining issues on JBoss...&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="27539" author="muthukumaran_m" created="Mon, 12 Nov 2007 06:43:13 +0000"  >&lt;p&gt;In our scenario we are having&lt;/p&gt;

&lt;p&gt;1)Bean A and Bean B&lt;br/&gt;
2)The transaction attribute of Bean A is requires and the Transaction Attribute of Bean B is Requires New.&lt;br/&gt;
3) Bean A calls Bean B by passing the datasource as an input parameter.&lt;br/&gt;
4)When Bean A calls Bean B the current transaction of Bean A is suspended and new transaction is created. Then TransactionSyncronizationManager clears the transaction synchronization. While trying to initialise a new transaction the below exception is thrown.&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;JtaTransactionManager&amp;#93;&lt;/span&gt; Suspending current transaction, creating new transaction with name &lt;span class=&quot;error&quot;&gt;&amp;#91;com.priya...sequence.interfaces.ICustomMySequenceOrganizer.getSequenceNextVal&amp;#93;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;org.springframework.transaction.support.TransactionSynchronizationManager&amp;#93;&lt;/span&gt; Removed value &lt;span class=&quot;error&quot;&gt;&amp;#91;org.springframework.orm.hibernate3.SessionHolder@1d16efc&amp;#93;&lt;/span&gt; for key &lt;span class=&quot;error&quot;&gt;&amp;#91;org.hibernate.impl.SessionFactoryImpl@895684&amp;#93;&lt;/span&gt; from thread &lt;span class=&quot;error&quot;&gt;&amp;#91;http-localhost%2F10.3.89.177-8080-1&amp;#93;&lt;/span&gt;&lt;/p&gt;


&lt;p&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;org.springframework.transaction.support.TransactionSynchronizationManager&amp;#93;&lt;/span&gt; Clearing transaction synchronization&lt;/p&gt;

&lt;p&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;STDERR&amp;#93;&lt;/span&gt; java.lang.IllegalStateException: Trying to change transaction TransactionImple &amp;lt; ac, BasicAction: a0359b1:4e3:4734f5c7:fc status: ActionStatus.RUNNING &amp;gt; in enlist!&lt;/p&gt;

&lt;p&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;STDERR&amp;#93;&lt;/span&gt;        at org.jboss.resource.connectionmanager.TxConnectionManager$TxConnectionEventListener.enlist(TxConnectionManager.java:525)&lt;/p&gt;

&lt;p&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;STDERR&amp;#93;&lt;/span&gt;        at org.jboss.resource.connectionmanager.TxConnectionManager.transactionStarted(TxConnectionManager.java:328)&lt;/p&gt;

&lt;p&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;STDERR&amp;#93;&lt;/span&gt;        at org.jboss.resource.connectionmanager.CachedConnectionManager.userTransactionStarted(CachedConnectionManager.java:360)&lt;/p&gt;

&lt;p&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;STDERR&amp;#93;&lt;/span&gt;        at org.jboss.tm.usertx.client.ServerVMClientUserTransaction.begin(ServerVMClientUserTransaction.java:127)&lt;/p&gt;

&lt;p&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;STDERR&amp;#93;&lt;/span&gt;        at org.springframework.transaction.jta.JtaTransactionManager.doJtaBegin(JtaTransactionManager.java:724)&lt;/p&gt;

&lt;p&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;STDERR&amp;#93;&lt;/span&gt;        at org.springframework.transaction.jta.JtaTransactionManager.doBegin(JtaTransactionManager.java:681)&lt;/p&gt;

&lt;p&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;STDERR&amp;#93;&lt;/span&gt;        at org.springframework.transaction.support.AbstractPlatformTransactionManager.handleExistingTransaction(AbstractPlatformTransactionManager.java:396)&lt;/p&gt;

&lt;p&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;STDERR&amp;#93;&lt;/span&gt;        at org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:329)&lt;/p&gt;

&lt;p&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;STDERR&amp;#93;&lt;/span&gt;        at org.springframework.transaction.interceptor.TransactionAspectSupport.createTransactionIfNecessary(TransactionAspectSupport.java:262)&lt;/p&gt;

&lt;p&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;STDERR&amp;#93;&lt;/span&gt;        at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:101)&lt;/p&gt;

&lt;p&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;STDERR&amp;#93;&lt;/span&gt;        at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)&lt;/p&gt;

&lt;p&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;STDERR&amp;#93;&lt;/span&gt;        at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:204)&lt;/p&gt;

&lt;p&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;STDERR&amp;#93;&lt;/span&gt;        at $Proxy89.getSequenceNextVal(Unknown Source)&lt;/p&gt;</comment>
                            <comment id="27540" author="muthukumaran_m" created="Mon, 12 Nov 2007 06:46:37 +0000"  >&lt;p&gt;We tried setting the following two properties in the Spring Config file&lt;/p&gt;

&lt;p&gt;&amp;lt;property name=&quot;useTransactionAwareDataSource&quot; value=&quot;true&quot;/&amp;gt;&lt;/p&gt;

&lt;p&gt;&amp;lt;prop key=&quot;hibernate.connection.release_mode&quot;&amp;gt;after_statement&amp;lt;/prop&amp;gt;&lt;/p&gt;

&lt;p&gt;The issue is solved. But the performance is bit slow after setting these properties.&lt;/p&gt;

&lt;p&gt;Is this the only solution for this issue? Or do we have any fix versions that spring is going to release?.&lt;/p&gt;

&lt;p&gt;We are using Spring.jar 2.0.2&lt;/p&gt;</comment>
                            <comment id="27542" author="juergen.hoeller" created="Mon, 12 Nov 2007 08:20:13 +0000"  >&lt;p&gt;This is unfortunately a known problem, as outlined in &lt;a href=&quot;https://jira.spring.io/browse/SPR-1384&quot; title=&quot;IllegalStateException thrown by JBoss 4.0.3 when PROPAGATION_REQUIRES_NEW used during active transaction in MessageBean with BMT&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SPR-1384&quot;&gt;&lt;del&gt;SPR-1384&lt;/del&gt;&lt;/a&gt;: Hibernate in connection release mode &quot;on_close&quot; keeps hold on to a JDBC Connection for its entire lifetime, which causes a problem with suspending that Connection on JBoss (only on JBoss, actually - works fine on WebLogic and WebSphere, for example). The usual solution is to switch the connection release mode to &quot;after_statement&quot;, as you figured out.&lt;/p&gt;

&lt;p&gt;We could consider explicitly disconnecting the Session on suspend (and also after a transaction completed), similar to what HibernateTransactionManager does when used with Open Session n View. Up to now, this wasn&apos;t necessary - as long as connection release mode &quot;after_statement&quot; was used on JBoss. Explicitly calling &quot;disconnect()&quot; on the Session would essentially be an improvement that enables &quot;on_close&quot; to work even on JBoss.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="27544" author="juergen.hoeller" created="Mon, 12 Nov 2007 09:14:32 +0000"  >&lt;p&gt;I&apos;ve addressed this for Spring 2.5 final: Hibernate SpringSessionSynchronization explicitly disconnects on suspend/completion now, in order to make &quot;on_close&quot; work on JBoss.&lt;/p&gt;

&lt;p&gt;This will be available in the upcoming Spring 2.5 snapshot (&lt;a href=&quot;http://static.springframework.org/downloads/nightly/snapshot-download.php?project=SPR&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://static.springframework.org/downloads/nightly/snapshot-download.php?project=SPR&lt;/a&gt;). Please give it a try and let me know whether it works for you (with the default connection release mode &quot;on_close&quot;). Dropping Spring 2.5 final jars into a Spring 2.0.x based application should be straightforward. Just note that spring-webmvc.jar needs to be added explicitly now; it is not part of spring.jar anymore.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="27568" author="muthukumaran_m" created="Tue, 13 Nov 2007 02:03:05 +0000"  >&lt;p&gt;Thanks a lot for your suggestion it was very helpful.&lt;/p&gt;

&lt;p&gt;We tried with Spring2.5.jar final the issue got solved. &lt;/p&gt;

&lt;p&gt;But we have few questions on the same.&lt;/p&gt;

&lt;p&gt;1) We are having release targeted this weekend. So we cant go ahead using Spring 2.5 jar because it is not officially released. Can you please let us know the targeted release for the Spring 2.5 jar.&lt;/p&gt;

&lt;p&gt;2)What will be performance impact if we use the property after_statement. Because in our application after we use the property after_statement we find the performance to be bit slow when we land in create calls.&lt;/p&gt;

&lt;p&gt;For Example:&lt;/p&gt;

&lt;p&gt;We have 10 connections we do a create call the performance was good before using the after_statement property. After we use the property after_statement with the same 10 connections the performance is slow for the same scenario. Do we need to compromise on the performance if we introduce this property?&lt;/p&gt;

&lt;p&gt;3) You have fixed this issue in the Spring 2.5 jar can you please let us know is there any way we can do the same fix in the Spring 2.0.2.jar so that the issue might get solved.&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="27578" author="juergen.hoeller" created="Tue, 13 Nov 2007 05:32:34 +0000"  >&lt;p&gt;&quot;after_statement&quot; should actually work fine, provided that the underlying connection pool is efficient. This setting is what the Hibernate guys recommend, so I wonder about negative effects on JBoss (their &apos;own&apos; application server) there? This is also why we consider the &quot;on_close&quot; support to be an improvement rather than a bug fix...&lt;/p&gt;

&lt;p&gt;Still, there may be a performance impact. So I would recommend to upgrade to Spring 2.5 as soon as you can. You may of course deploy with &quot;after_statement&quot; for the initial phase of your application, even if performance is suffering a little bit...&lt;/p&gt;

&lt;p&gt;Spring 2.5 final will be released on Nov 19th - in less than a week. You can make sure that the 2.5 upgrade will be smooth by testing your entire application against the latest 2.5 snapshot (as you already started); then you&apos;ll know that 2.5 final will be a drop-in upgrade.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="27647" author="muthukumaran_m" created="Thu, 15 Nov 2007 01:27:53 +0000"  >&lt;p&gt;We have postponed our release to 21st of November hoping that the Spring 2.5 final will be released on 19th of November.&lt;/p&gt;

&lt;p&gt;Till 19th can we test our application with the upcoming Spring 2.5 snapshot provided by you in the link (&lt;a href=&quot;http://static.springframework.org/downloads/nightly/snapshot-download.php?project=SPR&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://static.springframework.org/downloads/nightly/snapshot-download.php?project=SPR&lt;/a&gt;). ?&lt;/p&gt;

&lt;p&gt;Will there be any difference between the Spring 2.5 snap shot provided and the final release on November 19th?&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="27649" author="juergen.hoeller" created="Thu, 15 Nov 2007 01:53:41 +0000"  >&lt;p&gt;Yes, the nightly snapshots that we publish once a day reflect the most current 2.5 code. Until the 19th, we&apos;ll only be doing bug fixes and doc enhancements, so no major changes to be expected.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10000">
                    <name>Duplicate</name>
                                                                <inwardlinks description="is duplicated by">
                                        <issuelink>
            <issuekey id="18565">SPR-4118</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10020">
                    <name>Related</name>
                                            <outwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12553">SPR-1384</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        9 years, 7 weeks ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 9 Nov 2007 20:19:13 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>false</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i04t1z:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>28081</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>