Thread safety issue in JobRegistryBackgroundJobRunner.
I noticed that the errors variable in JobRegistryBackgroundJobRunner is modified by one thread and accessed by another without synchronization. 
As the ArrayList isn't thread safe, I think this might cause visibility issues in the code that checks if errors has occurred during initialization of the application context. 
As with all visibility issues it is hard to prove this, but I believe that at least in theory this may be a problem.
A way to fix this would be by replacing
private static List.Exception errors = new ArrayList&lt;Exception&gt;();
with
private static List&lt;Exception&gt; errors = Collections.synchronizedCollection(new ArrayList&lt;Exception&gt;());
Not sure if making the list volatile will work...as I'm not all that confident on what the implications are of making a collection variable volatile. 
Don't think there will much of a performance hit this particular case anyway.