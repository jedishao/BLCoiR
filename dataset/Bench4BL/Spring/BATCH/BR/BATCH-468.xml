<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 11:50:17 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/BATCH-468/BATCH-468.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[BATCH-468] ExitStatusExceptionClassifier, ExitCodeMapper and simple versions thereof (and others?) incorrectly moved into step.item package</title>
                <link>https://jira.spring.io/browse/BATCH-468</link>
                <project id="10090" key="BATCH">Spring Batch</project>
                    <description>&lt;p&gt;Interfaces mentioned in summary and their implementations should be under the step package - they are just as relevant to TaskletSteps or ChunkedSteps as they are to ItemOrientedSteps&lt;/p&gt;

&lt;p&gt;I&apos;m also confused as to what the StepExecutionSynchronizer, et al. and StepInterruptionPolicy et al. are doing there. These seem like general step concerns, not item-related step concerns.&lt;/p&gt;</description>
                <environment></environment>
        <key id="21129">BATCH-468</key>
            <summary>ExitStatusExceptionClassifier, ExitCodeMapper and simple versions thereof (and others?) incorrectly moved into step.item package</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://jira.spring.io/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="david_syer">Dave Syer</assignee>
                                    <reporter username="douglas.c.kaminsky">Douglas C. Kaminsky</reporter>
                        <labels>
                    </labels>
                <created>Fri, 14 Mar 2008 05:54:09 +0000</created>
                <updated>Thu, 7 Aug 2008 02:06:58 +0000</updated>
                            <resolved>Fri, 14 Mar 2008 20:47:59 +0000</resolved>
                                    <version>1.0.0.rc1</version>
                                    <fixVersion>1.0.0.rc1</fixVersion>
                                    <component>Core</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                    <timeoriginalestimate seconds="1800">0.5h</timeoriginalestimate>
                            <timeestimate seconds="1800">0.5h</timeestimate>
                                        <comments>
                            <comment id="33319" author="douglas.c.kaminsky" created="Fri, 14 Mar 2008 05:55:10 +0000"  >&lt;p&gt;Further, why is the ItemOriented step under step.item but the TaskletStep is not under step.tasklet?&lt;/p&gt;</comment>
                            <comment id="33321" author="david_syer" created="Fri, 14 Mar 2008 06:08:20 +0000"  >&lt;p&gt;&amp;gt; Further, why is the ItemOriented step under step.item but the TaskletStep is not under step.tasklet?&lt;/p&gt;

&lt;p&gt;It is.  It wasn&apos;t for about an hour this morning.&lt;/p&gt;</comment>
                            <comment id="33322" author="david_syer" created="Fri, 14 Mar 2008 06:14:54 +0000"  >&lt;p&gt;For the rest, there are some tough choices.&lt;/p&gt;

&lt;p&gt;I think I agree that ExitStatusExceptionClassifier and StepInterruptionPolicy are rather general (although the former, as you pointed out elsewhere, is really redundant if the listeners can be taught to behave), and could simply be upgraded.  But they are not used in the TaskletStep - do you think they should be?&lt;/p&gt;

&lt;p&gt;StepExecutionSynchronizer is general but was really intended to be an internal implementation detail of the ItemOrientedStep.  No-one should need to rely on it being in any particular package.&lt;/p&gt;

&lt;p&gt;ExitCodeMapper was never in either of these packages. Maybe you are confused, or maybe you think it should be (I would disagree)?&lt;/p&gt;</comment>
                            <comment id="33331" author="douglas.c.kaminsky" created="Fri, 14 Mar 2008 09:56:09 +0000"  >&lt;p&gt;Well, the ExitStatusExceptionClassifier is what a &quot;runner&quot; or &quot;launcher&quot; might use to translate an exception into an exit code - this could be upgraded, which makes it a non-issue, but I think it definitely does not belong under the &quot;item&quot; heading.&lt;/p&gt;

&lt;p&gt;As for step interruption and synchronization, there&apos;s no reason to put general behaviors that might be useful to custom tasklet developers in a subpackage that they otherwise wouldn&apos;t depend on. As a general rule, my personal preference is to put things in as high level a package as possible - I shouldn&apos;t have to delve up a level (from tasklet to step) and down a level (from step to item) to find a generally useful abstraction.&lt;/p&gt;

&lt;p&gt;Bear in mind that a custom tasklet does not preclude item-oriented participants and behaviors. For instance, StepListener on a TaskletStep might want to do something with a JobInterruptedException as opposed to another, so StepInterruptionPolicy would be a useful abstraction. A custom tasklet might paralleliize or perform some sort of non-blocking IO operation that permits other code to execute, so having a Synchronization object seems like a useful thing.&lt;/p&gt;

&lt;p&gt;Forget what I said about ExitCodeMapper &amp;#8211; I was clearly distracted. &lt;img class=&quot;emoticon&quot; src=&quot;https://jira.spring.io/images/icons/emoticons/smile.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="33341" author="david_syer" created="Fri, 14 Mar 2008 20:47:59 +0000"  >&lt;p&gt;I moved anything that could potentially be re-used by other implementations out to the parent package or a sibling package for skip policy.  In the case of StepExecutionSynchronizationFactory there is no injection hook, so there is no way to configure existing implementations - it should stay that way (IMO).&lt;/p&gt;

&lt;p&gt;The StepInterruptionPolicy had the wrong interface, so this was quite a good exercise in the end because I wouldn&apos;t have wanted to be stuck with it as it was.  Thanks.&lt;/p&gt;</comment>
                            <comment id="38555" author="david_syer" created="Thu, 7 Aug 2008 02:06:58 +0000"  >&lt;p&gt;Assume closed as resolved and released&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 14 Mar 2008 06:08:20 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10280" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>12014</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i056xr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>30330</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10381" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Ranking</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>27336</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>