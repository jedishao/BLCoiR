<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 11:24:10 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/BATCH-833/BATCH-833.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[BATCH-833] TransactionAttributes swallows Exceptions</title>
                <link>https://jira.spring.io/browse/BATCH-833</link>
                <project id="10090" key="BATCH">Spring Batch</project>
                    <description>&lt;p&gt;If the TransactionAttributes determines that a Transaction shouldn&apos;t be rolled back, the exception is effectively swallowed:&lt;/p&gt;

&lt;p&gt;try &lt;/p&gt;
{
						exitStatus = tasklet.execute(contribution, attributes);
					}
&lt;p&gt;					catch (Error e) {&lt;br/&gt;
						if (transactionAttribute.rollbackOn(e)) &lt;/p&gt;
{
							throw e;
						}&lt;br/&gt;
						else {
							logger.error(&quot;Ecountered error that should not cause rollback: &quot;, e);
						}&lt;br/&gt;
					}&lt;br/&gt;
					catch (Exception e) {&lt;br/&gt;
						if (transactionAttribute.rollbackOn(e)) {							throw e;						}
&lt;p&gt;						else &lt;/p&gt;
{
							logger.error(&quot;Ecountered error that should not cause rollback: &quot;, e);
						}
&lt;p&gt;					}&lt;/p&gt;

&lt;p&gt;So, for example, if the TransactionAttributes are set to not rollback a SkipLimitExceededException, it won&apos;t be rolledback, effectively preventing it from going up to the StepOperations and causing the step to fail.  Of course, someone shouldn&apos;t think to do that, but it&apos;s just one example.  If someone sets any exception to be on the fatal list, but messes up and puts an exception in the attribute list to cause rollback, the step won&apos;t fail.&lt;/p&gt;

&lt;p&gt;I propose that the rollback decision on transaction attribute be used solely to determine whether the transaction is committing, but that the exception should still be propagated up to the StepOperations to determine whether or not it should cause failure.&lt;/p&gt;</description>
                <environment></environment>
        <key id="23951">BATCH-833</key>
            <summary>TransactionAttributes swallows Exceptions</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="2" iconUrl="https://jira.spring.io/images/icons/priorities/critical.png">Critical</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="david_syer">Dave Syer</assignee>
                                    <reporter username="lucas.l.ward">Lucas Ward</reporter>
                        <labels>
                    </labels>
                <created>Thu, 11 Sep 2008 11:06:10 +0000</created>
                <updated>Fri, 24 Oct 2008 08:31:52 +0000</updated>
                            <resolved>Sun, 5 Oct 2008 19:24:39 +0000</resolved>
                                    <version>1.1.2</version>
                    <version>2.0.0.M1</version>
                                    <fixVersion>1.1.3</fixVersion>
                    <fixVersion>2.0.0.M2</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                    <timeoriginalestimate seconds="14400">0.5d</timeoriginalestimate>
                            <timeestimate seconds="7200">0.25d</timeestimate>
                            <timespent seconds="7200">0.25d</timespent>
                                <comments>
                            <comment id="39654" author="lucas.l.ward" created="Wed, 17 Sep 2008 08:38:45 +0000"  >&lt;p&gt;I&apos;ve added a fix in 1.1, but not in trunk yet.  It&apos;s a bit odd, and it still seems somewhat weird that the TransactionAttribute is surrounding now just doExecute, but also flush() and update() as well.  Either way, in 1.1 if the TransactionAttribute determines that the exception shouldn&apos;t cause rollback, the transaction will still commit, and the repository will be updated, after which the exception will be thrown, allowing the step operations to make a decision as to whether or not the exception should cause failure or not, which makes much more sense, since transaction attribute shouldn&apos;t be making this determination and swallowing the exception.  There could still be some masking issues if doExecute and flush both have exceptions, but this is a problem anyway and one I can&apos;t see a way around.&lt;/p&gt;</comment>
                            <comment id="39704" author="lucas.l.ward" created="Thu, 18 Sep 2008 15:41:06 +0000"  >&lt;p&gt;Per our discussion on the phone today, I removed the TransactionAttributes around flush and update, and the call to chunkOperations, and moved it to surround the call to ItemHandler.&lt;/p&gt;</comment>
                            <comment id="40043" author="lucas.l.ward" created="Wed, 1 Oct 2008 11:16:49 +0000"  >&lt;p&gt;I have created another issue for some of the configuration issues: &lt;a href=&quot;https://jira.spring.io/browse/BATCH-859&quot; title=&quot;Configuration of exception lists should be more consistent&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BATCH-859&quot;&gt;&lt;del&gt;BATCH-859&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For this issue, the consensus is to move the rollback check into the chunk, to prevent partial chunks, and resolve.&lt;/p&gt;</comment>
                            <comment id="40082" author="robert.kasanicky" created="Thu, 2 Oct 2008 22:59:53 +0000"  >&lt;p&gt;It turns out there already is rollback check in the chunk (retry template) so the rollback check in step is redundant assuming step was configured by the factory bean. Then all we need to do is remove the highlighted try/catch block. Or am I missing something?&lt;/p&gt;</comment>
                            <comment id="40119" author="robert.kasanicky" created="Sun, 5 Oct 2008 19:24:39 +0000"  >&lt;p&gt;removed redundant exception-swallowing catch blocks (twice in 1.1.x)&lt;/p&gt;</comment>
                            <comment id="40120" author="robert.kasanicky" created="Sun, 5 Oct 2008 19:24:59 +0000"  >&lt;p&gt;reassigned for review&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="14683" name="mylyn-context.zip" size="27213" author="lucas.l.ward" created="Wed, 17 Sep 2008 08:38:46 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 2 Oct 2008 22:59:53 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10280" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>11799</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i03xnb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>22993</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10381" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Ranking</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>19458</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>