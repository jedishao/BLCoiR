<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 11:51:41 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/BATCH-261/BATCH-261.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[BATCH-261] FixedLengthTokenizer by default maps zero padded numeric fields as octal.</title>
                <link>https://jira.spring.io/browse/BATCH-261</link>
                <project id="10090" key="BATCH">Spring Batch</project>
                    <description>&lt;p&gt;A common formatting for numeric fields in simple flat batch input files is to pad the numeric data with leading zeros. e.g. the value 9 in a field of width 7 would be represented &quot;0000009&quot;.  Using just the DefaultFlatFileInputSource and the FixedLengthTokenizer from Spring batch 1.0-m3 to parse the input record causes the following error, as, by default, the conversion is done using Long.decode and this assumes that leading zeros imply octal. This issue was raised with Lucas Ward at the  Spring Experience  2007 who said he considered this effect on batch input data  to be a bug, and requested that we raise this issue on the JIRA.&lt;/p&gt;

&lt;p&gt;Exception in thread &quot;main&quot; org.springframework.batch.io.exception.FlatFileParsingException: Parsing error&lt;br/&gt;
	at org.springframework.batch.io.file.support.SimpleFlatFileInputSource.read(SimpleFlatFileInputSource.java:198)&lt;/p&gt;

&lt;p&gt;&amp;lt;snip&amp;gt;&lt;/p&gt;

&lt;p&gt;Caused by: org.springframework.beans.PropertyBatchUpdateException; nested PropertyAccessExceptions (1) are:&lt;br/&gt;
PropertyAccessException 1: org.springframework.beans.TypeMismatchException: Failed to convert property value of type &lt;span class=&quot;error&quot;&gt;&amp;#91;java.lang.String&amp;#93;&lt;/span&gt; to required type &lt;span class=&quot;error&quot;&gt;&amp;#91;java.lang.Long&amp;#93;&lt;/span&gt; for property &apos;recordSequenceNumber&apos;; nested exception is java.lang.NumberFormatException: For input string: &quot;0000009&quot;&lt;/p&gt;

&lt;p&gt;Here is a cut down version of the relevant beans in the XML config. A simple POJO was created to receive the data with the type of RecordSequenceNumber being Long.&lt;/p&gt;

&lt;p&gt;	&amp;lt;bean id=&quot;InterchangeTokenizer&quot;&lt;br/&gt;
		class=&quot;org.springframework.batch.io.file.support.transform.FixedLengthTokenizer&quot;&amp;gt;&lt;br/&gt;
		&amp;lt;property name=&quot;names&quot;&lt;br/&gt;
			value=&quot;RecordSequenceNumber&quot; /&amp;gt;&lt;br/&gt;
		&amp;lt;property name=&quot;columns&quot;&lt;br/&gt;
			value=&quot;4-11&quot; /&amp;gt;&lt;br/&gt;
	&amp;lt;/bean&amp;gt;&lt;/p&gt;

&lt;p&gt;	&amp;lt;bean id=&quot;inputSource&quot;&lt;br/&gt;
		class=&quot;org.springframework.batch.io.file.support.DefaultFlatFileInputSource&quot;&amp;gt;&lt;br/&gt;
		&amp;lt;property name=&quot;resource&quot; value=&quot;file:input.txt&quot; /&amp;gt;&lt;br/&gt;
		&amp;lt;property name=&quot;fieldSetMapper&quot; ref=&quot;InterchangeMapper&quot; /&amp;gt;&lt;br/&gt;
		&amp;lt;property name=&quot;tokenizer&quot; ref=&quot;InterchangeTokenizer&quot; /&amp;gt;&lt;br/&gt;
	&amp;lt;/bean&amp;gt;&lt;/p&gt;

&lt;p&gt;	&amp;lt;bean id=&quot;InterchangeMapper&quot;&lt;br/&gt;
		class=&quot;org.springframework.batch.io.file.support.mapping.BeanWrapperFieldSetMapper&quot;&amp;gt;&lt;br/&gt;
		&amp;lt;property name=&quot;targetType&quot;&lt;br/&gt;
			value=&quot;com.aciworldwide.backoffice.interchange.InterchangeIncomingTransaction&quot; /&amp;gt;&lt;br/&gt;
	&amp;lt;/bean&amp;gt;&lt;/p&gt;

&lt;p&gt;It would be better if the default for processing this type of field was to assume BASE-10, or, perhaps, alternatively if there was a way of specifiying the numeric base of the fields on the tokenizer.&lt;/p&gt;</description>
                <environment></environment>
        <key id="18932">BATCH-261</key>
            <summary>FixedLengthTokenizer by default maps zero padded numeric fields as octal.</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="david_syer">Dave Syer</assignee>
                                    <reporter username="aitkend">Dominic Aitken</reporter>
                        <labels>
                    </labels>
                <created>Tue, 18 Dec 2007 21:35:24 +0000</created>
                <updated>Thu, 7 Aug 2008 02:06:42 +0000</updated>
                            <resolved>Wed, 19 Dec 2007 07:19:22 +0000</resolved>
                                    <version>1.0-m3</version>
                    <version>1.0.0.m4</version>
                                    <fixVersion>1.0.0.m4</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                    <timeoriginalestimate seconds="3600">1h</timeoriginalestimate>
                            <timeestimate seconds="3600">1h</timeestimate>
                                        <comments>
                            <comment id="28573" author="david_syer" created="Wed, 19 Dec 2007 00:41:40 +0000"  >&lt;p&gt;Actually this is nothing to do with the tokenizer or the input source - it&apos;s the BeanWrapperImpl from Spring Core which is used in the BeanWrapperFieldSetMapper.  When &lt;a href=&quot;https://jira.spring.io/browse/BATCH-154&quot; title=&quot;Re-implement BeanWrapperFieldSetMapper using a DataBinder&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BATCH-154&quot;&gt;&lt;del&gt;BATCH-154&lt;/del&gt;&lt;/a&gt; is fixed you can register a custom PropertyEditor with the BeanWrapperFieldSetMapper.&lt;/p&gt;</comment>
                            <comment id="28575" author="lucas.l.ward" created="Wed, 19 Dec 2007 01:24:20 +0000"  >&lt;p&gt;Dominic, &lt;/p&gt;

&lt;p&gt;I added an extra test-case to FieldSetTests, to ensure there were no issues parsing padded input.  All tests passed.  As Dave said, the BeanWrapperFieldSetMapper isn&apos;t converting the property correctly.&lt;/p&gt;

&lt;p&gt;As a workaround, you can map FieldSets by hand until &lt;a href=&quot;https://jira.spring.io/browse/BATCH-154&quot; title=&quot;Re-implement BeanWrapperFieldSetMapper using a DataBinder&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BATCH-154&quot;&gt;&lt;del&gt;BATCH-154&lt;/del&gt;&lt;/a&gt; is fixed.&lt;/p&gt;</comment>
                            <comment id="28588" author="david_syer" created="Wed, 19 Dec 2007 07:19:22 +0000"  >&lt;p&gt;See &lt;a href=&quot;https://jira.spring.io/browse/BATCH-154&quot; title=&quot;Re-implement BeanWrapperFieldSetMapper using a DataBinder&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BATCH-154&quot;&gt;&lt;del&gt;BATCH-154&lt;/del&gt;&lt;/a&gt; for resolution.  Since the default behaviour in Core Spring is to follow Long.decode() we don&apos;t change that behaviour, but you can configure a custom PropertyEditor in the BeanWrapperFieldSetMapper (see BeanWrapperFieldSetMapperTests for example).&lt;/p&gt;</comment>
                            <comment id="37013" author="david_syer" created="Tue, 24 Jun 2008 00:17:56 +0000"  >&lt;p&gt;N.B. This appears to be fixed out of the box in Spring 2.5.5.&lt;/p&gt;</comment>
                            <comment id="38397" author="david_syer" created="Thu, 7 Aug 2008 02:06:42 +0000"  >&lt;p&gt;Assume closed as resolved and released&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10011">
                    <name>Depends</name>
                                            <outwardlinks description="depends on">
                                        <issuelink>
            <issuekey id="18120">BATCH-154</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 19 Dec 2007 00:41:40 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10280" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>12163</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i057hb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>30418</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10381" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Ranking</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>27424</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>