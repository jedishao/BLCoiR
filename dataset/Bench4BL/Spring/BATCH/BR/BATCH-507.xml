<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 12:30:30 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/BATCH-507/BATCH-507.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[BATCH-507] FlatFileItemWriter OutputSource not initialised on FlatFileItemReader.open()</title>
                <link>https://jira.spring.io/browse/BATCH-507</link>
                <project id="10090" key="BATCH">Spring Batch</project>
                    <description>&lt;p&gt;FlatFileItemWriter.OutputSource contains a number of member variables that are only initialised via the FlatFileItemWriter.set methods - for example setShouldDeleteIfExists.&lt;/p&gt;

&lt;p&gt;If a writer is closed and then re-opened (ie same FlatFileItemWriter object is reused in same vm), a new OutputSource object is created, but it is not reinitialised so these attributes are defaulted - eg shouldDeleteIfExists defaults to true.&lt;/p&gt;

&lt;p&gt;Apologies if this is a product of the way I am using the FlatFileItemWriter.  I am new to Spring and SpringBatch and don&apos;t properly understand the lifecycle of the beans. I might be misusing the FlatFileItemWriter - perhaps it should not be possible to close and then re-open one of these?&lt;/p&gt;

&lt;p&gt;I have been using code below based on one of the sample jobs which seems to reuse the same writer on the second run of the jobs. My aim was to reproduce a second potential bug, whereby FlatFileItemWriter won&apos;t restart if it already exists but  no record of it exists in StepExecutionContext (eg if first run of job failed before this step commits for first time), however this bug is preventing me from doing this  - I am dependant on shouldDeleteIfExists being false, however I am finding that it is false on first run (set via my job.xml), but true on second run.&lt;/p&gt;

&lt;p&gt;public class FlatFileItemWriterRestartTests extends AbstractBatchLauncherTests {&lt;/p&gt;

&lt;p&gt;    public void testLaunchJob() throws Exception {&lt;/p&gt;

&lt;p&gt;        final JobParameters jobParameters = new JobParameters();&lt;br/&gt;
        logger.info(&quot;Starting test&quot;);&lt;/p&gt;

&lt;p&gt;        JobExecution jobExecution = null;&lt;br/&gt;
        try &lt;/p&gt;
{
            jobExecution = launcher.run(getJob(), jobParameters);
        }
&lt;p&gt;        catch (InfrastructureException expected) &lt;/p&gt;
{
            logger.info(&quot;Caught Exception&quot;);
            logger.info(expected);
            assertTrue(&quot;Not planned exception: &quot;+expected.getMessage(), expected.getMessage().toLowerCase().indexOf(&quot;planned&quot;)&amp;gt;=0);
        }

&lt;p&gt;        // At this point existing FlatFileItemWriter is reused, &lt;br/&gt;
        // but new OutputState  &lt;br/&gt;
        // is created, with default shouldDeleteIfExists=true &lt;br/&gt;
        jobExecution = launcher.run(getJob(), jobParameters); &lt;/p&gt;

&lt;p&gt;        assertEquals(BatchStatus.COMPLETED, jobExecution.getStatus());&lt;br/&gt;
        logger.info(&quot;Completed&quot;);&lt;br/&gt;
    }&lt;br/&gt;
}&lt;/p&gt;

&lt;p&gt;For reference I mentioned this on:&lt;br/&gt;
&lt;a href=&quot;http://forum.springframework.org/showthread.php?t=51190&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://forum.springframework.org/showthread.php?t=51190&lt;/a&gt;&lt;/p&gt;</description>
                <environment></environment>
        <key id="21294">BATCH-507</key>
            <summary>FlatFileItemWriter OutputSource not initialised on FlatFileItemReader.open()</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://jira.spring.io/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="david_syer">Dave Syer</assignee>
                                    <reporter username="nigel.d.watson">Nigel Watson</reporter>
                        <labels>
                    </labels>
                <created>Tue, 25 Mar 2008 01:11:39 +0000</created>
                <updated>Thu, 7 Aug 2008 02:07:02 +0000</updated>
                            <resolved>Tue, 25 Mar 2008 02:40:59 +0000</resolved>
                                    <version>1.0.0.rc1</version>
                                    <fixVersion>1.0.0</fixVersion>
                                    <component>Infrastructure</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                    <timeoriginalestimate seconds="3600">1h</timeoriginalestimate>
                            <timeestimate seconds="3600">1h</timeestimate>
                                        <comments>
                            <comment id="33865" author="robert.kasanicky" created="Tue, 25 Mar 2008 01:31:42 +0000"  >&lt;p&gt;Shouldn&apos;t we remove the inner OutputState class altogether? I think it is an old heritage from trying to make writers thread-safe and the implementation is likely to be more comprehensible without it.&lt;/p&gt;</comment>
                            <comment id="33866" author="david_syer" created="Tue, 25 Mar 2008 01:43:52 +0000"  >&lt;p&gt;There were indeed 3 setters (encoding, bufferSize and deletIfExists) that should have been properties of the FFIW itself, not passed on to the transient output state.  I fixed that, and also changed the name of the boolean property to be more conventional (not include the verb). &lt;/p&gt;

&lt;p&gt;Now what was the other problem?  What did you mean by &quot;no record of it exists in StepExecutionContext&quot;?&lt;/p&gt;</comment>
                            <comment id="33867" author="david_syer" created="Tue, 25 Mar 2008 02:40:59 +0000"  >&lt;p&gt;I&apos;m going to resolve this one.  Please open another if there is a problem with a failure on the first chunk.&lt;/p&gt;</comment>
                            <comment id="38587" author="david_syer" created="Thu, 7 Aug 2008 02:07:02 +0000"  >&lt;p&gt;Assume closed as resolved and released&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 25 Mar 2008 01:31:42 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10280" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>11987</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i056vb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>30319</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10381" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Ranking</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>27325</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>