<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 11:18:27 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/BATCH-1059/BATCH-1059.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[BATCH-1059] BATCH_JOB_INSTANCE.JOB_KEY ignores Date milliseconds</title>
                <link>https://jira.spring.io/browse/BATCH-1059</link>
                <project id="10090" key="BATCH">Spring Batch</project>
                    <description>&lt;p&gt;When a Date is used as a Job Parameter it is stored correctly (including milliseconds) in BATCH_JOB_PARAMS but the JOB_KEY in BATCH_JOB_INSTANCE does not include milliseconds when generating the key. The problem is in JdbcJobInstanceDao.createJobKey, it just blindly toString&apos;s all the parameters and Date&apos;s toString hides some data.&lt;/p&gt;

&lt;p&gt;Instead of blindly calling toString on all parameters a better approach may be to use type-specific String formatting, this would also be slightly more efficient as it avoids adding all parameters to a single Map then iterating that and removes an extra string concatenation operation.&lt;br/&gt;
    private String createJobKey(JobParameters jobParameters) {&lt;br/&gt;
        StringBuffer stringBuffer = new StringBuffer();&lt;/p&gt;

&lt;p&gt;        final Map stringParameters = jobParameters.getStringParameters();&lt;br/&gt;
        for (Iterator it = stringParameters.entrySet().iterator(); it.hasNext()&lt;img class=&quot;emoticon&quot; src=&quot;https://jira.spring.io/images/icons/emoticons/wink.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; &lt;/p&gt;
{
            Entry entry = (Entry) it.next();
            stringBuffer.append(entry.getKey());
            stringBuffer.append(&quot;=&quot;);
            
            stringBuffer.append(entry.getValue());
            stringBuffer.append(&quot;;&quot;);
        }&lt;br/&gt;
        &lt;br/&gt;
        final Map longParameters = jobParameters.getLongParameters();&lt;br/&gt;
        for (Iterator it = longParameters.entrySet().iterator(); it.hasNext()&lt;img class=&quot;emoticon&quot; src=&quot;https://jira.spring.io/images/icons/emoticons/wink.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; {            Entry entry = (Entry) it.next();            stringBuffer.append(entry.getKey());            stringBuffer.append(&quot;=&quot;);                        stringBuffer.append(entry.getValue());            stringBuffer.append(&quot;;&quot;);        }

&lt;p&gt;        final Map doubleParameters = jobParameters.getDoubleParameters();&lt;br/&gt;
        for (Iterator it = doubleParameters.entrySet().iterator(); it.hasNext()&lt;img class=&quot;emoticon&quot; src=&quot;https://jira.spring.io/images/icons/emoticons/wink.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; &lt;/p&gt;
{
            Entry entry = (Entry) it.next();
            stringBuffer.append(entry.getKey());
            stringBuffer.append(&quot;=&quot;);
            
            stringBuffer.append(entry.getValue());
            stringBuffer.append(&quot;;&quot;);
        }

&lt;p&gt;        final Map dateParameters = jobParameters.getDateParameters();&lt;br/&gt;
        for (Iterator it = dateParameters.entrySet().iterator(); it.hasNext()&lt;img class=&quot;emoticon&quot; src=&quot;https://jira.spring.io/images/icons/emoticons/wink.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; {&lt;br/&gt;
            Entry entry = (Entry) it.next();&lt;br/&gt;
            stringBuffer.append(entry.getKey());&lt;br/&gt;
            stringBuffer.append(&quot;=&quot;);&lt;/p&gt;

&lt;p&gt;            final Date date = (Date)entry.getValue();&lt;br/&gt;
            final String formattedDate;&lt;br/&gt;
            synchronized (DATE_PARAMETER_FORMAT) &lt;/p&gt;
{
                //Logic cloned from java.util.Date
                DATE_PARAMETER_FORMAT.setTimeZone(TimeZone.getDefault());
                formattedDate = DATE_PARAMETER_FORMAT.format(date);
            }
&lt;p&gt;            stringBuffer.append(formattedDate);&lt;br/&gt;
            stringBuffer.append(&quot;;&quot;);&lt;br/&gt;
        }&lt;/p&gt;

&lt;p&gt;        return stringBuffer.toString();&lt;br/&gt;
    }&lt;/p&gt;</description>
                <environment></environment>
        <key id="25539">BATCH-1059</key>
            <summary>BATCH_JOB_INSTANCE.JOB_KEY ignores Date milliseconds</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://jira.spring.io/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="dhgarrette">Dan Garrette</assignee>
                                    <reporter username="edalquist">Eric Dalquist</reporter>
                        <labels>
                    </labels>
                <created>Tue, 3 Feb 2009 02:53:21 +0000</created>
                <updated>Tue, 3 Feb 2009 19:12:15 +0000</updated>
                            <resolved>Tue, 3 Feb 2009 19:12:15 +0000</resolved>
                                    <version>1.1.4</version>
                                    <fixVersion>2.0.0.RC1</fixVersion>
                                    <component>Core</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                    <timeoriginalestimate seconds="1800">0.5h</timeoriginalestimate>
                            <timeestimate seconds="1800">0.5h</timeestimate>
                                        <comments>
                            <comment id="42388" author="edalquist" created="Tue, 3 Feb 2009 02:55:15 +0000"  >&lt;p&gt;As a work around I have done the following in the code that builds the JobParameters:&lt;/p&gt;

&lt;p&gt;            parametersBuilder.addDate(JobDateStore.STORED_DATE, lastEvent);&lt;/p&gt;

&lt;p&gt;            //Also add date as a String to include 100% of the data&lt;br/&gt;
            final String formattedDate;&lt;br/&gt;
            synchronized (DATE_PARAMETER_FORMAT) &lt;/p&gt;
{
                //Logic cloned from java.util.Date
                DATE_PARAMETER_FORMAT.setTimeZone(TimeZone.getDefault());
                formattedDate = DATE_PARAMETER_FORMAT.format(lastEvent);
            }
&lt;p&gt;            parametersBuilder.addString(JobDateStore.STORED_DATE, formattedDate);&lt;/p&gt;</comment>
                            <comment id="42389" author="david_syer" created="Tue, 3 Feb 2009 04:46:10 +0000"  >&lt;p&gt;I&apos;m not sure we can fix this in 1.1.x since it will make the existing instance data incompatible with the Daos.  In 2.0 the schema is different enough that people will migrate to an empty database when moving from 1.1.x, so we can fix it there.&lt;/p&gt;</comment>
                            <comment id="42390" author="edalquist" created="Tue, 3 Feb 2009 05:10:17 +0000"  >&lt;p&gt;That is fine, the work around works for us to avoid the issue in 1.1.x&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 3 Feb 2009 04:46:10 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10280" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>11610</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i03wxb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>22876</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10381" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Ranking</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>19342</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>