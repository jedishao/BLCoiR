<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 12:07:04 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/BATCH-532/BATCH-532.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[BATCH-532] StepExecutionListener can influence exit status but not status of step execution</title>
                <link>https://jira.spring.io/browse/BATCH-532</link>
                <project id="10090" key="BATCH">Spring Batch</project>
                    <description>&lt;p&gt;StepExecutionListener can influence exit status but not status of step execution.  The exit status can be downgraded from COMPLETE to FAILED by returning FAILED from the afterStep() callback.  But the BatchStatus in the stepExecution is unchanged, so it looks as if the step was successful.  It&apos;s a hard decision to decide how to fix this.  I suggest that StepExecutionListener should be allowed to throw an exception to signal a failure, and treat that as a normal way for steps to fail, instead of trying to map exit codes to statuses.&lt;/p&gt;</description>
                <environment></environment>
        <key id="21368">BATCH-532</key>
            <summary>StepExecutionListener can influence exit status but not status of step execution</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="robert.kasanicky">Robert Kasanicky</assignee>
                                    <reporter username="david_syer">Dave Syer</reporter>
                        <labels>
                    </labels>
                <created>Sat, 29 Mar 2008 20:28:20 +0000</created>
                <updated>Thu, 7 Aug 2008 02:07:04 +0000</updated>
                            <resolved>Mon, 31 Mar 2008 22:10:09 +0000</resolved>
                                    <version>1.0.0</version>
                                    <fixVersion>1.0.1</fixVersion>
                                    <component>Core</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>1</watches>
                                    <timeoriginalestimate seconds="0">0d</timeoriginalestimate>
                            <timeestimate seconds="0">0d</timeestimate>
                                        <comments>
                            <comment id="34117" author="david_syer" created="Sun, 30 Mar 2008 23:50:12 +0000"  >&lt;p&gt;The workaround is to change the BatchStatus manually in the StepExecutionListener.&lt;/p&gt;</comment>
                            <comment id="34133" author="robert.kasanicky" created="Mon, 31 Mar 2008 02:28:55 +0000"  >&lt;p&gt;Is this issue really a blocker for 1.0.1? There seems to be a reasonable workaround and the way things work currently is &quot;by design&quot;, so I feel like we should leave it for 1.1&lt;/p&gt;</comment>
                            <comment id="34146" author="david_syer" created="Mon, 31 Mar 2008 04:17:18 +0000"  >&lt;p&gt;It&apos;s not a blocker - more like a nice to have for 1.0.1, if it meets the criteria of being quick to implement and not make any changes to APIs.  I downgraded it.&lt;/p&gt;</comment>
                            <comment id="34183" author="david_syer" created="Mon, 31 Mar 2008 17:33:19 +0000"  >&lt;p&gt;Actually, on reflection, the workaround only works if you also set the JobExecution.status to FAILED, otherwise there are going to be issues on restart (the job will think it was successful and it wasn&apos;t). That is getting quite ugly for anyone relying on being able to fail a job from a listener.  I think it should be possible to fix this without any surprises for anyone else.&lt;/p&gt;</comment>
                            <comment id="34187" author="robert.kasanicky" created="Mon, 31 Mar 2008 20:35:57 +0000"  >&lt;p&gt;In the context of &lt;a href=&quot;https://jira.spring.io/browse/BATCH-529&quot; title=&quot;StepExecutionListener.afterStep() should only be called on success&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BATCH-529&quot;&gt;&lt;del&gt;BATCH-529&lt;/del&gt;&lt;/a&gt; and &lt;a href=&quot;https://jira.spring.io/browse/BATCH-535&quot; title=&quot; TaskletStep does not call StepExecutionListener.afterStep()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BATCH-535&quot;&gt;&lt;del&gt;BATCH-535&lt;/del&gt;&lt;/a&gt; I think the solution is calling afterStep() as the last command in the Step#execute - if listener throws exception it will cause the step to fail in standard way. I&apos;m a bit hesitating to notably change the behavior for 1.0.x, but if we agree the current state is simply a bug rather than feature then the sooner it is fixed the better.&lt;/p&gt;</comment>
                            <comment id="34189" author="david_syer" created="Mon, 31 Mar 2008 20:50:43 +0000"  >&lt;p&gt;I think it&apos;s a bug.  Unless anyone disagrees I say we should fix it now.&lt;/p&gt;</comment>
                            <comment id="34190" author="nebhale" created="Mon, 31 Mar 2008 21:21:59 +0000"  >&lt;p&gt;Agreed&lt;/p&gt;</comment>
                            <comment id="34194" author="robert.kasanicky" created="Mon, 31 Mar 2008 22:10:09 +0000"  >&lt;p&gt;listener.afterStep() call moved from catch block to the end of the try block - exception thrown in listener therefore causes the step to fail.&lt;/p&gt;</comment>
                            <comment id="34746" author="springforever" created="Tue, 15 Apr 2008 06:25:26 +0000"  >&lt;p&gt;I tried throwing the RuntimeException from afterStep of step-2 (so as to terminate the job and not to proceed with step-3). However, this exception gets handled in ItemOrientedStep and continues with the step-3.&lt;/p&gt;

&lt;p&gt;//stepExecution.setTerminateOnly();  is commented out.......&lt;/p&gt;</comment>
                            <comment id="34773" author="robert.kasanicky" created="Tue, 15 Apr 2008 19:27:22 +0000"  >&lt;p&gt;@Hiren: are you using the trunk version (note the fix is not included in 1.0.0, it is for 1.0.1)? There are tests that make sure throwing exception in afterStep fails the step, so I believe it works correctly.&lt;/p&gt;</comment>
                            <comment id="34788" author="springforever" created="Wed, 16 Apr 2008 00:47:53 +0000"  >&lt;p&gt;@Robert: Yes, i am using spring-batch-core-1.0.0.jar. Shall i get 1.0.1 or use the manual approach as suggested above?&lt;/p&gt;</comment>
                            <comment id="34790" author="robert.kasanicky" created="Wed, 16 Apr 2008 00:59:37 +0000"  >&lt;p&gt;@Hiren: I&apos;d suggest using the trunk version - 1.0.1 is most likely to be released in less than 2 weeks from now, so you&apos;ll be back in safe position using official release reasonably soon.&lt;/p&gt;</comment>
                            <comment id="34791" author="springforever" created="Wed, 16 Apr 2008 01:02:48 +0000"  >&lt;p&gt;Thanks Robert!&lt;/p&gt;</comment>
                            <comment id="35357" author="springforever" created="Mon, 5 May 2008 02:28:28 +0000"  >&lt;p&gt;How do i get the release 1.0.1? I don&apos;t see it anywhere?&lt;/p&gt;</comment>
                            <comment id="35391" author="robert.kasanicky" created="Mon, 5 May 2008 18:24:03 +0000"  >&lt;p&gt;The 1.0.1 release should be out today.&lt;/p&gt;</comment>
                            <comment id="38609" author="david_syer" created="Thu, 7 Aug 2008 02:07:04 +0000"  >&lt;p&gt;Assume closed as resolved and released&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 31 Mar 2008 02:28:55 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10280" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5951</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i02jtr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>14921</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10381" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Ranking</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>14223</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>