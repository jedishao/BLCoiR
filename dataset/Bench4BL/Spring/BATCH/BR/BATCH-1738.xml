<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 11:23:02 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/BATCH-1738/BATCH-1738.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[BATCH-1738] StaxEventItemReader stops reading when exception occurs during unmarshalling</title>
                <link>https://jira.spring.io/browse/BATCH-1738</link>
                <project id="10090" key="BATCH">Spring Batch</project>
                    <description>&lt;p&gt;When an exception occurs during unmarshalling the reader stops reading even though there are still items / fragments to read. I think I have found the reason as well and I&apos;ll try to explain below. I&apos;m very surprised that nobody has come across this before. &lt;/p&gt;

&lt;p&gt;Spring batch version used: 2.1.7&lt;br/&gt;
Spring version used: 3.0.5&lt;br/&gt;
Java version: 6&lt;/p&gt;


&lt;p&gt;Happy flow:&lt;br/&gt;
1.1. In the StaxEventItemReader.doRead() method, the StaxEventItemReader first tries to move the cursor to the next fragment using the moveCursorToNextFragment(..) method; &lt;br/&gt;
1.2. If a next fragment is found, a call is made to the marshaller to unmarshall the xml fragment; &lt;br/&gt;
1.3. If the unmarshalling is ok, the reader calls &apos;markFragmentProcessed()&apos; on the fragment event reader (DefaultFragmentEventReader). At this stage, the fragment event reader members are &apos;endFragmentFollows=true&apos; and &apos;insideFragment=true&apos;. This is important to note, because these flags play a big part in this issue;&lt;br/&gt;
1.4. The markFragmentProcessed() method reads all the unread events using the nextEvent() method until EndDocument is found (which is in fact the end of the fragment). Somewhere down the line, the fragment reader members &apos;endFragmentFollows&apos; and &apos;insideFragment&apos; are reset to false (which is good).&lt;br/&gt;
2.1. When the next item is read, the StaxEventItemReader tries to move the cursor to the next fragment. And so on...&lt;/p&gt;

&lt;p&gt;Problem flow:&lt;br/&gt;
1.1. In the doRead() method, the StaxEventItemReader first tries to move the cursor to the next fragment using the moveCursorToNextFragment(..) method; &lt;br/&gt;
1.2. If a next fragment is found, a call is made to the marshaller to umarshall the xml fragment;&lt;br/&gt;
1.3. Exception occurs during unmarshalling and therefore the call to &apos;markFragmentProcessed()&apos; is never done. The members of the fragment event reader are therefore NOT reset and keep the values &apos;endFragmentFollows=true&apos; and &apos;insideFragment=true&apos;.&lt;br/&gt;
2.1. When the next item is read, the StaxEventItemReader tries to move the cursor to the next fragment. This method will call nextEvent() on the fragment event reader, returning EndDocument because the internal state of the fragment event reader was not reset due to the exception earlier &lt;br/&gt;
(i.e. &apos;endFragmentFollows&apos; and &apos;insidedFragment&apos; are still both true). Therefore, the moveCursorToNextFragment() method will return false indicating NO next fragment was found and stops the reading.&lt;/p&gt;


&lt;p&gt;To prove the analysis above, I have modified the StaxEventItemReader class and ran some tests. I have moved the call to fragmentReader.markFragmentProcessed() into a finally block, making sure it will always get called (whether the unmarshalling fails or not). After this modification, the StaxEventItemReader works as expected, continuing reading and skipping input when unmarshalling fails for an item. &lt;/p&gt;

&lt;p&gt;See the code modification below. Perhaps this is not the best way to solve this issue, but it proves the problem. &lt;/p&gt;

&lt;p&gt;protected T doRead() throws Exception {&lt;/p&gt;

&lt;p&gt;    if (noInput) &lt;/p&gt;
{
        return null;
    }

&lt;p&gt;    T item = null;&lt;/p&gt;

&lt;p&gt;    boolean success = false;&lt;br/&gt;
    try &lt;/p&gt;
{
        success = moveCursorToNextFragment(fragmentReader);
    }
&lt;p&gt;    catch (NonTransientResourceException e) &lt;/p&gt;
{
        // Prevent caller from retrying indefinitely since this is fatal
        noInput = true;
        throw e;
    }

&lt;p&gt;    if (success) {&lt;br/&gt;
        fragmentReader.markStartFragment();&lt;/p&gt;

&lt;p&gt;        try &lt;/p&gt;
{ // Added by Pepijn Opsteegh
            @SuppressWarnings(&quot;unchecked&quot;)
            T mappedFragment = (T) unmarshaller.unmarshal(StaxUtils.getSource(fragmen tReader));
            item = mappedFragment;
        }
&lt;p&gt; finally &lt;/p&gt;
{ // Added by Pepijn Opsteegh
            fragmentReader.markFragmentProcessed();
        }
&lt;p&gt; // Added by Pepijn Opsteegh&lt;br/&gt;
    }&lt;/p&gt;

&lt;p&gt;    return item;&lt;br/&gt;
}&lt;/p&gt;</description>
                <environment></environment>
        <key id="37633">BATCH-1738</key>
            <summary>StaxEventItemReader stops reading when exception occurs during unmarshalling</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://jira.spring.io/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="robert.kasanicky">Robert Kasanicky</assignee>
                                    <reporter username="popsteegh">Pepijn Opsteegh</reporter>
                        <labels>
                    </labels>
                <created>Tue, 26 Apr 2011 01:28:38 +0000</created>
                <updated>Mon, 2 May 2011 14:36:37 +0000</updated>
                            <resolved>Mon, 2 May 2011 14:36:37 +0000</resolved>
                                    <version>2.1.7</version>
                                    <fixVersion>2.1.8</fixVersion>
                                    <component>Infrastructure</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                    <timeoriginalestimate seconds="0">0d</timeoriginalestimate>
                            <timeestimate seconds="0">0d</timeestimate>
                                        <comments>
                            <comment id="65886" author="robert.kasanicky" created="Mon, 2 May 2011 14:36:37 +0000"  >&lt;p&gt;Fixed, thanks for the detailed analysis.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 2 May 2011 14:36:37 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10280" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5777</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i02j73:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>14819</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10381" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Ranking</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>14123</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10120" key="com.atlassian.jira.plugin.system.customfieldtypes:url">
                        <customfieldname>Reference URL</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[http://forum.springsource.org/showthread.php?t=108377]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>