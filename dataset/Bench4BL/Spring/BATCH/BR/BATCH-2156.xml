<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 11:16:35 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/BATCH-2156/BATCH-2156.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[BATCH-2156] ConcurrencyFailureException when multithreaded tasklet updates %PREFIX%STEP_EXECUTION_CONTEXT table</title>
                <link>https://jira.spring.io/browse/BATCH-2156</link>
                <project id="10090" key="BATCH">Spring Batch</project>
                    <description>&lt;p&gt;Need to synchronize the stepExecution in org.springframework.batch.core.repository.dao.JdbcExecutionContextDao in the method updateExecutionContext(final StepExecution stepExecution), in order to prevent concurrency failures if two threads are trying to update the same step execution context record. It appears this is already done in JdbcStepExecutionDao.updateStepExecution at line 162:&lt;br/&gt;
		// Attempt to prevent concurrent modification errors by blocking here if&lt;br/&gt;
		// someone is already trying to do it.&lt;br/&gt;
		synchronized (stepExecution) {&lt;/p&gt;


&lt;p&gt;The error we are getting when our multithreaded tasklet is processing is:&lt;/p&gt;

&lt;p&gt;&quot;org.springframework.batch.core.step.FatalStepExecutionException: JobRepository failure forcing exit with unknown status&lt;br/&gt;
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:441)&lt;br/&gt;
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:131)&lt;br/&gt;
	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:264)&lt;br/&gt;
	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:76)&lt;br/&gt;
	at org.springframework.batch.repeat.support.TaskExecutorRepeatTemplate$ExecutingRunnable.run(TaskExecutorRepeatTemplate.java:258)&lt;br/&gt;
	at java.lang.Thread.run(Thread.java:679)&lt;br/&gt;
Caused by: org.springframework.dao.ConcurrencyFailureException: PreparedStatementCallback; SQL &lt;span class=&quot;error&quot;&gt;&amp;#91;UPDATE BATCH_STEP_EXECUTION_CONTEXT SET SHORT_CONTEXT = ?, SERIALIZED_CONTEXT = ? WHERE STEP_EXECUTION_ID = ?&amp;#93;&lt;/span&gt;; &lt;span class=&quot;error&quot;&gt;&amp;#91;Teradata Database&amp;#93;&lt;/span&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;TeraJDBC 14.00.00.37&amp;#93;&lt;/span&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;Error 2631&amp;#93;&lt;/span&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;SQLState 40001&amp;#93;&lt;/span&gt; Transaction ABORTed due to deadlock.; nested exception is com.teradata.jdbc.jdbc_4.util.JDBCException: &lt;span class=&quot;error&quot;&gt;&amp;#91;Teradata Database&amp;#93;&lt;/span&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;TeraJDBC 14.00.00.37&amp;#93;&lt;/span&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;Error 2631&amp;#93;&lt;/span&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;SQLState 40001&amp;#93;&lt;/span&gt; Transaction ABORTed due to deadlock.&lt;br/&gt;
	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:110)&lt;br/&gt;
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)&lt;br/&gt;
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:80)&lt;br/&gt;
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:80)&lt;br/&gt;
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:605)&lt;br/&gt;
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:818)&lt;br/&gt;
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:874)&lt;br/&gt;
	at org.springframework.batch.core.repository.dao.JdbcExecutionContextDao.persistSerializedContext(JdbcExecutionContextDao.java:193)&lt;br/&gt;
	at org.springframework.batch.core.repository.dao.JdbcExecutionContextDao.updateExecutionContext(JdbcExecutionContextDao.java:136)&lt;br/&gt;
	at org.springframework.batch.core.repository.support.SimpleJobRepository.updateExecutionContext(SimpleJobRepository.java:184)&lt;br/&gt;
	at sun.reflect.GeneratedMethodAccessor381.invoke(Unknown Source)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccesso&quot;&lt;/p&gt;
</description>
                <environment>Linux, Windows</environment>
        <key id="52415">BATCH-2156</key>
            <summary>ConcurrencyFailureException when multithreaded tasklet updates %PREFIX%STEP_EXECUTION_CONTEXT table</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://jira.spring.io/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="8">Complete</resolution>
                                        <assignee username="mminella">Michael Minella</assignee>
                                    <reporter username="ayeshaaq">ak</reporter>
                        <labels>
                    </labels>
                <created>Mon, 16 Dec 2013 11:53:42 +0000</created>
                <updated>Fri, 13 Jun 2014 12:07:14 +0000</updated>
                            <resolved>Wed, 26 Mar 2014 15:33:23 +0000</resolved>
                                    <version>2.1.9</version>
                                    <fixVersion>3.0.0</fixVersion>
                                    <component>Infrastructure</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="96574" author="mminella" created="Mon, 16 Dec 2013 12:01:11 +0000"  >&lt;p&gt;Two things.  Can you confirm that this occurs in 2.2.x (I noticed you marked this against the 2.1.9 version).  I don&apos;t think any work has been done in this area so I&apos;m expecting the same results, but a confirmation would be helpful.  Second, do you have a unit test that recreates this (again, this would just be helpful)?&lt;/p&gt;</comment>
                            <comment id="96576" author="ayeshaaq" created="Mon, 16 Dec 2013 12:18:13 +0000"  >&lt;p&gt;Problem is it&apos;s really hard to reproduce.  It happens very sporadically and I was only able to figure this out by digging through the batch code. I tried to create a test case but wasn&apos;t able to reproduce it in junit.  I&apos;m only able to produce it if I put breakpoints in the right places and step through my debugger in multiple threads. &lt;br/&gt;
For now I&apos;m working around the issue by implementing my own AbstractJobRepositoryFactoryBean which creates a ThreadsafeJdbcExecutionContextDao with the suggested fix. &lt;/p&gt;</comment>
                            <comment id="96583" author="mminella" created="Mon, 16 Dec 2013 13:14:40 +0000"  >&lt;p&gt;For the record, pull requests are always appreciated.  If you&apos;re interested, please fill out the Contributor&apos;s Agreement here: &lt;a href=&quot;https://support.springsource.com/spring_committer_signup&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://support.springsource.com/spring_committer_signup&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="104492" author="singhal.rishi@gmail.com" created="Fri, 13 Jun 2014 12:04:55 +0000"  >&lt;p&gt;I see the same issue for insert statement also&lt;/p&gt;

&lt;p&gt;Caused by: org.springframework.dao.ConcurrencyFailureException: PreparedStatementCallback; SQL &lt;span class=&quot;error&quot;&gt;&amp;#91;INSERT INTO BATCH_STEP_EXECUTION_CONTEXT (SHORT_CONTEXT, SERIALIZED_CONTEXT, STEP_EXECUTION_ID) VALUES(?, ?, ?)&amp;#93;&lt;/span&gt;; transaction rollback: serialization failure; nested exception is java.sql.SQLTransactionRollbackException: transaction rollback: serialization failure&lt;br/&gt;
            at org.springframework.jdbc.support.SQLExceptionSubclassTranslator.doTranslate(SQLExceptionSubclassTranslator.java:68)&lt;br/&gt;
            at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)&lt;/p&gt;

&lt;p&gt;Can we synchronize this also?&lt;/p&gt;

&lt;p&gt;Regards,&lt;br/&gt;
Rishi&lt;/p&gt;
</comment>
                            <comment id="104493" author="mminella" created="Fri, 13 Jun 2014 12:07:14 +0000"  >&lt;p&gt;&lt;a href=&quot;https://jira.spring.io/secure/ViewProfile.jspa?name=singhal.rishi%40gmail.com&quot; class=&quot;user-hover&quot; rel=&quot;singhal.rishi@gmail.com&quot;&gt;Rishi Singhal&lt;/a&gt; Your issue is unrelated to this one.  Please create a new issue so we can discuss further.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 16 Dec 2013 12:01:11 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10280" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>38895</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i06s4v:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>39596</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10381" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Ranking</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>38597</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>