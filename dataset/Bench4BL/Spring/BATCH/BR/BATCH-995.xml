<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 12:12:31 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/BATCH-995/BATCH-995.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[BATCH-995] unclear retry configuration in FaultTolerantStepFactoryBean</title>
                <link>https://jira.spring.io/browse/BATCH-995</link>
                <project id="10090" key="BATCH">Spring Batch</project>
                    <description>&lt;p&gt;if (retryPolicy == null) {&lt;/p&gt;

&lt;p&gt;	SimpleRetryPolicy simpleRetryPolicy = new SimpleRetryPolicy(retryLimit);&lt;br/&gt;
	if (!retryableExceptionClasses.isEmpty()) &lt;/p&gt;
{ // otherwise we
		// retry all exceptions
		simpleRetryPolicy.setRetryableExceptionClasses(retryableExceptionClasses);
	}
&lt;p&gt;	simpleRetryPolicy.setFatalExceptionClasses(fatalExceptionClasses);&lt;/p&gt;

&lt;p&gt;	ExceptionClassifierRetryPolicy classifierRetryPolicy = new ExceptionClassifierRetryPolicy();&lt;br/&gt;
	HashMap&amp;lt;Class&amp;lt;? extends Throwable&amp;gt;, RetryPolicy&amp;gt; exceptionTypeMap = new HashMap&amp;lt;Class&amp;lt;? extends Throwable&amp;gt;, RetryPolicy&amp;gt;();&lt;br/&gt;
	for (Class&amp;lt;? extends Throwable&amp;gt; cls : retryableExceptionClasses) &lt;/p&gt;
{
		exceptionTypeMap.put(cls, simpleRetryPolicy);
	}
&lt;p&gt;	classifierRetryPolicy.setPolicyMap(exceptionTypeMap);&lt;br/&gt;
	retryPolicy = classifierRetryPolicy;&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;SimpleRetryPolicy is for some reason wrapped in ExceptionClassifierRetryPolicy. This not only seems unnecessary, but also ignores the fatalExceptionClasses (unless they subclass the retryableExceptionClasses).&lt;/p&gt;

&lt;p&gt;The most interesting thing however is that using simpleRetryPolicy directly severely breaks the FaultTolerantStepFactoryBeanTests.&lt;/p&gt;</description>
                <environment></environment>
        <key id="25329">BATCH-995</key>
            <summary>unclear retry configuration in FaultTolerantStepFactoryBean</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://jira.spring.io/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="david_syer">Dave Syer</assignee>
                                    <reporter username="robert.kasanicky">Robert Kasanicky</reporter>
                        <labels>
                    </labels>
                <created>Tue, 13 Jan 2009 00:24:29 +0000</created>
                <updated>Thu, 15 Jan 2009 20:29:03 +0000</updated>
                            <resolved>Thu, 15 Jan 2009 20:29:03 +0000</resolved>
                                    <version>2.0.0.M3</version>
                                    <fixVersion>2.0.0.M4</fixVersion>
                                    <component>Core</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                    <timeoriginalestimate seconds="14400">0.5d</timeoriginalestimate>
                            <timeestimate seconds="1800">0.5h</timeestimate>
                            <timespent seconds="12600">3.5h</timespent>
                                <comments>
                            <comment id="42012" author="david_syer" created="Tue, 13 Jan 2009 03:10:10 +0000"  >&lt;p&gt;I think ExceptionClassifierRetryPolicy used to be necessary so that the retry limit is applied but I agree that it doesn&apos;t seem to be doing anything useful now.  It does seem like maybe it should be there though so that a retry policy injected by the user can be explicitly overridden for our known fatal exceptions.  It isn&apos;t performing that function now because it is set up inside the if() block.  I think that might be the problem (it should go outside), like this:&lt;/p&gt;

&lt;p&gt;if (retryPolicy == null) {&lt;/p&gt;

&lt;p&gt;	SimpleRetryPolicy simpleRetryPolicy = new SimpleRetryPolicy(retryLimit);&lt;br/&gt;
	if (!retryableExceptionClasses.isEmpty()) &lt;/p&gt;
{ // otherwise we
		// retry all exceptions
		simpleRetryPolicy.setRetryableExceptionClasses(retryableExceptionClasses);
	}
&lt;p&gt;	retryPolicy = simpleRetryPolicy;&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;ExceptionClassifierRetryPolicy classifierRetryPolicy = new ExceptionClassifierRetryPolicy();&lt;br/&gt;
HashMap&amp;lt;Class&amp;lt;? extends Throwable&amp;gt;, RetryPolicy&amp;gt; exceptionTypeMap = new HashMap&amp;lt;Class&amp;lt;? extends Throwable&amp;gt;, RetryPolicy&amp;gt;();&lt;br/&gt;
for (Class&amp;lt;? extends Throwable&amp;gt; cls : retryableExceptionClasses) {&lt;br/&gt;
	exceptionTypeMap.put(cls, retryPolicy);&lt;br/&gt;
}&lt;br/&gt;
classifierRetryPolicy.setFatalExceptionClasses(fatalExceptionClasses);&lt;br/&gt;
classifierRetryPolicy.setPolicyMap(exceptionTypeMap);&lt;/p&gt;

&lt;p&gt;Does that make sense?  (I know the ExceptionClassifierRetryPolicy doesn&apos;t have a fatalExceptions property, but something like that.)&lt;/p&gt;</comment>
                            <comment id="42014" author="robert.kasanicky" created="Tue, 13 Jan 2009 03:23:02 +0000"  >&lt;p&gt;Yes, keeping the wrapper for handling fatal exceptions makes good sense. &lt;/p&gt;

&lt;p&gt;I&apos;m currently puzzled why the seemingly useless wrapper makes such a big difference. I&apos;ll try to figure that out first and then refactor the implementation along the suggested lines.&lt;/p&gt;</comment>
                            <comment id="42035" author="robert.kasanicky" created="Wed, 14 Jan 2009 01:00:24 +0000"  >&lt;p&gt;I ended up simply removing the wrapper after fixing direct use of SimpleRetryPolicy. The wrapper is useless in case retryLimit + retryExceptionClasses are used to configure the behavior and using retryExceptionClasses property to configure the delegation is incorrect if there is custom policy injected (the custom retryPolicy doesn&apos;t have to care about retryExceptionClasses).&lt;/p&gt;

&lt;p&gt;Maybe we should just remove the setter for the retryPolicy? It seems more confusing than useful.&lt;/p&gt;</comment>
                            <comment id="42048" author="david_syer" created="Thu, 15 Jan 2009 03:29:56 +0000"  >&lt;p&gt;Isn&apos;t it the fatal exceptionClasses that we need to worry about?  Clearly it is an error for the user to set both a retryLimit and a retryPolicy (probably we should log a warning not throw an exception).  But the fatal list is important.&lt;/p&gt;

&lt;p&gt;And I think we need to keep the retryPolicy setter - it is only a bit confusing and it provides a nice strategy for advanced users.&lt;/p&gt;</comment>
                            <comment id="42049" author="robert.kasanicky" created="Thu, 15 Jan 2009 04:26:32 +0000"  >&lt;p&gt;I think I got mislead by staring too long at the original implementation, fatal exceptions are certainly a different topic - reopening.&lt;/p&gt;</comment>
                            <comment id="42070" author="robert.kasanicky" created="Thu, 15 Jan 2009 20:29:03 +0000"  >&lt;p&gt;Added ExceptionClassifierRetryPolicy wrapper for the injected RetryPolicy that handles fatal exceptions.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10020">
                    <name>Related</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="25341">BATCH-996</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="15036" name="mylyn-context.zip" size="801" author="david_syer" created="Tue, 13 Jan 2009 03:10:47 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 13 Jan 2009 03:10:10 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10280" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>11666</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i03x47:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>22907</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10381" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Ranking</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>19373</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>