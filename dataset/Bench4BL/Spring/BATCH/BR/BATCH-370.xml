<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 11:27:30 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/BATCH-370/BATCH-370.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[BATCH-370] TaskletStep based step configurations don&apos;t support step scoped tasklet bean definition.</title>
                <link>https://jira.spring.io/browse/BATCH-370</link>
                <project id="10090" key="BATCH">Spring Batch</project>
                    <description>&lt;p&gt;I have a job definition with a step definition such as:&lt;/p&gt;

&lt;p&gt;&amp;lt;bean id=&quot;step2&quot; parent=&quot;taskletStep&quot;&amp;gt;&lt;br/&gt;
					&amp;lt;property name=&quot;tasklet&quot;&amp;gt;&lt;br/&gt;
						&amp;lt;bean class=&quot;PerformCommissionRunTasklet&quot; scope=&quot;step&quot;&amp;gt;&lt;br/&gt;
							&amp;lt;aop:scoped-proxy/&amp;gt;&lt;br/&gt;
						&amp;lt;/bean&amp;gt;&lt;br/&gt;
					&amp;lt;/property&amp;gt;		&lt;br/&gt;
				&amp;lt;/bean&amp;gt;&lt;/p&gt;

&lt;p&gt;but the following exception is thrown:&lt;/p&gt;

&lt;p&gt;Caused by: org.springframework.batch.io.exception.BatchCriticalException: org.springframework.beans.factory.BeanCreationException: Error creating bean with name &apos;scopedTarget.PerformCommissionRunTasklet#1b814a5&apos;: Scope &apos;step&apos; is not active for the current thread; consider defining a scoped proxy for this bean if you intend to refer to it from a singleton; nested exception is java.lang.IllegalStateException: No context holder available for step scope&lt;br/&gt;
	at org.springframework.batch.execution.step.tasklet.TaskletStep.execute(TaskletStep.java:134)&lt;br/&gt;
	at org.springframework.batch.execution.job.simple.SimpleJob.execute(SimpleJob.java:89)&lt;br/&gt;
	at org.springframework.batch.execution.launch.SimpleJobLauncher$1.run(SimpleJobLauncher.java:85)&lt;br/&gt;
	at org.springframework.core.task.SyncTaskExecutor.execute(SyncTaskExecutor.java:49)&lt;br/&gt;
	at org.springframework.batch.execution.launch.SimpleJobLauncher.run(SimpleJobLauncher.java:80)&lt;br/&gt;
	at BatchManagerImpl.launchComMonthEndJob(BatchManagerImpl.java:352)&lt;br/&gt;
	... 168 more&lt;br/&gt;
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name &apos;scopedTarget.com.siebre.compensation.batch.PerformCommissionRunTasklet#1b814a5&apos;: Scope &apos;step&apos; is not active for the current thread; consider defining a scoped proxy for this bean if you intend to refer to it from a singleton; nested exception is java.lang.IllegalStateException: No context holder available for step scope&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:302)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:160)&lt;br/&gt;
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:33)&lt;br/&gt;
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.getTarget(Cglib2AopProxy.java:660)&lt;br/&gt;
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:610)&lt;br/&gt;
	at com.siebre.compensation.batch.PerformCommissionRunTasklet$$EnhancerByCGLIB$$39336c95.execute(&amp;lt;generated&amp;gt;)&lt;br/&gt;
	at org.springframework.batch.execution.step.tasklet.TaskletStep$1.doInIteration(TaskletStep.java:124)&lt;br/&gt;
	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:324)&lt;br/&gt;
	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:201)&lt;br/&gt;
	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:131)&lt;br/&gt;
	at org.springframework.batch.execution.step.tasklet.TaskletStep.execute(TaskletStep.java:122)&lt;br/&gt;
	... 173 more&lt;br/&gt;
Caused by: java.lang.IllegalStateException: No context holder available for step scope&lt;br/&gt;
	at org.springframework.batch.execution.scope.StepScope.getContext(StepScope.java:127)&lt;br/&gt;
	at org.springframework.batch.execution.scope.StepScope.get(StepScope.java:68)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:283)&lt;br/&gt;
	... 183 more&lt;/p&gt;

&lt;p&gt;The problem is due to the asymmetry between the implementation of TaskletStep.execute() and AbstractStep.execute().&lt;br/&gt;
In AbstractStep.execute(), the execution logic is delegated to class SimpleStepExecutor,  which will register step context when started.&lt;/p&gt;

&lt;p&gt;public void execute(final StepExecution stepExecution) throws BatchCriticalException, JobInterruptedException {&lt;/p&gt;

&lt;p&gt;		final StepInstance stepInstance = stepExecution.getStep();&lt;br/&gt;
		Assert.notNull(stepInstance);&lt;br/&gt;
		boolean isRestart = stepInstance.getStepExecutionCount() &amp;gt; 0 ? true : false;&lt;/p&gt;

&lt;p&gt;		ExitStatus status = ExitStatus.FAILED;&lt;/p&gt;

&lt;p&gt;		try {&lt;/p&gt;

&lt;p&gt;			stepExecution.setStartTime(new Date(System.currentTimeMillis()));&lt;br/&gt;
			// We need to save the step execution right away, before we start&lt;br/&gt;
			// using its ID. It would be better to make the creation atomic in&lt;br/&gt;
			// the caller.&lt;br/&gt;
			updateStatus(stepExecution, BatchStatus.STARTED);&lt;/p&gt;

&lt;p&gt;			StepContext parentStepContext = StepSynchronizationManager.getContext();&lt;br/&gt;
			final StepContext stepContext = new SimpleStepContext(stepExecution, parentStepContext, streamManager);&lt;br/&gt;
			StepSynchronizationManager.register(stepContext);&lt;br/&gt;
....&lt;/p&gt;

&lt;p&gt;but in TaskletStep.execute(),  there is no stepContext being registered.&lt;/p&gt;

&lt;p&gt;public void execute(StepExecution stepExecution) throws JobInterruptedException, BatchCriticalException {&lt;br/&gt;
		stepExecution.setStartTime(new Date());&lt;br/&gt;
		updateStatus(stepExecution, BatchStatus.STARTED);&lt;/p&gt;

&lt;p&gt;		ExitStatus exitStatus = ExitStatus.FAILED;&lt;br/&gt;
		try {&lt;/p&gt;

&lt;p&gt;			// We are using the RepeatTemplate as a vehicle for the listener&lt;br/&gt;
			// so it can be set up cheaply here with standard properties.&lt;br/&gt;
			RepeatTemplate template = new RepeatTemplate();&lt;br/&gt;
			template.setCompletionPolicy(new SimpleCompletionPolicy(1));&lt;/p&gt;

&lt;p&gt;			template.setListeners(listeners);&lt;br/&gt;
			exitStatus =template.iterate(new RepeatCallback() {&lt;br/&gt;
				public ExitStatus doInIteration(RepeatContext context) throws Exception &lt;/p&gt;
{
					return tasklet.execute();
				}
&lt;p&gt;	&lt;br/&gt;
			});&lt;/p&gt;

&lt;p&gt;			updateStatus(stepExecution, BatchStatus.COMPLETED);&lt;/p&gt;

&lt;p&gt;		}&lt;br/&gt;
		catch (Exception e) &lt;/p&gt;
{
			logger.error(&quot;Encountered an error running the tasklet&quot;);
			updateStatus(stepExecution, BatchStatus.FAILED);
			throw new BatchCriticalException(e);
		}
&lt;p&gt;		finally &lt;/p&gt;
{
			stepExecution.setExitStatus(exitStatus);
			stepExecution.setEndTime(new Date());
			jobRepository.saveOrUpdate(stepExecution);
		}
&lt;p&gt;	}&lt;br/&gt;
...&lt;/p&gt;

</description>
                <environment></environment>
        <key id="20617">BATCH-370</key>
            <summary>TaskletStep based step configurations don&apos;t support step scoped tasklet bean definition.</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="3">Duplicate</resolution>
                                        <assignee username="david_syer">Dave Syer</assignee>
                                    <reporter username="xml2008">steven</reporter>
                        <labels>
                    </labels>
                <created>Fri, 15 Feb 2008 16:16:01 +0000</created>
                <updated>Wed, 18 Jun 2008 18:28:58 +0000</updated>
                            <resolved>Mon, 25 Feb 2008 03:20:07 +0000</resolved>
                                    <version>1.0.0.m5</version>
                                    <fixVersion>1.0.0.m5</fixVersion>
                                    <component>Core</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                    <timeoriginalestimate seconds="3600">1h</timeoriginalestimate>
                            <timeestimate seconds="3600">1h</timeestimate>
                                        <comments>
                            <comment id="32445" author="david_syer" created="Mon, 25 Feb 2008 03:20:07 +0000"  >&lt;p&gt;Duplicate of &lt;a href=&quot;https://jira.spring.io/browse/BATCH-380&quot; title=&quot;Step Scope problem in TaskletStep&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BATCH-380&quot;&gt;&lt;del&gt;BATCH-380&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 25 Feb 2008 03:20:07 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10280" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>12073</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i058yf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>30657</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10381" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Ranking</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>27686</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>