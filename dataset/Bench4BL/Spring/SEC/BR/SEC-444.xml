<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Fri Dec 23 11:32:26 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SEC-444/SEC-444.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SEC-444] Race condition inside ConcurrentSessionControllerImpl</title>
                <link>https://jira.spring.io/browse/SEC-444</link>
                <project id="10040" key="SEC">Spring Security</project>
                    <description>&lt;p&gt;I was getting SessionAlreadyUsedException on rapid usage (by single user). The strack trace of the exception is below.&lt;br/&gt;
The problem seems to be the unsynchronized sequence of commands Inside ConcurrentSessionControllerImpl.registerSuccessfulAuthentication():&lt;br/&gt;
            sessionRegistry.removeSessionInformation(sessionId);&lt;br/&gt;
            sessionRegistry.registerNewSession(sessionId, principal);&lt;/p&gt;

&lt;p&gt;The registerNewSession() will fail if an other thread registers the same session between these two commands.&lt;/p&gt;


&lt;p&gt;The strack trace:&lt;br/&gt;
2007-03-02 16:53:46,204 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;org.acegisecurity.ui.ExceptionTranslationFilter&amp;#93;&lt;/span&gt;&lt;br/&gt;
(http-0.0.0.0-8080-1&lt;img class=&quot;emoticon&quot; src=&quot;https://jira.spring.io/images/icons/emoticons/smile.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; Authentication exception occurred; redirecting to&lt;br/&gt;
authentication entry point&lt;br/&gt;
org.acegisecurity.concurrent.SessionAlreadyUsedException: Session&lt;br/&gt;
1E1B65235B4D42FF17C5F76E7287228D is already is use&lt;br/&gt;
        at&lt;br/&gt;
org.acegisecurity.concurrent.SessionRegistryImpl.registerNewSession(SessionRegistryImpl.java:121)&lt;br/&gt;
        at&lt;br/&gt;
org.acegisecurity.concurrent.ConcurrentSessionControllerImpl.registerSuccessfulAuthentication(ConcurrentSessionControllerImpl.java:142)&lt;br/&gt;
        at&lt;br/&gt;
org.acegisecurity.providers.ProviderManager.doAuthentication(ProviderManager.java:191)&lt;/p&gt;</description>
                <environment>CPU: Intel Core 2 Duo</environment>
        <key id="16273">SEC-444</key>
            <summary>Race condition inside ConcurrentSessionControllerImpl</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="balex">Ben Alex</assignee>
                                    <reporter username="fidlej">Ivo Danihelka</reporter>
                        <labels>
                    </labels>
                <created>Sun, 4 Mar 2007 22:25:10 +0000</created>
                <updated>Sat, 6 Feb 2016 06:32:43 +0000</updated>
                            <resolved>Thu, 24 May 2007 12:42:26 +0000</resolved>
                                    <version>1.0.1</version>
                    <version>1.0.2</version>
                    <version>1.0.3</version>
                                    <fixVersion>1.0.4</fixVersion>
                                    <component>Core</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="23954" author="worldheart" created="Wed, 23 May 2007 12:21:38 +0000"  >&lt;p&gt;By the way, In my other WebLogic 8.1.4 based Spring/JSF/Acegi/Hibernate Applications, WebLogic Console throwed following exceptions related with SessionRegistryImpl.&lt;/p&gt;

&lt;p&gt;####&amp;lt;2007-5-15 &#19979;&#21320;04&#26102;47&#20998;29&#31186; CST&amp;gt; &amp;lt;Error&amp;gt; &amp;lt;HTTP&amp;gt; &amp;lt;win200310834&amp;gt; &amp;lt;myserver&amp;gt; &amp;lt;ExecuteThread: &apos;25&apos; for queue: &apos;weblogic.kernel.Default&apos;&amp;gt; &amp;lt;&amp;lt;WLS Kernel&amp;gt;&amp;gt; &amp;lt;&amp;gt; &amp;lt;BEA-101020&amp;gt; &amp;lt;&lt;span class=&quot;error&quot;&gt;&amp;#91;ServletContext(id=18404374,name=WebContent,context-path=/ride)&amp;#93;&lt;/span&gt; Servlet failed with Exception&lt;br/&gt;
java.lang.Throwable&lt;br/&gt;
	at java.util.HashMap$HashIterator.nextEntry()Ljava.util.HashMap$Entry;(Optimized Method)&lt;br/&gt;
	at java.util.HashMap$KeyIterator.next()Ljava.lang.Object;(Optimized Method)&lt;br/&gt;
	at org.acegisecurity.concurrent.SessionRegistryImpl.getAllSessions(Ljava.lang.Object;Z)[Lorg.acegisecurity.concurrent.SessionInformation;(SessionRegistryImpl.java:80)&lt;br/&gt;
	at org.acegisecurity.concurrent.ConcurrentSessionControllerImpl.checkAuthenticationAllowed(Lorg.acegisecurity.Authentication;)V(ConcurrentSessionControllerImpl.java:92)&lt;br/&gt;
	at org.acegisecurity.providers.ProviderManager.doAuthentication(Lorg.acegisecurity.Authentication;)Lorg.acegisecurity.Authentication;(ProviderManager.java:189)&lt;br/&gt;
	at org.acegisecurity.AbstractAuthenticationManager.authenticate(Lorg.acegisecurity.Authentication;)Lorg.acegisecurity.Authentication;(AbstractAuthenticationManager.java:45)&lt;br/&gt;
	at cn.ccb.ride.admin.util.auth.SecurityAuthenticationProcessingFilter.attemptAuthentication(Ljavax.servlet.http.HttpServletRequest;)Lorg.acegisecurity.Authentication;(SecurityAuthenticationProcessingFilter.java:123)&lt;br/&gt;
	at org.acegisecurity.ui.AbstractProcessingFilter.doFilter(Ljavax.servlet.ServletRequest;Ljavax.servlet.ServletResponse;Ljavax.servlet.FilterChain;)V(Optimized Method)&lt;br/&gt;
	at org.acegisecurity.util.FilterChainProxy$VirtualFilterChain.doFilter(Ljavax.servlet.ServletRequest;Ljavax.servlet.ServletResponse;)V(Optimized Method)&lt;br/&gt;
	at org.acegisecurity.ui.logout.LogoutFilter.doFilter(Ljavax.servlet.ServletRequest;Ljavax.servlet.ServletResponse;Ljavax.servlet.FilterChain;)V(Optimized Method)&lt;br/&gt;
	at org.acegisecurity.util.FilterChainProxy$VirtualFilterChain.doFilter(Ljavax.servlet.ServletRequest;Ljavax.servlet.ServletResponse;)V(Optimized Method)&lt;br/&gt;
	at org.acegisecurity.context.HttpSessionContextIntegrationFilter.doFilter(Ljavax.servlet.ServletRequest;Ljavax.servlet.ServletResponse;Ljavax.servlet.FilterChain;)V(Optimized Method)&lt;br/&gt;
	at org.acegisecurity.util.FilterChainProxy$VirtualFilterChain.doFilter(Ljavax.servlet.ServletRequest;Ljavax.servlet.ServletResponse;)V(Optimized Method)&lt;br/&gt;
	at org.acegisecurity.concurrent.ConcurrentSessionFilter.doFilter(Ljavax.servlet.ServletRequest;Ljavax.servlet.ServletResponse;Ljavax.servlet.FilterChain;)V(Optimized Method)&lt;br/&gt;
	at org.acegisecurity.util.FilterChainProxy$VirtualFilterChain.doFilter(Ljavax.servlet.ServletRequest;Ljavax.servlet.ServletResponse;)V(Optimized Method)&lt;br/&gt;
	at org.acegisecurity.util.FilterChainProxy.doFilter(Ljavax.servlet.ServletRequest;Ljavax.servlet.ServletResponse;Ljavax.servlet.FilterChain;)V(Optimized Method)&lt;br/&gt;
	at org.acegisecurity.util.FilterToBeanProxy.doFilter(Ljavax.servlet.ServletRequest;Ljavax.servlet.ServletResponse;Ljavax.servlet.FilterChain;)V(Optimized Method)&lt;br/&gt;
	at weblogic.servlet.internal.WebAppServletContext$ServletInvocationAction.run()Ljava.lang.Object;(Optimized Method)&lt;br/&gt;
	at weblogic.security.acl.internal.AuthenticatedSubject.doAs(Lweblogic.security.subject.AbstractSubject;Ljava.security.PrivilegedAction;)Ljava.lang.Object;(Optimized Method)&lt;br/&gt;
	at weblogic.security.service.SecurityManager.runAs(Lweblogic.security.acl.internal.AuthenticatedSubject;Lweblogic.security.acl.internal.AuthenticatedSubject;Ljava.security.PrivilegedAction;)Ljava.lang.Object;(Optimized Method)&lt;br/&gt;
	at weblogic.servlet.internal.WebAppServletContext.invokeServlet(Lweblogic.servlet.internal.ServletRequestImpl;Lweblogic.servlet.internal.ServletResponseImpl;)V(Optimized Method)&lt;br/&gt;
	at weblogic.servlet.internal.ServletRequestImpl.execute(Lweblogic.kernel.ExecuteThread;)V(Optimized Method)&lt;br/&gt;
	at weblogic.kernel.ExecuteThread.execute(Lweblogic.kernel.ExecuteRequest;)V(Optimized Method)&lt;br/&gt;
	at weblogic.kernel.ExecuteThread.run()V(ExecuteThread.java:178)&lt;br/&gt;
	at java.lang.Thread.startThreadFromVM(Ljava.lang.Thread;)V(Unknown Source)&lt;br/&gt;
&amp;gt;&lt;/p&gt;</comment>
                            <comment id="23984" author="balex" created="Thu, 24 May 2007 12:42:26 +0000"  >&lt;p&gt;Modified SessionRegistryImpl to remove session if already detected. This is a reasonable approach, as a particular session should only be associated with a particular principal. Also made the SessionRegistryImpl.registerNewSession(String,Object) method synchronized, and removed the now superfluous session deregistration step from the ConcurrentSessionController.registerSuccessfulAuthentication(Authenticaion) method.&lt;/p&gt;

&lt;p&gt;Tests pass.&lt;/p&gt;

&lt;p&gt;SVN revision 1862.&lt;/p&gt;</comment>
                            <comment id="50192" author="tlc" created="Wed, 13 Jan 2010 09:42:21 +0000"  >&lt;p&gt;I have a newer version of this which I think is better.&lt;br/&gt;
I dont know how to submit it or get reviewed or basically anything (I am a blank slate here.)&lt;/p&gt;

&lt;p&gt;The one which I think is current has three versions of locking in it, one on each map, one on the sessions and one sync on the session registry impl.  I had to do some DB access on top of this adding a 4th and was seeing the DB lockup.  I implemented a finer grained single locker for this class.  Hopefully i am not out of date.&lt;/p&gt;</comment>
                            <comment id="126421" author="issuemaster" created="Sat, 6 Feb 2016 06:32:43 +0000"  >&lt;p&gt;This issue has been migrated to &lt;a href=&quot;https://github.com/spring-projects/spring-security/issues/705&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/spring-projects/spring-security/issues/705&lt;/a&gt;&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 23 May 2007 12:21:38 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10280" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>20397</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i01zj3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>11633</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10381" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Ranking</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>11579</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>