<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Fri Dec 23 09:48:44 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SEC-3108/SEC-3108.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SEC-3108] DigestAuthenticationFilter should use SecurityContextHolder.createEmptyContext()</title>
                <link>https://jira.spring.io/browse/SEC-3108</link>
                <project id="10040" key="SEC">Spring Security</project>
                    <description>&lt;p&gt;When using Digest authentication and there are concurrent requests from the same session, it is possible that the Authentication object returned by SessionContextHolder.getContext().getAuthentication() does not have its authorities set. Then, e.g. HttpServletRequest.isUserInRole() returns sometimes incorrectly false even if the user actually has that role.&lt;/p&gt;

&lt;p&gt;This happens because with Digest authentication, constructing the Authentication object is done in two steps, but the incomplete Authentication object is made visible to another threads after first step.&lt;/p&gt;

&lt;p&gt;Consider the following scenario:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;User logs in to the system, a session is created, JSESSIONID is set, and user uses the system for some time.&lt;/li&gt;
	&lt;li&gt;User makes request 1 to the server. This request has a header &quot;Authorization: Digest ...&quot;&lt;/li&gt;
	&lt;li&gt;DigestAuthenticationFilter starts the authentication process and places an incomplete Authentication object (without authorities) into SecurityContext.&lt;/li&gt;
	&lt;li&gt;Simultaneously with request 1, the same user makes request 2 to the server. This request does not have &quot;Authorization: Digest ...&quot; header, so no re-authentication is done. While processing request 2, request.isUserInRole() returns now false, because the Authentication object in SecurityContext does not have any authorities. User gets incorrectly a 403 Forbidden response.&lt;/li&gt;
	&lt;li&gt;Request 1 continues the authentication process, and in AbstractSecurityInterceptor, a fully populated Authentication object is created and put into SecurityContext.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I could set createAuthenticatedToken = true in DigestAuthenticationFilter, but the comment on the set method says that user flags like isEnabled() or isAccountNonExpired() are not checked in that case, so this is not a solution.&lt;/p&gt;</description>
                <environment></environment>
        <key id="65890">SEC-3108</key>
            <summary>DigestAuthenticationFilter should use SecurityContextHolder.createEmptyContext()</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="rwinch">Rob Winch</assignee>
                                    <reporter username="krisse7">Kristian Laakkonen</reporter>
                        <labels>
                    </labels>
                <created>Fri, 18 Sep 2015 08:48:30 +0000</created>
                <updated>Sat, 6 Feb 2016 06:30:28 +0000</updated>
                            <resolved>Tue, 27 Oct 2015 19:00:38 +0000</resolved>
                                    <version>4.0.2</version>
                                    <fixVersion>3.2.9</fixVersion>
                    <fixVersion>4.0.3</fixVersion>
                    <fixVersion>4.1.0 M1</fixVersion>
                                    <component>Web</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>4</watches>
                                                                <comments>
                            <comment id="120234" author="rwinch" created="Fri, 2 Oct 2015 17:25:31 +0000"  >&lt;p&gt;Can you expand on how&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;DigestAuthenticationFilter provides an incomplete Authentication object (without authorities) into SecurityContext?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;As far as I can tell this would only happen if the provided &lt;tt&gt;UserDetailsService&lt;/tt&gt; returns a &lt;tt&gt;UserDetails&lt;/tt&gt; without any granted authorities. If that is the case, then it is the responsibility of the &lt;tt&gt;UserDetailsService&lt;/tt&gt; to return the correct roles for the user.&lt;/p&gt;

&lt;p&gt;I&apos;m also interested in why and how &lt;tt&gt;AbstractSecurityInterceptor&lt;/tt&gt; is populating the &lt;tt&gt;Authentication&lt;/tt&gt; object with roles. Why wouldn&apos;t you just ensure that &lt;tt&gt;DigestAuthenticationFilter&lt;/tt&gt; provides the complete &lt;tt&gt;Authentication&lt;/tt&gt;?&lt;/p&gt;</comment>
                            <comment id="120241" author="krisse7" created="Fri, 2 Oct 2015 19:36:51 +0000"  >&lt;blockquote&gt;
&lt;p&gt;Can you expand on how&lt;/p&gt;

&lt;p&gt;    DigestAuthenticationFilter provides an incomplete Authentication object (without authorities) into SecurityContext?&lt;/p&gt;

&lt;p&gt;As far as I can tell this would only happen if the provided UserDetailsService returns a UserDetails without any granted authorities. If that is the case, then it is the responsibility of the UserDetailsService to return the correct roles for the user.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The Authentication object is constructed from a UserDetails object in DigestAuthenticationFilter.java, line 233. If createAuthenticatedToken is false, the authorities are not copied from UserDetails, and the Authentication object is created without authorities.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I&apos;m also interested in why and how AbstractSecurityInterceptor is populating the Authentication object with roles. Why wouldn&apos;t you just ensure that DigestAuthenticationFilter provides the complete Authentication?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;AbstractSecurityInterceptor calls AuthenticationManager.authenticate() in AbstractSecurityInterceptor.java, line 353 and finally we end up in AbstractUserDetailsAuthenticationProvider.java, line 125 where a new Authentication token is created with the authorities set.&lt;/p&gt;

&lt;p&gt;I don&apos;t know why the full authentication process is not carried out in DigestAuthenticationFilter and AuthenticationManager is not used there and instead UserDetailsService is accessed directly. Actually &lt;a href=&quot;http://docs.spring.io/spring-security/site/docs/current/reference/html/basic.html#digest-processing-filter&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;Spring Security Reference&lt;/a&gt; says that UserDetailsService is needed because &lt;cite&gt;DigestAuthenticationFilter must have direct access to the clear text password of a user&lt;/cite&gt;.&lt;/p&gt;</comment>
                            <comment id="120245" author="rwinch" created="Fri, 2 Oct 2015 19:50:33 +0000"  >&lt;p&gt;Thank you for the explanation. Can you set createAuthenticatedToken to true?&lt;/p&gt;</comment>
                            <comment id="120246" author="krisse7" created="Fri, 2 Oct 2015 20:06:34 +0000"  >&lt;p&gt;Setting createAuthenticatedToken to true would mean that disabled users could log in, which is not acceptable. According to documentation and code it seems that the isEnabled() flag of UserDetails is not checked in that case (I have not actually tested it).&lt;/p&gt;</comment>
                            <comment id="120247" author="rwinch" created="Fri, 2 Oct 2015 20:14:57 +0000"  >&lt;p&gt;So getting the the heart of the problem...it sounds as though you need to be able to inject a UserDetailsChecker to verify the state of the user details. Does that sound right?&lt;/p&gt;

&lt;p&gt;One workaround is to perform this verification in the UserDetailsService itself. This would ensure that you were able to get past your issue until we can get a release out.&lt;/p&gt;</comment>
                            <comment id="120248" author="krisse7" created="Fri, 2 Oct 2015 20:48:03 +0000"  >&lt;p&gt;Being able to inject a UserDetailsChecker and then setting createAuthenticatedToken to true would probably solve the problem in my case, yes. But the original concurrency problem is still there... I think there should be at least some documentation then that createAuthenticatedToken must be true if there can be concurrent requests.&lt;/p&gt;</comment>
                            <comment id="120250" author="rwinch" created="Fri, 2 Oct 2015 21:50:49 +0000"  >&lt;p&gt;Honestly, I&apos;m still a little confused on the concurrency issue.&lt;/p&gt;

&lt;p&gt;I understand that in request 1 the &lt;tt&gt;Authentication&lt;/tt&gt; gets set on the &lt;tt&gt;SecurityContextHolder&lt;/tt&gt; without roles. However, the &lt;tt&gt;SecurityContext&lt;/tt&gt; will not be set in &lt;tt&gt;HttpSession&lt;/tt&gt; until the &lt;tt&gt;HttpResponse&lt;/tt&gt; is committed.&lt;/p&gt;

&lt;p&gt;Without the response being committed the client will not be able to access the &lt;tt&gt;JSESSIONID&lt;/tt&gt; to make request 2 using the &lt;tt&gt;HttpSession&lt;/tt&gt; from request 1. Even if the client knew the &lt;tt&gt;JSESSIONID&lt;/tt&gt;, the &lt;tt&gt;SecurityContext&lt;/tt&gt; would be empty until the &lt;tt&gt;HttpResponse&lt;/tt&gt; was committed since the value from &lt;tt&gt;SecurityContextHolder&lt;/tt&gt; is not written to &lt;tt&gt;HttpSession&lt;/tt&gt; until the &lt;tt&gt;HttpResponse&lt;/tt&gt; is committed.&lt;/p&gt;

&lt;p&gt;So my question is, &quot;What is committing the &lt;tt&gt;HttpResponse&lt;/tt&gt; before &lt;tt&gt;AbstractSecurityInterceptor&lt;/tt&gt; is invoked?&quot;&lt;/p&gt;</comment>
                            <comment id="120264" author="krisse7" created="Sat, 3 Oct 2015 14:13:29 +0000"  >&lt;p&gt;In my example the user has already been authenticated and the session has been created before requests 1 and 2 so SecurityContext and JSESSIONID are already available.&lt;/p&gt;

&lt;p&gt;Browsers may send the Digest Authorization header even after the user has already been authenticated. This causes the DigestAuthenticationFilter to do the authentication procedure again and if there are two simultaneous requests that send the header, the problem appears.&lt;/p&gt;</comment>
                            <comment id="120292" author="rwinch" created="Mon, 5 Oct 2015 13:30:03 +0000"  >&lt;p&gt;Thanks for the explanation. The reason this is causing an issue is due to the fact that:&lt;/p&gt;

&lt;p/&gt;
&lt;div id=&quot;syntaxplugin&quot; class=&quot;syntaxplugin&quot; style=&quot;border: 1px dashed #bbb; border-radius: 5px !important; overflow: auto; max-height: 30em;&quot;&gt;
&lt;table cellspacing=&quot;0&quot; cellpadding=&quot;0&quot; border=&quot;0&quot; width=&quot;100%&quot; style=&quot;font-size: 1em; line-height: 1.4em !important; font-weight: normal; font-style: normal; color: black;&quot;&gt;
		&lt;tbody &gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;  margin-top: 10px;   margin-bottom: 10px;  width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;SecurityContextHolder.getContext().setAuthentication(...);&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
			&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;p/&gt;

&lt;p&gt;is being used. This would not be an issue when a new session is created. However, since the session already exists it is updating the same SecurityContext instance that the other sessions are referring to. If we use&lt;/p&gt;

&lt;p/&gt;
&lt;div id=&quot;syntaxplugin&quot; class=&quot;syntaxplugin&quot; style=&quot;border: 1px dashed #bbb; border-radius: 5px !important; overflow: auto; max-height: 30em;&quot;&gt;
&lt;table cellspacing=&quot;0&quot; cellpadding=&quot;0&quot; border=&quot;0&quot; width=&quot;100%&quot; style=&quot;font-size: 1em; line-height: 1.4em !important; font-weight: normal; font-style: normal; color: black;&quot;&gt;
		&lt;tbody &gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;  margin-top: 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;SecurityContext context = SecurityContextHolder.createEmptyContext();&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;context.setAuthentication(...);&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   margin-bottom: 10px;  width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;SecurityContextHolder.setContext(context);&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
			&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;p/&gt;

&lt;p&gt;we would no longer be updating the SecurityContext other threads are referring to. This would mean the SecurityContext with no authorities would not be available until the response was committed (after the roles were then populated).&lt;/p&gt;</comment>
                            <comment id="120309" author="krisse7" created="Mon, 5 Oct 2015 17:47:34 +0000"  >&lt;p&gt;Seems good to me. Thanks for taking time to investigate this.&lt;/p&gt;</comment>
                            <comment id="120997" author="rwinch" created="Tue, 27 Oct 2015 19:00:38 +0000"  >&lt;p&gt;Thanks for the report. This is now fixed in 3.2.x, 4.0.x, and master&lt;/p&gt;</comment>
                            <comment id="126169" author="issuemaster" created="Sat, 6 Feb 2016 06:30:28 +0000"  >&lt;p&gt;This issue has been migrated to &lt;a href=&quot;https://github.com/spring-projects/spring-security/issues/3310&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/spring-projects/spring-security/issues/3310&lt;/a&gt;&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 2 Oct 2015 17:25:31 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10280" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i08rr3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10381" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Ranking</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>