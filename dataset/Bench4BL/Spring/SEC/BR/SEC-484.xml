<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Fri Dec 23 10:09:47 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SEC-484/SEC-484.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SEC-484] SessionRegistryImpl.getAllSessions()  Bug?</title>
                <link>https://jira.spring.io/browse/SEC-484</link>
                <project id="10040" key="SEC">Spring Security</project>
                    <description>

&lt;p&gt;####&amp;lt;2007-5-25 &#19979;&#21320;08&#26102;47&#20998;49&#31186; CST&amp;gt; &amp;lt;Error&amp;gt; &amp;lt;HTTP&amp;gt; &amp;lt;win200310834&amp;gt; &amp;lt;myserver&amp;gt; &amp;lt;ExecuteThread: &apos;35&apos; for queue: &apos;weblogic.kernel.Default&apos;&amp;gt; &amp;lt;&amp;lt;WLS Kernel&amp;gt;&amp;gt; &amp;lt;&amp;gt; &amp;lt;BEA-101020&amp;gt; &amp;lt;&lt;span class=&quot;error&quot;&gt;&amp;#91;ServletContext(id=18816403,name=WebContent,context-path=/ride)&amp;#93;&lt;/span&gt; Servlet failed with Exception&lt;br/&gt;
java.lang.Throwable&lt;br/&gt;
	at java.util.HashMap$HashIterator.nextEntry()Ljava.util.HashMap$Entry;(Optimized Method)&lt;br/&gt;
	at java.util.HashMap$KeyIterator.next()Ljava.lang.Object;(Optimized Method)&lt;br/&gt;
	at org.acegisecurity.concurrent.SessionRegistryImpl.getAllSessions(Ljava.lang.Object;Z)[Lorg.acegisecurity.concurrent.SessionInformation;(SessionRegistryImpl.java:80)&lt;br/&gt;
	at org.acegisecurity.concurrent.ConcurrentSessionControllerImpl.checkAuthenticationAllowed(Lorg.acegisecurity.Authentication;)V(ConcurrentSessionControllerImpl.java:94)&lt;br/&gt;
	at org.acegisecurity.providers.ProviderManager.doAuthentication(Lorg.acegisecurity.Authentication;)Lorg.acegisecurity.Authentication;(ProviderManager.java:196)&lt;br/&gt;
	at org.acegisecurity.AbstractAuthenticationManager.authenticate(Lorg.acegisecurity.Authentication;)Lorg.acegisecurity.Authentication;(AbstractAuthenticationManager.java:45)&lt;br/&gt;
	at cn.ccb.ride.admin.util.auth.SecurityAuthenticationProcessingFilter.attemptAuthentication(Ljavax.servlet.http.HttpServletRequest;)Lorg.acegisecurity.Authentication;(SecurityAuthenticationProcessingFilter.java:125)&lt;br/&gt;
	at org.acegisecurity.ui.AbstractProcessingFilter.doFilter(Ljavax.servlet.ServletRequest;Ljavax.servlet.ServletResponse;Ljavax.servlet.FilterChain;)V(Optimized Method)&lt;br/&gt;
	at org.acegisecurity.util.FilterChainProxy$VirtualFilterChain.doFilter(Ljavax.servlet.ServletRequest;Ljavax.servlet.ServletResponse;)V(Optimized Method)&lt;br/&gt;
	at org.acegisecurity.ui.logout.LogoutFilter.doFilter(Ljavax.servlet.ServletRequest;Ljavax.servlet.ServletResponse;Ljavax.servlet.FilterChain;)V(Optimized Method)&lt;br/&gt;
	at org.acegisecurity.util.FilterChainProxy$VirtualFilterChain.doFilter(Ljavax.servlet.ServletRequest;Ljavax.servlet.ServletResponse;)V(Optimized Method)&lt;br/&gt;
	at org.acegisecurity.context.HttpSessionContextIntegrationFilter.doFilter(Ljavax.servlet.ServletRequest;Ljavax.servlet.ServletResponse;Ljavax.servlet.FilterChain;)V(Optimized Method)&lt;br/&gt;
	at org.acegisecurity.util.FilterChainProxy$VirtualFilterChain.doFilter(Ljavax.servlet.ServletRequest;Ljavax.servlet.ServletResponse;)V(Optimized Method)&lt;br/&gt;
	at org.acegisecurity.concurrent.ConcurrentSessionFilter.doFilter(Ljavax.servlet.ServletRequest;Ljavax.servlet.ServletResponse;Ljavax.servlet.FilterChain;)V(Optimized Method)&lt;br/&gt;
	at org.acegisecurity.util.FilterChainProxy$VirtualFilterChain.doFilter(Ljavax.servlet.ServletRequest;Ljavax.servlet.ServletResponse;)V(Optimized Method)&lt;br/&gt;
	at org.acegisecurity.util.FilterChainProxy.doFilter(Ljavax.servlet.ServletRequest;Ljavax.servlet.ServletResponse;Ljavax.servlet.FilterChain;)V(Optimized Method)&lt;br/&gt;
	at org.acegisecurity.util.FilterToBeanProxy.doFilter(Ljavax.servlet.ServletRequest;Ljavax.servlet.ServletResponse;Ljavax.servlet.FilterChain;)V(Optimized Method)&lt;br/&gt;
	at weblogic.servlet.internal.WebAppServletContext$ServletInvocationAction.run()Ljava.lang.Object;(Optimized Method)&lt;br/&gt;
	at weblogic.security.acl.internal.AuthenticatedSubject.doAs(Lweblogic.security.subject.AbstractSubject;Ljava.security.PrivilegedAction;)Ljava.lang.Object;(Optimized Method)&lt;br/&gt;
	at weblogic.security.service.SecurityManager.runAs(Lweblogic.security.acl.internal.AuthenticatedSubject;Lweblogic.security.acl.internal.AuthenticatedSubject;Ljava.security.PrivilegedAction;)Ljava.lang.Object;(Optimized Method)&lt;br/&gt;
	at weblogic.servlet.internal.WebAppServletContext.invokeServlet(Lweblogic.servlet.internal.ServletRequestImpl;Lweblogic.servlet.internal.ServletResponseImpl;)V(Optimized Method)&lt;br/&gt;
	at weblogic.servlet.internal.ServletRequestImpl.execute(Lweblogic.kernel.ExecuteThread;)V(Optimized Method)&lt;br/&gt;
	at weblogic.kernel.ExecuteThread.execute(Lweblogic.kernel.ExecuteRequest;)V(Optimized Method)&lt;br/&gt;
	at weblogic.kernel.ExecuteThread.run()V(ExecuteThread.java:178)&lt;br/&gt;
	at java.lang.Thread.startThreadFromVM(Ljava.lang.Thread;)V(Unknown Source)&lt;br/&gt;
&amp;gt; &lt;/p&gt;

&lt;p&gt;At the same time, getAllSessions() as followed.&lt;/p&gt;

&lt;p&gt;    public SessionInformation[] getAllSessions(Object principal,&lt;br/&gt;
        boolean includeExpiredSessions) {&lt;br/&gt;
        Set sessionsUsedByPrincipal = (Set) principals.get(principal);&lt;/p&gt;

&lt;p&gt;        if (sessionsUsedByPrincipal == null) &lt;/p&gt;
{
            return null;
        }

&lt;p&gt;        List list = new ArrayList();&lt;br/&gt;
        Iterator iter = sessionsUsedByPrincipal.iterator();&lt;/p&gt;

&lt;p&gt;        while (iter.hasNext()) {&lt;br/&gt;
            synchronized (sessionsUsedByPrincipal) {&lt;/p&gt;

&lt;p&gt;                String sessionId = (String) iter.next();&lt;br/&gt;
                SessionInformation sessionInformation = getSessionInformation(sessionId);&lt;/p&gt;

&lt;p&gt;                if (includeExpiredSessions || !sessionInformation.isExpired()) &lt;/p&gt;
{
                    list.add(sessionInformation);
                }
&lt;p&gt;            }&lt;br/&gt;
        }&lt;/p&gt;

&lt;p&gt;        return (SessionInformation[]) list.toArray(new SessionInformation[] {});&lt;br/&gt;
    }&lt;/p&gt;
</description>
                <environment></environment>
        <key id="16949">SEC-484</key>
            <summary>SessionRegistryImpl.getAllSessions()  Bug?</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="luke">Luke Taylor</assignee>
                                    <reporter username="worldheart">Shifei Luo</reporter>
                        <labels>
                    </labels>
                <created>Sun, 27 May 2007 12:42:57 +0000</created>
                <updated>Sat, 6 Feb 2016 06:33:06 +0000</updated>
                            <resolved>Thu, 30 Aug 2007 06:29:16 +0000</resolved>
                                    <version>1.0.4</version>
                                    <fixVersion>1.0.5</fixVersion>
                                    <component>Core</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>5</watches>
                                                                <comments>
                            <comment id="24029" author="worldheart" created="Sun, 27 May 2007 12:45:11 +0000"  >&lt;p&gt;About Env. WebLogic 8.1.4/Acegi 1.0.4/Spring 1.2.7&lt;/p&gt;
</comment>
                            <comment id="24192" author="darthvader" created="Wed, 6 Jun 2007 02:33:48 +0000"  >&lt;p&gt;I got nearly the same stack trace but with some more details:&lt;/p&gt;

&lt;p&gt;java.util.ConcurrentModificationException&lt;br/&gt;
	at java.util.HashMap$HashIterator.nextEntry(HashMap.java:793)&lt;br/&gt;
	at java.util.HashMap$KeyIterator.next(HashMap.java:827)&lt;br/&gt;
	at org.acegisecurity.concurrent.SessionRegistryImpl.getAllSessions(SessionRegistryImpl.java:80)&lt;br/&gt;
	at org.acegisecurity.concurrent.ConcurrentSessionControllerImpl.checkAuthenticationAllowed(ConcurrentSessionControllerImpl.java:92)&lt;br/&gt;
	at org.acegisecurity.providers.ProviderManager.doAuthentication(ProviderManager.java:189)&lt;br/&gt;
	at org.acegisecurity.AbstractAuthenticationManager.authenticate(AbstractAuthenticationManager.java:45)&lt;br/&gt;
	at org.acegisecurity.ui.rememberme.RememberMeProcessingFilter.doFilter(RememberMeProcessingFilter.java:109)&lt;br/&gt;
	at org.acegisecurity.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:274)&lt;br/&gt;
	at org.acegisecurity.context.HttpSessionContextIntegrationFilter.doFilter(HttpSessionContextIntegrationFilter.java:229)&lt;br/&gt;
	at org.acegisecurity.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:274)&lt;br/&gt;
	at org.acegisecurity.util.FilterChainProxy.doFilter(FilterChainProxy.java:148)&lt;br/&gt;
	at org.acegisecurity.util.FilterToBeanProxy.doFilter(FilterToBeanProxy.java:98)&lt;br/&gt;
        .....&lt;/p&gt;


&lt;p&gt;I think, the &apos;synchronized&apos; block must be extended to contain  the whole iteration, e.g.&lt;/p&gt;

&lt;p&gt;        List list = new ArrayList();&lt;br/&gt;
        synchronized (sessionsUsedByPrincipal) {&lt;br/&gt;
           Iterator iter = sessionsUsedByPrincipal.iterator();&lt;/p&gt;

&lt;p&gt;           while (iter.hasNext()) {&lt;/p&gt;

&lt;p&gt;                String sessionId = (String) iter.next();&lt;br/&gt;
                SessionInformation sessionInformation = getSessionInformation(sessionId);&lt;/p&gt;

&lt;p&gt;                if (includeExpiredSessions || !sessionInformation.isExpired()) &lt;/p&gt;
{
                    list.add(sessionInformation);
                }
&lt;p&gt;            }&lt;br/&gt;
        } &lt;/p&gt;

&lt;p&gt;BTW: using Acegi 1.0.3 here with Spring 2.0.3&lt;/p&gt;</comment>
                            <comment id="24962" author="vishal.puri" created="Sun, 22 Jul 2007 18:53:52 +0000"  >&lt;p&gt;This issue was caused by following code fragment out of the Synchronized block&lt;/p&gt;

&lt;p&gt; Iterator iter = sessionsUsedByPrincipal.iterator(); &lt;/p&gt;

&lt;p&gt;I have replaced the iteration of the Set by following code&lt;/p&gt;

&lt;p&gt;          synchronized (sessionsUsedByPrincipal) {&lt;br/&gt;
			for (Iterator iter = sessionsUsedByPrincipal.iterator(); iter&lt;br/&gt;
					.hasNext()&lt;img class=&quot;emoticon&quot; src=&quot;https://jira.spring.io/images/icons/emoticons/wink.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; {&lt;br/&gt;
				String sessionId = (String) iter.next();&lt;br/&gt;
				SessionInformation sessionInformation = getSessionInformation(sessionId);&lt;/p&gt;

&lt;p&gt;				if (includeExpiredSessions || !sessionInformation.isExpired()) &lt;/p&gt;
{
					list.add(sessionInformation);
				}
&lt;p&gt;			}&lt;br/&gt;
		}&lt;/p&gt;

&lt;p&gt;By this replacement we also minimized the scope of the iterator which is only a loop variable anyway. &lt;/p&gt;




</comment>
                            <comment id="24963" author="vishal.puri" created="Sun, 22 Jul 2007 18:55:46 +0000"  >&lt;p&gt;The updated code has been checked in the repository.&lt;/p&gt;</comment>
                            <comment id="25727" author="robmoore" created="Mon, 27 Aug 2007 06:36:37 +0000"  >&lt;p&gt;I&apos;ve been using the latest checked in version of this class which includes this fix and have occasionally experienced problems with NPE on sessionInformation on line 87 (if (includeExpiredSessions || !sessionInformation.isExpired()) { ) . I added a null check before referencing it and the problem has gone away. &lt;/p&gt;</comment>
                            <comment id="25824" author="luke" created="Wed, 29 Aug 2007 23:12:36 +0000"  >&lt;p&gt;This looks like it will happen when one thread calls  removeSessionInformation() and gets as far as &lt;/p&gt;

&lt;p&gt;sessionIds.remove(sessionId);&lt;/p&gt;

&lt;p&gt;but hasn&apos;t got as far as&lt;/p&gt;

&lt;p&gt;sessionsUsedByPrincipal.remove(sessionId);&lt;/p&gt;

&lt;p&gt;(or is waiting for the lock on sessionsUsedByPrincipal) held by another thread in getAllSessions(). The sessionId is then read from the sessionsUsedByPrincipal but there is no corresponding SessionInformation object when &lt;/p&gt;

&lt;p&gt;SessionInformation sessionInformation = getSessionInformation(sessionId); &lt;/p&gt;

&lt;p&gt;is called.&lt;/p&gt;

&lt;p&gt;A null check is probably sufficient, but I&apos;ll do some further investigation into the synchronization issues with this class. I&apos;m not sure why registerNewSession is a synchronized method, for example, so we have synchronization at the class level as well as on individual collections.&lt;/p&gt;
</comment>
                            <comment id="25825" author="luke" created="Wed, 29 Aug 2007 23:34:03 +0000"  >&lt;p&gt;registerNewSession was made synchronized as part of &lt;a href=&quot;https://jira.spring.io/browse/SEC-444&quot; title=&quot;Race condition inside ConcurrentSessionControllerImpl&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SEC-444&quot;&gt;&lt;del&gt;SEC-444&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="25841" author="luke" created="Thu, 30 Aug 2007 06:29:16 +0000"  >&lt;p&gt;I&apos;ve added the null check for 1.0.5 and added a new issue to review the concurrency issues with this class. &lt;a href=&quot;https://jira.spring.io/browse/SEC-543&quot; title=&quot;Review concurrency issues in SessionRegistryImpl&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SEC-543&quot;&gt;&lt;del&gt;SEC-543&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="126465" author="issuemaster" created="Sat, 6 Feb 2016 06:33:06 +0000"  >&lt;p&gt;This issue has been migrated to &lt;a href=&quot;https://github.com/spring-projects/spring-security/issues/745&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/spring-projects/spring-security/issues/745&lt;/a&gt;&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10020">
                    <name>Related</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="17803">SEC-543</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 6 Jun 2007 02:33:48 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10280" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>20360</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0270v:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>12847</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10381" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Ranking</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>12650</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>