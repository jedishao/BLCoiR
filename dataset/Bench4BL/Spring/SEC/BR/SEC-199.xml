<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Fri Dec 23 10:12:35 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SEC-199/SEC-199.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SEC-199] Contacts sample throws NestedServletException (500) instead of Access denied! (403) page</title>
                <link>https://jira.spring.io/browse/SEC-199</link>
                <project id="10040" key="SEC">Spring Security</project>
                    <description>&lt;p&gt;Logged on as &lt;/p&gt;

&lt;p&gt;Manually entered URL &lt;a href=&quot;http://localhost:8080/contacts/secure/del.htm?contactId=2&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://localhost:8080/contacts/secure/del.htm?contactId=2&lt;/a&gt;&lt;br/&gt;
NB - You have to manually enter the URL, but still, the behaviour doesn&apos;t appear to be as intended&lt;/p&gt;

&lt;p&gt;Tomcat throws:&lt;br/&gt;
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is org.acegisecurity.AccessDeniedException: Access is denied&lt;br/&gt;
...&lt;br/&gt;
root cause&lt;/p&gt;

&lt;p&gt;org.acegisecurity.AccessDeniedException: Access is denied&lt;/p&gt;</description>
                <environment>Tomcat 5.0.28&lt;br/&gt;
Win2K</environment>
        <key id="13418">SEC-199</key>
            <summary>Contacts sample throws NestedServletException (500) instead of Access denied! (403) page</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://jira.spring.io/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="balex">Ben Alex</assignee>
                                    <reporter username="katentim">Tim Nolan</reporter>
                        <labels>
                    </labels>
                <created>Thu, 23 Feb 2006 16:04:59 +0000</created>
                <updated>Sat, 6 Feb 2016 06:19:51 +0000</updated>
                            <resolved>Tue, 25 Apr 2006 15:11:27 +0000</resolved>
                                    <version>1.0.0 RC2</version>
                                    <fixVersion>1.0.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="16581" author="katentim" created="Thu, 23 Feb 2006 16:05:38 +0000"  >&lt;p&gt;Forgot to add - Logged on as marissa&lt;/p&gt;</comment>
                            <comment id="16788" author="katentim" created="Mon, 13 Mar 2006 12:08:48 +0000"  >&lt;p&gt;Can org.springframework.web.servlet.FrameworkServlet.processRequest be altered to not wrap runtime exceptions?&lt;/p&gt;</comment>
                            <comment id="16864" author="balex" created="Sat, 18 Mar 2006 09:37:22 +0000"  >&lt;p&gt;ExceptionTranslationFilter should be in the FilterChain and it should catch AccessDeniedException and send a more user-friendly 403 (SC_FORBIDDEN) response than an actual exception propagating up to the servlet container for default handling. Is ExceptionTranslationFilter in your filter chain?&lt;/p&gt;</comment>
                            <comment id="16865" author="katentim" created="Sat, 18 Mar 2006 13:09:08 +0000"  >&lt;p&gt;This was run on the contacts sample supplied with 1.0.0 RC2. The ExceptionTranslationFilter is present. You can reproduce it with the steps above (e.g. Log on as marissa, enter URL &lt;a href=&quot;http://localhost:8080/contacts/secure/del.htm?contactId=2&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://localhost:8080/contacts/secure/del.htm?contactId=2&lt;/a&gt;, depending on the context).&lt;/p&gt;

&lt;p&gt;AccessDeniedException isn&apos;t caught is because FrameworkServlet wraps it with NestedServletException. Below is the full trace.&lt;/p&gt;

&lt;p&gt;org.springframework.web.util.NestedServletException: Request processing failed; nested exception is org.acegisecurity.AccessDeniedException: Access is denied&lt;br/&gt;
	org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:408)&lt;br/&gt;
	org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:350)&lt;br/&gt;
	javax.servlet.http.HttpServlet.service(HttpServlet.java:689)&lt;br/&gt;
	javax.servlet.http.HttpServlet.service(HttpServlet.java:802)&lt;br/&gt;
	org.acegisecurity.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:292)&lt;br/&gt;
	org.acegisecurity.intercept.web.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)&lt;br/&gt;
	org.acegisecurity.intercept.web.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:79)&lt;br/&gt;
	org.acegisecurity.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:303)&lt;br/&gt;
	org.acegisecurity.ui.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:143)&lt;br/&gt;
	org.acegisecurity.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:303)&lt;br/&gt;
	org.acegisecurity.ui.switchuser.SwitchUserProcessingFilter.doFilter(SwitchUserProcessingFilter.java:382)&lt;br/&gt;
	org.acegisecurity.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:303)&lt;br/&gt;
	org.acegisecurity.providers.anonymous.AnonymousProcessingFilter.doFilter(AnonymousProcessingFilter.java:138)&lt;br/&gt;
	org.acegisecurity.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:303)&lt;br/&gt;
	org.acegisecurity.ui.rememberme.RememberMeProcessingFilter.doFilter(RememberMeProcessingFilter.java:174)&lt;br/&gt;
	org.acegisecurity.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:303)&lt;br/&gt;
	org.acegisecurity.ui.basicauth.BasicProcessingFilter.doFilter(BasicProcessingFilter.java:214)&lt;br/&gt;
	org.acegisecurity.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:303)&lt;br/&gt;
	org.acegisecurity.ui.AbstractProcessingFilter.doFilter(AbstractProcessingFilter.java:246)&lt;br/&gt;
	org.acegisecurity.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:303)&lt;br/&gt;
	org.acegisecurity.context.HttpSessionContextIntegrationFilter.doFilter(HttpSessionContextIntegrationFilter.java:220)&lt;br/&gt;
	org.acegisecurity.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:303)&lt;br/&gt;
	org.acegisecurity.util.FilterChainProxy.doFilter(FilterChainProxy.java:173)&lt;br/&gt;
	org.acegisecurity.util.FilterToBeanProxy.doFilter(FilterToBeanProxy.java:120)&lt;/p&gt;

&lt;p&gt;root cause&lt;/p&gt;

&lt;p&gt;org.acegisecurity.AccessDeniedException: Access is denied&lt;br/&gt;
	org.acegisecurity.vote.AffirmativeBased.decide(AffirmativeBased.java:83)&lt;br/&gt;
	org.acegisecurity.intercept.AbstractSecurityInterceptor.beforeInvocation(AbstractSecurityInterceptor.java:347)&lt;br/&gt;
	org.acegisecurity.intercept.method.aopalliance.MethodSecurityInterceptor.invoke(MethodSecurityInterceptor.java:77)&lt;br/&gt;
	org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:170)&lt;br/&gt;
	org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:100)&lt;br/&gt;
	org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:170)&lt;br/&gt;
	org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:176)&lt;br/&gt;
	$Proxy0.delete(Unknown Source)&lt;br/&gt;
	sample.contact.DeleteController.handleRequest(DeleteController.java:63)&lt;br/&gt;
	org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:45)&lt;br/&gt;
	org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:792)&lt;br/&gt;
	org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:726)&lt;br/&gt;
	org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:396)&lt;br/&gt;
	org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:350)&lt;br/&gt;
	javax.servlet.http.HttpServlet.service(HttpServlet.java:689)&lt;br/&gt;
	javax.servlet.http.HttpServlet.service(HttpServlet.java:802)&lt;br/&gt;
	org.acegisecurity.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:292)&lt;br/&gt;
	org.acegisecurity.intercept.web.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)&lt;br/&gt;
	org.acegisecurity.intercept.web.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:79)&lt;br/&gt;
	org.acegisecurity.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:303)&lt;br/&gt;
	org.acegisecurity.ui.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:143)&lt;br/&gt;
	org.acegisecurity.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:303)&lt;br/&gt;
	org.acegisecurity.ui.switchuser.SwitchUserProcessingFilter.doFilter(SwitchUserProcessingFilter.java:382)&lt;br/&gt;
	org.acegisecurity.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:303)&lt;br/&gt;
	org.acegisecurity.providers.anonymous.AnonymousProcessingFilter.doFilter(AnonymousProcessingFilter.java:138)&lt;br/&gt;
	org.acegisecurity.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:303)&lt;br/&gt;
	org.acegisecurity.ui.rememberme.RememberMeProcessingFilter.doFilter(RememberMeProcessingFilter.java:174)&lt;br/&gt;
	org.acegisecurity.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:303)&lt;br/&gt;
	org.acegisecurity.ui.basicauth.BasicProcessingFilter.doFilter(BasicProcessingFilter.java:214)&lt;br/&gt;
	org.acegisecurity.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:303)&lt;br/&gt;
	org.acegisecurity.ui.AbstractProcessingFilter.doFilter(AbstractProcessingFilter.java:246)&lt;br/&gt;
	org.acegisecurity.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:303)&lt;br/&gt;
	org.acegisecurity.context.HttpSessionContextIntegrationFilter.doFilter(HttpSessionContextIntegrationFilter.java:220)&lt;br/&gt;
	org.acegisecurity.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:303)&lt;br/&gt;
	org.acegisecurity.util.FilterChainProxy.doFilter(FilterChainProxy.java:173)&lt;br/&gt;
	org.acegisecurity.util.FilterToBeanProxy.doFilter(FilterToBeanProxy.java:120)&lt;/p&gt;</comment>
                            <comment id="17358" author="balex" created="Tue, 25 Apr 2006 14:16:25 +0000"  >&lt;p&gt;As per the other commenters in &lt;a href=&quot;https://jira.spring.io/browse/SEC-230&quot; title=&quot;ExceptionTranslationFilter does not catch AccessDeniedException with Spring MVC M2/M3&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SEC-230&quot;&gt;&lt;del&gt;SEC-230&lt;/del&gt;&lt;/a&gt;, I believe FrameworkServlet should throw RuntimeExceptions without wrapping them in a NestedRuntimeException. It&apos;s easy to add another catch block to FrameworkServlet to stop the wrapping taking place.&lt;/p&gt;

&lt;p&gt;Alternatively, we could detect a ServletException and then use getRootCause(). This would work because NestedRuntimeException passes the root cause argument to its ServletException superclass. I don&apos;t favour this approach, though, because we&apos;re just unwrapping a RuntimeException, and the whole notion of wrapping runtime exceptions seems against the Spring way of doing things. We&apos;d also be setting a precedent that ExceptionTranslationFilter is prepared to unwrap Acegi Security exceptions from a third party runtime exception, which I don&apos;t find ideal.&lt;/p&gt;

&lt;p&gt;Juergen, what do you think?&lt;/p&gt;</comment>
                            <comment id="17364" author="balex" created="Tue, 25 Apr 2006 15:11:27 +0000"  >&lt;p&gt;In view of Struts behaviour, as described in &lt;a href=&quot;https://jira.spring.io/browse/SEC-220&quot; title=&quot;Allow ExceptionTranslationFilter to not catch exceptions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SEC-220&quot;&gt;&lt;del&gt;SEC-220&lt;/del&gt;&lt;/a&gt;, it appears simplest to handle unwrapping nested runtime exceptions from ServletException.getRootCause(). This has now been committed to SVN, although I still believe FrameworkServlet shouldn&apos;t wrap it.&lt;/p&gt;</comment>
                            <comment id="124950" author="issuemaster" created="Sat, 6 Feb 2016 06:19:51 +0000"  >&lt;p&gt;This issue has been migrated to &lt;a href=&quot;https://github.com/spring-projects/spring-security/issues/460&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/spring-projects/spring-security/issues/460&lt;/a&gt;&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10011">
                    <name>Depends</name>
                                                                <inwardlinks description="is depended on by">
                                        <issuelink>
            <issuekey id="13518">SEC-220</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10000">
                    <name>Duplicate</name>
                                                                <inwardlinks description="is duplicated by">
                                        <issuelink>
            <issuekey id="13542">SEC-230</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sat, 18 Mar 2006 09:37:22 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10280" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>20629</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i021zz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>12033</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10381" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Ranking</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>11918</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>