<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Fri Dec 23 10:01:03 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SEC-951/SEC-951.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SEC-951] Acl Serialization Errors that cohere with parent-child-structure of Acls.</title>
                <link>https://jira.spring.io/browse/SEC-951</link>
                <project id="10040" key="SEC">Spring Security</project>
                    <description>&lt;p&gt;I found 2 bugs that cohere with a parent-child-structure of the acls.&lt;/p&gt;

&lt;p&gt;1. Bug&lt;br/&gt;
the serialization problems occur because the object graph that is passed to the cache contains Objects the are not serializable:&lt;br/&gt;
the error log contians the &quot; &apos;org.springframework.security.acls.jdbc.BasicLookupStrategy&apos; not serializable&quot;- exception. so i wondered how this class can be part of the object graph. The answer is: The AclImpl still contains references to the private class StubAclParent that is an inner class of org.springframework.security.acls.jdbc.BasicLookupStrategy. That is the link between the serialization problems and the &quot; &apos;org.springframework.security.acls.jdbc.BasicLookupStrategy&apos; not serializable&quot;- exception.&lt;/p&gt;

&lt;p&gt;How can that happen?&lt;/p&gt;

&lt;p&gt;It is the job of the convert method to replace the stubaclparents by real acls. But this method does not work properly:&lt;/p&gt;

&lt;p&gt;The acl-field of the aces still points to an unreal AclImpl.&lt;/p&gt;

&lt;p&gt;to fix this the convert method could be changed like this&lt;/p&gt;

&lt;p&gt;    private AclImpl convert(Map inputMap, Long currentIdentity) throws IllegalArgumentException, IllegalAccessException {&lt;br/&gt;
        Assert.notEmpty(inputMap, &quot;InputMap required&quot;);&lt;br/&gt;
        Assert.notNull(currentIdentity, &quot;CurrentIdentity required&quot;);&lt;/p&gt;

&lt;p&gt;        // Retrieve this Acl from the InputMap&lt;br/&gt;
        Acl uncastAcl = (Acl) inputMap.get(currentIdentity);&lt;br/&gt;
        Assert.isInstanceOf(AclImpl.class, uncastAcl, &quot;The inputMap contained a non-AclImpl&quot;);&lt;/p&gt;

&lt;p&gt;        AclImpl inputAcl = (AclImpl) uncastAcl;&lt;/p&gt;

&lt;p&gt;        Acl parent = inputAcl.getParentAcl();&lt;/p&gt;

&lt;p&gt;        if ((parent != null) &amp;amp;&amp;amp; parent instanceof StubAclParent) &lt;/p&gt;
{
            // Lookup the parent
            StubAclParent stubAclParent = (StubAclParent) parent;
            parent = convert(inputMap, stubAclParent.getId());
        }

&lt;p&gt;        // Now we have the parent (if there is one), create the true AclImpl&lt;br/&gt;
        AclImpl result = new AclImpl(inputAcl.getObjectIdentity(), (Long) inputAcl.getId(), aclAuthorizationStrategy,&lt;br/&gt;
                auditLogger, parent, null, inputAcl.isEntriesInheriting(), inputAcl.getOwner());&lt;/p&gt;

&lt;p&gt;        // Copy the &quot;aces&quot; from the input to the destination&lt;br/&gt;
        Field fieldAces = FieldUtils.getField(AclImpl.class, &quot;aces&quot;);&lt;/p&gt;

&lt;p&gt;        //try {&lt;br/&gt;
         fieldAces.setAccessible(true);&lt;br/&gt;
            List aces = (List) fieldAces.get(inputAcl);&lt;br/&gt;
            List acesN = new Vector();&lt;br/&gt;
            Iterator i = aces.iterator();&lt;/p&gt;

&lt;p&gt;// replace the old aclImpl (that contains StubAclParents) by the new one.&lt;br/&gt;
            while(i.hasNext()) &lt;/p&gt;
{
             AccessControlEntryImpl ace = (AccessControlEntryImpl) i.next();
             Field fieldAcl = FieldUtils.getField(AccessControlEntryImpl.class, &quot;acl&quot;);
             fieldAcl.setAccessible(true);
             fieldAcl.set(ace, result);
             acesNew.add(ace);
            }
&lt;p&gt;            fieldAces.set(result, acesNew);&lt;br/&gt;
        //} catch (IllegalAccessException ex) &lt;/p&gt;
{
            //throw new IllegalStateException(&quot;Could not obtain or set AclImpl.ace field&quot;);
        //}

&lt;p&gt;        return result;&lt;br/&gt;
    }&lt;/p&gt;




&lt;p&gt;2. Bug&lt;/p&gt;

&lt;p&gt;EhCacheBasedAclCache does not initialize the transient fields of the parent acls which causes nullpointerexceptions.&lt;/p&gt;</description>
                <environment></environment>
        <key id="23558">SEC-951</key>
            <summary>Acl Serialization Errors that cohere with parent-child-structure of Acls.</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="luke">Luke Taylor</assignee>
                                    <reporter username="derkaiser">Emanuel</reporter>
                        <labels>
                    </labels>
                <created>Sat, 9 Aug 2008 05:58:54 +0000</created>
                <updated>Sat, 6 Feb 2016 06:38:25 +0000</updated>
                            <resolved>Mon, 31 Aug 2009 06:19:14 +0000</resolved>
                                    <version>2.0.0 M1</version>
                    <version>2.0.0 M2</version>
                    <version>2.0.0 RC1</version>
                    <version>2.0.0</version>
                    <version>2.0.1</version>
                    <version>2.0.2</version>
                    <version>2.0.3</version>
                                    <fixVersion>3.0.0 RC1</fixVersion>
                                    <component>ACLs</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="39459" author="balex" created="Thu, 4 Sep 2008 16:33:48 +0000"  >&lt;p&gt;Modified BasicLookupStrategy with suggested fix. Tests pass. Checked in as SVN revision 3270.&lt;/p&gt;

&lt;p&gt;Marking this issue as &quot;resolved&quot; as opposed to &quot;closed&quot;, but to the difficulty in reproducing it. Would those who originally reported this issue (and the &lt;a href=&quot;https://jira.spring.io/browse/SEC-527&quot; title=&quot;Serialization Error in ACL cacheing (new acls packages)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SEC-527&quot;&gt;&lt;del&gt;SEC-527&lt;/del&gt;&lt;/a&gt;) kindly comment this issue to confirm the issue is resolved in Spring Security 2.0.4.&lt;/p&gt;</comment>
                            <comment id="39516" author="derkaiser" created="Sun, 7 Sep 2008 21:52:37 +0000"  >&lt;p&gt;EhCacheBasedAclCache does not initialize the transient fields of the parent acls which causes nullpointerexceptions. &lt;/p&gt;

&lt;p&gt;the method &apos;initializetransientfields&apos; has to call itself to initialize the transient fields of each parentacl.&lt;/p&gt;

&lt;p&gt;    private MutableAcl initializeTransientFields(MutableAcl value) {&lt;br/&gt;
    	if (value instanceof AclImpl) {   		&lt;br/&gt;
    		FieldUtils.setProtectedFieldValue(&quot;aclAuthorizationStrategy&quot;, value, this.aclAuthorizationStrategy);&lt;br/&gt;
    		FieldUtils.setProtectedFieldValue(&quot;auditLogger&quot;, value, this.auditLogger);&lt;br/&gt;
    		if(value.getParentAcl() != null) &lt;/p&gt;
{
    			initializeTransientFields((MutableAcl) value.getParentAcl());
    		}
&lt;p&gt;    	}&lt;br/&gt;
    	return value;&lt;br/&gt;
	}&lt;/p&gt;
</comment>
                            <comment id="39998" author="balex" created="Tue, 30 Sep 2008 09:23:05 +0000"  >&lt;p&gt;Does this remain a problem in 2.0.4?&lt;/p&gt;</comment>
                            <comment id="40268" author="derkaiser" created="Sun, 12 Oct 2008 05:41:33 +0000"  >&lt;p&gt;Yes it does. &lt;br/&gt;
the method &apos;initializetransientfields&apos; has to call itself to initialize the transient fields of each parentacl!&lt;/p&gt;

&lt;p&gt;The Method can be changed like this:&lt;/p&gt;


&lt;p&gt;    private MutableAcl initializeTransientFields(MutableAcl value) {&lt;br/&gt;
     if (value instanceof AclImpl) {&lt;br/&gt;
     FieldUtils.setProtectedFieldValue(&quot;aclAuthorizationStrategy&quot;, value, this.aclAuthorizationStrategy);&lt;br/&gt;
     FieldUtils.setProtectedFieldValue(&quot;auditLogger&quot;, value, this.auditLogger);&lt;br/&gt;
     if(value.getParentAcl() != null) &lt;/p&gt;
{
     initializeTransientFields((MutableAcl) value.getParentAcl());
     }
&lt;p&gt;     }&lt;br/&gt;
     return value;&lt;br/&gt;
} &lt;/p&gt;</comment>
                            <comment id="46415" author="luke" created="Mon, 31 Aug 2009 06:19:14 +0000"  >&lt;p&gt;I&apos;ve modified the tests to reproduce this issue. This was quite tricky as you have to make sure that Ehcache isn&apos;t returning a the value from its diskstore spool, rather than the disk. Ehcache writes the spool asynchronously in another thread and the test may read back the value from the spool rather than getting a de-serialized copy.&lt;/p&gt;

&lt;p&gt;I&apos;ve applied the suggested patch (a recursive call on the parent Acl).&lt;/p&gt;</comment>
                            <comment id="126976" author="issuemaster" created="Sat, 6 Feb 2016 06:38:25 +0000"  >&lt;p&gt;This issue has been migrated to &lt;a href=&quot;https://github.com/spring-projects/spring-security/issues/1207&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/spring-projects/spring-security/issues/1207&lt;/a&gt;&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10020">
                    <name>Related</name>
                                            <outwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="17678">SEC-527</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="15659" name="mylyn-context.zip" size="102289" author="luke" created="Mon, 31 Aug 2009 06:12:18 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 4 Sep 2008 16:33:48 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10280" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>19942</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i01cb3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>7871</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10381" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Ranking</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>8305</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>