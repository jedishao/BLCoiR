<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Fri Dec 23 11:16:04 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SEC-1709/SEC-1709.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SEC-1709] AbstractAuthenticationToken does not define a serialVersionUID</title>
                <link>https://jira.spring.io/browse/SEC-1709</link>
                <project id="10040" key="SEC">Spring Security</project>
                    <description>&lt;p&gt;Similar to &lt;a href=&quot;https://jira.spring.io/browse/SEC-338&quot; title=&quot;Serialization Issues for Authentication implementations&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SEC-338&quot;&gt;&lt;del&gt;SEC-338&lt;/del&gt;&lt;/a&gt;, org.springframework.security.authentication.AbstractAuthenticationToken does not define a serialVersionUID. This is causing failures in our development environment because we pass an authentication token around in RMI (thus the serialization). The exception is:&lt;/p&gt;

&lt;p&gt;2011-03-26 13:29:11,278 ERROR &lt;span class=&quot;error&quot;&gt;&amp;#91;STDERR&amp;#93;&lt;/span&gt; (http-0.0.0.0-8280-1) Caused by: org.springframework.remoting.RemoteAccessException: Could not access remote service &lt;span class=&quot;error&quot;&gt;&amp;#91;rmi://x.x.x.x:x/RmiAdapter&amp;#93;&lt;/span&gt;; nested exception is java.rmi.ServerException: RemoteException occurred in server thread; nested exception is: &lt;br/&gt;
       java.rmi.UnmarshalException: error unmarshalling arguments; nested exception is: &lt;br/&gt;
       java.io.InvalidClassException: org.springframework.security.authentication.AbstractAuthenticationToken; local class incompatible: stream classdesc serialVersionUID = -3194696462184782834, local class serialVersionUID = 1043617290326266361&lt;/p&gt;

&lt;p&gt;Please add a serialVersionUID to AbstractAuthenticationToken and it&apos;s subclasses. Or, since this has come up before in other classes (&lt;a href=&quot;https://jira.spring.io/browse/SEC-338&quot; title=&quot;Serialization Issues for Authentication implementations&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SEC-338&quot;&gt;&lt;del&gt;SEC-338&lt;/del&gt;&lt;/a&gt;, etc), add serialVersionUID&apos;s to all serializable classes. It&apos;s an Eclipse compile option that we require for all of our code.&lt;/p&gt;</description>
                <environment></environment>
        <key id="37378">SEC-1709</key>
            <summary>AbstractAuthenticationToken does not define a serialVersionUID</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="luke">Luke Taylor</assignee>
                                    <reporter username="jeff.martin">Jeff Martin</reporter>
                        <labels>
                    </labels>
                <created>Thu, 7 Apr 2011 09:17:34 +0000</created>
                <updated>Sat, 6 Feb 2016 06:16:54 +0000</updated>
                            <resolved>Mon, 25 Apr 2011 14:50:03 +0000</resolved>
                                    <version>3.0.5</version>
                                    <fixVersion>3.1.0.RC2</fixVersion>
                                    <component>Build and Admin</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="65165" author="luke" created="Thu, 7 Apr 2011 10:35:57 +0000"  >&lt;p&gt;This isn&apos;t a major bug, as it has been a deliberate policy to avoid making any guarantee of compatibility of serialized classes between versions. Serialization is a bit of a minefield and a maintenance headache, so we have avoided attempting to maintain a serializability contract between versions.&lt;/p&gt;

&lt;p&gt;I would recommend that you use the same Spring Security version on both client and server, and it may also be a good idea to customize the Authentication object used and implement readObject and writeObject explicitly. This may also allow you to produce a more compact representation which would be preferable for use in client/server applications.&lt;/p&gt;
</comment>
                            <comment id="65166" author="jeff.martin" created="Thu, 7 Apr 2011 11:00:15 +0000"  >&lt;p&gt;I should have mentioned it but we are using the same Spring Security version on the client and the server. The difference (for us) is that even minor releases of the JDK affect how the serialVersionUID is calculated if not explicitly specified (Sun/Oracle Java 6.0.16 and 6.0.23 in this case).&lt;/p&gt;</comment>
                            <comment id="65168" author="luke" created="Thu, 7 Apr 2011 11:49:34 +0000"  >&lt;p&gt;Hmm. That is a pain. I would have expected the JVM algorithm to be the same. In fact it sounds like a VM bug. Given that&apos;s the situation, we should probably conside adding a fixed ID, even though we will still explicitly require that the same Spring Security version is used.&lt;/p&gt;</comment>
                            <comment id="65664" author="luke" created="Mon, 25 Apr 2011 14:50:03 +0000"  >&lt;p&gt;I&apos;ve added a fixed static value to the SpringSecurityCoreVersion which is now used as the serializationVersionUID values for security context, authentication tokens and related classes.&lt;/p&gt;

&lt;p&gt;Commit log was accidentally labelled as &lt;a href=&quot;https://jira.spring.io/browse/SEC-1700&quot; title=&quot;IOException in JaasAuthenticationProvider when loginConfig is a classpath resource in JBoss 5.1.0.GA&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SEC-1700&quot;&gt;&lt;del&gt;SEC-1700&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="124649" author="issuemaster" created="Sat, 6 Feb 2016 06:16:54 +0000"  >&lt;p&gt;This issue has been migrated to &lt;a href=&quot;https://github.com/spring-projects/spring-security/issues/1945&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/spring-projects/spring-security/issues/1945&lt;/a&gt;&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 7 Apr 2011 10:35:57 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10280" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>12877</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i03xxj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>23039</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10381" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Ranking</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>19528</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>