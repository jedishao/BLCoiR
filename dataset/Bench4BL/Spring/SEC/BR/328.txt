AbstractUserDetailsAuthenticationProvider makes two hits when no cache is used.
If you look at AbstractUserDetailsAuthenticationProvider.authenticate, you'll notice that in case of failure, Acegi suppose that it is due to a cache synchronization problem and make a second retrieveUser.
But if you use no cache, your information were already up to date and retrieveUser is still called...
I think that this snippet (l. 148-151):
 // There was a problem, so try again after checking we're using latest data
cacheWasUsed = false;
user = retrieveUser(username, (UsernamePasswordAuthenticationToken) authentication);
additionalAuthenticationChecks(user, (UsernamePasswordAuthenticationToken) authentication);
has to be changed to that :
if(cacheWasUsed) 
{
            // There was a problem, so try again after checking we&amp;apos;re using latest data
            cacheWasUsed = false;
            user = retrieveUser(username, (UsernamePasswordAuthenticationToken) authentication);
            additionalAuthenticationChecks(user, (UsernamePasswordAuthenticationToken) authentication);
 }
 else {
            throw exception
}
It'll avoid an useless double check...