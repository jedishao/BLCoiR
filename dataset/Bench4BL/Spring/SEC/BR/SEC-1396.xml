<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Fri Dec 23 09:49:25 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SEC-1396/SEC-1396.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SEC-1396] Race condition between HttpSessionContextIntegrationFilter and SessionFixationProtectionFilter</title>
                <link>https://jira.spring.io/browse/SEC-1396</link>
                <project id="10040" key="SEC">Spring Security</project>
                    <description>&lt;p&gt;There seems to be a race condition between processing in the HttpSessionContextIntegrationFilter and the SessionFixationProtectionFilter.&lt;/p&gt;

&lt;p&gt;Here is our problem.&lt;/p&gt;

&lt;p&gt;We have a web application with a fairly heavy home page that can be served quite slowly depending on the size of certain attributes associated with the user.  We are currently using Jetty 6.1.21 which supports HTTP 1.1 chunked responses.&lt;/p&gt;

&lt;p&gt;If a user opens their browser and goes directly to the home page URL using a RememberMe token, this initial web request executes down through the filter stack and into the Spring MVC framework.  Steps 1a - 1d describe the processing of this initial request:&lt;/p&gt;

&lt;p&gt;1a. The HttpSessionContextIntegration filter creates a new HttpSession and puts a default SecurityContext into the ThreadLocal handler.&lt;/p&gt;

&lt;p&gt;1b. The RememberMeProcessingFilter authenticates the token and sets the user&apos;s Authentication object into the ThreadLocal handler.&lt;/p&gt;

&lt;p&gt;1c. The SessionFixationProtectionFilter detects a new authentication, invalidates the existing HttpSession, and creates a new HttpSession (migrating the attributes).  It does not set the user&apos;s Authentication into the HttpSession &amp;#8211; this is supposed to be done by the HttpSessionContextIntegration after all request processing is complete.&lt;/p&gt;

&lt;p&gt;1d. The request goes into the Spring MVC framework, causing a response to start to be sent to the client using HTTP chunking.  This response includes the session id of the newly created session (created by the SessionFixationProtectionFilter).&lt;/p&gt;

&lt;p&gt;The client begins receiving the markup, which includes various &amp;lt;script&amp;gt; elements to script files served by the web app.  Steps 2a - 2c describe the processing of this second request.  This processing takes place while the initial request is still being processed.  This second request sends over the session id created by the SessionFixationProtectionFilter for the first request.&lt;/p&gt;

&lt;p&gt;2a. The HttpSessionContextIntegration puts a default SecurityContext into the ThreadLocal handler (since one has not yet been set into the HttpSession).&lt;/p&gt;

&lt;p&gt;2b. The RememberMeProcessingFilter authenticates the token and sets the user&apos;s Authentication object into the ThreadLocal handler.&lt;/p&gt;

&lt;p&gt;2c. The SessionFixationProtectionFilter detects another new authentication, invalidates the existing HttpSession, and creates a new HttpSession (migrating the attributes).&lt;/p&gt;

&lt;p&gt;Processing of the initial web request is continuing through the Spring MVC framework.  We happen to use JSP for our view technology.&lt;/p&gt;

&lt;p&gt;1e. Continued processing of a JSP page (or import) for the initial request causes an attempt to deference a variable, causing a IllegalStateException in Jetty&apos;s AbstractSessionManager.Session class.&lt;/p&gt;

&lt;p&gt;I can &quot;fix&quot; this by extending the SessionFixationProtectionFilter and overriding &lt;/p&gt;

&lt;p&gt;protected void startNewSessionIfRequired(&lt;br/&gt;
        HttpServletRequest request, HttpServletResponse response)&lt;br/&gt;
{&lt;br/&gt;
    super.startNewSessionIfRequired(request, response);&lt;br/&gt;
    request.getSession().setAttribute(&lt;br/&gt;
            HttpSessionContextIntegrationFilter.SPRING_SECURITY_CONTEXT_KEY,&lt;br/&gt;
            SecurityContextHolder.getContext().getAuthentication());&lt;br/&gt;
}&lt;/p&gt;

&lt;p&gt;so that the user&apos;s Authentication object is stored into the HttpSession before processing enters the Spring MVC framework, causing the execution of filters on the second request to not be considered a new authentication, thus preserving the validity of the session created during the initial request.&lt;/p&gt;

&lt;p&gt;Is this the right way to do this?  It seems to keep session fixation protection working the way it is supposed to, but I&apos;m a little worried about what will happen with the OnRedirectUpdateSessionResponseWrapper created by the HttpSessionContextIntegrationFilter if the request processing results in a sendError() or sendRedirect().  My casual reading of HttpSessionContextIntegrationFilter seems to indicate it would still work correctly.&lt;/p&gt;

&lt;p&gt;Any thoughts or advice would be appreciated.&lt;/p&gt;</description>
                <environment>Linux, Jetty 6.1.21, Firefox 3.5/3.6 (possibly IE7/8)</environment>
        <key id="29904">SEC-1396</key>
            <summary>Race condition between HttpSessionContextIntegrationFilter and SessionFixationProtectionFilter</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="luke">Luke Taylor</assignee>
                                    <reporter username="brienwheeler">Brien Wheeler</reporter>
                        <labels>
                    </labels>
                <created>Mon, 1 Feb 2010 09:54:42 +0000</created>
                <updated>Sat, 6 Feb 2016 06:13:37 +0000</updated>
                            <resolved>Thu, 11 Feb 2010 04:53:16 +0000</resolved>
                                    <version>2.0.5</version>
                                    <fixVersion>3.0.2</fixVersion>
                                    <component>Web</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="50926" author="luke" created="Mon, 8 Feb 2010 03:48:57 +0000"  >&lt;p&gt;I don&apos;t see any immediate problem with eagerly storing the security context in the session and its probably something we should consider in Spring Security 3 in order to prevent recreating the session multiple times.&lt;/p&gt;

&lt;p&gt;Could you explain the details of 1e? What is the Jetty exception and do you consider it to be a Jetty bug? Do you see the same behaviour in a later version?&lt;/p&gt;

&lt;p&gt;Other things you might try include:&lt;/p&gt;

&lt;p&gt;1. Disabling session-fixation protection and recreate the session yourself, at a point in your app when you know it is safe to do so.&lt;br/&gt;
2. Omit supplementary files like .js and images from the filter chain&lt;br/&gt;
3. Adjust the logic in your app so that authenticated users end up at a standard welcome page in which you can standardize the loading behaviour, so that a single session and security context are always established before proceeding to parts ofthe app which may submit multiple concurrent requests. This may or may not be possible depending on the nature of the app.&lt;/p&gt;</comment>
                            <comment id="51048" author="luke" created="Thu, 11 Feb 2010 04:53:17 +0000"  >&lt;p&gt;I&apos;ve added the eager saving of the request as I don&apos;t see a problem with this.&lt;/p&gt;</comment>
                            <comment id="51210" author="brienwheeler" created="Tue, 16 Feb 2010 01:24:45 +0000"  >&lt;p&gt;Luke, thanks for the fix.  I love Spring Security &amp;#8211; it&apos;s hugely valuable to me.&lt;/p&gt;

&lt;p&gt;To answer your other questions &amp;#8211; the Jetty error was an exception in PageContextImpl, I believe (I don&apos;t have stack trace immediately available to me).  I don&apos;t know that it should be considered a Jetty (Jasper?) error, although not having dug into it enough I&apos;m really not sure.  It depends on what you think should happen when a variable is trying to be dereferenced and the pages HttpSession has been invalidated underneath page processing.&lt;/p&gt;

&lt;p&gt;We probably should trim our spring security filter mapping down to not include static content such as javascript, et al, but that might simply kick the can down the road a little bit, with the underlying issue waiting to haunt us again later.  &lt;img class=&quot;emoticon&quot; src=&quot;https://jira.spring.io/images/icons/emoticons/smile.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;BTW, I recently had another interesting Spring Security configuration scenario in which I had to copy some Spring Security source code into my own classes and refactor a little to get the configuration I wanted &amp;#8211; if you&apos;re interested in hearing details about that to accomodate a little more flexibility in a future design email me at brien.wheeler@currensee.com.  (Of course, you might have already improved this area &amp;#8211; I&apos;m running 2.0.5.RELEASE.)&lt;/p&gt;

&lt;p&gt;     Cheers,&lt;br/&gt;
     Brien&lt;/p&gt;</comment>
                            <comment id="124310" author="issuemaster" created="Sat, 6 Feb 2016 06:13:37 +0000"  >&lt;p&gt;This issue has been migrated to &lt;a href=&quot;https://github.com/spring-projects/spring-security/issues/1639&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/spring-projects/spring-security/issues/1639&lt;/a&gt;&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="16169" name="mylyn-context.zip" size="6131" author="luke" created="Wed, 10 Feb 2010 23:44:02 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 8 Feb 2010 03:48:57 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10280" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>19558</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i02613:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>12686</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10381" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Ranking</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>12493</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10120" key="com.atlassian.jira.plugin.system.customfieldtypes:url">
                        <customfieldname>Reference URL</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[http://forum.springsource.org/showthread.php?p=281555#post281555]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>