<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Fri Dec 23 06:15:19 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SWF-749/SWF-749.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SWF-749] Can&apos;t place scoped-proxied beans into flow scope</title>
                <link>https://jira.spring.io/browse/SWF-749</link>
                <project id="10050" key="SWF">Spring Web Flow</project>
                    <description>&lt;p&gt;If I create a bean in session scope, and try to assign it to a flow scope var, I get an error, because not all beans in flow scope are serializables. Problem is not only within session scope, as it happens the same with a custom scope. Seems more a problem dealing with CGLIB proxies.&lt;/p&gt;

&lt;p&gt;Defined in AppContex.xml&lt;/p&gt;

&lt;p&gt;	&amp;lt;bean id=&quot;sesionperson&quot; class=&quot;org.springframework.webflow.samples.phonebook.Person&quot; scope=&quot;session&quot;&lt;br/&gt;
		p:firstName=&quot;Peter&quot; p:lastName=&quot;Smith&quot;&amp;gt;&lt;br/&gt;
		&amp;lt;aop:scoped-proxy proxy-target-class=&quot;true&quot;/&amp;gt;&lt;br/&gt;
	&amp;lt;/bean&amp;gt;	&lt;/p&gt;

&lt;p&gt;Defined in myFlow.xml&lt;/p&gt;

&lt;p&gt;	&amp;lt;var name=&quot;flowperson&quot; class=&quot;org.springframework.webflow.samples.phonebook.Person&quot;/&amp;gt;&lt;br/&gt;
	&amp;lt;view-state id=&quot;inicio&quot; model=&quot;idContainer&quot;&amp;gt;&lt;br/&gt;
		&amp;lt;on-render&amp;gt;&lt;br/&gt;
			&amp;lt;evaluate expression=&quot;sesionperson&quot; result=&quot;flowperson&quot; /&amp;gt;&lt;br/&gt;
		&amp;lt;/on-render&amp;gt;&lt;br/&gt;
	&amp;lt;/view-state&amp;gt;&lt;/p&gt;

&lt;p&gt;The bean implements Serializable&lt;/p&gt;

&lt;p&gt;public class Person implements Serializable {&lt;br/&gt;
	....&lt;br/&gt;
}&lt;/p&gt;

&lt;p&gt;The problem solves if I eliminate &amp;lt;aop:scoped-proxy proxy-target-class=&quot;true&quot;/&amp;gt; from the bean definition. I suppose that the proxied bean does not implement Serializable.&lt;/p&gt;

&lt;p&gt;THIS WORKS:&lt;/p&gt;

&lt;p&gt;	&amp;lt;bean id=&quot;sesionperson&quot; class=&quot;org.springframework.webflow.samples.phonebook.Person&quot; scope=&quot;session&quot;&lt;br/&gt;
		p:firstName=&quot;Peter&quot; p:lastName=&quot;Smith&quot;&amp;gt;&lt;br/&gt;
	&amp;lt;/bean&amp;gt;	&lt;/p&gt;

&lt;p&gt;And the StackTrace&lt;/p&gt;

&lt;p&gt;java.io.NotSerializableException: org.springframework.aop.scope.DefaultScopedObject&lt;br/&gt;
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1156)&lt;br/&gt;
	at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1509)&lt;br/&gt;
	at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1474)&lt;br/&gt;
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1392)&lt;br/&gt;
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1150)&lt;br/&gt;
	at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1509)&lt;br/&gt;
	at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1474)&lt;br/&gt;
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1392)&lt;br/&gt;
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1150)&lt;br/&gt;
	at java.io.ObjectOutputStream.writeArray(ObjectOutputStream.java:1338)&lt;br/&gt;
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1146)&lt;br/&gt;
	at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1509)&lt;br/&gt;
	at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1474)&lt;br/&gt;
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1392)&lt;br/&gt;
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1150)&lt;br/&gt;
	at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1509)&lt;br/&gt;
	at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1474)&lt;br/&gt;
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1392)&lt;br/&gt;
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1150)&lt;br/&gt;
	at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1509)&lt;br/&gt;
	at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1474)&lt;br/&gt;
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1392)&lt;br/&gt;
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1150)&lt;br/&gt;
	at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:326)&lt;br/&gt;
	at java.util.HashMap.writeObject(HashMap.java:1001)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;br/&gt;
	at java.lang.reflect.Method.invoke(Method.java:597)&lt;br/&gt;
	at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:945)&lt;br/&gt;
	at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1461)&lt;br/&gt;
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1392)&lt;br/&gt;
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1150)&lt;br/&gt;
	at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1509)&lt;br/&gt;
	at java.io.ObjectOutputStream.defaultWriteObject(ObjectOutputStream.java:416)&lt;br/&gt;
	at org.springframework.webflow.core.collection.LocalAttributeMap.writeObject(LocalAttributeMap.java:327)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;br/&gt;
	at java.lang.reflect.Method.invoke(Method.java:597)&lt;br/&gt;
	at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:945)&lt;br/&gt;
	at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1461)&lt;br/&gt;
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1392)&lt;br/&gt;
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1150)&lt;br/&gt;
	at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:326)&lt;br/&gt;
	at org.springframework.webflow.engine.impl.FlowSessionImpl.writeExternal(FlowSessionImpl.java:154)&lt;br/&gt;
	at java.io.ObjectOutputStream.writeExternalData(ObjectOutputStream.java:1421)&lt;br/&gt;
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1390)&lt;br/&gt;
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1150)&lt;br/&gt;
	at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:326)&lt;br/&gt;
	at java.util.LinkedList.writeObject(LinkedList.java:943)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;br/&gt;
	at java.lang.reflect.Method.invoke(Method.java:597)&lt;br/&gt;
	at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:945)&lt;br/&gt;
	at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1461)&lt;br/&gt;
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1392)&lt;br/&gt;
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1150)&lt;br/&gt;
	at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:326)&lt;br/&gt;
	at org.springframework.webflow.engine.impl.FlowExecutionImpl.writeExternal(FlowExecutionImpl.java:508)&lt;br/&gt;
	at java.io.ObjectOutputStream.writeExternalData(ObjectOutputStream.java:1421)&lt;br/&gt;
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1390)&lt;br/&gt;
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1150)&lt;br/&gt;
	at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:326)&lt;br/&gt;
	at org.springframework.webflow.execution.repository.snapshot.SerializedFlowExecutionSnapshot.serialize(SerializedFlowExecutionSnapshot.java:172)&lt;br/&gt;
	at org.springframework.webflow.execution.repository.snapshot.SerializedFlowExecutionSnapshot.&amp;lt;init&amp;gt;(SerializedFlowExecutionSnapshot.java:69)&lt;br/&gt;
	at org.springframework.webflow.execution.repository.snapshot.SerializedFlowExecutionSnapshotFactory.createSnapshot(SerializedFlowExecutionSnapshotFactory.java:70)&lt;br/&gt;
	at org.springframework.webflow.execution.repository.snapshot.AbstractSnapshottingFlowExecutionRepository.snapshot(AbstractSnapshottingFlowExecutionRepository.java:75)&lt;br/&gt;
	at org.springframework.webflow.execution.repository.impl.DefaultFlowExecutionRepository.putFlowExecution(DefaultFlowExecutionRepository.java:115)&lt;br/&gt;
	at org.springframework.webflow.executor.FlowExecutorImpl.resumeExecution(FlowExecutorImpl.java:155)&lt;br/&gt;
	at org.springframework.webflow.mvc.servlet.FlowHandlerAdapter.handle(FlowHandlerAdapter.java:173)&lt;br/&gt;
	at org.springframework.webflow.mvc.servlet.FlowController.handleRequest(FlowController.java:172)&lt;br/&gt;
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)&lt;br/&gt;
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:875)&lt;br/&gt;
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:809)&lt;br/&gt;
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)&lt;br/&gt;
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:501)&lt;br/&gt;
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:690)&lt;br/&gt;
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:803)&lt;br/&gt;
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)&lt;br/&gt;
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)&lt;br/&gt;
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)&lt;br/&gt;
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:175)&lt;br/&gt;
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:128)&lt;br/&gt;
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)&lt;br/&gt;
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)&lt;br/&gt;
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:286)&lt;br/&gt;
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:844)&lt;br/&gt;
	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:583)&lt;br/&gt;
	at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:447)&lt;br/&gt;
	at java.lang.Thread.run(Thread.java:619)&lt;/p&gt;</description>
            <key id="22590">SWF-749</key>
            <summary>Can&apos;t place scoped-proxied beans into flow scope</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://jira.spring.io/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="rstoya05-aop">Rossen Stoyanchev</assignee>
                                    <reporter username="rober2d2">Roberto Ruiz</reporter>
                        <labels>
                    </labels>
                <created>Sat, 14 Jun 2008 14:33:33 +0000</created>
                <updated>Wed, 12 May 2010 05:16:01 +0000</updated>
                            <resolved>Wed, 12 May 2010 05:16:01 +0000</resolved>
                                    <version>2.0.2</version>
                                    <fixVersion>2.1.0.M2</fixVersion>
                                        <due></due>
                            <votes>16</votes>
                                    <watches>13</watches>
                                                                <comments>
                            <comment id="36736" author="kdonald" created="Mon, 16 Jun 2008 03:16:27 +0000"  >&lt;p&gt;Adding Juergen to watch list.&lt;/p&gt;</comment>
                            <comment id="37482" author="juergen.hoeller" created="Sat, 12 Jul 2008 00:26:34 +0000"  >&lt;p&gt;Indeed, Spring-generated scoped proxies are generally not serializable. I&apos;m afraid this won&apos;t change before Spring 3.0, though, since it requires access from a deserialized object to its original containing BeanFactory... which isn&apos;t trivial to solve.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="40164" author="frydenholm" created="Tue, 7 Oct 2008 17:43:03 +0000"  >&lt;p&gt;Is there any news on this one? Will it be fixed in Spring 3.0 (and when will Spring 3.0 be released?).&lt;/p&gt;

&lt;p&gt;Links to a few posts having this problem:&lt;br/&gt;
&lt;a href=&quot;http://forum.springframework.org/showthread.php?t=60946&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://forum.springframework.org/showthread.php?t=60946&lt;/a&gt;&lt;br/&gt;
&lt;a href=&quot;http://forum.springframework.org/showthread.php?t=60905&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://forum.springframework.org/showthread.php?t=60905&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="50007" author="calavera.info" created="Wed, 6 Jan 2010 23:33:01 +0000"  >&lt;p&gt;What&apos;s the status of this bug? It should be marked as fixed or fixed version should be changed now when Spring 3 is out.&lt;/p&gt;</comment>
                            <comment id="50994" author="taylor.wicksell" created="Wed, 10 Feb 2010 00:24:16 +0000"  >&lt;p&gt;We&apos;d also like an update, or at least a link to the relevant Spring Framework ticket that blocks this one.&lt;/p&gt;</comment>
                            <comment id="51435" author="p.dario" created="Mon, 22 Feb 2010 23:16:05 +0000"  >&lt;p&gt;I&apos;m now trying with Spring 3.0.1, but it seems the problem is still present.&lt;br/&gt;
Should I declare the property referencing the aop:scoped-proxy as transient?&lt;/p&gt;</comment>
                            <comment id="51458" author="jistr" created="Tue, 23 Feb 2010 19:52:05 +0000"  >&lt;p&gt;I&apos;d really like this to be fixed.&lt;/p&gt;

&lt;p&gt;Is there any workaround for having session scope beans serializable? I tried switching my @Scope annotation between ScopedProxyMode.INTERFACES and ScopedProxyMode.TARGET_CLASS, but it doesn&apos;t help.&lt;/p&gt;</comment>
                            <comment id="53738" author="rstoya05-aop" created="Wed, 12 May 2010 05:14:26 +0000"  >&lt;p&gt;This is no longer an issue in the SWF 2.1.x branch, which is built on Spring 3.  I tested as follows:&lt;/p&gt;

&lt;p&gt;1. Add Spring bean:&lt;br/&gt;
&amp;lt;bean id=&quot;sessionBooking&quot; class=&quot;org.springframework.webflow.samples.booking.Booking&quot; scope=&quot;session&quot;&amp;gt;&lt;br/&gt;
	&amp;lt;aop:scoped-proxy proxy-target-class=&quot;true&quot;/&amp;gt;		&lt;br/&gt;
	&amp;lt;property name=&quot;beds&quot; value=&quot;111&quot;/&amp;gt;&lt;br/&gt;
&amp;lt;/bean&amp;gt;&lt;/p&gt;

&lt;p&gt;2. Declare flow variable:&lt;br/&gt;
&amp;lt;var name=&quot;flowBooking&quot; class=&quot;org.springframework.webflow.samples.booking.Booking&quot;/&amp;gt;&lt;/p&gt;

&lt;p&gt;3. Add set action in on-start:&lt;br/&gt;
&amp;lt;set name=&quot;flowBooking&quot; value=&quot;sessionBooking&quot;/&amp;gt;&lt;/p&gt;

&lt;p&gt;4. Print the following in the JSP (prints &quot;111&quot;):&lt;br/&gt;
&amp;lt;spring:bind path=&quot;booking.hotel.price&quot;&amp;gt;$&lt;/p&gt;
{status.value}
&lt;p&gt;&amp;lt;/spring:bind&amp;gt;&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 16 Jun 2008 03:16:27 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i02rfj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>16153</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>