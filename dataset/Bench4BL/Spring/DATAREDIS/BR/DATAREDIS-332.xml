<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 16:46:34 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/DATAREDIS-332/DATAREDIS-332.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[DATAREDIS-332] @Transactional Using multiple connections</title>
                <link>https://jira.spring.io/browse/DATAREDIS-332</link>
                <project id="10604" key="DATAREDIS">Spring Data Redis</project>
                    <description>&lt;p&gt;When using a RedisTemplate with enableTransactionSupport set to true, it will open new connections for each redis operation.&lt;/p&gt;

&lt;p&gt;Given this example:&lt;/p&gt;

&lt;p&gt;@Transactional&lt;br/&gt;
public void test() {&lt;br/&gt;
	listOperations.rightPush(&quot;test&quot;, &quot;a&quot;);&lt;br/&gt;
	listOperations.rightPush(&quot;test&quot;, &quot;a&quot;);&lt;br/&gt;
}&lt;/p&gt;

&lt;p&gt;When monitoring everything that the server handles, you will see this output:&lt;/p&gt;

&lt;p&gt;1406625662.861592 &lt;span class=&quot;error&quot;&gt;&amp;#91;0 127.0.0.1:54842&amp;#93;&lt;/span&gt; &quot;MULTI&quot;&lt;br/&gt;
1406625662.861592 &lt;span class=&quot;error&quot;&gt;&amp;#91;0 127.0.0.1:54842&amp;#93;&lt;/span&gt; &quot;RPUSH&quot; &quot;test&quot; &quot;\&quot;a\&quot;&quot;&lt;br/&gt;
1406625662.861592 &lt;span class=&quot;error&quot;&gt;&amp;#91;0 127.0.0.1:54842&amp;#93;&lt;/span&gt; &quot;EXEC&quot;&lt;br/&gt;
1406625663.220937 &lt;span class=&quot;error&quot;&gt;&amp;#91;0 127.0.0.1:54843&amp;#93;&lt;/span&gt; &quot;MULTI&quot;&lt;br/&gt;
1406625663.220937 &lt;span class=&quot;error&quot;&gt;&amp;#91;0 127.0.0.1:54843&amp;#93;&lt;/span&gt; &quot;RPUSH&quot; &quot;test&quot; &quot;\&quot;a\&quot;&quot;&lt;br/&gt;
1406625663.220937 &lt;span class=&quot;error&quot;&gt;&amp;#91;0 127.0.0.1:54843&amp;#93;&lt;/span&gt; &quot;EXEC&quot;&lt;/p&gt;

&lt;p&gt;With debugging the spring-data-redis source code we found that in RedisTemplate.java line 201 (version 1.3.1-RELEASE) the if condition checks for &quot;enableTransactionSupport&quot;. If that is true, the connection is unbound. This leads to the next redis operation not working on the same connection anymore. If the condition would be &quot;if (!enableTransactionSupport)&quot; then the output is as we expect it to be:&lt;/p&gt;

&lt;p&gt;1406626330.259418 &lt;span class=&quot;error&quot;&gt;&amp;#91;0 127.0.0.1:54894&amp;#93;&lt;/span&gt; &quot;MULTI&quot;&lt;br/&gt;
1406626330.259418 &lt;span class=&quot;error&quot;&gt;&amp;#91;0 127.0.0.1:54894&amp;#93;&lt;/span&gt; &quot;RPUSH&quot; &quot;test&quot; &quot;\&quot;a\&quot;&quot;&lt;br/&gt;
1406626330.259418 &lt;span class=&quot;error&quot;&gt;&amp;#91;0 127.0.0.1:54894&amp;#93;&lt;/span&gt; &quot;RPUSH&quot; &quot;test&quot; &quot;\&quot;a\&quot;&quot;&lt;br/&gt;
1406626330.259418 &lt;span class=&quot;error&quot;&gt;&amp;#91;0 127.0.0.1:54894&amp;#93;&lt;/span&gt; &quot;EXEC&quot;&lt;/p&gt;
</description>
                <environment>Redis client implementation: Jedis</environment>
        <key id="59067">DATAREDIS-332</key>
            <summary>@Transactional Using multiple connections</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="8">Complete</resolution>
                                        <assignee username="thomasd">Thomas Darimont</assignee>
                                    <reporter username="lorenz">Lorenz Schumann</reporter>
                        <labels>
                    </labels>
                <created>Tue, 29 Jul 2014 02:33:33 +0000</created>
                <updated>Tue, 2 Jun 2015 04:58:59 +0000</updated>
                            <resolved>Mon, 13 Apr 2015 04:41:17 +0000</resolved>
                                    <version>1.3.1 (Dijkstra SR1)</version>
                    <version>1.3.5 (Dijkstra SR5)</version>
                                    <fixVersion>1.6 M1 (Gosling)</fixVersion>
                    <fixVersion>1.5.1 (Fowler SR1)</fixVersion>
                    <fixVersion>1.4.3 (Evans SR3)</fixVersion>
                                        <due></due>
                            <votes>1</votes>
                                    <watches>4</watches>
                                                                <comments>
                            <comment id="106425" author="lorenz" created="Tue, 29 Jul 2014 05:13:40 +0000"  >&lt;p&gt;I just noticed, that applying that &quot;fix&quot; with inverting the condition leads to problems whith succeeding transactions:&lt;/p&gt;

&lt;p&gt;redis.clients.jedis.exceptions.JedisException: Could not return the resource to the pool&lt;br/&gt;
	at redis.clients.util.Pool.returnBrokenResourceObject(Pool.java:79)&lt;br/&gt;
...&lt;br/&gt;
Caused by: java.lang.IllegalStateException: Invalidated object not currently part of this pool&lt;br/&gt;
	at org.apache.commons.pool2.impl.GenericObjectPool.invalidateObject(GenericObjectPool.java:633)&lt;br/&gt;
	at redis.clients.util.Pool.returnBrokenResourceObject(Pool.java:77)&lt;/p&gt;</comment>
                            <comment id="113672" author="iriopaul" created="Fri, 20 Mar 2015 09:53:13 +0000"  >&lt;p&gt;I think the priority on this bug should be increased.  It affects a pretty important feature that is outlined in the documentation and severely limits the usage of &lt;tt&gt;@Transactional&lt;/tt&gt;.  When the number of operations executed on a template during a transaction exceeds the number of connections available in a Redis connection pool used by the &lt;tt&gt;RedisTemplate&lt;/tt&gt;, this bug can cause connection starvation which hinders other parts of the application from obtaining a connection in a timely manner.  This can act like a denial of service.  In our case, it locked up the application due to retry logic implemented around our transaction.&lt;/p&gt;

&lt;p&gt;Although this bug mentions version 1.3.1, we are still having this issue in 1.3.4.RELEASE.&lt;/p&gt;

&lt;p&gt;We were able to work around the issue by calling execute on the template and using the connection directly to perform multiple operations.&lt;/p&gt;</comment>
                            <comment id="113673" author="thomasd" created="Fri, 20 Mar 2015 09:56:21 +0000"  >&lt;p&gt;Hi Paul,&lt;/p&gt;

&lt;p&gt;thanks for your report, would you mind providing a test case for this?&lt;/p&gt;

&lt;p&gt;Cheers,&lt;br/&gt;
Thomas&lt;/p&gt;</comment>
                            <comment id="113687" author="iriopaul" created="Fri, 20 Mar 2015 14:12:05 +0000"  >&lt;p&gt;Sure.  My coworker Michael wrote the attached Test Case.&lt;/p&gt;</comment>
                            <comment id="113691" author="thomasd" created="Fri, 20 Mar 2015 15:38:38 +0000"  >&lt;p&gt;Hi Paul,&lt;/p&gt;

&lt;p&gt;thanks for the test case!&lt;br/&gt;
I think the problem is that the connection is released from the transaction too soon, due to a missing check in &lt;tt&gt;org.springframework.data.redis.core.RedisTemplate.execute(RedisCallback&amp;lt;T&amp;gt;, boolean, boolean)&lt;/tt&gt;.&lt;br/&gt;
I think in the following line:&lt;br/&gt;
&lt;a href=&quot;https://github.com/spring-projects/spring-data-redis/blob/c47292d1732a5d9d2cb2af93f195aa6a37144838/src/main/java/org/springframework/data/redis/core/RedisTemplate.java#L202&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/spring-projects/spring-data-redis/blob/c47292d1732a5d9d2cb2af93f195aa6a37144838/src/main/java/org/springframework/data/redis/core/RedisTemplate.java#L202&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The condition should be:&lt;/p&gt;
&lt;p/&gt;
&lt;div id=&quot;syntaxplugin&quot; class=&quot;syntaxplugin&quot; style=&quot;border: 1px dashed #bbb; border-radius: 5px !important; overflow: auto; max-height: 30em;&quot;&gt;
&lt;table cellspacing=&quot;0&quot; cellpadding=&quot;0&quot; border=&quot;0&quot; width=&quot;100%&quot; style=&quot;font-size: 1em; line-height: 1.4em !important; font-weight: normal; font-style: normal; color: black;&quot;&gt;
		&lt;tbody &gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;  margin-top: 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: #006699; font-weight: bold; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt; (enableTransactionSupport &amp;amp;&amp;amp; !TransactionSynchronizationManager.isActualTransactionActive()) {&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   margin-bottom: 10px;  width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;...&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
			&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;p/&gt;

&lt;p&gt;@&lt;a href=&quot;https://jira.spring.io/secure/ViewProfile.jspa?name=cstrobl&quot; class=&quot;user-hover&quot; rel=&quot;cstrobl&quot;&gt;Christoph Strobl&lt;/a&gt; can you verify this?&lt;br/&gt;
With that condition changed the given test cases pass.&lt;/p&gt;

&lt;p&gt;Cheers,&lt;br/&gt;
Thomas&lt;/p&gt;</comment>
                            <comment id="113697" author="thomasd" created="Fri, 20 Mar 2015 17:00:20 +0000"  >&lt;p&gt;I think I found the problem - it seems that we remove the used redis connection from the transaction synchronization every time regardless whether the current TX is still active or not - I&apos;m not sure whether this is all - we&apos;ll review this next week.&lt;/p&gt;

&lt;p&gt;I attached a PR with my current solution for which all redis tests as well as your provided test case pass.&lt;/p&gt;

&lt;p&gt;Cheers,&lt;br/&gt;
Thomas&lt;/p&gt;</comment>
                            <comment id="113698" author="iriopaul" created="Fri, 20 Mar 2015 17:02:14 +0000"  >&lt;p&gt;Excellent - thank you for your quick replies.&lt;/p&gt;</comment>
                            <comment id="113774" author="thomasd" created="Tue, 24 Mar 2015 02:08:48 +0000"  >&lt;p&gt;Please revise.&lt;/p&gt;</comment>
                            <comment id="114492" author="aadev" created="Mon, 13 Apr 2015 11:40:42 +0000"  >&lt;p&gt;I am facing a similar issue with my application. Under high load the service stops responding and doesn&apos;t take any new request at this point.&lt;br/&gt;
The problem starts with connection timeouts to the redis server and later &quot;redis.clients.jedis.exceptions.JedisConnectionException: Could not get a resource from the pool&quot;&lt;br/&gt;
The complete trace for application- &lt;br/&gt;
java.lang.Exception&lt;br/&gt;
at org.apache.commons.pool2.impl.BaseGenericObjectPool.&amp;lt;init&amp;gt;(BaseGenericObjectPool.java:136)&lt;br/&gt;
at org.apache.commons.pool2.impl.GenericObjectPool.&amp;lt;init&amp;gt;(GenericObjectPool.java:107)&lt;br/&gt;
at redis.clients.util.Pool.initPool(Pool.java:35)&lt;br/&gt;
at redis.clients.util.Pool.&amp;lt;init&amp;gt;(Pool.java:22)&lt;br/&gt;
at redis.clients.jedis.JedisPool.&amp;lt;init&amp;gt;(JedisPool.java:78)&lt;br/&gt;
at redis.clients.jedis.JedisPool.&amp;lt;init&amp;gt;(JedisPool.java:53)&lt;br/&gt;
at org.springframework.data.redis.connection.jedis.JedisConnectionFactory.afterPropertiesSet(JedisConnectionFactory.java:126)&lt;br/&gt;
at &amp;lt;service code&amp;gt;&lt;br/&gt;
On investigation I found out that there are many borrowed connections that are not released and MaxTotal has reached its limit for the redis pool. I haven&apos;t set enableTransactionSupport for my RedisTemplate though. &lt;br/&gt;
I am using spring data version 1.3. Is this expected to be fixed in the latest release or the fix is just related to enableTransactionSupport=true ? &lt;br/&gt;
My pool configs look like - &lt;br/&gt;
testConnectionOnBorrow = false;&lt;br/&gt;
testConnectionOnIdle = true;&lt;br/&gt;
Any pointers would be a great help.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="22708" name="JedisTransactionalConnectionStarvationTest.java" size="2407" author="iriopaul" created="Fri, 20 Mar 2015 14:12:05 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 20 Mar 2015 09:53:13 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10280" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>45226</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>olivergierke</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10684" key="com.atlassian.jira.plugin.system.customfieldtypes:url">
                        <customfieldname>Pull Request URL</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[https://github.com/spring-projects/spring-data-redis/pull/134]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|hzzzx5:zzzzv</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>45223</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10381" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Ranking</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>44928</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10480" key="com.pyxis.greenhopper.jira:gh-sprint">
                        <customfieldname>Sprint</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue id="81">56 - Fowler GA</customfieldvalue>
    <customfieldvalue id="84">57 - Fowler Aftermath</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>