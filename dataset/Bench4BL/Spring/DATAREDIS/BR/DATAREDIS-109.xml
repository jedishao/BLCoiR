<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 16:36:07 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/DATAREDIS-109/DATAREDIS-109.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[DATAREDIS-109] SpringTemplate does not close certain connections resulting in leaks</title>
                <link>https://jira.spring.io/browse/DATAREDIS-109</link>
                <project id="10604" key="DATAREDIS">Spring Data Redis</project>
                    <description>&lt;p&gt;We are experiencing connection leaks coming from RedisTemplate. One reason this happens is that if you make a connection to a server that is hung or is in a state of network partitioning, the first call to redis that is made is a `select` DB call by `RedisConnectionUtils.getConnection(factory)` below. This results is a possible Socket Exception, and because the finally block does not wrap it, the exception does not return the erroneous connection back to the pool. Currently, the only way to fix this is to turn on `testOnBorrow`, which is a poor workaround since it is not very performant. &lt;/p&gt;

&lt;p&gt;public &amp;lt;T&amp;gt; T execute(RedisCallback&amp;lt;T&amp;gt; action, boolean exposeConnection, boolean pipeline) {&lt;br/&gt;
                Assert.notNull(action, &quot;Callback object must not be null&quot;);&lt;/p&gt;

&lt;p&gt;                RedisConnectionFactory factory = getConnectionFactory();&lt;br/&gt;
                RedisConnection conn = RedisConnectionUtils.getConnection(factory);&lt;/p&gt;

&lt;p&gt;                boolean existingConnection = TransactionSynchronizationManager.hasResource(factory);&lt;br/&gt;
                preProcessConnection(conn, existingConnection);&lt;/p&gt;

&lt;p&gt;                boolean pipelineStatus = conn.isPipelined();&lt;br/&gt;
                if (pipeline &amp;amp;&amp;amp; !pipelineStatus) &lt;/p&gt;
{
                        conn.openPipeline();
                }

&lt;p&gt;                try {&lt;br/&gt;
                        RedisConnection connToExpose = (exposeConnection ? conn : createRedisConnectionProxy(conn));&lt;br/&gt;
                        T result = action.doInRedis(connToExpose);&lt;/p&gt;

&lt;p&gt;                        // close pipeline&lt;br/&gt;
                        if (pipeline &amp;amp;&amp;amp; !pipelineStatus) &lt;/p&gt;
{
                                conn.closePipeline();
                        }

&lt;p&gt;                        // TODO: any other connection processing?&lt;br/&gt;
                        return postProcessResult(result, conn, existingConnection);&lt;br/&gt;
                } finally &lt;/p&gt;
{
                        RedisConnectionUtils.releaseConnection(conn, factory);
                }
&lt;p&gt;        }&lt;/p&gt;</description>
                <environment></environment>
        <key id="46237">DATAREDIS-109</key>
            <summary>SpringTemplate does not close certain connections resulting in leaks</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://jira.spring.io/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="costin">Costin Leau</assignee>
                                    <reporter username="arturnt">Artur Rivilis</reporter>
                        <labels>
                    </labels>
                <created>Sat, 17 Nov 2012 19:19:44 +0000</created>
                <updated>Wed, 23 Jan 2013 08:12:35 +0000</updated>
                            <resolved>Wed, 23 Jan 2013 08:12:35 +0000</resolved>
                                                    <fixVersion>1.0.3</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="85601" author="costin" created="Thu, 29 Nov 2012 07:22:10 +0000"  >&lt;p&gt;Artur,&lt;br/&gt;
Not sure what driver you are using (I assume Jedis - addition info would be great) but based on your description it looks like the underlying driver can provide a stale connection resulting in an exception during connection initialization leading to leaks.&lt;/p&gt;

&lt;p&gt;Either way I&apos;ve revisited the code and added several improvements:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;exception during the construction of JedisConnection force the closing of the connection before propagating the exception&lt;/li&gt;
	&lt;li&gt;IOExceptions are marked as breaking the connection (note that this normally should not happen as Jedis does the exception wrapping)&lt;/li&gt;
	&lt;li&gt;connections are returned the pool even if not opened properly&lt;/li&gt;
	&lt;li&gt;the closing of Jedis exceptions is now hopefully more resilient&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I&apos;ve pushed a nightly build &lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; with the changes - please try it out and let me know how it goes.&lt;/p&gt;

&lt;p&gt;P.S. Sorry for the slow response to this issue, I&apos;ve been a lot on the road lately.&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://build.springsource.org/browse/SPRINGDATA-DATAREDISNIGHTLY-553&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://build.springsource.org/browse/SPRINGDATA-DATAREDISNIGHTLY-553&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="87240" author="costin" created="Wed, 23 Jan 2013 08:12:35 +0000"  >&lt;p&gt;Unfortunately there was no answer to double-check the fix in master.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 29 Nov 2012 07:22:10 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10280" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>33035</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i05yvj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>34856</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10381" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Ranking</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>32737</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>