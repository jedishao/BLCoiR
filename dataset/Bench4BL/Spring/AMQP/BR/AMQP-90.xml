<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 10:59:45 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/AMQP-90/AMQP-90.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[AMQP-90] Runtime exceptions stop listener but leave channel open - provide no output</title>
                <link>https://jira.spring.io/browse/AMQP-90</link>
                <project id="10450" key="AMQP">Spring AMQP</project>
                    <description>&lt;p&gt;After starting up my application a uncaught runtime error occurs (NPE, etc...) If the exception is caught by the SimpleMessageListener class, it invokes shutdown on the rabbit listener. However, it leaves the channel open. This ties up needless resources on the boxes. Also, it gives no output that an exception has occured (doesn&apos;t log the error, etc...) and doesn&apos;t provide output above a debug level that it&apos;s going to stop the listener. &lt;/p&gt;

&lt;p&gt;Would be nice if the fact that shutdown was called was more obvious (logged at info or warn level) and that the channel was closed. Both would be a better indication to the developer/admin that something had occured and needed to be investiaged. &lt;/p&gt;
</description>
                <environment>Glassfish 3.0.1, Java 1.6, Spring 3.0.4, spring-amqp, rabbitmq 2.2.0</environment>
        <key id="35618">AMQP-90</key>
            <summary>Runtime exceptions stop listener but leave channel open - provide no output</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://jira.spring.io/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="8">Complete</resolution>
                                        <assignee username="david_syer">Dave Syer</assignee>
                                    <reporter username="jesmith">Josh Smith</reporter>
                        <labels>
                    </labels>
                <created>Mon, 27 Dec 2010 13:18:18 +0000</created>
                <updated>Fri, 29 Mar 2013 19:36:02 +0000</updated>
                            <resolved>Wed, 23 Feb 2011 07:37:34 +0000</resolved>
                                    <version>1.0.0.M1</version>
                                    <fixVersion>1.0.0.M3</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                    <timeoriginalestimate seconds="0">0d</timeoriginalestimate>
                            <timeestimate seconds="0">0d</timeestimate>
                                        <comments>
                            <comment id="62230" author="david_syer" created="Tue, 11 Jan 2011 06:55:46 +0000"  >&lt;p&gt;What is the &quot;rabbit listener&quot; in your description?  Do you mean the AMQP consumer?  I think it is expected if a MessageListener throws an exception that the channel would be closed (and the consumer), and the contract for the container is to keep a certain number of consumers active, so it needs to start a new one.  not sure what you mean about unnecessary resources.&lt;/p&gt;

&lt;p&gt;Is the issue we should concentrate on the lack of exception handling in the listener container (a missing feature up to 1.0.0.M2 I think, but certainly on the roadmap)?&lt;/p&gt;</comment>
                            <comment id="62263" author="jesmith" created="Tue, 11 Jan 2011 20:09:13 +0000"  >&lt;p&gt;The &quot;rabbit listener&quot; is the SimpleMessageListenerContainer. And the problem is that the runtime exception causes the instance of the MessageListener to shutdown, but does not close the channel. If you are not auto ack&apos;ing messages (which I am not) then the channel stays open tied to a closed listener. Becuase the channel is still open, all the messages that it has in it&apos;s internal BlockingCache (which are unack&apos;d in rabbit) stay there until the channel is closed. &lt;/p&gt;

&lt;p&gt;So, because each thread gets it&apos;s own channel  (which is recommended) when a runtime exception kills the listener, it either needs to also kill the channel, and release those unack&apos;d messages back to the queue, or it needs to be able to start a new listener so that the messages don&apos;t just get stuck. &lt;/p&gt;</comment>
                            <comment id="62274" author="david_syer" created="Wed, 12 Jan 2011 06:46:32 +0000"  >&lt;p&gt;I agree that a channel staying open with no consumer is a bad thing.  So you are manually acking the messages in your listener?  That&apos;s why it&apos;s a problem when it dies?  We probably need to support that pattern better anyway (it isn&apos;t explicitly tested anywahere up to now), so I need to understand your problem to see if it aligns with existing plans and get some tests in place.  If you would like to suggest some concrete changes feel free to make a contribution.&lt;/p&gt;</comment>
                            <comment id="62276" author="jesmith" created="Wed, 12 Jan 2011 07:17:04 +0000"  >&lt;p&gt;I am not manually acking the messages, but I am setting the connection to not auto-ack (channelTransacted=true and defining the transactionManager). &lt;/p&gt;

&lt;p&gt;And yes, because I am not autoAcking, that&apos;s why it&apos;s a problem as the message get stuck. &lt;/p&gt;

&lt;p&gt;Simplest option to fix is to simply kill the channel when the listener dies, especially as the channel to listener should be a 1-1 ratio (as anything else isn&apos;t thread safe). Or, in the error handling, after the listener is stopped simply issue a restart. But I think the scenarios here are to numerous to deal with like this. too many things could create some sort of runtimeexception (Network hiccup, etc....).Seems like as a bigger issue, the process of how to deal with exceptions in this layer needs to be more thoughtout. Especially as this seems to be a key problem of auto-acking messages, as it doesn&apos;t leave you anway to put the message back for someone else to get. &lt;/p&gt;
</comment>
                            <comment id="62323" author="david_syer" created="Thu, 13 Jan 2011 00:31:05 +0000"  >&lt;p&gt;OK, now we are starting to communicate.  If you are using 1.0.0.M2 and channelTransacted=true it should work fine.  Before that I really wouldn&apos;t expect it to have been tested.  What version of Spring Rabbit are you using (you marked the issue as &quot;affects 1.0.0.M1&quot;)?&lt;/p&gt;</comment>
                            <comment id="63582" author="david_syer" created="Mon, 21 Feb 2011 02:36:18 +0000"  >&lt;p&gt;Ping.  Is there anything wrong with 1.0.0.M2?  It would also help if you could check your use case with a snapshot since we are approaching 1.0.0.M3.&lt;/p&gt;</comment>
                            <comment id="63673" author="david_syer" created="Wed, 23 Feb 2011 07:37:32 +0000"  >&lt;p&gt;Assuming resolved since there was no feedback.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 11 Jan 2011 06:55:46 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10280" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3965</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i029bj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>13219</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10381" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Ranking</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>12964</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10120" key="com.atlassian.jira.plugin.system.customfieldtypes:url">
                        <customfieldname>Reference URL</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[http://forum.springsource.org/showthread.php?t=99780]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>