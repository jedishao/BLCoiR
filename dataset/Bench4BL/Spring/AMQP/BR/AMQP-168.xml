<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 10:49:48 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/AMQP-168/AMQP-168.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[AMQP-168] SimpleMessageListenerContainer should only commit every txSize messages</title>
                <link>https://jira.spring.io/browse/AMQP-168</link>
                <project id="10450" key="AMQP">Spring AMQP</project>
                    <description>&lt;p&gt;SimpleMessageListenerContainer should only commit every txSize messages (it looks like it does it for every message right now).&lt;/p&gt;</description>
                <environment></environment>
        <key id="37895">AMQP-168</key>
            <summary>SimpleMessageListenerContainer should only commit every txSize messages</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="8">Complete</resolution>
                                        <assignee username="david_syer">Dave Syer</assignee>
                                    <reporter username="david_syer">Dave Syer</reporter>
                        <labels>
                    </labels>
                <created>Tue, 10 May 2011 05:49:10 +0000</created>
                <updated>Fri, 29 Mar 2013 19:36:10 +0000</updated>
                            <resolved>Wed, 11 May 2011 05:47:41 +0000</resolved>
                                    <version>1.0.0.RC1</version>
                                    <fixVersion>1.0.0.RC2</fixVersion>
                                    <component>RabbitMQ</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                    <timeoriginalestimate seconds="0">0d</timeoriginalestimate>
                            <timeestimate seconds="0">0d</timeestimate>
                                        <comments>
                            <comment id="66250" author="david_syer" created="Wed, 11 May 2011 05:47:40 +0000"  >&lt;p&gt;When I looked into this I found 2 problems.  One was the original problem of the acks and commits being inside the txSize loop instead of outside it.  When that was fixed it meant that retry tests were failing because recovered messages were being rolled back in race conditions where they ended up not being last in a transaction that had another failure yet to come.  The best way to fix that is to aggressively ack and commit as soon as a recovery is handled (this is a recognised bad message, let&apos;s get it out of the way in case we hit any more problems).  We do that in Spring Batch by setting a ThreadLocal in RepeatSynchronizationManager, but I didn&apos;t want to introduce either a ThreadLocal or a repeat abstraction for the tx loop in Spring AMQP unless there was a pressing need.  The compromise solution is a special exception, ImmediateAcknowledgeAmqpException, which the listener (recoverer in this use case) can use to signal to the container that it wants the acks and commits to be sent immediately.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                                                                                    <customfield id="customfield_10280" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3891</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i028w7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>13150</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10381" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Ranking</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>12895</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>