<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 10:53:31 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/AMQP-209/AMQP-209.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[AMQP-209] BlockingQueueConsumer.InternalConsumer does not override handleCancel which is called when consumer is cancelled by broker</title>
                <link>https://jira.spring.io/browse/AMQP-209</link>
                <project id="10450" key="AMQP">Spring AMQP</project>
                    <description>&lt;p&gt;The rabbit server is allowed to issue a basicCancel to a consumer. Spring-AMQP should handle this and at minimum allow a user to redeclare queue, bindings and reconsume. See RabbitMQ docoumentation &lt;a href=&quot;http://www.rabbitmq.com/amqp-0-9-1-quickref.html#basic.cancel&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.rabbitmq.com/amqp-0-9-1-quickref.html#basic.cancel&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;&quot;It may also be sent from the server to the client in the event of the consumer being unexpectedly cancelled (i.e. cancelled for any reason other than the server receiving the corresponding basic.cancel from the client). This allows clients to be notified of the loss of consumers due to events such as queue deletion.&quot;&lt;/p&gt;

&lt;p&gt;basicCancel is issued from the broker to consumers in two important cases when using a cluster. &lt;/p&gt;

&lt;p&gt;1. When a cluster node goes down, all consumers which were consuming from this queue and not directly connected to the downed node are issued basicCancel. In order to conform to the behavior of consumers which ARE directly connected to the downed node, these consumers must redeclare the queues, bindings and reconsume. Current, in 1.0.1-SNAPSHOT on github, after this node is taken down, all consumers directly connected to this node are automatically reconnected by the CachingConnectionFactory. Consumers not directly connected silently stop consuming. This is a very serious shortcoming and is preventing us from going live with the spring-amqp client.&lt;/p&gt;

&lt;p&gt;2. basicCancel is issued from the broker to all consumers of an HA-queue on slave promotion to master. Current, in 1.0.1-SNAPSHOT on github, when a slave is promoted to master, all consumers not directly connected to the master node silently stop consuming. This is currently preventing us from using HA queues in production with the spring-amqp client. We are using spring &quot;java config&quot; and are thus not dependent on the current ongoing development to &quot;Support Rabbit HA&quot;.&lt;/p&gt;

&lt;p&gt;&quot;Clients that were consuming from the mirrored-queue and support our Consumer Cancellation Notifications extension will receive a notification that their subscription to the mirrored-queue has been abruptly cancelled. At this point they should re-consume from the queue, which will pick up the new master. The reason for sending this notification is that informing clients of the loss of the master is essential: otherwise the client may continue to issue acknowledgements for messages they were sent by the old, failed master, and not expect that they might be about to see the same messages again, this time sent by the new master. Of course, clients that were connected to the failed node will find their connections failed, and will need to reconnect to a surviving node of the cluster.&quot;&lt;/p&gt;

&lt;p&gt;I forked spring-amqp on github &lt;a href=&quot;https://github.com/drstevens/spring-amqp/commit/187eb30066ee8125932866756a553d2ac95b2e92&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/drstevens/spring-amqp/commit/187eb30066ee8125932866756a553d2ac95b2e92&lt;/a&gt; in order to add overload to BlockingQueueConsumer.InternalConsumer.handleCancel. After reproducing, I now get debug logging identifying cancellation by the broker.&lt;/p&gt;

&lt;p&gt;11:47:52.018 &lt;span class=&quot;error&quot;&gt;&amp;#91;AMQP Connection xxx.xxx.xxx.xxx:5672&amp;#93;&lt;/span&gt; DEBUG o.s.a.r.l.BlockingQueueConsumer - Received cancellation notice for Consumer: tag=&lt;span class=&quot;error&quot;&gt;&amp;#91;amq.ctag-AcmfdKARPeoy5kA-s-1Lv6&amp;#93;&lt;/span&gt;, channel=Cached Rabbit Channel: AMQChannel(amqp://guest@xxx.xxx.xxx.xxx:5672/,2), acknowledgeMode=AUTO local queue size=0&lt;/p&gt;</description>
                <environment>RAbbitMQ Server 2.7.1 (earlier versions as well) on Linux.</environment>
        <key id="41852">AMQP-209</key>
            <summary>BlockingQueueConsumer.InternalConsumer does not override handleCancel which is called when consumer is cancelled by broker</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="2" iconUrl="https://jira.spring.io/images/icons/priorities/critical.png">Critical</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="8">Complete</resolution>
                                        <assignee username="grussell">Gary Russell</assignee>
                                    <reporter username="drstevens">Dave Stevens</reporter>
                        <labels>
                            <label>cluster</label>
                    </labels>
                <created>Mon, 23 Jan 2012 11:29:16 +0000</created>
                <updated>Tue, 29 May 2012 06:18:15 +0000</updated>
                            <resolved>Tue, 29 May 2012 06:18:15 +0000</resolved>
                                    <version>1.0.0 GA</version>
                    <version>1.1.0.GA</version>
                                    <fixVersion>1.1.0.GA</fixVersion>
                                    <component>Core</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="74990" author="drstevens" created="Mon, 23 Jan 2012 12:11:01 +0000"  >&lt;p&gt;I have created a new thread on the forum regarding this.  &lt;br/&gt;
&lt;a href=&quot;http://forum.springsource.org/showthread.php?122129-handling-basic-cancel%28consumer-tag-consumer-tag-no-wait-no-wait%29-sent-from-Server&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://forum.springsource.org/showthread.php?122129-handling-basic-cancel%28consumer-tag-consumer-tag-no-wait-no-wait%29-sent-from-Server&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="74992" author="grussell" created="Mon, 23 Jan 2012 12:42:17 +0000"  >&lt;blockquote&gt;
&lt;p&gt;...are thus not dependent on the current ongoing development to &quot;Support Rabbit HA&quot;.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I assume you are not using any of the rabbitTemplate .*sendAndReceive() methods because that effort also enables adding HA arguments to temporary reply queues.&lt;/p&gt;


&lt;p&gt;If you have interest in contributing to the project, please sign the CLA (&lt;a href=&quot;https://support.springsource.com/spring_committer_signup&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://support.springsource.com/spring_committer_signup&lt;/a&gt;) before issuing any pull requests.&lt;/p&gt;

&lt;p&gt;Thanks&lt;/p&gt;</comment>
                            <comment id="74994" author="drstevens" created="Mon, 23 Jan 2012 13:39:12 +0000"  >&lt;p&gt;That is correct. We have kept it as basic as possible because we need to talk to Akka and a custom .NET client.&lt;/p&gt;

&lt;p&gt;I&apos;m actually a little concerned about just calling the existing auto queue declaration logic in RabbitAdmin when these consumers get unexpectedly canceled.&lt;/p&gt;

&lt;p&gt;When a node goes down containing a durable non-HA queue with consumers, these consumers must not attempt to redeclare this queue. If they do, they will exception. I&apos;m not sure what should happen. I would guess they should try again and keep retrying until that node with the original durable queue comes back up.&lt;/p&gt;

&lt;p&gt;I&apos;m thinking that there is no generic auto-declaration strategy that can work across the board for all types of queues.&lt;/p&gt;</comment>
                            <comment id="75075" author="drstevens" created="Thu, 26 Jan 2012 17:03:58 +0000"  >&lt;p&gt;Please see response to this thread containing log output&lt;br/&gt;
&lt;a href=&quot;http://forum.springsource.org/showthread.php?122129-handling-basic-cancel(consumer-tag-consumer-tag-no-wait-no-wait)-sent-from-Server&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://forum.springsource.org/showthread.php?122129-handling-basic-cancel(consumer-tag-consumer-tag-no-wait-no-wait)-sent-from-Server&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="79389" author="grussell" created="Tue, 29 May 2012 06:18:15 +0000"  >&lt;p&gt;This was resolved in the recent 1.1.0 release but I inadvertently left the JIRA open.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 23 Jan 2012 12:42:17 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10280" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>29185</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i03mev:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>21173</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10381" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Ranking</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>17872</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10120" key="com.atlassian.jira.plugin.system.customfieldtypes:url">
                        <customfieldname>Reference URL</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[http://forum.springsource.org/showthread.php?121480-Consumer-does-not-reconnect-when-there-is-no-connection-failure&p=397495#post397495]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>