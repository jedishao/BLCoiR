<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 11:02:33 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/AMQP-122/AMQP-122.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[AMQP-122] RabbitAdmin needs to handle starting up with no broker</title>
                <link>https://jira.spring.io/browse/AMQP-122</link>
                <project id="10450" key="AMQP">Spring AMQP</project>
                    <description>&lt;p&gt;RabbitAdmin does not appear to handle starting up without the presence of a broker. Starting up with no broker can happen of course and so it would be reasonable to have a warning logged just once until the broker becomes available. The following stack trace is shows the current behaviour:&lt;/p&gt;

&lt;p&gt;2011-03-20 07:34:12,983 &lt;span class=&quot;error&quot;&gt;&amp;#91;main &amp;#93;&lt;/span&gt; ERROR: org.springframework.web.servlet.DispatcherServlet - Context initialization failed&lt;br/&gt;
org.springframework.context.ApplicationContextException: Failed to start bean &apos;org.springframework.amqp.rabbit.core.RabbitAdmin#0&apos;; nested exception is org.springframework.amqp.AmqpConnectException: java.net.ConnectException: Connection refused&lt;br/&gt;
at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:169)&lt;br/&gt;
at org.springframework.context.support.DefaultLifecycleProcessor.access$1(DefaultLifecycleProcessor.java:154)&lt;br/&gt;
at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:335)&lt;br/&gt;
at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:143)&lt;br/&gt;
at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:108)&lt;br/&gt;
at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:908)&lt;br/&gt;
at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:428)&lt;br/&gt;
at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:442)&lt;br/&gt;
at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:458)&lt;br/&gt;
at org.springframework.web.servlet.FrameworkServlet.initWebApplicationContext(FrameworkServlet.java:339)&lt;br/&gt;
at org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:306)&lt;br/&gt;
at org.springframework.web.servlet.HttpServletBean.init(HttpServletBean.java:127)&lt;br/&gt;
at javax.servlet.GenericServlet.init(GenericServlet.java:212)&lt;br/&gt;
at org.apache.catalina.core.StandardWrapper.loadServlet(StandardWrapper.java:1161)&lt;br/&gt;
at org.apache.catalina.core.StandardWrapper.load(StandardWrapper.java:981)&lt;br/&gt;
at org.apache.catalina.core.StandardContext.loadOnStartup(StandardContext.java:4058)&lt;br/&gt;
at org.apache.catalina.core.StandardContext.start(StandardContext.java:4364)&lt;br/&gt;
at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1045)&lt;br/&gt;
at org.apache.catalina.core.StandardHost.start(StandardHost.java:719)&lt;br/&gt;
at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1045)&lt;br/&gt;
at org.apache.catalina.core.StandardEngine.start(StandardEngine.java:443)&lt;br/&gt;
at org.apache.catalina.startup.Embedded.start(Embedded.java:825)&lt;br/&gt;
at org.codehaus.mojo.tomcat.AbstractRunMojo.startContainer(AbstractRunMojo.java:385)&lt;br/&gt;
at org.codehaus.mojo.tomcat.AbstractRunMojo.execute(AbstractRunMojo.java:144)&lt;br/&gt;
at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:490)&lt;br/&gt;
at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:694)&lt;br/&gt;
at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeStandaloneGoal(DefaultLifecycleExecutor.java:569)&lt;br/&gt;
at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:539)&lt;br/&gt;
at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:387)&lt;br/&gt;
at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:348)&lt;br/&gt;
at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:180)&lt;br/&gt;
at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:328)&lt;br/&gt;
at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:138)&lt;br/&gt;
at org.apache.maven.cli.MavenCli.main(MavenCli.java:362)&lt;br/&gt;
at org.apache.maven.cli.compat.CompatibleMain.main(CompatibleMain.java:60)&lt;br/&gt;
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)&lt;br/&gt;
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;br/&gt;
at java.lang.reflect.Method.invoke(Method.java:597)&lt;br/&gt;
at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)&lt;br/&gt;
at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)&lt;br/&gt;
at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)&lt;br/&gt;
at org.codehaus.classworlds.Launcher.main(Launcher.java:375)&lt;br/&gt;
Caused by: org.springframework.amqp.AmqpConnectException: java.net.ConnectException: Connection refused&lt;br/&gt;
at org.springframework.amqp.rabbit.support.RabbitUtils.convertRabbitAccessException(RabbitUtils.java:111)&lt;br/&gt;
at org.springframework.amqp.rabbit.connection.SingleConnectionFactory.createBareConnection(SingleConnectionFactory.java:167)&lt;br/&gt;
at org.springframework.amqp.rabbit.connection.SingleConnectionFactory.doCreateConnection(SingleConnectionFactory.java:160)&lt;br/&gt;
at org.springframework.amqp.rabbit.connection.SingleConnectionFactory.createConnection(SingleConnectionFactory.java:120)&lt;br/&gt;
at org.springframework.amqp.rabbit.connection.ConnectionFactoryUtils$1.createConnection(ConnectionFactoryUtils.java:94)&lt;br/&gt;
at org.springframework.amqp.rabbit.connection.ConnectionFactoryUtils.doGetTransactionalResourceHolder(ConnectionFactoryUtils.java:141)&lt;br/&gt;
at org.springframework.amqp.rabbit.connection.ConnectionFactoryUtils.getTransactionalResourceHolder(ConnectionFactoryUtils.java:84)&lt;br/&gt;
at org.springframework.amqp.rabbit.support.RabbitAccessor.getTransactionalResourceHolder(RabbitAccessor.java:112)&lt;br/&gt;
at org.springframework.amqp.rabbit.core.RabbitTemplate.execute(RabbitTemplate.java:291)&lt;br/&gt;
at org.springframework.amqp.rabbit.core.RabbitAdmin.start(RabbitAdmin.java:219)&lt;br/&gt;
at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:166)&lt;br/&gt;
... 42 more&lt;br/&gt;
Caused by: java.net.ConnectException: Connection refused&lt;br/&gt;
at java.net.PlainSocketImpl.socketConnect(Native Method)&lt;br/&gt;
at java.net.PlainSocketImpl.doConnect(PlainSocketImpl.java:333)&lt;br/&gt;
at java.net.PlainSocketImpl.connectToAddress(PlainSocketImpl.java:195)&lt;br/&gt;
at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:182)&lt;br/&gt;
at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:432)&lt;br/&gt;
at java.net.Socket.connect(Socket.java:529)&lt;br/&gt;
at java.net.Socket.connect(Socket.java:478)&lt;br/&gt;
at com.rabbitmq.client.ConnectionFactory.createFrameHandler(ConnectionFactory.java:342)&lt;br/&gt;
at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:380)&lt;br/&gt;
at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:403)&lt;br/&gt;
at org.springframework.amqp.rabbit.connection.SingleConnectionFactory.createBareConnection(SingleConnectionFactory.java:165)&lt;br/&gt;
... 51 more&lt;/p&gt;</description>
                <environment></environment>
        <key id="36936">AMQP-122</key>
            <summary>RabbitAdmin needs to handle starting up with no broker</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="8">Complete</resolution>
                                        <assignee username="david_syer">Dave Syer</assignee>
                                    <reporter username="huntc">Christopher Hunt</reporter>
                        <labels>
                    </labels>
                <created>Mon, 21 Mar 2011 03:43:37 +0000</created>
                <updated>Fri, 29 Mar 2013 19:36:11 +0000</updated>
                            <resolved>Tue, 22 Mar 2011 06:56:14 +0000</resolved>
                                    <version>1.0.0.M3</version>
                                                    <component>RabbitMQ</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                    <timeoriginalestimate seconds="0">0d</timeoriginalestimate>
                            <timeestimate seconds="0">0d</timeestimate>
                                        <comments>
                            <comment id="64542" author="david_syer" created="Mon, 21 Mar 2011 03:53:25 +0000"  >&lt;p&gt;Life gets complicated when the broker isn&apos;t available on startup.  To really recover we would have to fail and start a background thread for retrying the connection, which the MLC can already do naturally, but RabbitAdmin cannot since it doesn&apos;t have a thread pool.   We could log a warning and continue (and optionally fail if the user sets a flag), and maybe that&apos;s all we can do for 1.0.  The effect would be to leave the RabbitAdmin in its stopped state, so it could be manually started later if necessary.  If the queues were not declared the MLC will have crapped out anyway and closed down everything.&lt;/p&gt;</comment>
                            <comment id="64543" author="huntc" created="Mon, 21 Mar 2011 04:15:54 +0000"  >&lt;p&gt;I don&apos;t have an answer. In case it helps here is what JMS reports when there is no broker on startup:&lt;/p&gt;

&lt;p&gt;2011-03-21 22:05:26,598 &lt;a href=&quot;#0-1&quot;&gt;erContainer#0-1&lt;/a&gt; WARN : org.springframework.jms.listener.DefaultMessageListenerContainer - Could not refresh JMS Connection for destination &apos;topic://com.classactionpl.tz.tzdata&apos; - retrying in 5000 ms. Cause: Could not connect to broker URL: tcp://localhost:61616. Reason: java.net.ConnectException: Connection refused&lt;/p&gt;

&lt;p&gt;The log file can quickly fill up though as the message is repeated every 5 seconds - I&apos;d prefer to see the message just once. May be a backoff policy should be applied too (just a thought).&lt;/p&gt;

&lt;p&gt;When a JMS broker is lost after a successful connection here is what it reports:&lt;/p&gt;

&lt;p&gt;2011-03-21 22:12:12,342 &lt;span class=&quot;error&quot;&gt;&amp;#91;127.0.0.1:61616&amp;#93;&lt;/span&gt; WARN : org.springframework.jms.connection.CachingConnectionFactory - Encountered a JMSException - resetting the underlying JMS Connection&lt;br/&gt;
javax.jms.JMSException: java.io.EOFException&lt;br/&gt;
	at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:49)&lt;br/&gt;
	at org.apache.activemq.ActiveMQConnection.onAsyncException(ActiveMQConnection.java:1833)&lt;br/&gt;
	at org.apache.activemq.ActiveMQConnection.onException(ActiveMQConnection.java:1850)&lt;br/&gt;
	at org.apache.activemq.transport.TransportFilter.onException(TransportFilter.java:101)&lt;br/&gt;
	at org.apache.activemq.transport.ResponseCorrelator.onException(ResponseCorrelator.java:126)&lt;br/&gt;
	at org.apache.activemq.transport.TransportFilter.onException(TransportFilter.java:101)&lt;br/&gt;
	at org.apache.activemq.transport.TransportFilter.onException(TransportFilter.java:101)&lt;br/&gt;
	at org.apache.activemq.transport.WireFormatNegotiator.onException(WireFormatNegotiator.java:160)&lt;br/&gt;
	at org.apache.activemq.transport.InactivityMonitor.onException(InactivityMonitor.java:266)&lt;br/&gt;
	at org.apache.activemq.transport.TransportSupport.onException(TransportSupport.java:96)&lt;br/&gt;
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:206)&lt;br/&gt;
	at java.lang.Thread.run(Thread.java:680)&lt;br/&gt;
Caused by: java.io.EOFException&lt;br/&gt;
	at java.io.DataInputStream.readInt(DataInputStream.java:375)&lt;br/&gt;
	at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:269)&lt;br/&gt;
	at org.apache.activemq.transport.tcp.TcpTransport.readCommand(TcpTransport.java:227)&lt;br/&gt;
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:219)&lt;br/&gt;
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:202)&lt;br/&gt;
	... 1 more&lt;br/&gt;
2011-03-21 22:12:12,347 &lt;a href=&quot;#0-2&quot;&gt;erContainer#0-2&lt;/a&gt; WARN : org.springframework.jms.listener.DefaultMessageListenerContainer - Setup of JMS message listener invoker failed for destination &apos;topic://com.classactionpl.tz.tzdata&apos; - trying to recover. Cause: The Consumer is closed&lt;br/&gt;
2011-03-21 22:12:12,351 &lt;a href=&quot;#0-2&quot;&gt;erContainer#0-2&lt;/a&gt; WARN : org.springframework.jms.listener.DefaultMessageListenerContainer - Could not refresh JMS Connection for destination &apos;topic://com.classactionpl.tz.tzdata&apos; - retrying in 5000 ms. Cause: Could not connect to broker URL: tcp://localhost:61616. Reason: java.net.ConnectException: Connection refused&lt;/p&gt;

&lt;p&gt;I think that to have something similar in AMQP for both scenarios would be what people would expect.&lt;/p&gt;</comment>
                            <comment id="64590" author="david_syer" created="Tue, 22 Mar 2011 06:56:13 +0000"  >&lt;p&gt;Spring Rabbit SimpleMessageListenerContainer already has that feature (since 1.0.0.M3).  We are talking about RabbitAdmin in this issue.  I have added a ConnectionListener to the ConnectionFactory and RabbitAdmin now does it&apos;s startup by registering a listener for when a Connection is first used, instead of trying to do everything up front.  It seems to work.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 21 Mar 2011 03:53:25 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10280" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3934</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i02953:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>13190</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10381" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Ranking</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>12935</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>