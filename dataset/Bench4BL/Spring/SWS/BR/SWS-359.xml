<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Fri Dec 23 07:16:46 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SWS-359/SWS-359.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SWS-359] Using Axiom with payload caching off sometimes creates empty soap bodies</title>
                <link>https://jira.spring.io/browse/SWS-359</link>
                <project id="10060" key="SWS">Spring Web Services</project>
                    <description>&lt;p&gt;It appears that if you&apos;re using Castor to marshal your responses, and you&apos;re using Axiom without payload caching, that the SOAP response comes back with an empty Soap Body.  I did not try this with other Marshalling technologies like JAXB, etc, so I&apos;m not sure if it is restricted to Castor only or not.&lt;/p&gt;

&lt;p&gt;It looks like NonCachingPayload.DelegatingStreamWriter.writeEndDocument() never gets called at least when marshalling with Castor.  Castor by default does not fire an endDocument SAX event (or close or flush for that matter).  But if you call setMarshalAsDocument(true) on a castor marshaller it does call endDocument().&lt;/p&gt;

&lt;p&gt;I just now worked around this with Castor by creating a simple subclass of CastorMarshaller like this below:&lt;br/&gt;
    public class MyCastorMarshaller extends CastorMarshaller {&lt;br/&gt;
        protected void customizeMarshaller(Marshaller marshaller) &lt;/p&gt;
{
            super.customizeMarshaller(marshaller);
            marshaller.setMarshalAsDocument(true);
        }
&lt;p&gt;    }&lt;/p&gt;

&lt;p&gt;See this forum thread for additional details: &lt;a href=&quot;http://forum.springframework.org/showthread.php?p=181732&amp;amp;posted=1#post181732&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://forum.springframework.org/showthread.php?p=181732&amp;amp;posted=1#post181732&lt;/a&gt;&lt;/p&gt;</description>
                <environment></environment>
        <key id="22242">SWS-359</key>
            <summary>Using Axiom with payload caching off sometimes creates empty soap bodies</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="arjen.poutsma">Arjen Poutsma</assignee>
                                    <reporter username="jim">Jim Cummings</reporter>
                        <labels>
                    </labels>
                <created>Wed, 21 May 2008 10:17:08 +0000</created>
                <updated>Thu, 21 Aug 2008 20:45:45 +0000</updated>
                            <resolved>Fri, 6 Jun 2008 02:56:09 +0000</resolved>
                                    <version>1.5.2</version>
                                    <fixVersion>1.5.3</fixVersion>
                                    <component>Core</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="35955" author="arjen.poutsma" created="Wed, 21 May 2008 10:41:39 +0000"  >&lt;p&gt;I could expose that property on the CastorMarshaller, so you can configure it in Spring config.&lt;/p&gt;

&lt;p&gt;I&apos;m open for nicer solutions, though.&lt;/p&gt;</comment>
                            <comment id="35956" author="chrisborrill" created="Wed, 21 May 2008 12:56:54 +0000"  >&lt;p&gt;I am using org.springframework.ws.soap.axiom.AxiomSoapMessageFactory and org.springframework.oxm.jibx.JibxMarshaller.  If I set the payloadCaching property of the AxiomSoapMessageFactory to false the SOAP body is empty, but if I set payloadCaching to true (the default) everthing works correctly.&lt;/p&gt;</comment>
                            <comment id="35959" author="jim" created="Wed, 21 May 2008 15:24:43 +0000"  >&lt;p&gt;I wonder if maybe NonCachingPayload.DelegatingStreamWriter could more proactively detect the end of the payload element by watching the writeStartElement(), writeEndElement() and writeEmptyElement() events so that it would not need the writeEndDocument() to get called.  It would probably need to support the possibility of nested elements in the payload having the same name as the root payload element, but it might could be done with a counter of starts vs ends for the root ele name.  Dunno - just a thought.&lt;/p&gt;</comment>
                            <comment id="35963" author="arjen.poutsma" created="Wed, 21 May 2008 20:20:51 +0000"  >&lt;p&gt;I had the same idea (counting elements) last night in bed. Great minds...&lt;/p&gt;</comment>
                            <comment id="35980" author="jim" created="Thu, 22 May 2008 09:51:38 +0000"  >&lt;p&gt;Arjen - another related thing with this.  I was working with a stax-based endpoint and saw similar issues with the empty body.  I was able to temporarily work around that, but I noticed that when using StAX marshalling I also needed to call writeStartDocument() on my XMLStreamWriter.  The DelegatingStreamWriter doesn&apos;t default the encoding to anything, and this was causing a NPE in ByteArrayDataSource.getXMLBytes() deep in axiom code during the msg.writeTo() call.&lt;/p&gt;

&lt;p&gt;Could you default the encoding in case writeStartDocument() isn&apos;t called either?  Thanks!&lt;/p&gt;</comment>
                            <comment id="36532" author="arjen.poutsma" created="Fri, 6 Jun 2008 02:55:57 +0000"  >&lt;p&gt;I will add element depth counting. I don&apos;t think counting the writeEmptyElement() events is necessary, though, because that&apos;s just elementDepth + 1 -1. Also fixed the encoding bug, now defaults to UTF-8, like all XML should.&lt;/p&gt;

&lt;p&gt;Could you check a recent snapshot (as of tomorrow) to check if things work now?&lt;/p&gt;</comment>
                            <comment id="37777" author="arjen.poutsma" created="Mon, 21 Jul 2008 22:07:15 +0000"  >&lt;p&gt;Closing issues in 1.5.3&lt;/p&gt;</comment>
                            <comment id="39166" author="chrisborrill" created="Thu, 21 Aug 2008 10:42:12 +0000"  >&lt;p&gt;Make sure you have no active interceptors if payload caching is set to false, since these will consume the message, as described here:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://static.springframework.org/spring-ws/sites/1.5/apidocs/org/springframework/ws/soap/axiom/AxiomSoapMessageFactory.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://static.springframework.org/spring-ws/sites/1.5/apidocs/org/springframework/ws/soap/axiom/AxiomSoapMessageFactory.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Good luck,&lt;br/&gt;
Chris&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 21 May 2008 10:41:39 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10280" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>7752</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i040qv:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>23495</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10381" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Ranking</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>20054</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>