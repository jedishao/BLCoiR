<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Fri Dec 23 07:08:43 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SWS-378/SWS-378.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SWS-378] Wss4jSecurityInterceptor.toDocument(..) causes decryption to fail when using SaajSoapMessageFactory</title>
                <link>https://jira.spring.io/browse/SWS-378</link>
                <project id="10060" key="SWS">Spring Web Services</project>
                    <description>&lt;p&gt;Wss4jSecurityInterceptor.toDocument(..) contains a bug that prevents Wss4jSecurityInterceptor.validateMessage() from replacing encrypted SOAP message parts with decrypted parts when using SaajSoapMessageFactory.  Specifically, when the org.w3c.dom.Document returned by toDocument() is modified with decrypted parts, the changes aren&apos;t reflected in the original SaajSoapMessage inside MessageContext.&lt;/p&gt;

&lt;p&gt;Test case to reproduce the bug uses ws-tutorial sample application. &lt;br/&gt;
1. Modify HolidayRequestClient constructor to get wsTemplate bean from Application Context configured inside SpringConfig.xml:&lt;br/&gt;
	/**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Default class constructor&lt;br/&gt;
	 */&lt;br/&gt;
	public HolidayRequestClient() {&lt;br/&gt;
		hrNs = Namespace.getNamespace(&quot;hr&quot;, &quot;http://mycompany.com/hr/schemas&quot;);&lt;br/&gt;
		fmt = new SimpleDateFormat(&quot;yyyy-MM-dd&quot;);&lt;br/&gt;
	      ApplicationContext ac = null;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;	      try&lt;br/&gt;
	      {&lt;br/&gt;
	         ac = new ClassPathXmlApplicationContext(&lt;br/&gt;
	               new String[] &lt;/p&gt;
{ &quot;SpringConfig.xml&quot; }
&lt;p&gt;);&lt;br/&gt;
	      }&lt;br/&gt;
	      catch (BeansException e)&lt;/p&gt;
	      {
	         e.printStackTrace();
	         ac = new FileSystemXmlApplicationContext(&quot;SpringConfig.xml&quot;);

	      }
&lt;p&gt;	      wsTemplate = (WebServiceTemplate) ac&lt;br/&gt;
	            .getBean(&quot;wsTemplate&quot;);&lt;/p&gt;

&lt;p&gt;	}&lt;/p&gt;

&lt;p&gt;2. Use the following client SpringConfig.xml to encrypt outgoing HolidayRequest element content using wss4j:&lt;/p&gt;

&lt;p&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;&lt;/p&gt;

&lt;p&gt;&amp;lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot;&lt;br/&gt;
	xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;br/&gt;
	xsi:schemaLocation=&quot;http://www.springframework.org/schema/beans &lt;br/&gt;
	&lt;a href=&quot;http://www.springframework.org/schema/beans/spring-beans-2.5.xsd&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.springframework.org/schema/beans/spring-beans-2.5.xsd&lt;/a&gt;&quot;&amp;gt;&lt;/p&gt;

&lt;p&gt;    &amp;lt;bean id=&quot;wsTemplate&quot; &lt;br/&gt;
        class=&quot;org.springframework.ws.client.core.WebServiceTemplate&quot;&amp;gt;&lt;br/&gt;
        &amp;lt;constructor-arg&amp;gt;&lt;br/&gt;
            &amp;lt;bean class=&quot;org.springframework.ws.soap.saaj.SaajSoapMessageFactory&quot;/&amp;gt;&lt;br/&gt;
        &amp;lt;/constructor-arg&amp;gt;&lt;br/&gt;
        &amp;lt;property name=&quot;interceptors&quot;&amp;gt;&lt;br/&gt;
            &amp;lt;list&amp;gt;&lt;br/&gt;
                &amp;lt;ref local=&quot;wsEncryptSecurityInterceptor&quot; /&amp;gt;&lt;br/&gt;
            &amp;lt;/list&amp;gt;&lt;br/&gt;
        &amp;lt;/property&amp;gt;        &lt;br/&gt;
    &amp;lt;/bean&amp;gt;&lt;/p&gt;

&lt;p&gt;    &amp;lt;bean id=&quot;wsEncryptSecurityInterceptor&quot; &lt;br/&gt;
        class=&quot;org.springframework.ws.soap.security.wss4j.Wss4jSecurityInterceptor&quot;&amp;gt;&lt;br/&gt;
        &amp;lt;property name=&quot;securementActions&quot; value=&quot;Encrypt&quot; /&amp;gt;&lt;/p&gt;

&lt;p&gt;        &amp;lt;property name=&quot;securementEncryptionParts&quot;&lt;br/&gt;
            value=&quot;&lt;/p&gt;
{Content}{http://mycompany.com/hr/schemas}HolidayRequest&quot;/&amp;gt;&lt;br/&gt;
        &lt;br/&gt;
        &amp;lt;property name=&quot;securementEncryptionUser&quot; value=&quot;alias&quot; /&amp;gt;&lt;br/&gt;
        &amp;lt;property name=&quot;securementEncryptionCrypto&quot;&amp;gt;&lt;br/&gt;
            &amp;lt;bean&lt;br/&gt;
                class=&quot;org.springframework.ws.soap.security.wss4j.support.CryptoFactoryBean&quot;&amp;gt;&lt;br/&gt;
                &amp;lt;property name=&quot;keyStorePassword&quot; value=&quot;storepass&quot; /&amp;gt;&lt;br/&gt;
                &amp;lt;property name=&quot;keyStoreLocation&quot; value=&quot;classpath:/clientKeystore.jks&quot; /&amp;gt;&lt;br/&gt;
            &amp;lt;/bean&amp;gt;&lt;br/&gt;
        &amp;lt;/property&amp;gt;&lt;br/&gt;
    &amp;lt;/bean&amp;gt;&lt;br/&gt;
   &lt;br/&gt;
&amp;lt;/beans&amp;gt;&lt;br/&gt;
&lt;br/&gt;
3. Configure server security interceptor bean wsEncryptSecurityInterceptor inside spring-ws-servlet.xml for decrypting HollidayRequest element content:&lt;br/&gt;
...&lt;br/&gt;
    &amp;lt;bean class=&quot;org.springframework.ws.server.endpoint.mapping.PayloadRootQNameEndpointMapping&quot;&amp;gt;&lt;br/&gt;
        &amp;lt;property name=&quot;mappings&quot;&amp;gt;&lt;br/&gt;
            &amp;lt;props&amp;gt;&lt;br/&gt;
                &amp;lt;prop key=&quot;{http://mycompany.com/hr/schemas}HolidayRequest&quot;&amp;gt;holidayEndpoint&amp;lt;/prop&amp;gt;&lt;br/&gt;
            &amp;lt;/props&amp;gt;&lt;br/&gt;
        &amp;lt;/property&amp;gt;&lt;br/&gt;
        &amp;lt;property name=&quot;interceptors&quot;&amp;gt;&lt;br/&gt;
            &amp;lt;list&amp;gt;&lt;br/&gt;
                &amp;lt;ref local=&quot;wsEncryptSecurityInterceptor&quot;/&amp;gt;&lt;br/&gt;
                &amp;lt;bean class=&quot;org.springframework.ws.server.endpoint.interceptor.PayloadLoggingInterceptor&quot;/&amp;gt;&lt;br/&gt;
            &amp;lt;/list&amp;gt;&lt;br/&gt;
        &amp;lt;/property&amp;gt;&lt;br/&gt;
    &amp;lt;/bean&amp;gt;&lt;br/&gt;
    &lt;br/&gt;
    &amp;lt;bean id=&quot;wsEncryptSecurityInterceptor&quot;&lt;br/&gt;
        class=&quot;org.springframework.ws.soap.security.wss4j.Wss4jSecurityInterceptor&quot;&amp;gt;&lt;br/&gt;
        &amp;lt;property name=&quot;validationActions&quot; value=&quot;Encrypt&quot; /&amp;gt;&lt;br/&gt;
        &amp;lt;property name=&quot;securementEncryptionParts&quot;&lt;br/&gt;
            value=&quot;{Content}
{http://mycompany.com/hr/schemas}
&lt;p&gt;HolidayRequest&quot; /&amp;gt;&lt;br/&gt;
        &amp;lt;property name=&quot;validationDecryptionCrypto&quot;&amp;gt;&lt;br/&gt;
            &amp;lt;bean&lt;br/&gt;
                class=&quot;org.springframework.ws.soap.security.wss4j.support.CryptoFactoryBean&quot;&amp;gt;&lt;br/&gt;
                &amp;lt;property name=&quot;keyStorePassword&quot; value=&quot;storepass&quot; /&amp;gt;&lt;br/&gt;
                &amp;lt;property name=&quot;keyStoreLocation&quot;&lt;br/&gt;
                    value=&quot;classpath:/serverKeystore.jks&quot; /&amp;gt;&lt;br/&gt;
            &amp;lt;/bean&amp;gt;&lt;br/&gt;
        &amp;lt;/property&amp;gt;&lt;br/&gt;
        &amp;lt;property name=&quot;validationCallbackHandler&quot;&amp;gt;&lt;br/&gt;
            &amp;lt;bean&lt;br/&gt;
                class=&quot;org.springframework.ws.soap.security.wss4j.callback.KeyStoreCallbackHandler&quot;&amp;gt;&lt;br/&gt;
                &amp;lt;property name=&quot;privateKeyPassword&quot; value=&quot;keypass&quot; /&amp;gt;&lt;br/&gt;
            &amp;lt;/bean&amp;gt;&lt;br/&gt;
        &amp;lt;/property&amp;gt;&lt;br/&gt;
    &amp;lt;/bean&amp;gt;&lt;br/&gt;
...&lt;/p&gt;

&lt;p&gt;4.  Generate server and client keystore files using these commands and place the generated files on the classpath: &lt;br/&gt;
   create server keystore: &lt;br/&gt;
        keytool -v -genkey -alias alias -keypass keypass -keystore serverKeystore.jks -storepass storepass -keyalg RSA -sigalg SHA1withRSA&lt;br/&gt;
   export PEM file for client keystore:&lt;br/&gt;
        keytool -export -alias alias -file alias.pem -sigalg SHA1withRSA -keystore serverKeystore.jks -storepass storepass -rfc&lt;br/&gt;
   import PEM into client store: &lt;br/&gt;
        keytool -v -import -trustcacerts -alias alias -file alias.pem -keystore clientKeystore.jks -keypass storepass -noprompt        &lt;/p&gt;

&lt;p&gt;5.  Run com.mycompany.hr.client.Main as Java Application, and see SoapFault response as logged by the client since the server was unable to decrypt the encrypted parts:&lt;/p&gt;

&lt;p&gt;2008-06-17 11:36:55,625 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;org.springframework.ws.client.core.WebServiceTemplate&amp;#93;&lt;/span&gt; - Received Fault message for request [SaajSoapMessage &lt;/p&gt;
{http://mycompany.com/hr/schemas}
&lt;p&gt;HolidayRequest]&lt;br/&gt;
Exception in thread &quot;main&quot; org.springframework.ws.soap.client.SoapFaultClientException: Unparseable date: &quot;&quot;&lt;br/&gt;
	at org.springframework.ws.soap.client.core.SoapFaultMessageResolver.resolveFault(SoapFaultMessageResolver.java:37)&lt;br/&gt;
	at org.springframework.ws.client.core.WebServiceTemplate.handleFault(WebServiceTemplate.java:699)&lt;br/&gt;
	at org.springframework.ws.client.core.WebServiceTemplate.doSendAndReceive(WebServiceTemplate.java:527)&lt;br/&gt;
	at org.springframework.ws.client.core.WebServiceTemplate.sendAndReceive(WebServiceTemplate.java:465)&lt;br/&gt;
	at org.springframework.ws.client.core.WebServiceTemplate.doSendAndReceive(WebServiceTemplate.java:420)&lt;br/&gt;
	at org.springframework.ws.client.core.WebServiceTemplate.sendSourceAndReceiveToResult(WebServiceTemplate.java:366)&lt;br/&gt;
	at org.springframework.ws.client.core.WebServiceTemplate.sendSourceAndReceiveToResult(WebServiceTemplate.java:351)&lt;br/&gt;
	at com.mycompany.hr.client.HolidayRequestClient.bookHoliday(HolidayRequestClient.java:63)&lt;br/&gt;
	at com.mycompany.hr.client.Main.main(Main.java:18)&lt;/p&gt;

&lt;p&gt;------------------------------&lt;br/&gt;
Proposed fix is to modify Wss4jSecurityInterceptor.toDocument(..) as follows, essentially rolling back an earlier fix for &lt;a href=&quot;https://jira.spring.io/browse/SWS-345&quot; title=&quot;WSS4J interceptor creates creates invalid digest for SAAJ messages&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SWS-345&quot;&gt;&lt;del&gt;SWS-345&lt;/del&gt;&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;    /** Converts the given &lt;/p&gt;
{@link SoapMessage}
&lt;p&gt; into a &lt;/p&gt;
{@link Document}
&lt;p&gt;. */&lt;br/&gt;
    private Document toDocument(SoapMessage soapMessage, MessageContext messageContext) {&lt;br/&gt;
        if (soapMessage instanceof SaajSoapMessage) &lt;/p&gt;
{
            SaajSoapMessage saajSoapMessage = (SaajSoapMessage) soapMessage;
            return saajSoapMessage.getSaajMessage().getSOAPPart();// works now since SWS-345 is fixed 
        }
&lt;p&gt;        else if (soapMessage instanceof AxiomSoapMessage) &lt;/p&gt;
{
            AxiomSoapMessage axiomMessage = (AxiomSoapMessage) soapMessage;
            return AxiomUtils.toDocument(axiomMessage.getAxiomMessage().getSOAPEnvelope());
        }
&lt;p&gt;        else &lt;/p&gt;
{
            throw new IllegalArgumentException(&quot;Message type not supported [&quot; + soapMessage + &quot;]&quot;);
        }
&lt;p&gt;    }&lt;/p&gt;</description>
                <environment>jdk1.5.0_15, Tomcat 6.0.14, Spring-WS 1.5.2, SaajSoapMessageFactory, message encryption/decryption using Wss4j</environment>
        <key id="22634">SWS-378</key>
            <summary>Wss4jSecurityInterceptor.toDocument(..) causes decryption to fail when using SaajSoapMessageFactory</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="arjen.poutsma">Arjen Poutsma</assignee>
                                    <reporter username="pdotsenko">Paul Dotsenko</reporter>
                        <labels>
                    </labels>
                <created>Tue, 17 Jun 2008 03:50:35 +0000</created>
                <updated>Mon, 21 Jul 2008 22:07:16 +0000</updated>
                            <resolved>Wed, 18 Jun 2008 23:34:58 +0000</resolved>
                                    <version>1.5.2</version>
                                    <fixVersion>1.5.3</fixVersion>
                                    <component>Security</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="36763" author="pdotsenko" created="Tue, 17 Jun 2008 03:58:53 +0000"  >&lt;p&gt;This is a patch file I created for the proposed fix for this bug.&lt;/p&gt;</comment>
                            <comment id="36768" author="tareq" created="Tue, 17 Jun 2008 18:00:01 +0000"  >&lt;p&gt;Thanks for the detailed description Paul. &lt;br/&gt;
Regarding the proposed fix, I&apos;m afraid it&apos;s not the best way to do it since it will break the signature generation. What should be done probably is to replace the Saaj message as it is done for Axiom messages.&lt;/p&gt;</comment>
                            <comment id="36807" author="pdotsenko" created="Wed, 18 Jun 2008 11:28:29 +0000"  >&lt;p&gt;Tareq,&lt;/p&gt;

&lt;p&gt;Thanks for pointing this out.  Looks like Arjen&apos;s fixes for &lt;a href=&quot;https://jira.spring.io/browse/SWS-376&quot; title=&quot;SaajSoapMessage.setSaajMessage() and AxiomSoapMessage.setAxiomMessage() should clear cached fields&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SWS-376&quot;&gt;&lt;del&gt;SWS-376&lt;/del&gt;&lt;/a&gt; also fixed the problem that this issue was supposed to fix!  After I saw your comment I got latest SaajMessageFactory  from trunk and ran the test case I described in this issue, and decryption worked.  So like you suggested this is fixed in the Saaj message now. &lt;/p&gt;

</comment>
                            <comment id="36816" author="arjen.poutsma" created="Wed, 18 Jun 2008 20:49:14 +0000"  >&lt;p&gt;Ok, so this issue can be resolved?&lt;/p&gt;</comment>
                            <comment id="36821" author="pdotsenko" created="Wed, 18 Jun 2008 23:28:38 +0000"  >&lt;p&gt;Yes, I would call this issue resolved by fixes for &lt;a href=&quot;https://jira.spring.io/browse/SWS-376&quot; title=&quot;SaajSoapMessage.setSaajMessage() and AxiomSoapMessage.setAxiomMessage() should clear cached fields&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SWS-376&quot;&gt;&lt;del&gt;SWS-376&lt;/del&gt;&lt;/a&gt;.  Thanks.&lt;/p&gt;</comment>
                            <comment id="37790" author="arjen.poutsma" created="Mon, 21 Jul 2008 22:07:16 +0000"  >&lt;p&gt;Closing issues in 1.5.3&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10020">
                    <name>Related</name>
                                            <outwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="22626">SWS-376</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="14191" name="SWS-378-patch.txt" size="2262" author="pdotsenko" created="Tue, 17 Jun 2008 03:58:53 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 17 Jun 2008 18:00:01 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10280" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>7734</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i01p8n:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9966</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10381" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Ranking</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9982</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>