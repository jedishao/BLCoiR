<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Fri Dec 23 06:51:11 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SWS-671/SWS-671.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SWS-671] Stacktrace in response instead of soap fault</title>
                <link>https://jira.spring.io/browse/SWS-671</link>
                <project id="10060" key="SWS">Spring Web Services</project>
                    <description>&lt;p&gt;The webservice responds with a stacktrace instead of a soap fault if malformed xml is sent.&lt;/p&gt;</description>
                <environment></environment>
        <key id="35474">SWS-671</key>
            <summary>Stacktrace in response instead of soap fault</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://jira.spring.io/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="8">Complete</resolution>
                                        <assignee username="arjen.poutsma">Arjen Poutsma</assignee>
                                    <reporter username="sylvestris">Martin Flower</reporter>
                        <labels>
                    </labels>
                <created>Fri, 17 Dec 2010 02:10:11 +0000</created>
                <updated>Tue, 18 Mar 2014 05:26:18 +0000</updated>
                            <resolved>Tue, 18 Mar 2014 03:57:11 +0000</resolved>
                                    <version>1.5.9</version>
                                    <fixVersion>2.0.4</fixVersion>
                                    <component>Core</component>
                        <due></due>
                            <votes>6</votes>
                                    <watches>4</watches>
                                                                <comments>
                            <comment id="61666" author="walnutmon" created="Mon, 20 Dec 2010 08:02:40 +0000"  >&lt;p&gt;We currently have SOAP services in production that still provide a stack-trace when malformed XML is sent to them - this is a very difficult bug to deal with and there is currently no work-around&lt;/p&gt;</comment>
                            <comment id="63083" author="johntylerbush" created="Thu, 3 Feb 2011 22:10:11 +0000"  >&lt;p&gt;This ruined a better part of my day.  The endpoint resolvers are pretty useless.  This really needs to be fixed.  I had to extend the servlet to get around this, feels totally hacky, but can&apos;t sort out any other way.&lt;/p&gt;</comment>
                            <comment id="66539" author="tedpennings" created="Wed, 18 May 2011 16:30:34 +0000"  >&lt;p&gt;John, not sure if it&apos;s too late to help, but you could create a servlet filter and wrap the chain.doFilter() method in a try-catch block for NestedServletException. You can look at the cause to see if it&apos;s an invalid XML related issue, and take action that way. It&apos;s slightly better than having to extend the MessageDispatcherServlet, but really not by much. It would be nice to see this issue resolved.&lt;/p&gt;</comment>
                            <comment id="93927" author="slsh" created="Thu, 26 Sep 2013 01:13:02 +0000"  >&lt;p&gt;What I have done is to define a custom MessageReceiverHandlerAdapter that is used by the default spring-ws MessageDispatcherServlet. That works and I think is the way to handle this by design. I can provide the code if needed.&lt;/p&gt;</comment>
                            <comment id="100525" author="arjen.poutsma" created="Tue, 18 Mar 2014 03:57:11 +0000"  >&lt;p&gt;As of version, Spring-WS throws a InvalidXmlException when dealing with invalid XML. By default, this exception results in a 400 status code, but it can be changed by overriding WebServiceMessageReceiverHandlerAdapter.handleInvalidXmlException,&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10000">
                    <name>Duplicate</name>
                                                                <inwardlinks description="is duplicated by">
                                        <issuelink>
            <issuekey id="36006">SWS-688</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 20 Dec 2010 08:02:40 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10280" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1443</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i00lyf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3602</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10381" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Ranking</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4992</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10120" key="com.atlassian.jira.plugin.system.customfieldtypes:url">
                        <customfieldname>Reference URL</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[http://forum.springsource.org/showthread.php?t=93626]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>