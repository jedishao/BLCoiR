<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sat Dec 03 01:28:54 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/CAMEL-1697/CAMEL-1697.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[CAMEL-1697] Java DSL for multicast, split, aggregate does not use block explicit</title>
                <link>https://issues.apache.org/jira/browse/CAMEL-1697</link>
                <project id="12311211" key="CAMEL">Camel</project>
                    <description>&lt;p&gt;When using one of the EIP that uses a nested route for sub processing, typically EIPs that does some sort of aggregation such as&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;multicast (for aggregating a response)&lt;/li&gt;
	&lt;li&gt;split&lt;/li&gt;
	&lt;li&gt;aggregate&lt;br/&gt;
And maybe a few others&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;They should use pushBlock so the &lt;tt&gt;end()&lt;/tt&gt; DSL to indicate end of sub route works correctly in Java DSL.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12486473">CAMEL-1697</key>
            <summary>Java DSL for multicast, split, aggregate does not use block explicit</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="davsclaus">Claus Ibsen</assignee>
                                    <reporter username="davsclaus">Claus Ibsen</reporter>
                        <labels>
                    </labels>
                <created>Thu, 11 Jun 2009 09:56:27 +0000</created>
                <updated>Sat, 21 Nov 2009 11:58:03 +0000</updated>
                            <resolved>Fri, 12 Jun 2009 09:00:51 +0000</resolved>
                                    <version>2.0-M1</version>
                                    <fixVersion>2.0-M2</fixVersion>
                                    <component>camel-core</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12952600" author="davsclaus" created="Thu, 11 Jun 2009 11:43:39 +0000"  >&lt;p&gt;Got myself into knee deep on this one. I gotta it sorted exception that doTry .. doCatch and doFinally also need to use end() to indicate end of each of their block.&lt;br/&gt;
So you can end up with having to 2 x end() might not be intuitive&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
doTry()
   ...
doCatch()
   ..
end() &lt;span class=&quot;code-comment&quot;&gt;// to end &lt;span class=&quot;code-keyword&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt;
&lt;/span&gt;end() &lt;span class=&quot;code-comment&quot;&gt;// to end &lt;span class=&quot;code-keyword&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;code-comment&quot;&gt;// now we can &lt;span class=&quot;code-keyword&quot;&gt;continue&lt;/span&gt; the route&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I will look into allowing you to only set 1 end as when you are in a doCatch Camel knows there is a doTry also.&lt;/p&gt;</comment>
                            <comment id="12952525" author="davsclaus" created="Thu, 11 Jun 2009 12:26:55 +0000"  >&lt;p&gt;Okay looks like I got the doTry sorted as well&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
                from(&lt;span class=&quot;code-quote&quot;&gt;&quot;direct:start&quot;&lt;/span&gt;)
                    .doTry()
                        .process(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ProcessorFail())
                        .to(&lt;span class=&quot;code-quote&quot;&gt;&quot;mock:result&quot;&lt;/span&gt;)
                    .doCatch(Exception.class)
                        .process(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ProcessorHandle())
                    .doFinally()
                        .to(&lt;span class=&quot;code-quote&quot;&gt;&quot;mock:&lt;span class=&quot;code-keyword&quot;&gt;finally&lt;/span&gt;&quot;&lt;/span&gt;)
                    .end()
                    .to(&lt;span class=&quot;code-quote&quot;&gt;&quot;mock:last&quot;&lt;/span&gt;);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Works as expected now.&lt;br/&gt;
So mock:last is always invoked as it comes after the big try ... catch .. finally block.&lt;/p&gt;</comment>
                            <comment id="12952609" author="davsclaus" created="Fri, 12 Jun 2009 08:19:48 +0000"  >&lt;p&gt;I have decided to keep the old behavior. It does work best this way. So in Java DSL you have to use end() more consistently. Think of them as } in Java code.&lt;/p&gt;

&lt;p&gt;Ah I added the special handling for doing end() in doTry .. doCatch .. doFinally. Only 1 end is needed.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
from(&lt;span class=&quot;code-quote&quot;&gt;&quot;direct:start&quot;&lt;/span&gt;)
                    .doTry()
                        .process(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ProcessorFail())
                        .to(&lt;span class=&quot;code-quote&quot;&gt;&quot;mock:result&quot;&lt;/span&gt;)
                    .doCatch(Exception.class)
                         .process(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ProcessorHandle())
                     .doFinally()
                         .to(&lt;span class=&quot;code-quote&quot;&gt;&quot;mock:&lt;span class=&quot;code-keyword&quot;&gt;finally&lt;/span&gt;&quot;&lt;/span&gt;)
                    .end() &lt;span class=&quot;code-comment&quot;&gt;// to end &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; block
&lt;/span&gt;                    .to(&lt;span class=&quot;code-quote&quot;&gt;&quot;mock:last&quot;&lt;/span&gt;);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="12952562" author="davsclaus" created="Fri, 12 Jun 2009 09:00:51 +0000"  >&lt;p&gt;trunk: 784038.&lt;/p&gt;</comment>
                            <comment id="12953754" author="davsclaus" created="Sat, 21 Nov 2009 11:58:03 +0000"  >&lt;p&gt;Closing all 2.0M2 tickets&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>76774</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            7 years, 2 weeks, 6 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i01k0f:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>7011</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>