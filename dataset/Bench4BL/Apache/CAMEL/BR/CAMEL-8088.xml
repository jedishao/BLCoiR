<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sat Dec 03 03:37:08 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/CAMEL-8088/CAMEL-8088.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[CAMEL-8088] FTP can wait indefinitely when connection timeout occurs during connect</title>
                <link>https://issues.apache.org/jira/browse/CAMEL-8088</link>
                <project id="12311211" key="CAMEL">Camel</project>
                    <description>&lt;p&gt;In our production system we have seen cases where the FTP thread is waiting for a response indefinitely despite having set &lt;em&gt;soTimeout&lt;/em&gt; on the connection. On investigation this is due to a condition that can occur where a socket is able to connect yet a firewall or the ilk then blocks further traffic.&lt;/p&gt;

&lt;p&gt;This can be over come by setting the property &lt;em&gt;ftpClient.defaultTimeout&lt;/em&gt; to a non-zero value.&lt;/p&gt;

&lt;p&gt;It should be the case where if upon initial socket connection no response occurs that the socket should be deemed dead, however this is not the case.&lt;/p&gt;

&lt;p&gt;When the following exception is thrown during initial connect to an FTP server, after the socket has connected but whilst awaiting the inital reply it can leave the RemoteFileProducer in a state where it is connected but not logged in and no attempt reconnect is attempted, if the soTimeout as set by &lt;em&gt;ftpClient.defaultTimeout&lt;/em&gt; is set to zero then it can cause a subsequent command will wait for a reply indefinitely.&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;Caused by: java.io.IOException: Timed out waiting for initial connect reply
	at org.apache.commons.net.ftp.FTP._connectAction_(FTP.java:389) ~[commons-net-3.1.jar:3.1]
	at org.apache.commons.net.ftp.FTPClient._connectAction_(FTPClient.java:796) ~[commons-net-3.1.jar:3.1]
	at org.apache.commons.net.SocketClient.connect(SocketClient.java:172) ~[commons-net-3.1.jar:3.1]
	at org.apache.commons.net.SocketClient.connect(SocketClient.java:192) ~[commons-net-3.1.jar:3.1]
	at org.apache.camel.component.file.remote.FtpOperations.connect(FtpOperations.java:95) ~[camel-ftp-2.13.1.jar:2.13.1]
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The RemoteFileProducer will enter this block as the loggedIn state has not yet been reached, however the existing broken socket is reused.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
        &lt;span class=&quot;code-comment&quot;&gt;// recover by re-creating operations which should most likely be able to recover
&lt;/span&gt;        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (!loggedIn) {
            log.debug(&lt;span class=&quot;code-quote&quot;&gt;&quot;Trying to recover connection to: {} with a fresh client.&quot;&lt;/span&gt;, getEndpoint());
            setOperations(getEndpoint().createRemoteFileOperations());
            connectIfNecessary();
        }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Yet the &lt;em&gt;connectIfNecessary()&lt;/em&gt; method will return immediately since the check condition is based on socket connection and takes no account of whether login was achieved so the &apos;dead&apos; socket is reused.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    &lt;span class=&quot;code-keyword&quot;&gt;protected&lt;/span&gt; void connectIfNecessary() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; GenericFileOperationFailedException {
        &lt;span class=&quot;code-comment&quot;&gt;// This will be skipped when loggedIn = &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt; and the socket is connected
&lt;/span&gt;        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (!getOperations().isConnected()) {
            log.debug(&lt;span class=&quot;code-quote&quot;&gt;&quot;Not already connected/logged in. Connecting to: {}&quot;&lt;/span&gt;, getEndpoint());
            RemoteFileConfiguration config = getEndpoint().getConfiguration();
            loggedIn = getOperations().connect(config);
            &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (!loggedIn) {
                &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt;;
            }
            log.info(&lt;span class=&quot;code-quote&quot;&gt;&quot;Connected and logged in to: &quot;&lt;/span&gt; + getEndpoint());
        }
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;A dirty test that blocks of this blocking condition:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;package&lt;/span&gt; ftp;

&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.camel.builder.RouteBuilder;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.camel.impl.JndiRegistry;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.camel.test.junit4.CamelTestSupport;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.commons.net.ftp.FTPClient;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.junit.After;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.junit.Before;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.junit.Test;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.mockftpserver.fake.FakeFtpServer;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.mockito.Mockito;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.mockito.invocation.InvocationOnMock;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.mockito.stubbing.Answer;

&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; java.io.IOException;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; java.io.InputStream;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; java.net.Socket;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; java.net.SocketException;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; java.net.SocketTimeoutException;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; java.util.concurrent.atomic.AtomicBoolean;

&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; javax.net.SocketFactory;

&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; org.mockito.Matchers.anyInt;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; org.mockito.Mockito.doAnswer;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; org.mockito.Mockito.mock;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; org.mockito.Mockito.when;

&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; class FtpInitialConnectTimeoutTest &lt;span class=&quot;code-keyword&quot;&gt;extends&lt;/span&gt; CamelTestSupport {

  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; CONNECT_TIMEOUT = 11223;

  /**
   * Create the answer &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; the socket factory that causes a SocketTimeoutException to occur in connect.
   */
  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; class SocketAnswer &lt;span class=&quot;code-keyword&quot;&gt;implements&lt;/span&gt; Answer&amp;lt;Socket&amp;gt; {
    @Override
    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; Socket answer(InvocationOnMock invocation) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; Throwable {
      &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; Socket socket = Mockito.spy(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Socket());
      &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; AtomicBoolean timeout = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; AtomicBoolean();

      &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
        doAnswer(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Answer&amp;lt;InputStream&amp;gt;() {
          @Override
          &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; InputStream answer(InvocationOnMock invocation) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; Throwable {
            &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; InputStream stream = (InputStream) invocation.callRealMethod();

            InputStream inputStream = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; InputStream() {
              @Override
              &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; read() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
                &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (timeout.get()) {
                  &lt;span class=&quot;code-comment&quot;&gt;// emulate a timeout occuring in _getReply()
&lt;/span&gt;                  &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; SocketTimeoutException();
                }
                &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; stream.read();
              }
            };

            &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; inputStream;
          }
        }).when(socket).getInputStream();
      } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (IOException ignored) {
      }

      &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
        doAnswer(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Answer() {
          @Override
          &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt; answer(InvocationOnMock invocation) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; Throwable {
            &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; ((&lt;span class=&quot;code-object&quot;&gt;Integer&lt;/span&gt;) invocation.getArguments()[0] == CONNECT_TIMEOUT) {
              &lt;span class=&quot;code-comment&quot;&gt;// setting of connect timeout
&lt;/span&gt;              timeout.set(&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;);
            } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; {
              &lt;span class=&quot;code-comment&quot;&gt;// non-connect timeout
&lt;/span&gt;              timeout.set(&lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;);
            }
            &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; invocation.callRealMethod();
          }
        }).when(socket).setSoTimeout(anyInt());
      } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (SocketException e) {
        &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; RuntimeException(e);
      }
      &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; socket;
    }
  }

  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; FakeFtpServer fakeFtpServer;

  @Override
  @Before
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void setUp() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; Exception {
    fakeFtpServer = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; FakeFtpServer();
    fakeFtpServer.setServerControlPort(0);
    fakeFtpServer.start();

    &lt;span class=&quot;code-keyword&quot;&gt;super&lt;/span&gt;.setUp();
  }

  @Override
  @After
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void tearDown() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; Exception {
    &lt;span class=&quot;code-keyword&quot;&gt;super&lt;/span&gt;.tearDown();
    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (fakeFtpServer != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
      fakeFtpServer.stop();
    }
  }

  @Test
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void testName() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; Exception {
    sendBody(&lt;span class=&quot;code-quote&quot;&gt;&quot;direct:start&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;test&quot;&lt;/span&gt;);
  }

  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; FTPClient mockedClient() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
    FTPClient client = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; FTPClient();
    client.setSocketFactory(createSocketFactory());
    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; client;
  }

  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; SocketFactory createSocketFactory() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
    SocketFactory socketFactory = mock(SocketFactory.class);
    when(socketFactory.createSocket()).thenAnswer(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; SocketAnswer());
    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; socketFactory;
  }

  @Override
  &lt;span class=&quot;code-keyword&quot;&gt;protected&lt;/span&gt; JndiRegistry createRegistry() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; Exception {
    JndiRegistry registry = &lt;span class=&quot;code-keyword&quot;&gt;super&lt;/span&gt;.createRegistry();
    registry.bind(&lt;span class=&quot;code-quote&quot;&gt;&quot;mocked&quot;&lt;/span&gt;, mockedClient());
    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; registry;
  }

  @Override
  &lt;span class=&quot;code-keyword&quot;&gt;protected&lt;/span&gt; RouteBuilder createRouteBuilder() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; Exception {
    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; RouteBuilder() {
      @Override
      &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void configure() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; Exception {
        from(&lt;span class=&quot;code-quote&quot;&gt;&quot;direct:start&quot;&lt;/span&gt;)
            .to(&lt;span class=&quot;code-quote&quot;&gt;&quot;ftp:&lt;span class=&quot;code-comment&quot;&gt;//localhost:&quot;&lt;/span&gt; + fakeFtpServer.getServerControlPort()
&lt;/span&gt;                + &lt;span class=&quot;code-quote&quot;&gt;&quot;?ftpClient=#mocked&quot;&lt;/span&gt;
                + &lt;span class=&quot;code-quote&quot;&gt;&quot;&amp;amp;soTimeout=1234&amp;amp;&quot;&lt;/span&gt;
                + &lt;span class=&quot;code-quote&quot;&gt;&quot;connectTimeout=&quot;&lt;/span&gt; + CONNECT_TIMEOUT);
      }
    };
  }
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</description>
                <environment></environment>
        <key id="12758268">CAMEL-8088</key>
            <summary>FTP can wait indefinitely when connection timeout occurs during connect</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="davsclaus">Claus Ibsen</assignee>
                                    <reporter username="ukcrpb6">Bob Browning</reporter>
                        <labels>
                    </labels>
                <created>Thu, 27 Nov 2014 17:48:41 +0000</created>
                <updated>Sun, 15 Feb 2015 11:23:38 +0000</updated>
                            <resolved>Sun, 15 Feb 2015 11:23:38 +0000</resolved>
                                    <version>2.13.3</version>
                                    <fixVersion>2.13.4</fixVersion>
                    <fixVersion>2.14.2</fixVersion>
                    <fixVersion>2.15.0</fixVersion>
                                    <component>camel-ftp</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="14321920" author="davsclaus" created="Sun, 15 Feb 2015 11:09:29 +0000"  >&lt;p&gt;I got a solution to this&lt;/p&gt;</comment>
                            <comment id="14321925" author="davsclaus" created="Sun, 15 Feb 2015 11:23:38 +0000"  >&lt;p&gt;Thanks for reporting and with that unit test - lovely.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sun, 15 Feb 2015 11:09:29 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310060" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Estimated Complexity</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10060"><![CDATA[Unknown]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 41 weeks, 5 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i22uxr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>