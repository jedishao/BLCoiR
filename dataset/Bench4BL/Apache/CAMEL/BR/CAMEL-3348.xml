<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sat Dec 03 02:54:51 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/CAMEL-3348/CAMEL-3348.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[CAMEL-3348] DefaultShutdownStrategy and ShutdownAware (SedaConsumer) losing exchange</title>
                <link>https://issues.apache.org/jira/browse/CAMEL-3348</link>
                <project id="12311211" key="CAMEL">Camel</project>
                    <description>&lt;p&gt;There&apos;s a problem when we shutdown the camel context with a seda endpoint.&lt;/p&gt;

&lt;p&gt;In the SedaConsumer, the exchange is removed from the queue and then, later, is added to the InflightRepository as shown in the following code (I put comments where it is done):&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void run() {
        BlockingQueue&amp;lt;Exchange&amp;gt; queue = endpoint.getQueue();
        &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; (queue != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; isRunAllowed()) {
            &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; Exchange exchange;
            &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
                exchange = queue.poll(1000, TimeUnit.MILLISECONDS); &lt;span class=&quot;code-comment&quot;&gt;// The exchange is removed here from the queue
&lt;/span&gt;            } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (InterruptedException e) {
                &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (LOG.isDebugEnabled()) {
                    LOG.debug(&lt;span class=&quot;code-quote&quot;&gt;&quot;Sleep interrupted, are we stopping? &quot;&lt;/span&gt; + (isStopping() || isStopped()));
                }
                &lt;span class=&quot;code-keyword&quot;&gt;continue&lt;/span&gt;;
            }
            &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (exchange != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
                &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (isRunAllowed()) {
                    &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
                        sendToConsumers(exchange); &lt;span class=&quot;code-comment&quot;&gt;// Call to sendToConsumers detailed below
&lt;/span&gt;
                        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (exchange.getException() != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
                            getExceptionHandler().handleException(&lt;span class=&quot;code-quote&quot;&gt;&quot;Error processing exchange&quot;&lt;/span&gt;, exchange, exchange.getException());
                        }
                    } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (Exception e) {
                        getExceptionHandler().handleException(&lt;span class=&quot;code-quote&quot;&gt;&quot;Error processing exchange&quot;&lt;/span&gt;, exchange, e);
                    }
                } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; {
                    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (LOG.isWarnEnabled()) {
                        LOG.warn(&lt;span class=&quot;code-quote&quot;&gt;&quot;This consumer is stopped during polling an exchange, so putting it back on the seda queue: &quot;&lt;/span&gt; + exchange);
                    }
                    &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
                        queue.put(exchange);
                    } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (InterruptedException e) {
                        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (LOG.isDebugEnabled()) {
                            LOG.debug(&lt;span class=&quot;code-quote&quot;&gt;&quot;Sleep interrupted, are we stopping? &quot;&lt;/span&gt; + (isStopping() || isStopped()));
                        }
                        &lt;span class=&quot;code-keyword&quot;&gt;continue&lt;/span&gt;;
                    }
                }
            }
        }
    }

    &lt;span class=&quot;code-keyword&quot;&gt;protected&lt;/span&gt; void sendToConsumers(Exchange exchange) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; Exception {
        &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; size = endpoint.getConsumers().size();

        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (size &amp;gt; 1) {

            &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (LOG.isDebugEnabled()) {
                LOG.debug(&lt;span class=&quot;code-quote&quot;&gt;&quot;Multicasting to &quot;&lt;/span&gt; + endpoint.getConsumers().size() + &lt;span class=&quot;code-quote&quot;&gt;&quot; consumers &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; Exchange: &quot;&lt;/span&gt; + exchange);
            }
           
            MulticastProcessor mp = endpoint.getConumserMulticastProcessor();

            AsyncProcessorHelper.process(mp, exchange, &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; AsyncCallback() {
                &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void done(&lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; doneSync) {
                }
            });
        } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; {
            AsyncProcessorHelper.process(processor, exchange, &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; AsyncCallback() { &lt;span class=&quot;code-comment&quot;&gt;// This line will create the UnitOfWork (in UnitOfWorkProcessor) which will put the exchange in the InflightRepository
&lt;/span&gt;                &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void done(&lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; doneSync) {

                }
            });
        }
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If the shutdown occurs between these two actions, the DefaultShutdownStrategy will shutdown the route even if there is a message in progress. And the message will be lost.&lt;/p&gt;

&lt;p&gt;Here is the code of ShutdownTask in DefaultShutdownStrategy which cause the shutdown even if there is some messages still in progress. (I put comments in it to show the state of the seda queue and InflightRepository if it is called between the queue.poll() and the InflightRepository.add())&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;&lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (Consumer consumer : order.getInputs()) {
                        &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; inflight = context.getInflightRepository().size(consumer.getEndpoint()); &lt;span class=&quot;code-comment&quot;&gt;// check the number of inflight exchanges which is 0 because the UnitOfWork is not created
&lt;/span&gt;
                        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (consumer &lt;span class=&quot;code-keyword&quot;&gt;instanceof&lt;/span&gt; ShutdownAware) {
                            inflight += ((ShutdownAware) consumer).getPendingExchangesSize(); &lt;span class=&quot;code-comment&quot;&gt;// check the number of exchange in the seda queue which is 0 because the message is already removed
&lt;/span&gt;                        }
                        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (inflight &amp;gt; 0) {
                            size += inflight;
                            &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (LOG.isDebugEnabled()) {
                                LOG.debug(inflight + &lt;span class=&quot;code-quote&quot;&gt;&quot; inflight and pending exchanges &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; consumer: &quot;&lt;/span&gt; + consumer);
                            }
                        }
                    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;You can reproduce it by putting a breakpoint in the method &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;&lt;span class=&quot;code-keyword&quot;&gt;protected&lt;/span&gt; void sendToConsumers(Exchange exchange)&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt; in SedaConsumer and calling stop() on the CamelContext while the thread is suspended by the breakpoint.&lt;/p&gt;

&lt;p&gt;We caught the problem in a unit test where we were testing the shutdown and when our test server was under heavy load.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12487910">CAMEL-3348</key>
            <summary>DefaultShutdownStrategy and ShutdownAware (SedaConsumer) losing exchange</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="davsclaus">Claus Ibsen</assignee>
                                    <reporter username="ddelautre">Damien Delautre</reporter>
                        <labels>
                    </labels>
                <created>Fri, 19 Nov 2010 22:02:04 +0000</created>
                <updated>Sun, 24 Apr 2011 09:57:56 +0000</updated>
                            <resolved>Mon, 22 Nov 2010 10:39:01 +0000</resolved>
                                    <version>2.5.0</version>
                                    <fixVersion>2.6.0</fixVersion>
                                    <component>camel-core</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12957560" author="davsclaus" created="Sat, 20 Nov 2010 17:14:27 +0000"  >&lt;p&gt;Well spotted.&lt;/p&gt;
</comment>
                            <comment id="12957561" author="davsclaus" created="Mon, 22 Nov 2010 10:39:01 +0000"  >&lt;p&gt;trunk: 1037666.&lt;/p&gt;

&lt;p&gt;Damien could you test the fix on your system if possible?&lt;/p&gt;</comment>
                            <comment id="12957566" author="ddelautre" created="Mon, 22 Nov 2010 20:23:09 +0000"  >&lt;p&gt;Thank you for your quick fix! &lt;/p&gt;

&lt;p&gt;So I tested it and if I left my breakpoint where it was (for testing purpose), it works.&lt;/p&gt;

&lt;p&gt;But, if I put a breakpoint at the line with tasks.incrementAndGet() in SedaConsumer to simulate that the call to getPendingExchangesSize() is done between the queue.poll and the tasks.incrementAndGet(), I can reproduce the problem:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void run() {
        BlockingQueue&amp;lt;Exchange&amp;gt; queue = endpoint.getQueue();
        &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; (queue != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; isRunAllowed()) {
            Exchange exchange = &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;;
            &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
                exchange = queue.poll(1000, TimeUnit.MILLISECONDS);
                &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (exchange != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
                    &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
                        tasks.incrementAndGet();  &lt;span class=&quot;code-comment&quot;&gt;// &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; we put a breakpoint here the problem will occur
&lt;/span&gt;                        sendToConsumers(exchange);

                        &lt;span class=&quot;code-comment&quot;&gt;// log exception &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; an exception occurred and was not handled
&lt;/span&gt;                        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (exchange.getException() != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
                            getExceptionHandler().handleException(&lt;span class=&quot;code-quote&quot;&gt;&quot;Error processing exchange&quot;&lt;/span&gt;, exchange, exchange.getException());
                        }
                    } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (Exception e) {
                        getExceptionHandler().handleException(&lt;span class=&quot;code-quote&quot;&gt;&quot;Error processing exchange&quot;&lt;/span&gt;, exchange, e);
                    } &lt;span class=&quot;code-keyword&quot;&gt;finally&lt;/span&gt; {
                        tasks.decrementAndGet();
                    }
                }
            } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (InterruptedException e) {
                &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (LOG.isDebugEnabled()) {
                    LOG.debug(&lt;span class=&quot;code-quote&quot;&gt;&quot;Sleep interrupted, are we stopping? &quot;&lt;/span&gt; + (isStopping() || isStopped()));
                }
                &lt;span class=&quot;code-keyword&quot;&gt;continue&lt;/span&gt;;
            } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (Throwable e) {
                &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (exchange != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
                    getExceptionHandler().handleException(&lt;span class=&quot;code-quote&quot;&gt;&quot;Error processing exchange&quot;&lt;/span&gt;, exchange, e);
                } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; {
                    getExceptionHandler().handleException(e);
                }
            }
        }

        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (LOG.isDebugEnabled()) {
            LOG.debug(&lt;span class=&quot;code-quote&quot;&gt;&quot;Ending &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; polling consumer thread, there are still &quot;&lt;/span&gt; + tasks.get() + &lt;span class=&quot;code-quote&quot;&gt;&quot; threads left.&quot;&lt;/span&gt;);
        }
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The odds that it will occur are lower but it can happen if we are really, really unlucky.&lt;/p&gt;

&lt;p&gt;I&apos;ve seen that you fixed this bug for the 2.6.0 version. When will it be released?&lt;/p&gt;</comment>
                            <comment id="12957543" author="davsclaus" created="Tue, 23 Nov 2010 09:25:08 +0000"  >&lt;p&gt;Yeah there is maybe this problem but its much less likely to happen.&lt;/p&gt;

&lt;p&gt;Let me try to register the task pre emptive before polling. Then we use a bit more logic to figure out if we shutting down and wait until all pending exchanges and tasks has been completed.&lt;/p&gt;

&lt;p&gt;The problem with the executor service if you use &lt;tt&gt;shutdownNow&lt;/tt&gt; is that it will maybe also interrupt and stop currently processed exchanges.&lt;br/&gt;
And all we just want to do is to stop the threads which is doing poll. But we can&apos;t do that easily, hence we gotta figure this out differently.&lt;/p&gt;</comment>
                            <comment id="12957542" author="davsclaus" created="Tue, 23 Nov 2010 10:06:52 +0000"  >&lt;p&gt;trunk: 1038033.&lt;/p&gt;

&lt;p&gt;Damien can you test this again &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="12957571" author="ddelautre" created="Tue, 23 Nov 2010 16:11:29 +0000"  >&lt;p&gt;Everything seems ok. Thanks again!&lt;/p&gt;

&lt;p&gt;When will the 2.6.0 version be released?&lt;/p&gt;</comment>
                            <comment id="12957582" author="davsclaus" created="Tue, 23 Nov 2010 16:23:45 +0000"  >&lt;p&gt;Great.&lt;/p&gt;

&lt;p&gt;Camel 2.6 will be released when its &lt;em&gt;done&lt;/em&gt; &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;br/&gt;
Ah okay we usually do a release every quarter, or maybe a bit faster. &lt;/p&gt;

&lt;p&gt;But we are hitting x-mas time, so I assume in mid Januar 2011.&lt;/p&gt;

&lt;p&gt;But anyone is free to raise their voice in the mailing list when they think its time for a new release.&lt;/p&gt;

&lt;p&gt;FuseSource just cut the MR 2.5 release today, but this last fix didn&apos;t make it, however the commit from yesterday did.&lt;br/&gt;
So you can consider using the MR 2.5.0 release.&lt;br/&gt;
&lt;a href=&quot;http://repo.fusesource.com/nexus/content/repositories/releases/org/apache/camel/apache-camel/2.5.0-fuse-00-00/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://repo.fusesource.com/nexus/content/repositories/releases/org/apache/camel/apache-camel/2.5.0-fuse-00-00/&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12957583" author="davsclaus" created="Wed, 24 Nov 2010 19:38:23 +0000"  >&lt;p&gt;Damien I had to rework the code logic a bit. Can you retest on your system.&lt;/p&gt;

&lt;p&gt;trunk: 1038780.&lt;/p&gt;</comment>
                            <comment id="13023988" author="davsclaus" created="Sun, 24 Apr 2011 09:57:56 +0000"  >&lt;p&gt;Closing all resolved tickets from 2010 or older&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sat, 20 Nov 2010 17:14:27 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>76277</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            5 years, 32 weeks, 5 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i01u6v:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>8660</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>