<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sat Dec 03 02:43:53 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/CAMEL-10024/CAMEL-10024.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[CAMEL-10024] Race condition in Mina2Producer/Mina2Consumer when closing connections with disconnect=true</title>
                <link>https://issues.apache.org/jira/browse/CAMEL-10024</link>
                <project id="12311211" key="CAMEL">Camel</project>
                    <description>&lt;p&gt;There is a race condition in the Mina2Producer when trying to close connections after use by setting disconnect=true or&lt;br/&gt;
setting CamelMina2CloseSessionWhenComplete=true. &lt;br/&gt;
Connections will not be fully closed in the method maybeDisconnectOnDone. &lt;br/&gt;
The call to session.close(true) returns a CloseFuture - one must await this to ensure the session is really closed.&lt;/p&gt;

&lt;p&gt;In the current implementation, there is no await on the CloseFuture. This means that the producer will be returned to the pool before the session is closed. If the next call comes right after, it is very likely that it will get the same producer and that the session will suddenly be closed while in use, leading to errors like &lt;/p&gt;

&lt;p&gt;ExchangeTimedOutException: The OUT message was not received within 30000 ms&lt;/p&gt;

&lt;p&gt;or &lt;/p&gt;

&lt;p&gt;java.lang.IllegalStateException: handler cannot be set while the service is active.&lt;/p&gt;

&lt;p&gt;The fix is trivial - just change line 221 in Mina2Producer.java from&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
session.close(&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt; 
&lt;p&gt;to &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; timeout = getEndpoint().getConfiguration().getTimeout();          
CloseFuture closeFuture = session.close(&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;);  
closeFuture.awaitUninterruptibly(timeout, TimeUnit.MILLISECONDS);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;But the unit testing might be more complex.&lt;br/&gt;
There might be a similar issue in Mina2Consumer - but I could not provoke it as easily.&lt;/p&gt;

&lt;p&gt;Here is a small program demonstrating the problem - on my system it will fail within the first 50 iterations. When looking at the debug log, it is clear that the connections are closed too late - after the next iteration has started.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;

&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.camel.*;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.camel.builder.RouteBuilder;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.camel.impl.DefaultCamelContext;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.slf4j.*;

/**
 * Demonstrating race condition
 */
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; class Main {
    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; void main(&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;[] args) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; Exception {

        &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.setProperty(&lt;span class=&quot;code-quote&quot;&gt;&quot;org.slf4j.simpleLogger.log.org.apache.camel.component.mina2.Mina2Producer&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;trace&quot;&lt;/span&gt;);
        &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.setProperty(&lt;span class=&quot;code-quote&quot;&gt;&quot;org.slf4j.simpleLogger.log.org.apache.mina.filter.logging.LoggingFilter&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;trace&quot;&lt;/span&gt;);
        
        Logger logger = LoggerFactory.getLogger(Main.class);
        CamelContext context = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; DefaultCamelContext();
        context.addRoutes(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; RouteBuilder() {
            @Override
            &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void configure() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; Exception {
                from(&lt;span class=&quot;code-quote&quot;&gt;&quot;mina2:tcp:&lt;span class=&quot;code-comment&quot;&gt;//localhost:20000?sync=&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;&quot;&lt;/span&gt;).setBody(simple(&lt;span class=&quot;code-quote&quot;&gt;&quot;Hello ${in.body}&quot;&lt;/span&gt;));
&lt;/span&gt;            }
        });

        ProducerTemplate producerTemplate = context.createProducerTemplate();
        context.start();
        &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
            &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; i = 0; i &amp;lt; 10000; i++) {
                logger.info(&lt;span class=&quot;code-quote&quot;&gt;&quot;---- Call # &quot;&lt;/span&gt; + i);
                &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; result = (&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;) producerTemplate.requestBody(&lt;span class=&quot;code-quote&quot;&gt;&quot;mina2:tcp:&lt;span class=&quot;code-comment&quot;&gt;//localhost:20000?disconnect=&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;&amp;amp;timeout=1000&amp;amp;sync=&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;&amp;amp;minaLogger=&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;world &quot;&lt;/span&gt; + i);
&lt;/span&gt;                logger.info(&lt;span class=&quot;code-quote&quot;&gt;&quot;---- End call # &quot;&lt;/span&gt; + i + &lt;span class=&quot;code-quote&quot;&gt;&quot;: &quot;&lt;/span&gt; + result);
            }
        } &lt;span class=&quot;code-keyword&quot;&gt;finally&lt;/span&gt; {
            context.stop();
        }
    }
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
</description>
                <environment>&lt;p&gt;Tested on Windows using Java 1.8.0_91&lt;/p&gt;</environment>
        <key id="12976333">CAMEL-10024</key>
            <summary>Race condition in Mina2Producer/Mina2Consumer when closing connections with disconnect=true</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="anoordover">Arno Noordover</assignee>
                                    <reporter username="niels@harremoes.dk">Niels Ull Harremoes</reporter>
                        <labels>
                    </labels>
                <created>Tue, 7 Jun 2016 07:39:24 +0000</created>
                <updated>Mon, 18 Jul 2016 18:22:50 +0000</updated>
                            <resolved>Thu, 23 Jun 2016 20:47:37 +0000</resolved>
                                    <version>2.17.1</version>
                                    <fixVersion>2.17.2</fixVersion>
                    <fixVersion>2.18.0</fixVersion>
                                    <component>camel-mina2</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>6</watches>
                                                                <comments>
                            <comment id="15318096" author="ancosen" created="Tue, 7 Jun 2016 08:06:33 +0000"  >&lt;p&gt;Contributions are more than welcome:&lt;br/&gt;
&lt;a href=&quot;http://camel.apache.org/contributing.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://camel.apache.org/contributing.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="15318302" author="ancosen" created="Tue, 7 Jun 2016 11:15:57 +0000"  >&lt;p&gt;Since this issue is labeled with &quot;novice&quot;, I removed myself from assignee. I hope someone else would like to give help here &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="15319134" author="niels@harremoes.dk" created="Tue, 7 Jun 2016 19:01:55 +0000"  >&lt;p&gt;On further analysis, this is not trivial. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/sad.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;I have written the following unit test to demonstrate the issue. Even with the fix I suggested, I still get this error:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
java.lang.IllegalStateException: handler cannot be set &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; the service is active.
	at org.apache.mina.core.service.AbstractIoService.setHandler(AbstractIoService.java:357)
	at org.apache.camel.component.mina2.Mina2Producer.openConnection(Mina2Producer.java:267)
	at org.apache.camel.component.mina2.Mina2Producer.doProcess(Mina2Producer.java:125)
	at org.apache.camel.component.mina2.Mina2Producer.process(Mina2Producer.java:112)
	at org.apache.camel.component.mina2.Mina2DisconnectTest.testCloseSessionWhenCompleteManyTimes(Mina2DisconnectTest.java:56)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Here is the test:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; class Mina2DisconnectRaceConditionTest &lt;span class=&quot;code-keyword&quot;&gt;extends&lt;/span&gt; BaseMina2Test {

    /**
     * This is a test &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; issue CAMEL-10024 - the closing must complete before we &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; from the producer
     * @&lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; Exception
     */
    @Test
    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void testCloseSessionWhenCompleteManyTimes() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; Exception {
        &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; endpointUri = &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;.format(&lt;span class=&quot;code-quote&quot;&gt;&quot;mina2:tcp:&lt;span class=&quot;code-comment&quot;&gt;//localhost:%1$s?sync=&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;&amp;amp;textline=&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;&amp;amp;disconnect=&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;&amp;amp;minaLogger=&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;&quot;&lt;/span&gt;, getPort());
&lt;/span&gt;        Mina2Producer producer = (Mina2Producer) context.getEndpoint(endpointUri).createProducer();
        &lt;span class=&quot;code-comment&quot;&gt;// Access session to check that the session is really closed
&lt;/span&gt;        Field field = producer.getClass().getDeclaredField(&lt;span class=&quot;code-quote&quot;&gt;&quot;session&quot;&lt;/span&gt;);
        field.setAccessible(&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;);

        &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; i = 0; i &amp;lt; 1000; i++) {
            &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println(i);
            Exchange e = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; DefaultExchange(context,ExchangePattern.InOut);
            e.getIn().setBody(&lt;span class=&quot;code-quote&quot;&gt;&quot;Chad&quot;&lt;/span&gt;);
            producer.process(e);
            &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; IoSession ioSession = (IoSession) field.get(producer);
            assertTrue(ioSession.getCloseFuture().isDone());
            &lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt; out = e.getOut().getBody();
            assertEquals(&lt;span class=&quot;code-quote&quot;&gt;&quot;Bye Chad&quot;&lt;/span&gt;, out);
        }
    }

    @Override
    &lt;span class=&quot;code-keyword&quot;&gt;protected&lt;/span&gt; RouteBuilder createRouteBuilder() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; Exception {
        &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; RouteBuilder() {

            &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void configure() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; Exception {
                from(&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;.format(&lt;span class=&quot;code-quote&quot;&gt;&quot;mina2:tcp:&lt;span class=&quot;code-comment&quot;&gt;//localhost:%1$s?sync=&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;&amp;amp;textline=&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;&amp;amp;disconnect=&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;&quot;&lt;/span&gt;, getPort())).process(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Processor() {
&lt;/span&gt;
                    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void process(Exchange exchange) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; Exception {
                        &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; body = exchange.getIn().getBody(&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;.class);
                        exchange.getOut().setBody(&lt;span class=&quot;code-quote&quot;&gt;&quot;Bye &quot;&lt;/span&gt; + body);
                    }
                });
            }
        };
    }
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="15320183" author="niels@harremoes.dk" created="Wed, 8 Jun 2016 07:33:21 +0000"  >&lt;p&gt;Oops - it isn&apos;t novice level after all. It&apos;s ust me who is a novice with mina2&lt;/p&gt;</comment>
                            <comment id="15326334" author="vandenbrink@zorgdomein.nl" created="Sun, 12 Jun 2016 09:26:50 +0000"  >&lt;p&gt;I&apos;m wondering, why is the handler being set for every new connection. Why not set it just once in the constructor?&lt;/p&gt;

&lt;p&gt;Edit:&lt;br/&gt;
Just tried it myself. If I move the setHandler call to the constructor (line 96) and apply your fix for the CloseFuture I no longer get any ExchangeTimedOutExceptions or IllegalStateExceptions when I run the unit test you provided. &lt;/p&gt;

&lt;p&gt;I do sometimes get these: org.apache.camel.CamelExchangeException: Cannot write body: java.lang.String using session: (0x0000006D: nio socket, client, 0.0.0.0/0.0.0.0:59297 =&amp;gt; null). Exchange[]&lt;br/&gt;
  at org.apache.camel.component.mina2.Mina2Helper.writeBody(Mina2Helper.java:58)&lt;/p&gt;</comment>
                            <comment id="15326623" author="anoordover" created="Sun, 12 Jun 2016 20:39:04 +0000"  >&lt;p&gt;The last exception comes from a 10 seconds time-out when writing the body.&lt;/p&gt;</comment>
                            <comment id="15326906" author="niels@harremoes.dk" created="Mon, 13 Jun 2016 06:56:54 +0000"  >&lt;p&gt;It would be nice to fix that one too, since we see it in production as well. Do you have any idea why this would happen? &lt;/p&gt;</comment>
                            <comment id="15326920" author="anoordover" created="Mon, 13 Jun 2016 07:16:40 +0000"  >&lt;p&gt;No I don&apos;t know yet.&lt;br/&gt;
But when doing a multithreaded test I recieve the wrong response in a&lt;br/&gt;
thread when doing sync communication.&lt;/p&gt;

&lt;p&gt;Things that need to be checked:&lt;br/&gt;
I guess a camel processor can be shared.&lt;br/&gt;
I guess a mina session should not be shared but fetched inside the process&lt;br/&gt;
method.&lt;/p&gt;

&lt;p&gt;Are my guesses correct?&lt;br/&gt;
Op 13 jun. 2016 8:57 a.m. schreef &quot;Niels Ull Harremoes (JIRA)&quot; &amp;lt;&lt;/p&gt;
</comment>
                            <comment id="15326929" author="niels@harremoes.dk" created="Mon, 13 Jun 2016 07:25:47 +0000"  >&lt;p&gt;If we do this, would it be an idea to let the handler be a final member variable? &lt;br/&gt;
So we would not call &lt;br/&gt;
  ResponseHandler handler = (ResponseHandler) session.getHandler();&lt;br/&gt;
in doProcess, but just access the member directly?&lt;/p&gt;

</comment>
                            <comment id="15326931" author="niels@harremoes.dk" created="Mon, 13 Jun 2016 07:30:12 +0000"  >&lt;p&gt;I am pretty sure producers are NOT meant to be shared - in a multithreaded test, you should call createProducer in each thread. Did you do this?&lt;/p&gt;

&lt;p&gt;The context maintains a ProducerCache.&lt;/p&gt;</comment>
                            <comment id="15326973" author="ancosen" created="Mon, 13 Jun 2016 08:13:30 +0000"  >&lt;p&gt;A camel processor can be shared among different threads.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://stackoverflow.com/questions/19869761/getting-lock-on-camel-processor&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://stackoverflow.com/questions/19869761/getting-lock-on-camel-processor&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Multiple threads can reuse the same instance during routing messages in Camel.&lt;/p&gt;</comment>
                            <comment id="15326998" author="niels@harremoes.dk" created="Mon, 13 Jun 2016 08:35:47 +0000"  >&lt;p&gt;Thanks for clearing this up. I guess this shoots a hole in the &quot;create the handler in the constructor&quot; proposal &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/sad.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="15327005" author="ancosen" created="Mon, 13 Jun 2016 08:38:22 +0000"  >&lt;p&gt;Maybe we need to involve &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=davsclaus&quot; class=&quot;user-hover&quot; rel=&quot;davsclaus&quot;&gt;Claus Ibsen&lt;/a&gt; in this discussion &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="15327180" author="anoordover" created="Mon, 13 Jun 2016 11:28:12 +0000"  >&lt;p&gt;It seems that producers with isSingleton = false are being constructed once per thread.&lt;/p&gt;</comment>
                            <comment id="15327324" author="anoordover" created="Mon, 13 Jun 2016 13:09:09 +0000"  >&lt;p&gt;I think I see two things:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;You shouldn&apos;t close a consumer (after investigating the methods being called in the ReceiveHandler by adding loggers);&lt;/li&gt;
	&lt;li&gt;The call to sessionClosed when closing the producer sometimes seems to be delayed (a CountDownLatch for waiting for the call of this method seems to be needed).&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="15336238" author="githubbot" created="Fri, 17 Jun 2016 14:48:47 +0000"  >&lt;p&gt;GitHub user anoordover opened a pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/camel/pull/1043&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/camel/pull/1043&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://issues.apache.org/jira/browse/CAMEL-10024&quot; title=&quot;Race condition in Mina2Producer/Mina2Consumer when closing connections with disconnect=true&quot; class=&quot;issue-link&quot; data-issue-key=&quot;CAMEL-10024&quot;&gt;&lt;del&gt;CAMEL-10024&lt;/del&gt;&lt;/a&gt;: sync on close and deprecation&lt;/p&gt;

&lt;p&gt;    Synchronizing on close method in handler&lt;/p&gt;

&lt;p&gt;You can merge this pull request into a Git repository by running:&lt;/p&gt;

&lt;p&gt;    $ git pull &lt;a href=&quot;https://github.com/anoordover/camel&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/anoordover/camel&lt;/a&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/CAMEL-10024&quot; title=&quot;Race condition in Mina2Producer/Mina2Consumer when closing connections with disconnect=true&quot; class=&quot;issue-link&quot; data-issue-key=&quot;CAMEL-10024&quot;&gt;&lt;del&gt;CAMEL-10024&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Alternatively you can review and apply these changes as the patch at:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/camel/pull/1043.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/camel/pull/1043.patch&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To close this pull request, make a commit to your master/trunk branch&lt;br/&gt;
with (at least) the following in the commit message:&lt;/p&gt;

&lt;p&gt;    This closes #1043&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;commit fe41b1bb9ac743214a6f6baba393a251e55037fc&lt;br/&gt;
Author: Arno Noordover &amp;lt;anoordover@users.noreply.github.com&amp;gt;&lt;br/&gt;
Date:   2016-06-17T14:47:14Z&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://issues.apache.org/jira/browse/CAMEL-10024&quot; title=&quot;Race condition in Mina2Producer/Mina2Consumer when closing connections with disconnect=true&quot; class=&quot;issue-link&quot; data-issue-key=&quot;CAMEL-10024&quot;&gt;&lt;del&gt;CAMEL-10024&lt;/del&gt;&lt;/a&gt;: sync on close and deprecation&lt;/p&gt;

&lt;hr /&gt;</comment>
                            <comment id="15337646" author="anoordover" created="Sat, 18 Jun 2016 08:11:17 +0000"  >&lt;p&gt;Can someone review the PR? I don&apos;t want make a mess of it.&lt;/p&gt;</comment>
                            <comment id="15337809" author="vandenbrink@zorgdomein.nl" created="Sat, 18 Jun 2016 12:27:53 +0000"  >&lt;p&gt;Well, I&apos;m not a camel expert, but I added a few comments anyway :-P&lt;/p&gt;</comment>
                            <comment id="15344237" author="githubbot" created="Wed, 22 Jun 2016 12:35:20 +0000"  >&lt;p&gt;Github user asfgit closed the pull request at:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/camel/pull/1043&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/camel/pull/1043&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="15347769" author="vandenbrink@zorgdomein.nl" created="Fri, 24 Jun 2016 06:08:08 +0000"  >&lt;p&gt;Nice!&lt;br/&gt;
Will this fix also be merged to 2.17.x ? I would love to have this in the next release.&lt;/p&gt;</comment>
                            <comment id="15349085" author="davsclaus" created="Sat, 25 Jun 2016 05:52:18 +0000"  >&lt;p&gt;Arno, remember to put the fix versions when resolving a JIRA ticket&lt;/p&gt;</comment>
                            <comment id="15381410" author="vandenbrink@zorgdomein.nl" created="Sun, 17 Jul 2016 16:15:25 +0000"  >&lt;p&gt;Ok, so I&apos;ve been testing this fix in our production environment and things have improved quite a bit (no more IllegalStateExceptions).&lt;br/&gt;
There is however still a scenario in which an unexpected ExchangeTimedOutException is thrown: that is when the TCP connection is closed remotely. It&apos;s easily reproducible with the Mina2DisconnectRaceConditionTest, just add &quot;&amp;amp;disconnect=true&quot; to the uri of the mina consumer.&lt;/p&gt;

&lt;p&gt;I think it&apos;s because in this case the session is already closing before the producer has a chance to actively close it (and wait for that to be done). &lt;/p&gt;

&lt;p&gt;Any ideas on how to fix this?&lt;/p&gt;</comment>
                            <comment id="15381902" author="anoordover" created="Mon, 18 Jul 2016 08:42:03 +0000"  >&lt;p&gt;I don&apos;t know whether the consumer should close the connection. Can you check open ports during the test without the disconnect on the consumer. I am on vacation so... &lt;/p&gt;</comment>
                            <comment id="15381922" author="vandenbrink@zorgdomein.nl" created="Mon, 18 Jul 2016 08:53:10 +0000"  >&lt;p&gt;But in the real world that&apos;s out of my control. A server can close the connection after sending a response.&lt;/p&gt;</comment>
                            <comment id="15382781" author="anoordover" created="Mon, 18 Jul 2016 18:22:50 +0000"  >&lt;p&gt;I added some logging during my development. I noticed strange behavior when doing a disconnect on the consumer side. Disconnects seemed very sparse. I mean that not every message seemed to trigger a disconnect. Sometimes it seemed that the producer used a channel that got disconnected during transmission. The consumer seemed to do this.&lt;br/&gt;
Gijsbert, can you try to get more information from the Mina developers asking about why, when and how to use disconnect? &lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 7 Jun 2016 08:06:33 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310060" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Estimated Complexity</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10062"><![CDATA[Moderate]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            19 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2z2in:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>