<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sat Dec 03 01:28:09 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/CAMEL-987/CAMEL-987.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[CAMEL-987] when deal with a response header,  an  infinite loop occurs</title>
                <link>https://issues.apache.org/jira/browse/CAMEL-987</link>
                <project id="12311211" key="CAMEL">Camel</project>
                    <description>&lt;p&gt;I use apache-camel-1.4.0 and apache-cxf-2.1.1 in my application. &lt;br/&gt;
My application is a web service application.Which receive a soap header + soap body, and then response a soap header + soap body. &lt;/p&gt;

&lt;p&gt;I use WSDLToJava tool to create the java code from wsdl, it creates an interface for me as follow: &lt;/p&gt;

&lt;p&gt;@WebService(targetNamespace = &quot;http://com.aspire/&quot;, name = &quot;SreServicePortType&quot;)&lt;br/&gt;
@XmlSeeAlso(&lt;/p&gt;
{aspire.com.xsd.ObjectFactory.class}
&lt;p&gt;)&lt;br/&gt;
@SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)&lt;/p&gt;

&lt;p&gt;public interface SreServicePortType {&lt;/p&gt;

&lt;p&gt;/*&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;p&gt; */&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)&lt;br/&gt;
    @WebMethod&lt;br/&gt;
    public void serviceContentFetchReq(&lt;br/&gt;
        @WebParam(partName = &quot;request&quot;, name = &quot;serviceContentFetchReq&quot;, targetNamespace = &quot;http://com.aspire/xsd&quot;)&lt;br/&gt;
        aspire.com.xsd.ServiceContentFetchReq request,&lt;br/&gt;
        @WebParam(partName = &quot;requestHeader&quot;, name = &quot;serviceHeader&quot;, targetNamespace = &quot;http://com.aspire/xsd&quot;, header = true)&lt;br/&gt;
        aspire.com.xsd.ServiceHeader requestHeader,&lt;br/&gt;
        @WebParam(partName = &quot;response&quot;, mode = WebParam.Mode.OUT, name = &quot;serviceContentFetchReqResponse&quot;, targetNamespace = &quot;http://com.aspire/xsd&quot;)&lt;br/&gt;
        javax.xml.ws.Holder&amp;lt;aspire.com.xsd.ServiceContentFetchReqResponse&amp;gt; response,&lt;br/&gt;
        @WebParam(partName = &quot;responseHeader&quot;, mode = WebParam.Mode.OUT, name = &quot;serviceHeader&quot;, targetNamespace = &quot;http://com.aspire/xsd&quot;, header = true)&lt;br/&gt;
        javax.xml.ws.Holder&amp;lt;aspire.com.xsd.ServiceHeader&amp;gt; responseHeader&lt;br/&gt;
    );&lt;br/&gt;
}&lt;/p&gt;

&lt;p&gt;Then, I implement the routing rules in the xml file:&lt;/p&gt;

&lt;p&gt;        &amp;lt;process ref=&quot;ipValidateProcessor&quot; /&amp;gt;&lt;br/&gt;
        &amp;lt;choice&amp;gt;&lt;br/&gt;
            &amp;lt;when&amp;gt;&lt;br/&gt;
                 &amp;lt;!-- First predicate --&amp;gt;&lt;br/&gt;
                 &amp;lt;el&amp;gt;$&lt;/p&gt;
{in.headers.IP_VALIDATE_RESULT == &apos;true&apos;}
&lt;p&gt;&amp;lt;/el&amp;gt;&lt;br/&gt;
                 &amp;lt;to uri=&quot;cxf:bean:serviceEndpoint&quot; /&amp;gt;&lt;br/&gt;
                 &amp;lt;process ref=&quot;responseProcessor&quot; /&amp;gt;&lt;br/&gt;
            &amp;lt;/when&amp;gt;&lt;br/&gt;
           &amp;lt;otherwise&amp;gt;&lt;br/&gt;
                  &amp;lt;process ref=&quot;invalidIPProcessor&quot; /&amp;gt;&lt;br/&gt;
           &amp;lt;/otherwise&amp;gt;&lt;br/&gt;
     &amp;lt;/choice&amp;gt;&lt;/p&gt;

&lt;p&gt;In the ipValidateProcessor,  I set  in.headers.IP_VALIDATE_RESULT = false, so the invalidIPProcessor will run.In the invalidIPProcessor,  I only need set response body and response header.&lt;br/&gt;
I have traced the exchange object in the processor, the exchange.out element is null, and the exchange.in element is a CxfMessage object. The exchange.in.body element is a MessageContentList object: Object&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt; is a ServiceContentFetchReq , Object&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; is a ServiceHeader, Object&lt;span class=&quot;error&quot;&gt;&amp;#91;2&amp;#93;&lt;/span&gt; is a Holder&amp;lt;T&amp;gt;, Object&lt;span class=&quot;error&quot;&gt;&amp;#91;3&amp;#93;&lt;/span&gt; is a Holder&amp;lt;T&amp;gt;. &lt;/p&gt;

&lt;p&gt;So i put response body into Object&lt;span class=&quot;error&quot;&gt;&amp;#91;2&amp;#93;&lt;/span&gt;, and put response header into Object&lt;span class=&quot;error&quot;&gt;&amp;#91;3&amp;#93;&lt;/span&gt;: &lt;/p&gt;

&lt;p&gt;               org.apache.camel.Message in = exchange.getIn(); &lt;br/&gt;
          List inBody = (List) in.getBody(); &lt;br/&gt;
          Holder holderBody = (Holder)inBody.get(2); &lt;br/&gt;
          holderBody .value = body;// body is a ServiceContentFetchReqResponse object &lt;br/&gt;
               Holder holderHeader = (Holder)inBody.get(3); &lt;br/&gt;
          holderHeader .value = header;//header is a ServiceHeader object &lt;/p&gt;

&lt;p&gt;But, when I run the application, I got an Exception:java.lang.OutOfMemoryError: Java heap space. &lt;br/&gt;
I debuged into program, there is an Infinite Loop occured at the &lt;br/&gt;
org.apache.cxf.jaxws.interceptors.HolderOutInterceptor(72): &lt;/p&gt;

&lt;p&gt;                for (int x = 0; x &amp;lt; inObjects.size(); x++) { &lt;br/&gt;
                    Object o = inObjects.get&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/error.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;; &lt;br/&gt;
                    if (o instanceof Holder) &lt;/p&gt;
{ 
                        outObjects.set(x + 1, o); 
                    }
&lt;p&gt; &lt;br/&gt;
                } &lt;/p&gt;

&lt;p&gt;I have traced and found: inObjects == outObjects is true, which leads to an Infinite Loop. &lt;/p&gt;

&lt;p&gt;Stack trace: &lt;/p&gt;

&lt;p&gt;2008-10-14 9:40:19 sun.reflect.NativeMethodAccessorImpl invoke0 &lt;br/&gt;
&#20005;&#37325;: EXCEPTION &lt;br/&gt;
java.lang.OutOfMemoryError: Java heap space &lt;br/&gt;
2008-10-14 9:40:19 org.apache.cxf.phase.PhaseInterceptorChain doIntercept &lt;br/&gt;
&#20449;&#24687;: Interceptor has thrown exception, unwinding now &lt;br/&gt;
org.apache.cxf.binding.soap.SoapFault: Error reading XMLStreamReader. &lt;br/&gt;
at org.apache.cxf.binding.soap.interceptor.ReadHeadersInterceptor.handleMessage(ReadHeadersInterceptor.java:183) &lt;br/&gt;
at org.apache.cxf.binding.soap.interceptor.ReadHeadersInterceptor.handleMessage(ReadHeadersInterceptor.java:54) &lt;br/&gt;
at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:221) &lt;br/&gt;
at org.apache.cxf.endpoint.ClientImpl.onMessage(ClientImpl.java:449) &lt;br/&gt;
at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.handleResponse(HTTPConduit.java:1996) &lt;br/&gt;
at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.close(HTTPConduit.java:1832) &lt;br/&gt;
at org.apache.cxf.transport.AbstractConduit.close(AbstractConduit.java:66) &lt;br/&gt;
at org.apache.cxf.transport.http.HTTPConduit.close(HTTPConduit.java:591) &lt;br/&gt;
at org.apache.cxf.interceptor.MessageSenderInterceptor$MessageSenderEndingInterceptor.handleMessage(MessageSenderInterceptor.java:62) &lt;br/&gt;
at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:221) &lt;br/&gt;
at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:296) &lt;br/&gt;
at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:242) &lt;br/&gt;
at org.apache.cxf.frontend.ClientProxy.invokeSync(ClientProxy.java:73) &lt;br/&gt;
at org.apache.cxf.jaxws.JaxWsClientProxy.invoke(JaxWsClientProxy.java:178) &lt;br/&gt;
at $Proxy48.serviceContentFetchReq(Unknown Source) &lt;br/&gt;
at com.aspire.archtype.camel.Client.invoke(Client.java:77) &lt;br/&gt;
at com.aspire.archtype.camel.spring.Main.main(Main.java:19) &lt;br/&gt;
Caused by: com.ctc.wstx.exc.WstxEOFException: Unexpected EOF in prolog &lt;br/&gt;
 at [row,col &lt;/p&gt;
{unknown-source}]: &lt;span class=&quot;error&quot;&gt;&amp;#91;1,0&amp;#93;&lt;/span&gt; &lt;br/&gt;
at com.ctc.wstx.sr.StreamScanner.throwUnexpectedEOF(StreamScanner.java:661) &lt;br/&gt;
at com.ctc.wstx.sr.BasicStreamReader.handleEOF(BasicStreamReader.java:2134) &lt;br/&gt;
at com.ctc.wstx.sr.BasicStreamReader.nextFromProlog(BasicStreamReader.java:2040) &lt;br/&gt;
at com.ctc.wstx.sr.BasicStreamReader.next(BasicStreamReader.java:1069) &lt;br/&gt;
at com.ctc.wstx.sr.BasicStreamReader.nextTag(BasicStreamReader.java:1095) &lt;br/&gt;
at org.apache.cxf.binding.soap.interceptor.ReadHeadersInterceptor.handleMessage(ReadHeadersInterceptor.java:83) &lt;br/&gt;
... 16 more &lt;br/&gt;
javax.xml.ws.soap.SOAPFaultException: Error reading XMLStreamReader. &lt;br/&gt;
at org.apache.cxf.jaxws.JaxWsClientProxy.invoke(JaxWsClientProxy.java:199) &lt;br/&gt;
at $Proxy48.serviceContentFetchReq(Unknown Source) &lt;br/&gt;
at com.aspire.archtype.camel.Client.invoke(Client.java:77) &lt;br/&gt;
at com.aspire.archtype.camel.spring.Main.main(Main.java:19) &lt;br/&gt;
Caused by: org.apache.cxf.binding.soap.SoapFault: Error reading XMLStreamReader. &lt;br/&gt;
at org.apache.cxf.binding.soap.interceptor.ReadHeadersInterceptor.handleMessage(ReadHeadersInterceptor.java:183) &lt;br/&gt;
at org.apache.cxf.binding.soap.interceptor.ReadHeadersInterceptor.handleMessage(ReadHeadersInterceptor.java:54) &lt;br/&gt;
at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:221) &lt;br/&gt;
at org.apache.cxf.endpoint.ClientImpl.onMessage(ClientImpl.java:449) &lt;br/&gt;
at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.handleResponse(HTTPConduit.java:1996) &lt;br/&gt;
at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.close(HTTPConduit.java:1832) &lt;br/&gt;
at org.apache.cxf.transport.AbstractConduit.close(AbstractConduit.java:66) &lt;br/&gt;
at org.apache.cxf.transport.http.HTTPConduit.close(HTTPConduit.java:591) &lt;br/&gt;
at org.apache.cxf.interceptor.MessageSenderInterceptor$MessageSenderEndingInterceptor.handleMessage(MessageSenderInterceptor.java:62) &lt;br/&gt;
at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:221) &lt;br/&gt;
at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:296) &lt;br/&gt;
at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:242) &lt;br/&gt;
at org.apache.cxf.frontend.ClientProxy.invokeSync(ClientProxy.java:73) &lt;br/&gt;
at org.apache.cxf.jaxws.JaxWsClientProxy.invoke(JaxWsClientProxy.java:178) &lt;br/&gt;
... 3 more &lt;br/&gt;
Caused by: com.ctc.wstx.exc.WstxEOFException: Unexpected EOF in prolog &lt;br/&gt;
 at [row,col {unknown-source}
&lt;p&gt;]: &lt;span class=&quot;error&quot;&gt;&amp;#91;1,0&amp;#93;&lt;/span&gt; &lt;br/&gt;
at com.ctc.wstx.sr.StreamScanner.throwUnexpectedEOF(StreamScanner.java:661) &lt;br/&gt;
at com.ctc.wstx.sr.BasicStreamReader.handleEOF(BasicStreamReader.java:2134) &lt;br/&gt;
at com.ctc.wstx.sr.BasicStreamReader.nextFromProlog(BasicStreamReader.java:2040) &lt;br/&gt;
at com.ctc.wstx.sr.BasicStreamReader.next(BasicStreamReader.java:1069) &lt;br/&gt;
at com.ctc.wstx.sr.BasicStreamReader.nextTag(BasicStreamReader.java:1095) &lt;br/&gt;
at org.apache.cxf.binding.soap.interceptor.ReadHeadersInterceptor.handleMessage(ReadHeadersInterceptor.java:83) &lt;br/&gt;
... 16 more &lt;/p&gt;</description>
                <environment>&lt;p&gt;operating system: windows 2000&lt;br/&gt;
software platform: apache-camel-1.4.0 + apache-cxf-2.1.1&lt;/p&gt;</environment>
        <key id="12485744">CAMEL-987</key>
            <summary>when deal with a response header,  an  infinite loop occurs</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="njiang">Willem Jiang</assignee>
                                    <reporter username="sky">Sky Wang</reporter>
                        <labels>
                    </labels>
                <created>Wed, 15 Oct 2008 02:12:05 +0000</created>
                <updated>Mon, 16 Feb 2009 05:51:55 +0000</updated>
                            <resolved>Wed, 22 Oct 2008 07:31:31 +0000</resolved>
                                    <version>1.4.0</version>
                                    <fixVersion>1.5.0</fixVersion>
                                    <component>camel-cxf</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12949207" author="sky" created="Thu, 16 Oct 2008 03:02:34 +0000"  >&lt;p&gt;I think this is a camel-cxf component bug.&lt;/p&gt;</comment>
                            <comment id="12949257" author="njiang" created="Thu, 16 Oct 2008 06:07:12 +0000"  >&lt;p&gt;Can you show me the code of ipValidateProcessor and the other processors?&lt;br/&gt;
I think you may set a wrong response message in the processor.&lt;br/&gt;
Here is an example&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; of how to deal with the holders, please pay attentions to the below codes&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
        &lt;span class=&quot;code-comment&quot;&gt;// Set the response message, first element is the &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; value of the operation,
&lt;/span&gt;        &lt;span class=&quot;code-comment&quot;&gt;// the others are the holders of method parameters
&lt;/span&gt;        exchange.getOut().setBody(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;[] {&lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;, personId, ssn, name});
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; &lt;a href=&quot;http://cwiki.apache.org/CAMEL/cxf.html#CXF-HowtoconsumethemessagefromthecamelcxfendpointinPOJOdataformat&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://cwiki.apache.org/CAMEL/cxf.html#CXF-HowtoconsumethemessagefromthecamelcxfendpointinPOJOdataformat&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12949325" author="sky" created="Wed, 22 Oct 2008 06:11:39 +0000"  >&lt;p&gt;I&apos;m very sorry for reply so late.I  have waited for an email notify when sombody commented on this bug, but i didn&apos;t receive anyone. And when i log in  JIRA today,  i found you have replied. Very sorry!&lt;/p&gt;

&lt;p&gt;I hava uploaded my processors,  pls see the attachments.Thanks again!&lt;/p&gt;
</comment>
                            <comment id="12949310" author="sky" created="Wed, 22 Oct 2008 06:24:54 +0000"  >&lt;p&gt;I found i filled a mis-spelling email address,  and correct it now&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="12949370" author="njiang" created="Wed, 22 Oct 2008 07:00:51 +0000"  >&lt;p&gt;I saw this line in the ResponseProcess&lt;/p&gt;

&lt;p&gt;this.setOutBody(this.getInBody());&lt;/p&gt;

&lt;p&gt;You did not change any holder&apos;s value, can you try out the codes that I showed in my last comment.&lt;/p&gt;

&lt;p&gt;NOTE: You need put the  return value of the method as the first array element into the out message body.&lt;/p&gt;

</comment>
                            <comment id="12949341" author="sky" created="Wed, 22 Oct 2008 07:18:29 +0000"  >&lt;p&gt;The infinite loop occurs in invalidIProcessor, and it wouldn&apos;t run in ResponseProcessor.&lt;/p&gt;

&lt;p&gt;I try you last comment, and modified InvalidProcessor like this:&lt;/p&gt;

&lt;p&gt;private void buildResponse() {&lt;br/&gt;
		//get body&lt;br/&gt;
		ServiceContentFetchReq req = (ServiceContentFetchReq) this.getInBody();&lt;br/&gt;
		ProcessorRequest request = req.getRequest();&lt;/p&gt;

&lt;p&gt;		ServiceContentFetchReqResponse serviceResponse = new ServiceContentFetchReqResponse();&lt;br/&gt;
		ProcessorResponse response = new ProcessorResponse();&lt;br/&gt;
		response.setHret(&quot;21000000&quot;);&lt;br/&gt;
		response.setVersion(request.getVersion());&lt;br/&gt;
		response.setTransactionID(request.getTransactionID());&lt;br/&gt;
		serviceResponse.setReturn(response);&lt;/p&gt;


&lt;p&gt;		ServiceHeader serviceHeader = new ServiceHeader();&lt;br/&gt;
		Header header = new Header();&lt;br/&gt;
		header.setTargetIP(&quot;10.1.3.63&quot;);&lt;br/&gt;
		serviceHeader.setHeader(header);&lt;/p&gt;

&lt;p&gt;		org.apache.camel.Message in = exchange.getIn();&lt;br/&gt;
		List inBody = (List) in.getBody();&lt;br/&gt;
		Holder holderHeader = (Holder)inBody.get(2);&lt;br/&gt;
		holderHeader.value = serviceResponse;&lt;br/&gt;
		Holder holderValue = (Holder)inBody.get(3);&lt;br/&gt;
		holderValue.value = serviceHeader;&lt;/p&gt;

&lt;p&gt;		this.exchange.getOut().setBody(new Object[]&lt;/p&gt;
{inBody.get(0), inBody.get(1), holderValue, holderHeader}
&lt;p&gt;);&lt;/p&gt;


&lt;p&gt;Then it runs ok, and i would modify other processors in the same way&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;



</comment>
                            <comment id="12949353" author="njiang" created="Wed, 22 Oct 2008 07:31:31 +0000"  >&lt;p&gt;I just close this issue, as we have example and document to show how to set the hold response.&lt;/p&gt;</comment>
                            <comment id="12949334" author="sky" created="Thu, 23 Oct 2008 02:41:17 +0000"  >&lt;p&gt;hello, Willem.After I walk around this trouble, I meet another trouble.&lt;br/&gt;
I do a pressure testing on this application with LoadRunner. &lt;/p&gt;

&lt;p&gt;My test case is as follows:&lt;br/&gt;
1. loadrunner does a request&lt;br/&gt;
2. server receive a request, and then forward it to  IPValidateProcessor&lt;br/&gt;
3. IPValidateProcessor set exchange.getIn().setHeader(&quot;IP_VALIDATE_RESULT&quot;, &quot;true&quot;); &lt;br/&gt;
4. do &amp;lt;to uri=&quot;cxf:bean:serviceEndpoint&quot; /&amp;gt;&lt;br/&gt;
5. do &amp;lt;process ref=&quot;responseProcessor&quot; /&amp;gt;&lt;br/&gt;
6. end&lt;/p&gt;

&lt;p&gt;Route logic as follows, I just want to test the &amp;lt;when&amp;gt; clause:&lt;br/&gt;
&amp;lt;route&amp;gt;&lt;br/&gt;
	&amp;lt;from uri=&quot;cxf:bean:routerEndpoint&quot; /&amp;gt;&lt;br/&gt;
	&amp;lt;try&amp;gt;&lt;br/&gt;
		&amp;lt;process ref=&quot;ipValidateProcessor&quot; /&amp;gt;&lt;br/&gt;
		&amp;lt;choice&amp;gt;&lt;br/&gt;
			&amp;lt;when&amp;gt;&lt;br/&gt;
				&amp;lt;!-- First predicate --&amp;gt;&lt;br/&gt;
				&amp;lt;el&amp;gt;$&lt;/p&gt;
{in.headers.IP_VALIDATE_RESULT == &apos;true&apos;}
&lt;p&gt;&amp;lt;/el&amp;gt;&lt;br/&gt;
				&amp;lt;to uri=&quot;cxf:bean:serviceEndpoint&quot; /&amp;gt;&lt;br/&gt;
				&amp;lt;process ref=&quot;responseProcessor&quot; /&amp;gt;&lt;br/&gt;
			&amp;lt;/when&amp;gt;&lt;br/&gt;
			&amp;lt;otherwise&amp;gt;&lt;br/&gt;
				&amp;lt;process ref=&quot;invalidIPProcessor&quot; /&amp;gt;&lt;br/&gt;
			&amp;lt;/otherwise&amp;gt;&lt;br/&gt;
		&amp;lt;/choice&amp;gt;&lt;br/&gt;
		&amp;lt;catch&amp;gt;&lt;br/&gt;
			&amp;lt;exception&amp;gt;com.aspire.archtype.camel.exception.AppException&amp;lt;/exception&amp;gt;&lt;br/&gt;
			&amp;lt;process ref=&quot;sreExceptionHandler&quot;&amp;gt;&amp;lt;/process&amp;gt;&lt;br/&gt;
		&amp;lt;/catch&amp;gt;&lt;br/&gt;
	&amp;lt;/try&amp;gt;&lt;br/&gt;
&amp;lt;/route&amp;gt;&lt;/p&gt;

&lt;p&gt;When only an virtual user runs the test case once, it runs ok.&lt;br/&gt;
But when have 30 virtual users run for 1 minute, some of  the transactions run failure, and logic run into &amp;lt;otherwise&amp;gt; clause.I found that the in.headers.IP_VALIDATE_RESULT is null, so logic run into &amp;lt;otherwise&amp;gt;.&lt;/p&gt;

&lt;p&gt;I don&apos;t now why, the same request, some run into &amp;lt;when&amp;gt;, some run into  &amp;lt;otherwith&amp;gt;?&lt;/p&gt;



</comment>
                            <comment id="12949416" author="njiang" created="Thu, 23 Oct 2008 07:01:04 +0000"  >&lt;p&gt;Hi Sky,&lt;/p&gt;

&lt;p&gt;Shall we start a new thread in the mail list to discuss this issue ?&lt;br/&gt;
Since it does not relate to this JIRA&apos;s topic.&lt;/p&gt;

&lt;p&gt;Willem&lt;/p&gt;</comment>
                            <comment id="12949388" author="sky" created="Thu, 23 Oct 2008 07:10:41 +0000"  >&lt;p&gt;OK, I will fill a new JIRA to discuss.&lt;/p&gt;</comment>
                            <comment id="12949281" author="sky" created="Thu, 23 Oct 2008 07:43:33 +0000"  >&lt;p&gt;I have created a new issue:&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/activemq/browse/CAMEL-1019&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/activemq/browse/CAMEL-1019&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12950673" author="davsclaus" created="Mon, 16 Feb 2009 05:51:55 +0000"  >&lt;p&gt;Closing all 1.5.0 issues&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12462688" name="ASF.LICENSE.NOT.GRANTED--camel-context.xml" size="3156" author="sky" created="Wed, 15 Oct 2008 02:12:05 +0000"/>
                            <attachment id="12462662" name="ASF.LICENSE.NOT.GRANTED--sre.wsdl" size="5105" author="sky" created="Wed, 15 Oct 2008 02:12:05 +0000"/>
                            <attachment id="12462601" name="processors.rar" size="4970" author="sky" created="Wed, 22 Oct 2008 06:13:02 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 16 Oct 2008 06:07:12 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>76981</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            7 years, 42 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i01fmv:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>6302</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>