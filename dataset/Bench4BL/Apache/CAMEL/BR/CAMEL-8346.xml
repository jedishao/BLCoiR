<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sat Dec 03 04:00:51 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/CAMEL-8346/CAMEL-8346.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[CAMEL-8346] JsonPathEngine skips file encoding</title>
                <link>https://issues.apache.org/jira/browse/CAMEL-8346</link>
                <project id="12311211" key="CAMEL">Camel</project>
                    <description>&lt;p&gt;This occurs if one uses the camel file component with a charset parameter, e.g. &lt;a href=&quot;file:/url?charset=UTF-8&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;file:/url?charset=UTF-8&lt;/a&gt;. It leads to strange effects:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;testing the same utf8-file under linux (default encoding:UTF-8) and german windows (default encoding:windows-1252) leads to problems with german umlauts.&lt;/li&gt;
	&lt;li&gt;using a file in another encoding than the default (ISO-8859-1 on linux) leads also to problems with german umlauts.&lt;/li&gt;
&lt;/ol&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Both problems can be reproduced with the attached unit test files in 2.14.1.&lt;/li&gt;
	&lt;li&gt;Problem 1 is hidden in 2.15-SNAPSHOT, because UTF-8 is hard-coded as file encoding (maybe ok, since JSON is almost never used with language specific encondings), Problem 2 also occurs in 2.15-SNAPSHOT&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I can provide or help with a fix (or pull request), if these problems are classified as true defects.&lt;/p&gt;


</description>
                <environment></environment>
        <key id="12774804">CAMEL-8346</key>
            <summary>JsonPathEngine skips file encoding</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="njiang">Willem Jiang</assignee>
                                    <reporter username="almond">Stefan Mandel</reporter>
                        <labels>
                    </labels>
                <created>Fri, 13 Feb 2015 06:26:48 +0000</created>
                <updated>Wed, 4 Mar 2015 06:53:06 +0000</updated>
                            <resolved>Wed, 4 Mar 2015 06:53:06 +0000</resolved>
                                    <version>2.14.1</version>
                    <version>2.15.0</version>
                                    <fixVersion>2.14.2</fixVersion>
                    <fixVersion>2.15.0</fixVersion>
                                    <component>camel-jsonpath</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>4</watches>
                                                                <comments>
                            <comment id="14319655" author="almond" created="Fri, 13 Feb 2015 06:28:47 +0000"  >&lt;p&gt;The attached files put in the jsonpath test/resources directory will reproduce the problems in 2.14.1 and 2.15.x-SNAPSHOT&lt;/p&gt;</comment>
                            <comment id="14319751" author="davsclaus" created="Fri, 13 Feb 2015 08:45:38 +0000"  >&lt;p&gt;You are welcome to work on a patch&lt;/p&gt;</comment>
                            <comment id="14319752" author="davsclaus" created="Fri, 13 Feb 2015 08:46:35 +0000"  >&lt;p&gt;And you can always use .convertBodyTo(String.class, &quot;iso-8859-1&quot;) or whatever to load the content using that charset.&lt;/p&gt;</comment>
                            <comment id="14320269" author="almond" created="Fri, 13 Feb 2015 15:23:55 +0000"  >&lt;p&gt;I know of this workaround (it works). I also tried with .convertBodyTo(InputStream.class, &quot;iso-8859-1&quot;) but this won&apos;t work.&lt;/p&gt;

&lt;p&gt;I expect that the workaround is fine for small files, but not so robust on large files since the complete file is loaded into memory. This may be a theoretical problem, because I actually do not know how the Jsonpathengine acts on streams.&lt;/p&gt;

&lt;p&gt;I think a fix should consider first to the configured file charset, then to the JSON-default-Encoding (as implemented in 2.15.x) and never to the System-charset-encoding. Do you agree?&lt;/p&gt;</comment>
                            <comment id="14321302" author="almond" created="Sat, 14 Feb 2015 09:07:02 +0000"  >&lt;p&gt;To fix it I would best rely on existing converters, e.g. GenericFileConverter.genericFileToInputStream. Unfortunately this also does not care of charsets, because IOConverter.toInputStream(File, Charset) seems to have a problem.&lt;/p&gt;

&lt;p&gt;I inserted a &quot;blocks&quot;-Link between this issue and the related issue in IOConverter.toInputStream(File, Charset)&lt;/p&gt;</comment>
                            <comment id="14334478" author="almond" created="Tue, 24 Feb 2015 06:21:40 +0000"  >&lt;p&gt;A pull request for the problem with IOConverter.toInputStream &lt;a href=&quot;https://issues.apache.org/jira/browse/CAMEL-8356&quot; title=&quot;IOConverter.toInputStream(file, charset) returns strange behaving stream&quot; class=&quot;issue-link&quot; data-issue-key=&quot;CAMEL-8356&quot;&gt;&lt;del&gt;CAMEL-8356&lt;/del&gt;&lt;/a&gt; has been proposed. Based on this I could immediately provide a patch for JsonPathEngine, either as pull request or as attachment to this issue. Are there any preferences?&lt;/p&gt;</comment>
                            <comment id="14338361" author="davsclaus" created="Thu, 26 Feb 2015 12:59:12 +0000"  >&lt;p&gt;Yeah a PR or attachment is good as &lt;a href=&quot;https://issues.apache.org/jira/browse/CAMEL-8356&quot; title=&quot;IOConverter.toInputStream(file, charset) returns strange behaving stream&quot; class=&quot;issue-link&quot; data-issue-key=&quot;CAMEL-8356&quot;&gt;&lt;del&gt;CAMEL-8356&lt;/del&gt;&lt;/a&gt; has been merged I believe. Then we can slip it in for the 2.14.2 release.&lt;/p&gt;</comment>
                            <comment id="14339173" author="githubbot" created="Thu, 26 Feb 2015 21:14:48 +0000"  >&lt;p&gt;GitHub user almondtools opened a pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/camel/pull/410&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/camel/pull/410&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://issues.apache.org/jira/browse/CAMEL-8346&quot; title=&quot;JsonPathEngine skips file encoding&quot; class=&quot;issue-link&quot; data-issue-key=&quot;CAMEL-8346&quot;&gt;&lt;del&gt;CAMEL-8346&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    The pull request contains also the patch to IOConverter, which is a separate pull request &lt;a href=&quot;https://issues.apache.org/jira/browse/CAMEL-8356&quot; title=&quot;IOConverter.toInputStream(file, charset) returns strange behaving stream&quot; class=&quot;issue-link&quot; data-issue-key=&quot;CAMEL-8356&quot;&gt;&lt;del&gt;CAMEL-8356&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You can merge this pull request into a Git repository by running:&lt;/p&gt;

&lt;p&gt;    $ git pull &lt;a href=&quot;https://github.com/almondtools/camel&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/almondtools/camel&lt;/a&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/CAMEL-8346&quot; title=&quot;JsonPathEngine skips file encoding&quot; class=&quot;issue-link&quot; data-issue-key=&quot;CAMEL-8346&quot;&gt;&lt;del&gt;CAMEL-8346&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Alternatively you can review and apply these changes as the patch at:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/camel/pull/410.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/camel/pull/410.patch&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To close this pull request, make a commit to your master/trunk branch&lt;br/&gt;
with (at least) the following in the commit message:&lt;/p&gt;

&lt;p&gt;    This closes #410&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;commit c213e65ee1bdb446f569dfdfe4950e7df85ce2bb&lt;br/&gt;
Author: Stefan Mandel &amp;lt;mandelst@gmail.com&amp;gt;&lt;br/&gt;
Date:   2015-02-14T17:31:37Z&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://issues.apache.org/jira/browse/CAMEL-8356&quot; title=&quot;IOConverter.toInputStream(file, charset) returns strange behaving stream&quot; class=&quot;issue-link&quot; data-issue-key=&quot;CAMEL-8356&quot;&gt;&lt;del&gt;CAMEL-8356&lt;/del&gt;&lt;/a&gt; IOConverter.toInputStream(file, charset) returns strange&lt;br/&gt;
    behaving stream&lt;/p&gt;

&lt;p&gt;commit a9eb53b97df31face1d7fed860b94f8bee23065a&lt;br/&gt;
Author: Stefan Mandel &amp;lt;mandelst@gmail.com&amp;gt;&lt;br/&gt;
Date:   2015-02-26T20:04:36Z&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://issues.apache.org/jira/browse/CAMEL-8346&quot; title=&quot;JsonPathEngine skips file encoding&quot; class=&quot;issue-link&quot; data-issue-key=&quot;CAMEL-8346&quot;&gt;&lt;del&gt;CAMEL-8346&lt;/del&gt;&lt;/a&gt; JsonPathEngine skips file encoding&lt;/p&gt;

&lt;hr /&gt;</comment>
                            <comment id="14339877" author="njiang" created="Fri, 27 Feb 2015 08:26:57 +0000"  >&lt;p&gt;Hi Stefan,&lt;/p&gt;

&lt;p&gt;I just tried to apply the patch, but the test of testPriceResultTypeOnGenericFileISO88591 is failed.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
java.lang.AssertionError: Assertion error at index 0 on mock mock:&lt;span class=&quot;code-comment&quot;&gt;//title with predicate: Simple: body == Joseph und seine Br&#252;der evaluated as: Joseph und seine Br&#65533;der == Joseph und seine Br&#252;der on Exchange[Message: Joseph und seine Br&#65533;der]
&lt;/span&gt;	at org.apache.camel.util.PredicateAssertHelper.assertMatches(PredicateAssertHelper.java:43)
	at org.apache.camel.component.mock.AssertionClause.applyAssertionOn(AssertionClause.java:106)
	at org.apache.camel.component.mock.MockEndpoint$17.run(MockEndpoint.java:958)
	at org.apache.camel.component.mock.MockEndpoint.doAssertIsSatisfied(MockEndpoint.java:410)
	at org.apache.camel.component.mock.MockEndpoint.assertIsSatisfied(MockEndpoint.java:378)
	at org.apache.camel.component.mock.MockEndpoint.assertIsSatisfied(MockEndpoint.java:366)
	at org.apache.camel.component.mock.MockEndpoint.assertIsSatisfied(MockEndpoint.java:204)
	at org.apache.camel.test.junit4.CamelTestSupport.assertMockEndpointsSatisfied(CamelTestSupport.java:675)
	at org.apache.camel.jsonpath.JsonPathSourceTest.testPriceResultTypeOnGenericFileISO88591(JsonPathSourceTest.java:92)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:55)
	at org.junit.rules.RunRules.evaluate(RunRules.java:20)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:675)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)


&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Can you double check it in you system?&lt;/p&gt;</comment>
                            <comment id="14340768" author="almond" created="Fri, 27 Feb 2015 20:37:36 +0000"  >&lt;p&gt;My workspace (forked on github) does not fail. I tried it on two independent windows systems.&lt;/p&gt;

&lt;p&gt;Have you applied the patch &lt;a href=&quot;https://issues.apache.org/jira/browse/CAMEL-8356&quot; title=&quot;IOConverter.toInputStream(file, charset) returns strange behaving stream&quot; class=&quot;issue-link&quot; data-issue-key=&quot;CAMEL-8356&quot;&gt;&lt;del&gt;CAMEL-8356&lt;/del&gt;&lt;/a&gt;? It has not yet been closed or commented. The error you describe occurs if &lt;a href=&quot;https://issues.apache.org/jira/browse/CAMEL-8356&quot; title=&quot;IOConverter.toInputStream(file, charset) returns strange behaving stream&quot; class=&quot;issue-link&quot; data-issue-key=&quot;CAMEL-8356&quot;&gt;&lt;del&gt;CAMEL-8356&lt;/del&gt;&lt;/a&gt; is not applied (it blocks this issue).&lt;/p&gt;

&lt;p&gt;Other possible reasons:&lt;/p&gt;

&lt;p&gt;The patch is based on (2.15-SNAPSHOT). 2.14 is a bit buggier because the used json path lib version is buggy. I think I can propose a patch for 2.14 too, but it would probably not be the same patch.&lt;/p&gt;

&lt;p&gt;I tried to create a patch on my local windows system. The process charset-encoding + git -&amp;gt; create patch -&amp;gt; apply patch produces corrupt files. This lead to multiple unit test errors on my machine, but maybe linux or mac-os behave in other ways. In this case download the attached json files and overwrite the existing ones in your workspace.&lt;/p&gt;</comment>
                            <comment id="14341104" author="njiang" created="Sat, 28 Feb 2015 00:37:03 +0000"  >&lt;p&gt;Hi Stefan,&lt;/p&gt;

&lt;p&gt;I didn&apos;t use the git pull to merge the patch because your PR has the patch of &lt;a href=&quot;https://issues.apache.org/jira/browse/CAMEL-8356&quot; title=&quot;IOConverter.toInputStream(file, charset) returns strange behaving stream&quot; class=&quot;issue-link&quot; data-issue-key=&quot;CAMEL-8356&quot;&gt;&lt;del&gt;CAMEL-8356&lt;/del&gt;&lt;/a&gt;, I had apply the patch file myself. It looks like a git patch file issue, when I apply the json file which I download from this JIRA, the test doesn&apos;t fail anymore. Please only send one PR per one JIRA, if you have another patch you can create another branch for it.&lt;/p&gt;

&lt;p&gt;I just tried to back port the patch into camel-2.14.x branch, but as you said it didn&apos;t work, I have to leave the work here to cut the camel-2.14.2 now.&lt;/p&gt;

&lt;p&gt;Regards,&lt;/p&gt;

&lt;p&gt;Willem&lt;/p&gt;</comment>
                            <comment id="14342380" author="githubbot" created="Sun, 1 Mar 2015 18:44:32 +0000"  >&lt;p&gt;Github user almondtools closed the pull request at:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/camel/pull/410&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/camel/pull/410&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="14346495" author="njiang" created="Wed, 4 Mar 2015 06:53:06 +0000"  >&lt;p&gt;Applied patch into camel master and camel-2.14.x branches.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10032">
                    <name>Blocker</name>
                                                                <inwardlinks description="is blocked by">
                                        <issuelink>
            <issuekey id="12775129">CAMEL-8356</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12698653" name="JsonPathSourceTest.java" size="4169" author="almond" created="Fri, 13 Feb 2015 06:28:47 +0000"/>
                            <attachment id="12698651" name="germanbooks-iso-8859-1.json" size="582" author="almond" created="Fri, 13 Feb 2015 06:28:47 +0000"/>
                            <attachment id="12698652" name="germanbooks-utf8.json" size="585" author="almond" created="Fri, 13 Feb 2015 06:28:47 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 13 Feb 2015 08:45:38 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310060" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Estimated Complexity</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10060"><![CDATA[Unknown]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 39 weeks, 2 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i25l0n:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>