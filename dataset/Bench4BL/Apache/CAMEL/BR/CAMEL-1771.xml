<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sat Dec 03 02:02:00 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/CAMEL-1771/CAMEL-1771.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[CAMEL-1771] ProducerCache should be limited to not eat memory (was: recipientList leaks memory)</title>
                <link>https://issues.apache.org/jira/browse/CAMEL-1771</link>
                <project id="12311211" key="CAMEL">Camel</project>
                    <description>&lt;p&gt;I found that RecipientList leaks memory .&lt;br/&gt;
The problem is that RecipientList stores endpoints in producerCache and cache key computed by using getEndpointUri. If endpoint uris are unique ( as we have ) then every new entry will stored in cache and will never released.&lt;/p&gt;

&lt;p&gt;In example we are using recipientList  to send messages to the external http server, every url contains unique query parameters therefor every recipientList entry will create new producer ant that producer will stored in producerCache.&lt;br/&gt;
In our system recipientList wlil leak about 20M per day&lt;/p&gt;

&lt;p&gt;Unfortunately I was unable to find any workaround &lt;/p&gt;</description>
                <environment></environment>
        <key id="12486665">CAMEL-1771</key>
            <summary>ProducerCache should be limited to not eat memory (was: recipientList leaks memory)</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="2" iconUrl="https://issues.apache.org/jira/images/icons/priorities/critical.png">Critical</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="davsclaus">Claus Ibsen</assignee>
                                    <reporter username="kalamaks">Andres</reporter>
                        <labels>
                    </labels>
                <created>Mon, 29 Jun 2009 09:22:11 +0000</created>
                <updated>Sat, 21 Nov 2009 11:59:11 +0000</updated>
                            <resolved>Tue, 30 Jun 2009 07:45:53 +0000</resolved>
                                    <version>1.4.0</version>
                    <version>1.5.0</version>
                    <version>1.6.0</version>
                    <version>1.6.1</version>
                    <version>2.0-M2</version>
                                    <fixVersion>1.6.2</fixVersion>
                    <fixVersion>2.0-M3</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                                                            <comments>
                            <comment id="12952954" author="davsclaus" created="Mon, 29 Jun 2009 09:49:58 +0000"  >&lt;p&gt;Ah cool with your finding. &lt;/p&gt;

&lt;p&gt;I will fix the ProducerCache to be size limited so it wont grow forever. Using a LRUCache instead of Map, with a default of 1000.&lt;/p&gt;</comment>
                            <comment id="12952940" author="kalamaks" created="Mon, 29 Jun 2009 10:24:10 +0000"  >&lt;p&gt;Tnx Claus&lt;br/&gt;
is it possible to use one of the concurrent API for LRUcache to get ride of  syncronization in ProducerCache.getProducer ?&lt;/p&gt;</comment>
                            <comment id="12952947" author="davsclaus" created="Mon, 29 Jun 2009 10:49:16 +0000"  >&lt;p&gt;Yeah I guess LRUCache was created before Java 5 really took off.&lt;/p&gt;

&lt;p&gt;I am wondering thought if there is an implementation in Java 5 from the concurrency API that supports a Map like sorted on usage.&lt;/p&gt;</comment>
                            <comment id="12952946" author="davsclaus" created="Mon, 29 Jun 2009 11:02:19 +0000"  >&lt;p&gt;trunk: 789285&lt;br/&gt;
1.x: 789287.&lt;/p&gt;</comment>
                            <comment id="12952951" author="kalamaks" created="Mon, 29 Jun 2009 15:33:35 +0000"  >&lt;p&gt;much better now however there is still some leak. I&apos;m not 100% sure but seemst that DefaultCamelContext.addEndpoint adds unique endpoints to the endpoints hashmap ( like in ProducerCache )&lt;/p&gt;

&lt;p&gt;Only thing I will see is that there is lot of Hasmap entrys containing HttpEndpoints  and the count of HttpEndpoints  growing and  this hasmap is inside SpringCamelContext ( DefaultCamelContext ). If it helps I will provide memory snapshot in yourkit format&lt;/p&gt;</comment>
                            <comment id="12952929" author="davsclaus" created="Mon, 29 Jun 2009 15:55:19 +0000"  >&lt;p&gt;Yeah CamelContext also holds a list of all endpoints created. I guess we should use a LRUCache as well to avoid high memory usages.&lt;/p&gt;

&lt;p&gt;Another idea is to not add these endpoints to the CamelContext internal list at all as you will not re-use them later anyway.&lt;br/&gt;
But I am working on a patch for the JMX console right now. Only registering 1 endpoint for all the https.&lt;/p&gt;</comment>
                            <comment id="12952952" author="davsclaus" created="Mon, 29 Jun 2009 16:03:40 +0000"  >&lt;p&gt;I actually think we should not &lt;b&gt;store&lt;/b&gt; the endpoints that have lenient properties, such as &lt;b&gt;http&lt;/b&gt;. Then we wont store them in the CamelContext.&lt;/p&gt;

&lt;p&gt;So if you need such an endpoint its created on demand when you call the &lt;tt&gt;getEndpoint(uri)&lt;/tt&gt; method.&lt;br/&gt;
So when you do as you have millions http endpoints that are different it wont be added to Camel and also not in JMX.&lt;/p&gt;

&lt;p&gt;In the future we could add the first in JMX to have a single entry there so we later can track number of invocations to this endpoint and more.&lt;br/&gt;
But all the JMX stuff is slated for an overhaul in 2.1&lt;/p&gt;</comment>
                            <comment id="12952980" author="davsclaus" created="Tue, 30 Jun 2009 05:27:43 +0000"  >&lt;p&gt;See nabble for discussion&lt;br/&gt;
&lt;a href=&quot;http://www.nabble.com/-DISCUSS----Camel-2.0---About-Endpoints-with-lenient-properties--eating-to-much-memory-td24266319s22882.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.nabble.com/-DISCUSS----Camel-2.0---About-Endpoints-with-lenient-properties--eating-to-much-memory-td24266319s22882.html&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12952941" author="kalamaks" created="Tue, 30 Jun 2009 06:29:26 +0000"  >&lt;p&gt;Another thing I was wonderingi is that do we realy need ProducerCache in RecipientList ? Path to the camelContext seems relatively short  (allmost direct call to camelContext.getEndpoint(uri) ) and camelContext caches endpoints anyway&lt;/p&gt;</comment>
                            <comment id="12952979" author="davsclaus" created="Tue, 30 Jun 2009 06:59:40 +0000"  >&lt;p&gt;Yeah we need the cache when people send to the same endpoint again and again.&lt;/p&gt;

&lt;p&gt;ProducerCache if for caching &lt;b&gt;producers&lt;/b&gt;&lt;br/&gt;
CamelContext caches &lt;b&gt;endpoints&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;So we need both.&lt;/p&gt;</comment>
                            <comment id="12952985" author="davsclaus" created="Tue, 30 Jun 2009 07:45:53 +0000"  >&lt;p&gt;trunk: 789593.&lt;br/&gt;
1.x: 789598.&lt;/p&gt;

&lt;p&gt;Andres can you try again with latest code? I have fixed this and also the JMX issue as well, so Camel will not register all the http endpoints.&lt;br/&gt;
So you do &lt;b&gt;not&lt;/b&gt; need your own custom naming strategy anymore.&lt;/p&gt;

&lt;p&gt;The fix is for both 1.6.2 and 2.0&lt;/p&gt;</comment>
                            <comment id="12952936" author="kalamaks" created="Tue, 30 Jun 2009 11:05:25 +0000"  >
&lt;p&gt; I tested 789598 and no more memory leaks - supercool &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;br/&gt;
I hope  1.6.2 will realeased soon so that we can switch our pdoduction also to 1.6.2&lt;/p&gt;

&lt;p&gt;thank you Claus &lt;/p&gt;

</comment>
                            <comment id="12953818" author="davsclaus" created="Sat, 21 Nov 2009 11:59:11 +0000"  >&lt;p&gt;Closing all 2.0M3 tickets&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                            <subtask id="12486630">CAMEL-1738</subtask>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 29 Jun 2009 09:49:58 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>76744</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            7 years, 2 weeks, 6 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i01kgv:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>7085</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>