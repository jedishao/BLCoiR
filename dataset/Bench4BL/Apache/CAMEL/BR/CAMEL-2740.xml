<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sat Dec 03 02:47:52 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/CAMEL-2740/CAMEL-2740.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[CAMEL-2740] Using static queue as a reply queue in InOut pattern causes memory leak</title>
                <link>https://issues.apache.org/jira/browse/CAMEL-2740</link>
                <project id="12311211" key="CAMEL">Camel</project>
                    <description>&lt;p&gt;I am running JBoss, ActiveMQ and Camel for my application.   In the InOut pattern,  I am using a predefined static queue as a reply queue.   After running for a while,  the memory usage of JBoss keeps growing and growing until it hits outOfMemory error and app server is totally hung.   I monitor the thread in jconsole,  I can see the jms connection/session keeps growing and growing.   &lt;/p&gt;

&lt;p&gt;But once I switch to use temp queue for InOut pattern,  this problem goes away.&lt;/p&gt;
</description>
                <environment>&lt;p&gt;Originally reported on Windows 2003 server and recently confirmed on OSX in a stand alone unit test.&lt;/p&gt;</environment>
        <key id="12484698">CAMEL-2740</key>
            <summary>Using static queue as a reply queue in InOut pattern causes memory leak</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="davsclaus">Claus Ibsen</assignee>
                                    <reporter username="qingyi">Qingyi Gu</reporter>
                        <labels>
                    </labels>
                <created>Wed, 19 May 2010 18:22:08 +0000</created>
                <updated>Wed, 9 Nov 2011 17:29:27 +0000</updated>
                            <resolved>Wed, 9 Nov 2011 14:36:30 +0000</resolved>
                                    <version>2.2.0</version>
                                    <fixVersion>2.7.5</fixVersion>
                    <fixVersion>2.8.3</fixVersion>
                    <fixVersion>2.9.0</fixVersion>
                                    <component>camel-jms</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12956208" author="davsclaus" created="Fri, 21 May 2010 14:40:26 +0000"  >&lt;p&gt;Could you post more details, eg what Camel route do you use?&lt;/p&gt;

&lt;p&gt;And how have you setup ActiveMQ?&lt;/p&gt;</comment>
                            <comment id="12956209" author="davsclaus" created="Fri, 21 May 2010 14:40:56 +0000"  >&lt;p&gt;And what versions of the various software are you using? eg JBoss, AMQ, JDK etc.&lt;/p&gt;</comment>
                            <comment id="12956174" author="qingyi" created="Fri, 21 May 2010 20:30:54 +0000"  >&lt;p&gt;Here is the version of software.&lt;/p&gt;

&lt;p&gt;JBoss 4.2.2&lt;br/&gt;
AMQ 5.3.1&lt;br/&gt;
JDK  1.5.0_22&lt;br/&gt;
Camel 2.2.0&lt;/p&gt;</comment>
                            <comment id="12956253" author="qingyi" created="Fri, 21 May 2010 20:59:24 +0000"  >&lt;p&gt;Here are some more details.&lt;/p&gt;

&lt;p&gt;AMQ:  I have two activemq and there is one network connector between them.  See config below.&lt;/p&gt;

&lt;p&gt;&amp;lt;networkConnector name=&quot;server1&quot; uri=&quot;static://(&lt;a href=&quot;https://localhost:61617?proxyHost=server1&amp;amp;proxyPort=80&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://localhost:61617?proxyHost=server1&amp;amp;proxyPort=80&lt;/a&gt;)&quot; duplex=&quot;true&quot;&amp;gt;&lt;br/&gt;
     &amp;lt;!-- limit store and forward to specific queues --&amp;gt;&lt;br/&gt;
     &amp;lt;dynamicallyIncludedDestinations&amp;gt;&lt;br/&gt;
         &amp;lt;queue physicalName=&quot;TO_SERVER1.&amp;gt;&quot;/&amp;gt;&lt;br/&gt;
         &amp;lt;queue physicalName=&quot;TO_SCA.&amp;gt;&quot;/&amp;gt;&lt;br/&gt;
     &amp;lt;/dynamicallyIncludedDestinations&amp;gt;&lt;br/&gt;
     &amp;lt;staticallyIncludedDestinations&amp;gt;&lt;br/&gt;
		&amp;lt;queue physicalName=&quot;TO_SERVER1.SYNC_RESP&quot;/&amp;gt;&lt;br/&gt;
		&amp;lt;queue physicalName=&quot;TO_SCA.SSO.SYNC_REQ&quot;/&amp;gt;&lt;br/&gt;
     &amp;lt;/staticallyIncludedDestinations&amp;gt;&lt;br/&gt;
  &amp;lt;/networkConnector&amp;gt;&lt;/p&gt;

&lt;p&gt;Camel Route on consumer side:&lt;br/&gt;
		from(&quot;jms:queue:TO_SCA.SSO.SYNC_REQ?concurrentConsumers=25&quot;)&lt;br/&gt;
			.choice()&lt;br/&gt;
				.when(header(JMS_HEADER_TYPE).isEqualTo(&quot;TYPE1&quot;))&lt;br/&gt;
					.beanRef(&quot;service1&quot;)&lt;br/&gt;
				.when(header(JMS_HEADER_TYPE).isEqualTo(&quot;TYPE2&quot;))&lt;br/&gt;
					.beanRef(&quot;service2&quot;)&lt;br/&gt;
				.otherwise()&lt;br/&gt;
					.beanRef(&quot;unknownService&quot;)&lt;br/&gt;
			.end();&lt;/p&gt;

&lt;p&gt;On producer side:&lt;/p&gt;

&lt;p&gt;	        HashMap&amp;lt;String, Object&amp;gt; reqHeaders = new HashMap&amp;lt;String, Object&amp;gt;();&lt;br/&gt;
	        reqHeaders.put(&quot;JMSType&quot;, &quot;TYPE1&quot;);&lt;/p&gt;


&lt;p&gt;		 // Options&lt;br/&gt;
	        StringBuffer options = new StringBuffer();&lt;br/&gt;
	        options.append(&quot;?&quot;);&lt;br/&gt;
	        options.append(&quot;replyTo&quot;);&lt;br/&gt;
	        options.append(&quot;=&quot;);&lt;br/&gt;
	        options.append(&quot;TO_EC.SERVER1.SYNC_RESP&quot;);&lt;/p&gt;


&lt;p&gt;	        // Send Message&lt;br/&gt;
	        String outMsg = (String)camelTemplate.sendBodyAndHeaders(&quot;jms:queue:TO_SCA.SSO.SYNC_REQ&quot;+options.toString(), &lt;br/&gt;
	        														 ExchangePattern.InOut, &lt;br/&gt;
	        														 inMsg, &lt;br/&gt;
	        														 reqHeaders);			&lt;/p&gt;

</comment>
                            <comment id="12956353" author="davsclaus" created="Thu, 27 May 2010 13:55:23 +0000"  >&lt;p&gt;Can you crete a small project and attach a zip file with it? Then its easier to use to look into this.&lt;/p&gt;</comment>
                            <comment id="12949094" author="davsclaus" created="Sun, 25 Jul 2010 12:22:37 +0000"  >&lt;p&gt;See this FAQ about the correct way of using templates&lt;br/&gt;
&lt;a href=&quot;http://camel.apache.org/why-does-camel-use-too-many-threads-with-producertemplate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://camel.apache.org/why-does-camel-use-too-many-threads-with-producertemplate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And also try Camel 2.5 because the request-reply logic over JMS have been refactored a bit to cater for async routing engine.&lt;/p&gt;</comment>
                            <comment id="12945900" author="davsclaus" created="Thu, 12 Aug 2010 08:21:01 +0000"  >&lt;p&gt;User doesn&apos;t respond&lt;/p&gt;</comment>
                            <comment id="13024027" author="davsclaus" created="Sun, 24 Apr 2011 09:58:01 +0000"  >&lt;p&gt;Closing all resolved tickets from 2010 or older&lt;/p&gt;</comment>
                            <comment id="13146636" author="davaleri" created="Tue, 8 Nov 2011 23:10:40 +0000"  >&lt;p&gt;I have attached a screen shot showing memory usage for the attached test case.  The attached test case uses a simple JUnit test to throw a bunch of small messages at JMS with the InOut MEP.  The test case uses the asynch capabilities of the ProducerTemplate to easily ramp up the traffic.  It doesn&apos;t wait for the generated Futures so it isn&apos;t really usable for correctness testing, it is just intended to reproduce the issue.  Also note that killing the build will likely not terminate the forked JVM.&lt;/p&gt;

&lt;p&gt;It takes less than 8K messages to consume the available memory.  The test crawls along for a bit after this point and eventually runs out of memory and crashes somewhere in the low 8K message range.  It only takes a couple minutes to reach this point.  Based on real world observation, it would appear that the issue is not driven by message frequency but by message numbers.  That is, it can take a minute or a week to encounter enough messages, but eventually you run out of memory.&lt;/p&gt;

&lt;p&gt;The heap is occupied mostly by character arrays that appear to contain message IDs / correlation IDs.  I did not traverse the object graph in the heap, but it would appear that there is some sort of issue with JMS filters or connections not getting cleaned up.  I did not attach the heap dump as it is trivial to generate from the attached test code.&lt;/p&gt;

&lt;p&gt;Removing the replyTo URI parameter and using a temp destination for replies resolves the issue.  Memory usage stays in an acceptable range and message throughput is relatively constant, although does appear to slow slightly over time for a currently unknown reason.&lt;/p&gt;</comment>
                            <comment id="13146651" author="davaleri" created="Tue, 8 Nov 2011 23:29:03 +0000"  >&lt;p&gt;Also, the attached test uses 2.9-RC1.  The steady slowdown with a temporary reply destination was due to Eclipse&apos;s console window slowing down the logging activities when running the test in Eclipse.  Once Eclipse was out of the mix, using a temporary reply destination performed flawlessly in a 30 minute test run.&lt;/p&gt;</comment>
                            <comment id="13146895" author="davsclaus" created="Wed, 9 Nov 2011 09:45:24 +0000"  >&lt;p&gt;David please create a new ticket instead of opening old tickets. We prefer this way. You may link the new ticket to the old ticket.&lt;/p&gt;</comment>
                            <comment id="13146958" author="davsclaus" created="Wed, 9 Nov 2011 11:42:19 +0000"  >&lt;p&gt;Okay I can reproduce the issue (at about 8000 msgs) and have a patch which improves this, but I hit a OOME at 100000 msg now.&lt;/p&gt;</comment>
                            <comment id="13146985" author="davsclaus" created="Wed, 9 Nov 2011 12:32:23 +0000"  >&lt;p&gt;Okay I was using the default maven surefire memory settings which of course is low. &lt;/p&gt;

&lt;p&gt;So I increased the memory setting and have the test be able to run all 1000000 messages&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;

  &amp;lt;build&amp;gt;
    &amp;lt;plugins&amp;gt;
      &amp;lt;plugin&amp;gt;
        &amp;lt;groupId&amp;gt;org.apache.maven.plugins&amp;lt;/groupId&amp;gt;
        &amp;lt;artifactId&amp;gt;maven-surefire-plugin&amp;lt;/artifactId&amp;gt;
        &amp;lt;configuration&amp;gt;
          &amp;lt;argLine&amp;gt;-Xmx1024m -XX:MaxPermSize=512m&amp;lt;/argLine&amp;gt;
        &amp;lt;/configuration&amp;gt;
      &amp;lt;/plugin&amp;gt;
    &amp;lt;/plugins&amp;gt;
  &amp;lt;/build&amp;gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13147067" author="davsclaus" created="Wed, 9 Nov 2011 14:36:31 +0000"  >&lt;p&gt;Thanks for the sample project to reproduce the issue.&lt;/p&gt;</comment>
                            <comment id="13147173" author="davsclaus" created="Wed, 9 Nov 2011 17:29:27 +0000"  >&lt;p&gt;Well the sample project from David itself also causes high memory occupation as it creates 1.000.000 tasks on the executor service pool, which is stored in memory. For example using a sample with for example 50.000 tasks does not take up so much memory.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12502976" name="ASF.LICENSE.NOT.GRANTED--CAMEL-2740 Memory Usage.jpg" size="346864" author="davaleri" created="Tue, 8 Nov 2011 22:36:20 +0000"/>
                            <attachment id="12502981" name="CAMEL-2740.tar.gz" size="2322" author="davaleri" created="Tue, 8 Nov 2011 22:55:00 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 21 May 2010 14:40:26 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>76448</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            5 years, 4 weeks, 2 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i01qfr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>8052</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>