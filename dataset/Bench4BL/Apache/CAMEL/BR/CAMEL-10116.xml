<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sat Dec 03 04:26:49 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/CAMEL-10116/CAMEL-10116.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[CAMEL-10116] NullPointerException in DefaultAsyncProcessorAwaitManager</title>
                <link>https://issues.apache.org/jira/browse/CAMEL-10116</link>
                <project id="12311211" key="CAMEL">Camel</project>
                    <description>&lt;p&gt;The following statement can cause a NPE (line #256 in DefaultAsyncProcessorAwaitManager at version 2.17.1):&lt;br/&gt;
&lt;tt&gt;MessageHistory history = list.get(list.size() - 1);&lt;/tt&gt;&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
java.lang.NullPointerException: &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;
        at org.apache.camel.impl.DefaultAsyncProcessorAwaitManager$AwaitThreadEntry.&amp;lt;init&amp;gt;(DefaultAsyncProcessorAwaitManager.java:257) ~[camel-core-2.17.1.jar!/:2.17.1]
        at org.apache.camel.impl.DefaultAsyncProcessorAwaitManager$AwaitThreadEntry.&amp;lt;init&amp;gt;(DefaultAsyncProcessorAwaitManager.java:238) ~[camel-core-2.17.1.jar!/:2.17.1]
        at org.apache.camel.impl.DefaultAsyncProcessorAwaitManager.await(DefaultAsyncProcessorAwaitManager.java:73) ~[camel-core-2.17.1.jar!/:2.17.1]
        at org.apache.camel.util.AsyncProcessorHelper.process(AsyncProcessorHelper.java:122) ~[camel-core-2.17.1.jar!/:2.17.1]
        at org.apache.camel.processor.DelegateAsyncProcessor.process(DelegateAsyncProcessor.java:87) ~[camel-core-2.17.1.jar!/:2.17.1]
        at org.apache.camel.component.stream.StreamConsumer.processLine(StreamConsumer.java:218) ~[camel-stream-2.17.1.jar!/:2.17.1]
        at org.apache.camel.component.stream.StreamConsumer.readFromStream(StreamConsumer.java:146) ~[camel-stream-2.17.1.jar!/:2.17.1]
        at org.apache.camel.component.stream.StreamConsumer.run(StreamConsumer.java:99) ~[camel-stream-2.17.1.jar!/:2.17.1]
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [na:1.8.0_91]
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [na:1.8.0_91]
        at java.lang.&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.run(&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.java:745) [na:1.8.0_91]
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</description>
                <environment></environment>
        <key id="12986405">CAMEL-10116</key>
            <summary>NullPointerException in DefaultAsyncProcessorAwaitManager</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="anoordover">Arno Noordover</assignee>
                                    <reporter username="wnagele">Wolfgang Nagele</reporter>
                        <labels>
                    </labels>
                <created>Sat, 2 Jul 2016 12:55:54 +0000</created>
                <updated>Thu, 7 Jul 2016 21:53:26 +0000</updated>
                            <resolved>Thu, 7 Jul 2016 21:53:26 +0000</resolved>
                                    <version>2.17.1</version>
                                    <fixVersion>2.17.3</fixVersion>
                    <fixVersion>2.18.0</fixVersion>
                                    <component>camel-core</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>4</watches>
                                                                <comments>
                            <comment id="15361297" author="anoordover" created="Mon, 4 Jul 2016 13:14:07 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=wnagele&quot; class=&quot;user-hover&quot; rel=&quot;wnagele&quot;&gt;Wolfgang Nagele&lt;/a&gt; we have been busy looking at this issue and we don&apos;t understand how you can get a NPE in that line of code.&lt;br/&gt;
The lines are controlled by &quot;if (list != null &amp;amp;&amp;amp; !list.isEmpty()) {...&quot;, so we don&apos;t expect a NPE on that line.&lt;br/&gt;
The only explanation we had would be that the MessageHistory list is mutated somewhere else.&lt;br/&gt;
We don&apos;t expect that to be the case but we have no other explanation.&lt;br/&gt;
We might clone the MessageHistory list before checking and use the clone, but we wouldn&apos;t expect that to be needed.&lt;/p&gt;

&lt;p&gt;Therefore we would like to ask you for a little bit more information about this issue before making this change.&lt;/p&gt;

&lt;p&gt;Can you provide this?&lt;/p&gt;</comment>
                            <comment id="15361336" author="wnagele" created="Mon, 4 Jul 2016 13:48:47 +0000"  >&lt;p&gt;Hi Arno,&lt;/p&gt;

&lt;p&gt;I was a bit surprised as well. My best guess was that since I am using threads() this is now multithreaded and maybe that this list is modified in two places simultaneously. Nowhere in my own code am I doing anything to MessageHistory. As a workaround I have actually disabled it in my routes atm.&lt;/p&gt;

&lt;p&gt;The way the last element is accessed is &quot;ugly&quot; either way. If you control the list type I would suggest you move to a specific List implementation that supports retrieving the end (LinkedList for example).&lt;/p&gt;

&lt;p&gt;Cheers,&lt;br/&gt;
Wolfgang&lt;/p&gt;</comment>
                            <comment id="15361695" author="anoordover" created="Mon, 4 Jul 2016 18:39:51 +0000"  >&lt;p&gt;Notes so far:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;The List of MessageHistory might be added to the exchange in a thread unsafe manner;&lt;/li&gt;
	&lt;li&gt;Sometimes a defensive copy is made of the List (e.g. line 152 in DefaultExchange, line 916 in ExchangeHelper);&lt;/li&gt;
	&lt;li&gt;I found one place where the existence of Exchange.MESSAGE_HISTORY property is checked. If it isn&apos;t present it is created and added to the properties hashmap (CamelInternalProcessor line 746);&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Questions:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Should there be a new class introduced e.g. MessageHistories which hides the collection implementation for the message history functionality?&lt;/li&gt;
	&lt;li&gt;Should there be a method in Exchange like putIfAbsent from the ConcurrentHashMap which adds a new element to the hashmap  if it isn&apos;t present or returns the existing element in a thread-safe manner?&lt;/li&gt;
	&lt;li&gt;Should the defensive copy functionality be thread-safe? I don&apos;t know yet what would happen in a multi threaded solution.&lt;/li&gt;
	&lt;li&gt;Do we need to make a defensive copy of the MESSAGE_HISTORY property when making a safe-copy of the properties? Maybe we shouldn&apos;t make a defensive copy and need to use the same instance. What happens when another thread adds a MessageHistory to the old properties map?&lt;/li&gt;
	&lt;li&gt;Are there other places where the MESSAGE_HISTORY is added to the properties HashMap?&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;But the main question of course:&lt;br/&gt;
Could the CamelInternalProcessor be the cause of this problem?&lt;/p&gt;</comment>
                            <comment id="15362161" author="davsclaus" created="Tue, 5 Jul 2016 07:48:32 +0000"  >&lt;p&gt;Do the exchange complete fast? As I think its due the exchange is processed async and the await manager waits for that to complete, and where the NPE happens is where it &quot;stores&quot; where the exchange current is at (by looking at the history) and concurrently then the exchange is done, and its history is complete.&lt;/p&gt;
</comment>
                            <comment id="15362341" author="anoordover" created="Tue, 5 Jul 2016 10:30:51 +0000"  >&lt;p&gt;The only reason why we store the latest history is (if I am correct without using my IDE) for dumpBlockedThread.&lt;br/&gt;
Is it acceptable to get last MessageHistory entry from the list when doing the dumpBlockedThread?&lt;/p&gt;</comment>
                            <comment id="15362347" author="davsclaus" created="Tue, 5 Jul 2016 10:42:52 +0000"  >&lt;p&gt;Ah yeah it would be better to defer getting the data at that point, also that will will also be more accurate, as the history could have changed since the constructor doing it today.&lt;/p&gt;

&lt;p&gt;So yeah you are welcome to move the logic to that point.&lt;/p&gt;</comment>
                            <comment id="15362967" author="githubbot" created="Tue, 5 Jul 2016 18:35:00 +0000"  >&lt;p&gt;GitHub user anoordover opened a pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/camel/pull/1063&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/camel/pull/1063&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://issues.apache.org/jira/browse/CAMEL-10116&quot; title=&quot;NullPointerException in DefaultAsyncProcessorAwaitManager&quot; class=&quot;issue-link&quot; data-issue-key=&quot;CAMEL-10116&quot;&gt;&lt;del&gt;CAMEL-10116&lt;/del&gt;&lt;/a&gt;: Retrieve last MessageHistory when getting NodeId and Rou&#8230;&lt;/p&gt;

&lt;p&gt;    Following changes are made:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;MessageHistories is changed to LinkedList to facilitate getting last item;&lt;/li&gt;
	&lt;li&gt;The fetching of the NodeId and RouteId from the last MessageHistory in the AwaitThreadEntry is moved to the methods getNodeId and getRouteId.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;    The test on AsyncProcessorAwaitManager is changed which shows that the dumping of the last NodeId and RouteId is error-prone.&lt;/p&gt;

&lt;p&gt;    I suddenly see that I used java 8 optional and lambda&apos;s to get the last NodeId, so I guess this can&apos;t be cherry-picked to 2.17.3 as is. Sorry.&lt;/p&gt;

&lt;p&gt;You can merge this pull request into a Git repository by running:&lt;/p&gt;

&lt;p&gt;    $ git pull &lt;a href=&quot;https://github.com/anoordover/camel&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/anoordover/camel&lt;/a&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/CAMEL-10116&quot; title=&quot;NullPointerException in DefaultAsyncProcessorAwaitManager&quot; class=&quot;issue-link&quot; data-issue-key=&quot;CAMEL-10116&quot;&gt;&lt;del&gt;CAMEL-10116&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Alternatively you can review and apply these changes as the patch at:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/camel/pull/1063.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/camel/pull/1063.patch&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To close this pull request, make a commit to your master/trunk branch&lt;br/&gt;
with (at least) the following in the commit message:&lt;/p&gt;

&lt;p&gt;    This closes #1063&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;commit d940bf8d40279f14d1a677ceff0e5afc3f42e191&lt;br/&gt;
Author: Arno Noordover &amp;lt;anoordover@users.noreply.github.com&amp;gt;&lt;br/&gt;
Date:   2016-07-05T18:24:35Z&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://issues.apache.org/jira/browse/CAMEL-10116&quot; title=&quot;NullPointerException in DefaultAsyncProcessorAwaitManager&quot; class=&quot;issue-link&quot; data-issue-key=&quot;CAMEL-10116&quot;&gt;&lt;del&gt;CAMEL-10116&lt;/del&gt;&lt;/a&gt;: Retrieve last MessageHistory when getting NodeId and RouteId&lt;/p&gt;

&lt;hr /&gt;</comment>
                            <comment id="15366732" author="githubbot" created="Thu, 7 Jul 2016 20:44:40 +0000"  >&lt;p&gt;Github user asfgit closed the pull request at:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/camel/pull/1063&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/camel/pull/1063&lt;/a&gt;&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 4 Jul 2016 13:14:07 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310060" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Estimated Complexity</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10060"><![CDATA[Unknown]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            21 weeks, 1 day ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i30gun:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>