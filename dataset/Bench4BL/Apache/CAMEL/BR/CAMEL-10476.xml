<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sat Dec 03 02:38:25 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/CAMEL-10476/CAMEL-10476.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[CAMEL-10476] configAdminFile not used to populate property placeholders in camel-test-blueprint when run via camel-maven-plugin</title>
                <link>https://issues.apache.org/jira/browse/CAMEL-10476</link>
                <project id="12311211" key="CAMEL">Camel</project>
                    <description>&lt;p&gt;Problem: When running with a Camel Blueprint project a configAdminFile is not used to populate propertyplacehoders in camel-test-blueprint when exectued with camel-maven-plugin(camel:run). So a user can&apos;t run camel locally in a similar way to running in Karaf with file based property placeholder values. &lt;/p&gt;

&lt;p&gt;Workaround: I think, but haven&apos;t tested yet, that you can work around this locally using the methods described here: &lt;a href=&quot;http://ggrzybek.blogspot.com/2015/12/camel-blueprint-test-support.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://ggrzybek.blogspot.com/2015/12/camel-blueprint-test-support.html&lt;/a&gt; and/or how this solution  &lt;a href=&quot;https://github.com/cschneider/Karaf-Tutorial/tree/master/camel/order/src&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/cschneider/Karaf-Tutorial/tree/master/camel/order/src&lt;/a&gt; appears to use exec:java locally and loads the properties via PropertiesComponent.&lt;/p&gt;

&lt;p&gt;To reproduce the problem:&lt;br/&gt;
Create a new project using camel-archetype-blueprint. (You need to change the log4j config to make it run.) To reduce the time, I created a project that runs here: &lt;a href=&quot;https://github.com/ryanco/propertyconfig&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/ryanco/propertyconfig&lt;/a&gt;. Instead of using a default in the blueprint XML for the propertyplaceholder, I setup the POM to include the following:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-xml&quot;&gt;
      &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;plugin&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.apache.camel&lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;camel-maven-plugin&lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;2.18.0&lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;configuration&amp;gt;&lt;/span&gt;
	      &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;useBlueprint&amp;gt;&lt;/span&gt;true&amp;lt;/useBlueprint
         &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;configAdminPid&amp;gt;&lt;/span&gt;com.yarsquidy.props.propertyconfig&lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/configAdminPid&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;configAdminFileName&amp;gt;&lt;/span&gt;etc/com.yarsquidy.props.propertyconfig&lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/configAdminFileName&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/configuration&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/plugin&amp;gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;In Camel 2.15.2 or earlier, this file would be loaded when mvn camel:run was invoked and the properties would be available via the PID at run time. After the changes made in &lt;a href=&quot;https://issues.apache.org/jira/browse/CAMEL-9313&quot; title=&quot;CamelBlueprintTestSupport - can&amp;#39;t initialize ConfigAdmin configurations&quot; class=&quot;issue-link&quot; data-issue-key=&quot;CAMEL-9313&quot;&gt;&lt;del&gt;CAMEL-9313&lt;/del&gt;&lt;/a&gt;, it appears that the method &lt;tt&gt;org.apache.camel.test.blueprint.CamelBlueprintHelper#setPersistentFileForConfigAdmin&lt;/tt&gt; is only called in when the createTestBundle pathway is taken in &lt;tt&gt;org.apache.camel.test.blueprint.CamelBlueprintHelper#createBundleContext(java.lang.String, java.lang.String, boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String[]...)&lt;/tt&gt;. So it appears test using CamelBlueprintTestSupport get this functionality (as shown by the tests) but things executed from camel:run do not.&lt;/p&gt;

&lt;p&gt;Here you can see in Camel 2.14 that call to &lt;tt&gt;org.apache.camel.test.blueprint.CamelBlueprintHelper#setPersistentFileForConfigAdmin&lt;/tt&gt; is made after the bundelContext is created.&lt;br/&gt;
&lt;a href=&quot;https://github.com/apache/camel/blob/camel-2.14.x/components/camel-test-blueprint/src/main/java/org/apache/camel/test/blueprint/Main.java#L103&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/camel/blob/camel-2.14.x/components/camel-test-blueprint/src/main/java/org/apache/camel/test/blueprint/Main.java#L103&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In the master branch version, that call is no longer made from main after the context is returned.&lt;br/&gt;
&lt;a href=&quot;https://github.com/apache/camel/blob/master/components/camel-test-blueprint/src/main/java/org/apache/camel/test/blueprint/Main.java#L106&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/camel/blob/master/components/camel-test-blueprint/src/main/java/org/apache/camel/test/blueprint/Main.java#L106&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I made a change locally to add a similar call to &lt;tt&gt;org.apache.camel.test.blueprint.CamelBlueprintHelper#setPersistentFileForConfigAdmin&lt;/tt&gt; in Camel 2.18:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
LOG.debug(&lt;span class=&quot;code-quote&quot;&gt;&quot;Starting Blueprint XML file: &quot;&lt;/span&gt; + descriptors);
&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (configAdminPid != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; configAdminFileName != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
		&lt;span class=&quot;code-comment&quot;&gt;// pid/file is used to set INITIAL content of ConfigAdmin to be used when blueprint container is started
&lt;/span&gt;		LOG.info(&lt;span class=&quot;code-quote&quot;&gt;&quot;ConfigAdminPid and ConfigAdminFileName are not &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;&quot;&lt;/span&gt;);
		bundleContext = createBundleContext(bundleName, &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;[] {configAdminFileName, configAdminPid});
} &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; {
		bundleContext = createBundleContext(bundleName);
}
CamelBlueprintHelper.setPersistentFileForConfigAdmin(bundleContext, configAdminPid, configAdminFileName, &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Properties(), &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Here is the output of the log statement from the example before this change:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;[ntext          INFO  Apache Camel 2.18.0 (CamelContext: blueprint-bean-context) started in 0.214 seconds
[ntext) thread #0 - timer://foo] timerToLog                     INFO  The message contains ${greeting} at 2016-11-14 08:42:03
[ntext) thread #0 - timer://foo] timerToLog                     INFO  The message contains ${greeting} at 2016-11-14 08:42:08
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Here is the output of the log statement from the example after this change:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;[         Blueprint Extender: 3] BlueprintCamelContext          INFO  Apache Camel 2.18.1-SNAPSHOT (CamelContext: blueprint-bean-context) started in 0.257 seconds
[ntext) thread #0 - timer://foo] timerToLog                     INFO  The message contains Hello From File! at 2016-11-14 08:54:09
[ntext) thread #0 - timer://foo] timerToLog                     INFO  The message contains Hello From File! at 2016-11-14 08:54:14
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;As you can see before the change, the $&lt;/p&gt;
{greeting}
&lt;p&gt; property is not poplulated via propertyplacehoder. After the change it is replaced.&lt;/p&gt;

&lt;p&gt;Given all the discussion of timing related issues in &lt;a href=&quot;https://issues.apache.org/jira/browse/CAMEL-9313&quot; title=&quot;CamelBlueprintTestSupport - can&amp;#39;t initialize ConfigAdmin configurations&quot; class=&quot;issue-link&quot; data-issue-key=&quot;CAMEL-9313&quot;&gt;&lt;del&gt;CAMEL-9313&lt;/del&gt;&lt;/a&gt;, I&apos;m hesitant to say this is a good enough solution or that it aligns with the intention of the changes made in that fix. Given that configAdminFileName and configAdminPid are passed into createBundleContext, perhaps the call to &lt;tt&gt;org.apache.camel.test.blueprint.CamelBlueprintHelper#setPersistentFileForConfigAdmin&lt;/tt&gt; should happen inside createBundleContext or one of it sub-methods. &lt;/p&gt;

&lt;p&gt;Overall, I &quot;think&quot; a user should be able to use the configAdminPid and configAdminFileName settings to load properties via camel:run rather than work aound it, but I could be persumptious there.&lt;/p&gt;</description>
                <environment></environment>
        <key id="13020538">CAMEL-10476</key>
            <summary>configAdminFile not used to populate property placeholders in camel-test-blueprint when run via camel-maven-plugin</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="gzres">Grzegorz Grzybek</assignee>
                                    <reporter username="ryanco">Ryan Colwell</reporter>
                        <labels>
                    </labels>
                <created>Mon, 14 Nov 2016 16:09:36 +0000</created>
                <updated>Fri, 18 Nov 2016 17:09:23 +0000</updated>
                            <resolved>Fri, 18 Nov 2016 17:09:14 +0000</resolved>
                                    <version>2.15.3</version>
                    <version>2.16.0</version>
                    <version>2.15.4</version>
                    <version>2.16.1</version>
                    <version>2.15.5</version>
                    <version>2.15.6</version>
                    <version>2.16.2</version>
                    <version>2.16.3</version>
                    <version>2.16.4</version>
                    <version>2.17.0</version>
                    <version>2.17.1</version>
                    <version>2.17.2</version>
                    <version>2.17.3</version>
                    <version>2.18.0</version>
                                    <fixVersion>2.16.5</fixVersion>
                    <fixVersion>2.17.4</fixVersion>
                    <fixVersion>2.18.1</fixVersion>
                    <fixVersion>2.19.0</fixVersion>
                                    <component>camel-blueprint</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="15668041" author="gzres" created="Tue, 15 Nov 2016 19:35:37 +0000"  >&lt;p&gt;Thanks for detailed description. I&apos;ll have a look at the end of this week.&lt;/p&gt;</comment>
                            <comment id="15668318" author="ryanco" created="Tue, 15 Nov 2016 21:06:30 +0000"  >&lt;p&gt;Let me know if I can provide any more information or if something isn&apos;t clear. I also was able to successfully test the workaround and I can run locally(in an IDE) using java:exec with the same properties file that the unit tests load by overriding loadConfigAdminConfigurationFile and reading that config file. The only thing I am not confident in with the workaround is the difference between running in a DefaultCamelContext vs a BlueprintCamelContext in the IDE. &lt;/p&gt;</comment>
                            <comment id="15676306" author="gzres" created="Fri, 18 Nov 2016 09:34:51 +0000"  >&lt;p&gt;The problem is &lt;tt&gt;org.apache.camel.test.blueprint.Main#includeSelfAsBundle&lt;/tt&gt; field. Or rather the fact that it&apos;s not set in &lt;tt&gt;org.apache.camel.maven.RunMojo#execute()&lt;/tt&gt;.&lt;/p&gt;

&lt;p&gt;All JUnit tests (extending from &lt;tt&gt;org.apache.camel.test.blueprint.CamelBlueprintTestSupport&lt;/tt&gt;) by default use &lt;tt&gt;org.apache.camel.test.blueprint.CamelBlueprintTestSupport#includeTestBundle()&lt;/tt&gt; which returns &lt;tt&gt;true&lt;/tt&gt;.&lt;/p&gt;

&lt;p&gt;When you simply do &lt;tt&gt;mvn clean test&lt;/tt&gt;, neither &lt;tt&gt;target/classes&lt;/tt&gt; nor &lt;tt&gt;target/test-classess&lt;/tt&gt; contain &lt;tt&gt;META-INF/MANIFEST.MF&lt;/tt&gt; file which is necessary to treat the location as &quot;bundle&quot; to be picked up in &lt;tt&gt;org.apache.camel.test.blueprint.CamelBlueprintHelper#getBundleDescriptors()&lt;/tt&gt;:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; List&amp;lt;BundleDescriptor&amp;gt; scanForBundles(&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; filterString, &lt;span class=&quot;code-object&quot;&gt;ClassLoader&lt;/span&gt; loader)
            &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; Exception
    {
&#8230;
        loader = (loader != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) ? loader : getClass().getClassLoader();

&#8230;
        &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (Enumeration&amp;lt;URL&amp;gt; e = loader.getResources(
                &lt;span class=&quot;code-quote&quot;&gt;&quot;META-INF/MANIFEST.MF&quot;&lt;/span&gt;); e.hasMoreElements(); )
        {
&#8230;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;That&apos;s why in JUnit tests, explicit bundle is created using &lt;tt&gt;org.apache.camel.test.blueprint.CamelBlueprintHelper#createTestBundle()&lt;/tt&gt;. Only this method does the &quot;initial configadmin file&quot; trick (see &lt;a href=&quot;https://github.com/apache/camel/blob/13760a4a5f1672d54997aa8ede30aefed951505a/components/camel-test-blueprint/src/main/java/org/apache/camel/test/blueprint/CamelBlueprintHelper.java#L361-L363&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;here&lt;/a&gt; for details).&lt;/p&gt;

&lt;p&gt;When running using &lt;tt&gt;mvn clean camel:run&lt;/tt&gt; you&apos;ll simply get &lt;tt&gt;java.lang.RuntimeException: Gave up waiting for service (objectClass=org.apache.camel.CamelContext)&lt;/tt&gt;, because no &quot;bundle&quot; provides your blueprint XML descriptor.&lt;br/&gt;
You need at least &lt;tt&gt;mvn clean package camel:run&lt;/tt&gt;, so you have these &quot;bundles&quot; installed by felix-connect (a bundle with blueprint descriptor is #1):&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;0 = {org.apache.felix.connect.launch.BundleDescriptor@5887} &quot;jar:file:/opt/java/tools/apache-maven-3.3.9/boot/plexus-classworlds-2.5.2.jar!/&quot;
1 = {org.apache.felix.connect.launch.BundleDescriptor@5888} &quot;file:/data/ggrzybek/sources/github.com/_other/propertyconfig/target/classes/&quot;
2 = {org.apache.felix.connect.launch.BundleDescriptor@5889} &quot;jar:file:/home/ggrzybek/.m2/repository/org/apache/camel/camel-core/2.18.0/camel-core-2.18.0.jar!/&quot;
3 = {org.apache.felix.connect.launch.BundleDescriptor@5890} &quot;jar:file:/home/ggrzybek/.m2/repository/org/slf4j/slf4j-api/1.7.21/slf4j-api-1.7.21.jar!/&quot;
&#8230;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;When running under JUnit, you have (a bundle with blueprint descriptor is #0):&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;0 = {org.apache.felix.connect.launch.BundleDescriptor@1869} &quot;jar:file:/data/ggrzybek/sources/github.com/_other/propertyconfig/target/test-bundles/blueprintbeanroutetest-1479460649241.jar!/&quot;
1 = {org.apache.felix.connect.launch.BundleDescriptor@1806} &quot;jar:file:/home/ggrzybek/.m2/repository/org/apache/camel/camel-core/2.18.0/camel-core-2.18.0.jar!/&quot;
2 = {org.apache.felix.connect.launch.BundleDescriptor@1807} &quot;jar:file:/home/ggrzybek/.m2/repository/org/slf4j/slf4j-api/1.7.21/slf4j-api-1.7.21.jar!/&quot;
3 = {org.apache.felix.connect.launch.BundleDescriptor@1808} &quot;jar:file:/home/ggrzybek/.m2/repository/com/sun/xml/bind/jaxb-core/2.2.11/jaxb-core-2.2.11.jar!/&quot;
&#8230;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If both &lt;tt&gt;includeTestBundle&lt;/tt&gt; was &lt;tt&gt;true&lt;/tt&gt; and we used &lt;tt&gt;mvn package&lt;/tt&gt;, we&apos;d have &lt;b&gt;two&lt;/b&gt; bundles with blueprint descriptor:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Manifest from &lt;tt&gt;propertyconfig/target/test-bundles/mybundle-1479461020503.jar&lt;/tt&gt; (created by &lt;tt&gt;org.apache.camel.test.blueprint.CamelBlueprintHelper#createTestBundle()&lt;/tt&gt;:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;Manifest-Version: 2
SwissboxTinybundlesVersion: pax-swissbox-tinybundles-1.3.2
Bundle-SymbolicName: MyBundle
Bundle-Version: 1.0.0
Built-By: ggrzybek
Bundle-ManifestVersion: 2
Bundle-Activator: org.apache.camel.test.blueprint.CamelBlueprintHelper
 $TestBundleActivator
Created-By: pax-swissbox-tinybundles-1.3.2
Tool: pax-swissbox-tinybundles-1.3.2
X-Camel-Blueprint-ConfigAdmin-Init: com.yarsquidy.props.propertyconfig
 =file:/data/ggrzybek/sources/github.com/_other/propertyconfig/etc/com
 .yarsquidy.props.propertyconfig
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Manifest from &lt;tt&gt;propertyconfig/target/classes/META-INF/MANIFEST.MF&lt;/tt&gt; (created by maven-bundle-plugin):&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;Manifest-Version: 1.0
Bnd-LastModified: 1479460929527
Build-Jdk: 1.8.0_112
Built-By: ggrzybek
Bundle-Blueprint: OSGI-INF/blueprint/blueprint-bean.xml
Bundle-ManifestVersion: 2
Bundle-Name: A Camel Blueprint Route
Bundle-SymbolicName: com.yarsquidy.props.property-config
Bundle-Version: 1.0.0.SNAPSHOT
Created-By: Apache Maven Bundle Plugin
Export-Package: com.yarsquidy.props;version=&quot;1.0.0&quot;
Import-Package: org.osgi.service.blueprint;version=&quot;[1.0.0,2.0.0)&quot;
Require-Capability: osgi.ee;filter:=&quot;(&amp;amp;(osgi.ee=JavaSE)(version=1.8))&quot;
Tool: Bnd-3.2.0.201605172007
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This is a reason of some problems we had when running JUnit tests &lt;b&gt;after&lt;/b&gt; &lt;tt&gt;mvn ... package&lt;/tt&gt;.&lt;/p&gt;

&lt;p&gt;So the solution should be to perform the &quot;initial configadmin file&quot; trick when running with &lt;tt&gt;mvn camel:run&lt;/tt&gt; and without &lt;tt&gt;includeTestBundle&lt;/tt&gt;. &lt;tt&gt;camel:run&lt;/tt&gt; should pick up a bundle containing blueprint descriptor which was created by &lt;tt&gt;mvn package&lt;/tt&gt;&lt;/p&gt;

&lt;p&gt;Also we should prevent using two bundles containing the same descriptors.&lt;/p&gt;

&lt;p&gt;I already have an idea.&lt;/p&gt;</comment>
                            <comment id="15676346" author="gzres" created="Fri, 18 Nov 2016 09:57:57 +0000"  >&lt;p&gt;Because &lt;tt&gt;mvn camel:run&lt;/tt&gt; is &lt;b&gt;not&lt;/b&gt; a test, for such scenarios, &lt;tt&gt;includeTestBundle&lt;/tt&gt; should always equal to &lt;tt&gt;false&lt;/tt&gt;. That&apos;s why I&apos;ll separate &quot;test bundle&quot; and a &quot;trick bundle&quot; that initializes configadmin before running blueprint.&lt;/p&gt;</comment>
                            <comment id="15676378" author="gzres" created="Fri, 18 Nov 2016 10:15:07 +0000"  >&lt;p&gt;Ah, one more thing. &lt;tt&gt;org.apache.camel.test.blueprint.CamelBlueprintHelper#createTestBundle()&lt;/tt&gt; creates TinyBundle without &lt;tt&gt;Bundle-Blueprint&lt;/tt&gt; header. Thus &lt;tt&gt;org.apache.aries.blueprint.container.BlueprintExtender#getBlueprintPaths()&lt;/tt&gt; explicitly uses:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;Bundle-Blueprint: OSGI-INF/blueprint/
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;which eventually translates to &lt;tt&gt;OSGI-INF/blueprint/*.xml&lt;/tt&gt;.&lt;/p&gt;

&lt;p&gt;And because &lt;tt&gt;mvn camel:run&lt;/tt&gt; doesn&apos;t set &lt;tt&gt;includeSelfAsBundle&lt;/tt&gt;, setting &lt;tt&gt;descriptors&lt;/tt&gt; (&lt;tt&gt;&amp;lt;applicationContextUri&amp;gt;&lt;/tt&gt; or &lt;tt&gt;&amp;lt;fileApplicationContextUri&amp;gt;&lt;/tt&gt;) doesn&apos;t make sense with &lt;tt&gt;&amp;lt;useBlueprint&amp;gt;&lt;/tt&gt; == &lt;tt&gt;true&lt;/tt&gt;.&lt;/p&gt;</comment>
                            <comment id="15677157" author="gzres" created="Fri, 18 Nov 2016 17:09:02 +0000"  >&lt;p&gt;Fixed in:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://github.com/apache/camel/commit/35a8fb65ce2f4feffe0b663d4ed48fdf00e98f44&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;master&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;https://github.com/apache/camel/commit/a4280151d7cbd37de2425dc414b79ec43b968ece&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;camel-2.18.x&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;https://github.com/apache/camel/commit/d35f61c20cd0a14ebf4eaea3f4c5d050c6ffeb2e&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;camel-2.17.x&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;https://github.com/apache/camel/commit/e6bf8367bc6ae6b0ab14a6069964eb9956ed6689&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;camel-2.16.x&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;There were already &lt;tt&gt;org.apache.camel.test.blueprint.MainTest&lt;/tt&gt;, &lt;tt&gt;org.apache.camel.test.blueprint.MainNoPidTest&lt;/tt&gt; and &lt;tt&gt;org.apache.camel.test.blueprint.MainNoReloadTest&lt;/tt&gt;, but all of them explicitly used:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
main.setIncludeSelfAsBundle(&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now I&apos;ve added &lt;tt&gt;org.apache.camel.test.blueprint.MainTest#testMainWithoutIncludingTestBundle()&lt;/tt&gt; which calls &lt;tt&gt;main.setIncludeSelfAsBundle(false)&lt;/tt&gt;.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12912417">CAMEL-9313</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12916899">CAMEL-9377</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 15 Nov 2016 19:35:37 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310060" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Estimated Complexity</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10060"><![CDATA[Unknown]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            2 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i36aof:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>