<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sat Dec 03 03:40:42 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/CAMEL-2824/CAMEL-2824.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[CAMEL-2824] Deadlock in org.apache.camel.util.DefaultTimeoutMap</title>
                <link>https://issues.apache.org/jira/browse/CAMEL-2824</link>
                <project id="12311211" key="CAMEL">Camel</project>
                    <description>&lt;p&gt;After running a camel route with a camel Aggregator for a while, I get a deadlock in  org.apache.camel.util.DefaultTimeoutMap. A full processdump is attached to this bug.&lt;/p&gt;

&lt;p&gt;I have also tried to recreate this as failing testcase, but without any luck so far. &lt;/p&gt;</description>
                <environment>&lt;p&gt;Centos 4, Java HotSpot(TM) Server VM (11.0-b15 mixed mode)&lt;/p&gt;</environment>
        <key id="12486417">CAMEL-2824</key>
            <summary>Deadlock in org.apache.camel.util.DefaultTimeoutMap</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="davsclaus">Claus Ibsen</assignee>
                                    <reporter username="tarjei@scanmine.com">Tarjei Huse</reporter>
                        <labels>
                    </labels>
                <created>Wed, 16 Jun 2010 19:43:30 +0000</created>
                <updated>Sun, 24 Apr 2011 10:01:07 +0000</updated>
                            <resolved>Fri, 18 Jun 2010 05:36:52 +0000</resolved>
                                    <version>2.3.0</version>
                                    <fixVersion>2.4.0</fixVersion>
                                    <component>camel-core</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12955934" author="tarjei@scanmine.com" created="Wed, 16 Jun 2010 19:44:40 +0000"  >&lt;p&gt;The attached processdump shows the deadlock as well as the running threads. &lt;/p&gt;</comment>
                            <comment id="12955933" author="tarjei@scanmine.com" created="Wed, 16 Jun 2010 20:11:18 +0000"  >&lt;p&gt;I have managed to recreate the deadlock using the testcase above on a different computer, linux kernel and JVM. &lt;/p&gt;

&lt;p&gt;Found one Java-level deadlock:&lt;br/&gt;
=============================&lt;br/&gt;
&quot;Camel Thread 0 - AggregateTimeoutChecker&quot;:&lt;br/&gt;
  waiting for ownable synchronizer 0xb0ff7060, (a java.util.concurrent.locks.ReentrantLock$FairSync),&lt;br/&gt;
  which is held by &quot;main&quot;&lt;br/&gt;
&quot;main&quot;:&lt;br/&gt;
  waiting for ownable synchronizer 0xb0ffef28, (a java.util.concurrent.locks.ReentrantLock$NonfairSync),&lt;br/&gt;
  which is held by &quot;Camel Thread 0 - AggregateTimeoutChecker&quot;&lt;/p&gt;

&lt;p&gt;Java stack information for the threads listed above:&lt;br/&gt;
===================================================&lt;br/&gt;
&quot;Camel Thread 0 - AggregateTimeoutChecker&quot;:&lt;br/&gt;
	at sun.misc.Unsafe.park(Native Method)&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;parking to wait for  &amp;lt;0xb0ff7060&amp;gt; (a java.util.concurrent.locks.ReentrantLock$FairSync)&lt;br/&gt;
	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)&lt;br/&gt;
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:747)&lt;br/&gt;
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireQueued(AbstractQueuedSynchronizer.java:778)&lt;br/&gt;
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:1114)&lt;br/&gt;
	at java.util.concurrent.locks.ReentrantLock$FairSync.lock(ReentrantLock.java:201)&lt;br/&gt;
	at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:262)&lt;br/&gt;
	at org.apache.camel.processor.aggregate.AggregateProcessor$AggregationTimeoutMap.onEviction(AggregateProcessor.java:575)&lt;br/&gt;
	at org.apache.camel.processor.aggregate.AggregateProcessor$AggregationTimeoutMap.onEviction(AggregateProcessor.java:548)&lt;br/&gt;
	at org.apache.camel.util.DefaultTimeoutMap.purge(DefaultTimeoutMap.java:166)&lt;br/&gt;
	at org.apache.camel.util.DefaultTimeoutMap.run(DefaultTimeoutMap.java:121)&lt;br/&gt;
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:441)&lt;br/&gt;
	at java.util.concurrent.FutureTask$Sync.innerRunAndReset(FutureTask.java:317)&lt;br/&gt;
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:150)&lt;br/&gt;
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$101(ScheduledThreadPoolExecutor.java:98)&lt;br/&gt;
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.runPeriodic(ScheduledThreadPoolExecutor.java:181)&lt;br/&gt;
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:205)&lt;br/&gt;
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)&lt;br/&gt;
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)&lt;br/&gt;
	at java.lang.Thread.run(Thread.java:619)&lt;br/&gt;
&quot;main&quot;:&lt;br/&gt;
	at sun.misc.Unsafe.park(Native Method)&lt;/li&gt;
	&lt;li&gt;parking to wait for  &amp;lt;0xb0ffef28&amp;gt; (a java.util.concurrent.locks.ReentrantLock$NonfairSync)&lt;br/&gt;
	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)&lt;br/&gt;
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:747)&lt;br/&gt;
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireQueued(AbstractQueuedSynchronizer.java:778)&lt;br/&gt;
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:1114)&lt;br/&gt;
	at java.util.concurrent.locks.ReentrantLock$NonfairSync.lock(ReentrantLock.java:186)&lt;br/&gt;
	at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:262)&lt;br/&gt;
	at org.apache.camel.util.DefaultTimeoutMap.put(DefaultTimeoutMap.java:78)&lt;br/&gt;
	at org.apache.camel.processor.aggregate.AggregateProcessor.isCompleted(AggregateProcessor.java:318)&lt;br/&gt;
	at org.apache.camel.processor.aggregate.AggregateProcessor.doAggregation(AggregateProcessor.java:235)&lt;br/&gt;
	at org.apache.camel.processor.aggregate.AggregateProcessor.process(AggregateProcessor.java:182)&lt;br/&gt;
	at org.apache.camel.processor.DelegateProcessor.processNext(DelegateProcessor.java:53)&lt;br/&gt;
	at org.apache.camel.processor.DelegateProcessor.proceed(DelegateProcessor.java:82)&lt;br/&gt;
	at org.apache.camel.processor.interceptor.TraceInterceptor.process(TraceInterceptor.java:97)&lt;br/&gt;
	at org.apache.camel.processor.RedeliveryErrorHandler.processExchange(RedeliveryErrorHandler.java:185)&lt;br/&gt;
	at org.apache.camel.processor.RedeliveryErrorHandler.processErrorHandler(RedeliveryErrorHandler.java:151)&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;	at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:89)&lt;br/&gt;
	at org.apache.camel.processor.DefaultErrorHandler.process(DefaultErrorHandler.java:49)&lt;br/&gt;
	at org.apache.camel.processor.DefaultChannel.process(DefaultChannel.java:228)&lt;br/&gt;
	at org.apache.camel.processor.Pipeline.process(Pipeline.java:75)&lt;br/&gt;
	at org.apache.camel.processor.UnitOfWorkProcessor.processNext(UnitOfWorkProcessor.java:70)&lt;br/&gt;
	at org.apache.camel.processor.DelegateProcessor.process(DelegateProcessor.java:48)&lt;br/&gt;
	at org.apache.camel.management.InstrumentationProcessor.process(InstrumentationProcessor.java:67)&lt;br/&gt;
	at org.apache.camel.component.direct.DirectProducer.process(DirectProducer.java:44)&lt;br/&gt;
	at org.apache.camel.impl.ProducerCache$1.doInProducer(ProducerCache.java:230)&lt;br/&gt;
	at org.apache.camel.impl.ProducerCache$1.doInProducer(ProducerCache.java:209)&lt;br/&gt;
	at org.apache.camel.impl.ProducerCache.doInProducer(ProducerCache.java:189)&lt;br/&gt;
	at org.apache.camel.impl.ProducerCache.sendExchange(ProducerCache.java:208)&lt;br/&gt;
	at org.apache.camel.impl.ProducerCache.send(ProducerCache.java:118)&lt;br/&gt;
	at org.apache.camel.impl.DefaultProducerTemplate.send(DefaultProducerTemplate.java:104)&lt;br/&gt;
	at org.apache.camel.impl.DefaultProducerTemplate.send(DefaultProducerTemplate.java:344)&lt;br/&gt;
	at org.apache.camel.core.DeadlockTestCase.sendMsg(DeadlockTestCase.java:82)&lt;br/&gt;
	at org.apache.camel.core.DeadlockTestCase.testDeadlock(DeadlockTestCase.java:59)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;br/&gt;
	at java.lang.reflect.Method.invoke(Method.java:597)&lt;br/&gt;
	at org.springframework.test.context.junit4.SpringTestMethod.invoke(SpringTestMethod.java:160)&lt;br/&gt;
	at org.springframework.test.context.junit4.SpringMethodRoadie.runTestMethod(SpringMethodRoadie.java:233)&lt;br/&gt;
	at org.springframework.test.context.junit4.SpringMethodRoadie$RunBeforesThenTestThenAfters.run(SpringMethodRoadie.java:333)&lt;br/&gt;
	at org.springframework.test.context.junit4.SpringMethodRoadie.runWithRepetitions(SpringMethodRoadie.java:217)&lt;br/&gt;
	at org.springframework.test.context.junit4.SpringMethodRoadie.runTest(SpringMethodRoadie.java:197)&lt;br/&gt;
	at org.springframework.test.context.junit4.SpringMethodRoadie.run(SpringMethodRoadie.java:143)&lt;br/&gt;
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.invokeTestMethod(SpringJUnit4ClassRunner.java:160)&lt;br/&gt;
	at org.junit.internal.runners.JUnit4ClassRunner.runMethods(JUnit4ClassRunner.java:51)&lt;br/&gt;
	at org.junit.internal.runners.JUnit4ClassRunner$1.run(JUnit4ClassRunner.java:44)&lt;br/&gt;
	at org.junit.internal.runners.ClassRoadie.runUnprotected(ClassRoadie.java:27)&lt;br/&gt;
	at org.junit.internal.runners.ClassRoadie.runProtected(ClassRoadie.java:37)&lt;br/&gt;
	at org.junit.internal.runners.JUnit4ClassRunner.run(JUnit4ClassRunner.java:42)&lt;br/&gt;
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:97)&lt;br/&gt;
	at org.apache.maven.surefire.junit4.JUnit4TestSet.execute(JUnit4TestSet.java:62)&lt;br/&gt;
	at org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.executeTestSet(AbstractDirectoryTestSuite.java:140)&lt;br/&gt;
	at org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.execute(AbstractDirectoryTestSuite.java:127)&lt;br/&gt;
	at org.apache.maven.surefire.Surefire.run(Surefire.java:177)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;br/&gt;
	at java.lang.reflect.Method.invoke(Method.java:597)&lt;br/&gt;
	at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:345)&lt;br/&gt;
	at org.apache.maven.surefire.booter.SurefireBooter.run(SurefireBooter.java:241)&lt;br/&gt;
	at org.apache.maven.plugin.surefire.SurefirePlugin.execute(SurefirePlugin.java:537)&lt;br/&gt;
	at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:490)&lt;br/&gt;
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:694)&lt;br/&gt;
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalWithLifecycle(DefaultLifecycleExecutor.java:556)&lt;br/&gt;
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:535)&lt;br/&gt;
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:387)&lt;br/&gt;
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:348)&lt;br/&gt;
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:180)&lt;br/&gt;
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:328)&lt;br/&gt;
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:138)&lt;br/&gt;
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:362)&lt;br/&gt;
	at org.apache.maven.cli.compat.CompatibleMain.main(CompatibleMain.java:60)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;br/&gt;
	at java.lang.reflect.Method.invoke(Method.java:597)&lt;br/&gt;
	at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)&lt;br/&gt;
	at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)&lt;br/&gt;
	at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)&lt;br/&gt;
	at org.codehaus.classworlds.Launcher.main(Launcher.java:375)&lt;/p&gt;

&lt;p&gt;Found 1 deadlock.&lt;/p&gt;</comment>
                            <comment id="12955932" author="tarjei@scanmine.com" created="Wed, 16 Jun 2010 20:18:04 +0000"  >&lt;p&gt;This is the basic contextfile I use to run the deadlock testcase.&lt;/p&gt;</comment>
                            <comment id="12955914" author="davsclaus" created="Fri, 18 Jun 2010 05:36:52 +0000"  >&lt;p&gt;trunk: 955841.&lt;/p&gt;

&lt;p&gt;Tarjei thanks for the dump and reporting this issue.&lt;/p&gt;

&lt;p&gt;I have committed a fix. Can you test it on your system with the fix?&lt;/p&gt;</comment>
                            <comment id="12955913" author="davsclaus" created="Fri, 18 Jun 2010 05:41:09 +0000"  >&lt;p&gt;This dead lock only occurs when using timeout as completion condition and Camel is currently aggregating while a timeout condition occurs and there is an Exchange to be evicted.&lt;/p&gt;</comment>
                            <comment id="12955918" author="tarjei@scanmine.com" created="Fri, 18 Jun 2010 09:58:01 +0000"  >&lt;p&gt;I can confirm that the deadlock test I created does not fail in multiple runs. The change has been implemented to the system so we&apos;ll see if it works. &lt;/p&gt;</comment>
                            <comment id="12955785" author="davsclaus" created="Tue, 22 Jun 2010 07:39:54 +0000"  >&lt;p&gt;trunk: 956800.&lt;/p&gt;

&lt;p&gt;Tarjei I have improved the locking logic so there is only 1 lock in use which should prevent any dead locks. Feel free to give it a test in your system.&lt;/p&gt;</comment>
                            <comment id="13024379" author="davsclaus" created="Sun, 24 Apr 2011 10:01:07 +0000"  >&lt;p&gt;Closing all resolved tickets from 2010 or older&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12463284" name="DeadlockTestCase.java" size="3151" author="tarjei@scanmine.com" created="Wed, 16 Jun 2010 20:11:18 +0000"/>
                            <attachment id="12463285" name="camel-base-context.xml" size="1920" author="tarjei@scanmine.com" created="Wed, 16 Jun 2010 20:18:04 +0000"/>
                            <attachment id="12463283" name="deadlock.log" size="54374" author="tarjei@scanmine.com" created="Wed, 16 Jun 2010 19:44:40 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 18 Jun 2010 05:36:52 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>76417</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            5 years, 32 weeks, 5 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i01qyf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>8136</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>