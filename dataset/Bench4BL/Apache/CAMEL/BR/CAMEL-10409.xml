<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sat Dec 03 03:13:29 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/CAMEL-10409/CAMEL-10409.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[CAMEL-10409] Double release of netty buffer</title>
                <link>https://issues.apache.org/jira/browse/CAMEL-10409</link>
                <project id="12311211" key="CAMEL">Camel</project>
                    <description>&lt;p&gt;It looks like &lt;a href=&quot;https://issues.apache.org/jira/browse/CAMEL-9040&quot; title=&quot;netty4-http - LEAK: ByteBuf.release() was not called before it&amp;#39;s garbage-collected&quot; class=&quot;issue-link&quot; data-issue-key=&quot;CAMEL-9040&quot;&gt;&lt;del&gt;CAMEL-9040&lt;/del&gt;&lt;/a&gt; fix introduced a double release of a netty buffer&lt;br/&gt;
 that leads to IllegalReferenceCountException under load:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
2016-10-22 10:20:15.442  WARN 6853 --- [ClientTCPWorker] io.netty.util.ReferenceCountUtil         : Failed to release a message: AdvancedLeakAwareByteBuf(PooledUnsafeDirectByteBuf(freed))

io.netty.util.IllegalReferenceCountException: refCnt: 0, decrement: 1
	at io.netty.buffer.AbstractReferenceCountedByteBuf.release(AbstractReferenceCountedByteBuf.java:111) ~[netty-all-4.1.5.Final.jar:4.1.5.Final]
	at io.netty.buffer.WrappedByteBuf.release(WrappedByteBuf.java:1029) ~[netty-all-4.1.5.Final.jar:4.1.5.Final]
	at io.netty.buffer.AdvancedLeakAwareByteBuf.release(AdvancedLeakAwareByteBuf.java:951) ~[netty-all-4.1.5.Final.jar:4.1.5.Final]
	at io.netty.util.ReferenceCountUtil.release(ReferenceCountUtil.java:84) ~[netty-all-4.1.5.Final.jar:4.1.5.Final]
	at io.netty.util.ReferenceCountUtil.safeRelease(ReferenceCountUtil.java:109) ~[netty-all-4.1.5.Final.jar:4.1.5.Final]
	at io.netty.channel.ChannelOutboundBuffer.remove0(ChannelOutboundBuffer.java:296) [netty-all-4.1.5.Final.jar:4.1.5.Final]
	at io.netty.channel.ChannelOutboundBuffer.failFlushed(ChannelOutboundBuffer.java:621) [netty-all-4.1.5.Final.jar:4.1.5.Final]
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush0(AbstractChannel.java:869) [netty-all-4.1.5.Final.jar:4.1.5.Final]
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.flush0(AbstractNioChannel.java:362) [netty-all-4.1.5.Final.jar:4.1.5.Final]
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush(AbstractChannel.java:823) [netty-all-4.1.5.Final.jar:4.1.5.Final]
	at io.netty.channel.DefaultChannelPipeline$HeadContext.flush(DefaultChannelPipeline.java:1296) [netty-all-4.1.5.Final.jar:4.1.5.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:786) [netty-all-4.1.5.Final.jar:4.1.5.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:778) [netty-all-4.1.5.Final.jar:4.1.5.Final]
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:759) [netty-all-4.1.5.Final.jar:4.1.5.Final]
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.flush(CombinedChannelDuplexHandler.java:530) [netty-all-4.1.5.Final.jar:4.1.5.Final]
	at io.netty.channel.ChannelOutboundHandlerAdapter.flush(ChannelOutboundHandlerAdapter.java:115) [netty-all-4.1.5.Final.jar:4.1.5.Final]
	at io.netty.channel.CombinedChannelDuplexHandler.flush(CombinedChannelDuplexHandler.java:355) [netty-all-4.1.5.Final.jar:4.1.5.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:786) [netty-all-4.1.5.Final.jar:4.1.5.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeWriteAndFlush(AbstractChannelHandlerContext.java:812) [netty-all-4.1.5.Final.jar:4.1.5.Final]
	at io.netty.channel.AbstractChannelHandlerContext.write(AbstractChannelHandlerContext.java:824) [netty-all-4.1.5.Final.jar:4.1.5.Final]
	at io.netty.channel.AbstractChannelHandlerContext.writeAndFlush(AbstractChannelHandlerContext.java:804) [netty-all-4.1.5.Final.jar:4.1.5.Final]
	at io.netty.channel.AbstractChannelHandlerContext.writeAndFlush(AbstractChannelHandlerContext.java:841) [netty-all-4.1.5.Final.jar:4.1.5.Final]
	at io.netty.channel.DefaultChannelPipeline.writeAndFlush(DefaultChannelPipeline.java:1032) [netty-all-4.1.5.Final.jar:4.1.5.Final]
	at io.netty.channel.AbstractChannel.writeAndFlush(AbstractChannel.java:296) [netty-all-4.1.5.Final.jar:4.1.5.Final]
	at org.apache.camel.component.netty4.NettyHelper.writeBodyAsync(NettyHelper.java:105) [camel-netty4-2.18.0.jar:2.18.0]
	at org.apache.camel.component.netty4.NettyProducer.processWithConnectedChannel(NettyProducer.java:306) [camel-netty4-2.18.0.jar:2.18.0]
	at org.apache.camel.component.netty4.NettyProducer$ChannelConnectedListener.operationComplete(NettyProducer.java:642) [camel-netty4-2.18.0.jar:2.18.0]
	at org.apache.camel.component.netty4.NettyProducer$ChannelConnectedListener.operationComplete(NettyProducer.java:619) [camel-netty4-2.18.0.jar:2.18.0]
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:514) [netty-all-4.1.5.Final.jar:4.1.5.Final]
	at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:507) [netty-all-4.1.5.Final.jar:4.1.5.Final]
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:486) [netty-all-4.1.5.Final.jar:4.1.5.Final]
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:427) [netty-all-4.1.5.Final.jar:4.1.5.Final]
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:111) [netty-all-4.1.5.Final.jar:4.1.5.Final]
	at io.netty.channel.DefaultChannelPromise.trySuccess(DefaultChannelPromise.java:82) [netty-all-4.1.5.Final.jar:4.1.5.Final]
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:306) [netty-all-4.1.5.Final.jar:4.1.5.Final]
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:341) [netty-all-4.1.5.Final.jar:4.1.5.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:627) [netty-all-4.1.5.Final.jar:4.1.5.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:551) [netty-all-4.1.5.Final.jar:4.1.5.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:465) [netty-all-4.1.5.Final.jar:4.1.5.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:437) [netty-all-4.1.5.Final.jar:4.1.5.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:873) [netty-all-4.1.5.Final.jar:4.1.5.Final]
	at java.lang.&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.run(&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.java:745) [na:1.8.0_101]

&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The buffer is release at&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
	at org.apache.camel.component.netty4.http.NettyHttpProducer$1.onDone(NettyHttpProducer.java:85)
	at org.apache.camel.support.SynchronizationAdapter.onComplete(SynchronizationAdapter.java:35)
	at org.apache.camel.util.UnitOfWorkHelper.doneSynchronizations(UnitOfWorkHelper.java:104)
	at org.apache.camel.impl.DefaultUnitOfWork.done(DefaultUnitOfWork.java:230)
	at org.apache.camel.util.UnitOfWorkHelper.doneUow(UnitOfWorkHelper.java:65)
	at org.apache.camel.impl.DefaultConsumer.doneUoW(DefaultConsumer.java:107)
	at org.apache.camel.component.netty4.handlers.ServerChannelHandler$1.done(ServerChannelHandler.java:149)
	at org.apache.camel.processor.CamelInternalProcessor$InternalCallback.done(CamelInternalProcessor.java:257)
	at org.apache.camel.processor.Pipeline$1.done(Pipeline.java:147)
	at org.apache.camel.processor.CamelInternalProcessor$InternalCallback.done(CamelInternalProcessor.java:257)
	at org.apache.camel.processor.RedeliveryErrorHandler$2.done(RedeliveryErrorHandler.java:554)
	at org.apache.camel.management.InstrumentationProcessor$1.done(InstrumentationProcessor.java:86)
	at org.apache.camel.processor.SendProcessor$1.done(SendProcessor.java:155)
	at org.apache.camel.component.netty4.http.NettyHttpProducer$NettyHttpProducerCallback.done(NettyHttpProducer.java:149)
	at org.apache.camel.component.netty4.NettyProducer$NettyProducerCallback.done(NettyProducer.java:548)
	at org.apache.camel.component.netty4.handlers.ClientChannelHandler.channelRead0(ClientChannelHandler.java:205)
	at io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:105)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:372)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:350)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:372)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:350)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:435)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:293)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:267)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:250)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:372)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:350)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1334)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:372)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:358)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:926)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:129)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:610)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:551)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:465)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:437)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:873)
	at java.lang.&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.run(&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.java:745)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt; 
&lt;p&gt;and &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;

	at org.apache.camel.component.netty4.NettyHelper.writeBodyAsync(NettyHelper.java:105)
	at org.apache.camel.component.netty4.NettyProducer.processWithConnectedChannel(NettyProducer.java:306)
	at org.apache.camel.component.netty4.NettyProducer$ChannelConnectedListener.operationComplete(NettyProducer.java:642)
	at org.apache.camel.component.netty4.NettyProducer$ChannelConnectedListener.operationComplete(NettyProducer.java:619)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:514)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:507)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:486)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:427)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:111)
	at io.netty.channel.DefaultChannelPromise.trySuccess(DefaultChannelPromise.java:82)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:306)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:341)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:627)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:551)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:465)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:437)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:873)
	at java.lang.&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.run(&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.java:745)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Note that refCnt check do not work if buffer is being used by another thread, it&apos;s just hiding a problem if it works. I will try to look into it deeper, but I am not sure if I fully understand the buffer allocation / freeing lifecycle in netty yet &lt;/p&gt;

&lt;p&gt;My test routes are:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
        from(&lt;span class=&quot;code-quote&quot;&gt;&quot;timer:load?period=100&quot;&lt;/span&gt;)
                .to(&lt;span class=&quot;code-quote&quot;&gt;&quot;log:client?groupInterval=5000&quot;&lt;/span&gt;)
                .to(&lt;span class=&quot;code-quote&quot;&gt;&quot;netty4-http:http:&lt;span class=&quot;code-comment&quot;&gt;//127.0.0.1:8081/main-service&quot;&lt;/span&gt;);
&lt;/span&gt;        from(&lt;span class=&quot;code-quote&quot;&gt;&quot;netty4-http:http:&lt;span class=&quot;code-comment&quot;&gt;//0.0.0.0:8081/main-service&quot;&lt;/span&gt;)
&lt;/span&gt;                .to(&lt;span class=&quot;code-quote&quot;&gt;&quot;log:main-service?groupInterval=5000&quot;&lt;/span&gt;)
                .to(&lt;span class=&quot;code-quote&quot;&gt;&quot;netty4-http:http:&lt;span class=&quot;code-comment&quot;&gt;//127.0.0.1:8082/childService1&quot;&lt;/span&gt;)
&lt;/span&gt;                .to(&lt;span class=&quot;code-quote&quot;&gt;&quot;netty4-http:http:&lt;span class=&quot;code-comment&quot;&gt;//127.0.0.1:8083/childService2&quot;&lt;/span&gt;);
&lt;/span&gt;        from(&lt;span class=&quot;code-quote&quot;&gt;&quot;netty4-http:http:&lt;span class=&quot;code-comment&quot;&gt;//0.0.0.0:8082/childService1&quot;&lt;/span&gt;)
&lt;/span&gt;                .to(&lt;span class=&quot;code-quote&quot;&gt;&quot;log:childService1?groupInterval=5000&quot;&lt;/span&gt;)
                .delayer(100);
        from(&lt;span class=&quot;code-quote&quot;&gt;&quot;netty4-http:http:&lt;span class=&quot;code-comment&quot;&gt;//0.0.0.0:8083/childService2&quot;&lt;/span&gt;)
&lt;/span&gt;                .to(&lt;span class=&quot;code-quote&quot;&gt;&quot;log:childService2?groupInterval=5000&quot;&lt;/span&gt;)
                .delayer(100);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</description>
                <environment></environment>
        <key id="13014501">CAMEL-10409</key>
            <summary>Double release of netty buffer</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="2" iconUrl="https://issues.apache.org/jira/images/icons/priorities/critical.png">Critical</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="njiang">Willem Jiang</assignee>
                                    <reporter username="tivv">Vitalii Tymchyshyn</reporter>
                        <labels>
                    </labels>
                <created>Sat, 22 Oct 2016 14:24:13 +0000</created>
                <updated>Wed, 16 Nov 2016 12:12:11 +0000</updated>
                            <resolved>Tue, 15 Nov 2016 09:19:57 +0000</resolved>
                                    <version>2.18.0</version>
                                    <fixVersion>2.18.1</fixVersion>
                    <fixVersion>2.19.0</fixVersion>
                                    <component>camel-netty4-http</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>4</watches>
                                                                <comments>
                            <comment id="15597965" author="tivv" created="Sat, 22 Oct 2016 14:44:27 +0000"  >&lt;p&gt;Looked a bit into in.&lt;br/&gt;
Note that I analyzed request handling only. For response I&apos;d consider removing refCnt check as it does more harm (hiding a problem sometimes)  &lt;br/&gt;
My thoughts for request:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;It needs to be handled in netty4 component, not netty4-http&lt;/li&gt;
	&lt;li&gt;request needs to be release only if it did not make to &quot;write&quot; call&lt;/li&gt;
	&lt;li&gt;I can see next options:
	&lt;ul&gt;
		&lt;li&gt;Do carefull error handling properly releasing it in case of any code pathes in which request do not make up to write, don&apos;t do in synchronization&lt;/li&gt;
		&lt;li&gt;Mark message as &quot;released&quot; somehow and still do  in synchrnonization adapter. Note that it should work for multiple netty calls in the exchange&lt;/li&gt;
		&lt;li&gt;Delay body creation until we are ready to send it down&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I prefer delay then carefull error handling. I don&apos;t really like synchronization approach for request. It&apos;s more complicated to handle (with multiple requests) and it holds buffer more than needed.&lt;/p&gt;</comment>
                            <comment id="15662774" author="githubbot" created="Mon, 14 Nov 2016 04:58:46 +0000"  >&lt;p&gt;GitHub user tivv opened a pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/camel/pull/1268&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/camel/pull/1268&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://issues.apache.org/jira/browse/CAMEL-10409&quot; title=&quot;Double release of netty buffer&quot; class=&quot;issue-link&quot; data-issue-key=&quot;CAMEL-10409&quot;&gt;&lt;del&gt;CAMEL-10409&lt;/del&gt;&lt;/a&gt;: Prevent double release of request&lt;/p&gt;

&lt;p&gt;    Please also merge into 2.18 as it&apos;s quite important problem that may lead to buffer corruption (buffer is being incorrectly reused) &lt;/p&gt;

&lt;p&gt;You can merge this pull request into a Git repository by running:&lt;/p&gt;

&lt;p&gt;    $ git pull &lt;a href=&quot;https://github.com/tivv/camel&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/tivv/camel&lt;/a&gt; netty-fix&lt;/p&gt;

&lt;p&gt;Alternatively you can review and apply these changes as the patch at:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/camel/pull/1268.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/camel/pull/1268.patch&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To close this pull request, make a commit to your master/trunk branch&lt;br/&gt;
with (at least) the following in the commit message:&lt;/p&gt;

&lt;p&gt;    This closes #1268&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;commit 237101e76ad7750450e29fb408f35f962218c9c6&lt;br/&gt;
Author: Vitalii Tymchyshyn &amp;lt;vit@tym.im&amp;gt;&lt;br/&gt;
Date:   2016-11-14T04:51:54Z&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://issues.apache.org/jira/browse/CAMEL-10409&quot; title=&quot;Double release of netty buffer&quot; class=&quot;issue-link&quot; data-issue-key=&quot;CAMEL-10409&quot;&gt;&lt;del&gt;CAMEL-10409&lt;/del&gt;&lt;/a&gt;&lt;br/&gt;
    Double release of netty buffer&lt;/p&gt;

&lt;p&gt;commit f36cb53f85692993c39c639556c4a8c540d9501f&lt;br/&gt;
Author: Vitalii Tymchyshyn &amp;lt;vit@tym.im&amp;gt;&lt;br/&gt;
Date:   2016-11-14T04:55:24Z&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://issues.apache.org/jira/browse/CAMEL-10409&quot; title=&quot;Double release of netty buffer&quot; class=&quot;issue-link&quot; data-issue-key=&quot;CAMEL-10409&quot;&gt;&lt;del&gt;CAMEL-10409&lt;/del&gt;&lt;/a&gt;&lt;br/&gt;
    Double release of netty buffer&lt;/p&gt;

&lt;hr /&gt;</comment>
                            <comment id="15662775" author="tivv" created="Mon, 14 Nov 2016 04:59:32 +0000"  >&lt;p&gt;I&apos;ve implemented careful handling in the PR&lt;/p&gt;</comment>
                            <comment id="15663201" author="davsclaus" created="Mon, 14 Nov 2016 08:54:59 +0000"  >&lt;p&gt;Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=tivv&quot; class=&quot;user-hover&quot; rel=&quot;tivv&quot;&gt;Vitalii Tymchyshyn&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I wonder if would help with &lt;a href=&quot;https://issues.apache.org/jira/browse/CAMEL-10301&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/CAMEL-10301&lt;/a&gt; as well - and see if you can reproduce this with latest code, and possible fix it too &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="15665885" author="tivv" created="Tue, 15 Nov 2016 03:18:39 +0000"  >&lt;p&gt;I&apos;ll see. I also see a low hanging fruit: Server must send &quot;Connection: close&quot; when it is going to close connection shortly (e.g. when authentication failed). Otherwise client may try to send another request over the connection being closed. Some of the tests are flacky because of this. I&apos;ll make another JIRA and fix if confirmed. &lt;/p&gt;</comment>
                            <comment id="15665891" author="njiang" created="Tue, 15 Nov 2016 03:23:10 +0000"  >&lt;p&gt;Applied  the patch into camel-2.18.x and master branch with thanks to Vitalii.&lt;/p&gt;</comment>
                            <comment id="15666088" author="njiang" created="Tue, 15 Nov 2016 04:58:38 +0000"  >&lt;p&gt;There were some memory leaks in camel-netty4 unit tests after applied the patch.  &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
Failed tests:
  NettyUDPAsyncTest&amp;gt;BaseNettyTest.verifyNoLeaks:89 Leaks detected &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; running tests: [org.apache.logging.log4j.core.impl.MutableLogEvent@7c96c85]
  NettyUDPMessageLargerThanDefaultBufferSizeTest&amp;gt;BaseNettyTest.verifyNoLeaks:89 Leaks detected &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; running tests: [org.apache.logging.log4j.core.impl.MutableLogEvent@73bb1337]
  NettyUDPObjectSyncTest&amp;gt;BaseNettyTest.verifyNoLeaks:89 Leaks detected &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; running tests: [org.apache.logging.log4j.core.impl.MutableLogEvent@5eed6dfb, org.apache.logging.log4j.core.impl.MutableLogEvent@7c96c85, org.apache.logging.log4j.core.impl.MutableLogEvent@7c96c85]
  NettyUDPSyncTest&amp;gt;BaseNettyTest.verifyNoLeaks:89 Leaks detected &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; running tests: [org.apache.logging.log4j.core.impl.MutableLogEvent@7c96c85, org.apache.logging.log4j.core.impl.MutableLogEvent@7c96c85]
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I will take a look at it later today.&lt;/p&gt;</comment>
                            <comment id="15666544" author="njiang" created="Tue, 15 Nov 2016 08:46:48 +0000"  >&lt;p&gt;Just found this issue is cause by my old mistake in the DatagramPacketObjectEncoder. &lt;br/&gt;
I just filled a JIRA &lt;a href=&quot;https://issues.apache.org/jira/browse/CAMEL-10480&quot; title=&quot;MemoryLeak in the DatagramPacketObjectEncoder&quot; class=&quot;issue-link&quot; data-issue-key=&quot;CAMEL-10480&quot;&gt;&lt;del&gt;CAMEL-10480&lt;/del&gt;&lt;/a&gt; for it and the quick fix is on the way.&lt;/p&gt;</comment>
                            <comment id="15666619" author="njiang" created="Tue, 15 Nov 2016 09:19:57 +0000"  >&lt;p&gt;Applied the patch into camel master and camel-2.18.x branch with thanks to Vitalii.&lt;/p&gt;</comment>
                            <comment id="15670287" author="githubbot" created="Wed, 16 Nov 2016 12:12:11 +0000"  >&lt;p&gt;Github user tivv closed the pull request at:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/camel/pull/1268&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/camel/pull/1268&lt;/a&gt;&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 14 Nov 2016 04:58:46 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310060" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Estimated Complexity</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10060"><![CDATA[Unknown]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            2 weeks, 2 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i359fz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>