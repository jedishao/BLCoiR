<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sat Dec 03 02:03:50 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/CAMEL-10087/CAMEL-10087.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[CAMEL-10087] camel-kafka does not work in OSGI container</title>
                <link>https://issues.apache.org/jira/browse/CAMEL-10087</link>
                <project id="12311211" key="CAMEL">Camel</project>
                    <description>&lt;p&gt;Currently this component is broken in OSGI environment due to this:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/KAFKA-3218&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/KAFKA-3218&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We can leave it broken until they get their bugs worked out.  Or i can submit a PR with an intermediate fix that should work, as described in the jira noted above.&lt;/p&gt;


&lt;p&gt;&lt;a href=&quot;https://github.com/apache/camel/pull/1053&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/camel/pull/1053&lt;/a&gt;&lt;/p&gt;</description>
                <environment></environment>
        <key id="12982329">CAMEL-10087</key>
            <summary>camel-kafka does not work in OSGI container</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="davsclaus">Claus Ibsen</assignee>
                                    <reporter username="jmandawg">Jay mann</reporter>
                        <labels>
                    </labels>
                <created>Thu, 23 Jun 2016 13:44:00 +0000</created>
                <updated>Fri, 1 Jul 2016 11:36:35 +0000</updated>
                            <resolved>Fri, 1 Jul 2016 06:59:10 +0000</resolved>
                                    <version>2.17.1</version>
                                    <fixVersion>2.17.3</fixVersion>
                    <fixVersion>2.18.0</fixVersion>
                                    <component>camel-kafka</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>4</watches>
                                                                <comments>
                            <comment id="15346458" author="githubbot" created="Thu, 23 Jun 2016 13:55:27 +0000"  >&lt;p&gt;GitHub user transamericamoon opened a pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/camel/pull/1049&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/camel/pull/1049&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://issues.apache.org/jira/browse/CAMEL-10087&quot; title=&quot;camel-kafka does not work in OSGI container&quot; class=&quot;issue-link&quot; data-issue-key=&quot;CAMEL-10087&quot;&gt;&lt;del&gt;CAMEL-10087&lt;/del&gt;&lt;/a&gt; Fix for &lt;a href=&quot;https://issues.apache.org/jira/browse/KAFKA-3218&quot; title=&quot;Kafka-0.9.0.0 does not work as OSGi module&quot; class=&quot;issue-link&quot; data-issue-key=&quot;KAFKA-3218&quot;&gt;&lt;del&gt;KAFKA-3218&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    Temporary fix to get Kafka working inside OSGI containers&lt;/p&gt;

&lt;p&gt;You can merge this pull request into a Git repository by running:&lt;/p&gt;

&lt;p&gt;    $ git pull &lt;a href=&quot;https://github.com/jmandawg/camel&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/jmandawg/camel&lt;/a&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/CAMEL-10087&quot; title=&quot;camel-kafka does not work in OSGI container&quot; class=&quot;issue-link&quot; data-issue-key=&quot;CAMEL-10087&quot;&gt;&lt;del&gt;CAMEL-10087&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Alternatively you can review and apply these changes as the patch at:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/camel/pull/1049.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/camel/pull/1049.patch&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To close this pull request, make a commit to your master/trunk branch&lt;br/&gt;
with (at least) the following in the commit message:&lt;/p&gt;

&lt;p&gt;    This closes #1049&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;commit 7b6a21d92a110ef62228cb193fe83160e5261da2&lt;br/&gt;
Author: John Moon &amp;lt;john.moon@transamerica.com&amp;gt;&lt;br/&gt;
Date:   2016-06-23T13:52:39Z&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://issues.apache.org/jira/browse/CAMEL-10087&quot; title=&quot;camel-kafka does not work in OSGI container&quot; class=&quot;issue-link&quot; data-issue-key=&quot;CAMEL-10087&quot;&gt;&lt;del&gt;CAMEL-10087&lt;/del&gt;&lt;/a&gt; Fix for &lt;a href=&quot;https://issues.apache.org/jira/browse/KAFKA-3218&quot; title=&quot;Kafka-0.9.0.0 does not work as OSGi module&quot; class=&quot;issue-link&quot; data-issue-key=&quot;KAFKA-3218&quot;&gt;&lt;del&gt;KAFKA-3218&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;</comment>
                            <comment id="15347844" author="davsclaus" created="Fri, 24 Jun 2016 06:36:32 +0000"  >&lt;p&gt;There has been other fixes like &lt;a href=&quot;https://issues.apache.org/jira/browse/CAMEL-10069&quot; title=&quot;camel-kafka producer has problems loading serializers in OSGi&quot; class=&quot;issue-link&quot; data-issue-key=&quot;CAMEL-10069&quot;&gt;&lt;del&gt;CAMEL-10069&lt;/del&gt;&lt;/a&gt;. Can you try with latest code to see if &lt;a href=&quot;https://issues.apache.org/jira/browse/CAMEL-10069&quot; title=&quot;camel-kafka producer has problems loading serializers in OSGi&quot; class=&quot;issue-link&quot; data-issue-key=&quot;CAMEL-10069&quot;&gt;&lt;del&gt;CAMEL-10069&lt;/del&gt;&lt;/a&gt; resolves the issues. &lt;/p&gt;</comment>
                            <comment id="15348190" author="jmandawg" created="Fri, 24 Jun 2016 12:17:25 +0000"  >&lt;p&gt;Unfortunately, Latest code does not work, you can view the Kafka change i&apos;m trying to work around here.  &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/apache/kafka/blob/trunk/clients/src/main/java/org/apache/kafka/common/utils/Utils.java#L652&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/kafka/blob/trunk/clients/src/main/java/org/apache/kafka/common/utils/Utils.java#L652&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can see that if the Thead classloader is not null, it will use it, and since bundles run in different threads it won&apos;t be able to find the ProducerConfig and you will get an error like this:&lt;/p&gt;

&lt;p&gt;Exception in thread &quot;pool-136-thread-1&quot; java.lang.NoClassDefFoundError: Could not initialize class org.apache.kafka.clients.producer.ProducerConfig&lt;br/&gt;
at org.apache.kafka.clients.producer.KafkaProducer.&amp;lt;init&amp;gt;(KafkaProducer.java:194)&lt;/p&gt;

&lt;p&gt;To reproduce just create a kafka producer in Karaf, it will fail on bundle startup.&lt;/p&gt;</comment>
                            <comment id="15348374" author="jmandawg" created="Fri, 24 Jun 2016 14:45:23 +0000"  >&lt;p&gt;Just to follow up, i tested my patch into the 2.17.1 tag and it works fine, so i don&apos;t know if the changes from  &lt;a href=&quot;https://issues.apache.org/jira/browse/CAMEL-10069&quot; title=&quot;camel-kafka producer has problems loading serializers in OSGi&quot; class=&quot;issue-link&quot; data-issue-key=&quot;CAMEL-10069&quot;&gt;&lt;del&gt;CAMEL-10069&lt;/del&gt;&lt;/a&gt; are even necessary.&lt;/p&gt;

&lt;p&gt;The test involved listening on one kafka topic and routing the messages (text) to another kafka topic.&lt;/p&gt;</comment>
                            <comment id="15348398" author="dkulp" created="Fri, 24 Jun 2016 15:03:30 +0000"  >&lt;p&gt;The changes in &lt;a href=&quot;https://issues.apache.org/jira/browse/CAMEL-10069&quot; title=&quot;camel-kafka producer has problems loading serializers in OSGi&quot; class=&quot;issue-link&quot; data-issue-key=&quot;CAMEL-10069&quot;&gt;&lt;del&gt;CAMEL-10069&lt;/del&gt;&lt;/a&gt; are definitely necessary, particularly in combination with your patch.   With your change to null out the context class loader, there would be no way for Kafka to load any serializers or partitioners that are part of the application bundle and configured in via the properties.   It would only be able to load those that are part of the Kafka client bundle itself. &lt;/p&gt;</comment>
                            <comment id="15348405" author="jmandawg" created="Fri, 24 Jun 2016 15:07:32 +0000"  >&lt;p&gt;That is not correct, it will use the current class loader (which is what we want) if it is set to null.  Look at the kafka code here:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/apache/kafka/blob/trunk/clients/src/main/java/org/apache/kafka/common/utils/Utils.java#L652&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/kafka/blob/trunk/clients/src/main/java/org/apache/kafka/common/utils/Utils.java#L652&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Which will get the classloader from: &lt;/p&gt;

&lt;p&gt;Utils.class.getClassLoader();&lt;/p&gt;</comment>
                            <comment id="15348408" author="dkulp" created="Fri, 24 Jun 2016 15:13:50 +0000"  >&lt;p&gt;&lt;br/&gt;
The Utils.class.getClassLoader() would NOT contain any custom serializer or partitioner.   That would only contain the Kafka client provided versions of those.   Any classes that the application provides for those would be unavailable.&lt;/p&gt;</comment>
                            <comment id="15348436" author="jmandawg" created="Fri, 24 Jun 2016 15:35:52 +0000"  >&lt;p&gt;I can walk you through their code:&lt;/p&gt;

&lt;p&gt;For example when you Create producer it creates the serializers:&lt;/p&gt;

&lt;p&gt;this.keySerializer = config.getConfiguredInstance(ProducerConfig.KEY_SERIALIZER_CLASS_CONFIG,&lt;br/&gt;
                        Serializer.class);&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/apache/kafka/blob/trunk/clients/src/main/java/org/apache/kafka/clients/producer/KafkaProducer.java#L305&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/kafka/blob/trunk/clients/src/main/java/org/apache/kafka/clients/producer/KafkaProducer.java#L305&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Which calls into AbstractConfig.java&lt;br/&gt;
&lt;a href=&quot;https://github.com/apache/kafka/blob/trunk/clients/src/main/java/org/apache/kafka/common/config/AbstractConfig.java#L197&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/kafka/blob/trunk/clients/src/main/java/org/apache/kafka/common/config/AbstractConfig.java#L197&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Which calls into Utils.newInstance&lt;br/&gt;
&lt;a href=&quot;https://github.com/apache/kafka/blob/trunk/clients/src/main/java/org/apache/kafka/common/utils/Utils.java#L332&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/kafka/blob/trunk/clients/src/main/java/org/apache/kafka/common/utils/Utils.java#L332&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Which finally calls &lt;br/&gt;
Utils.getContextOrKafkaClassLoader()&lt;/p&gt;

&lt;p&gt;which uses the current classloader if it is set to null.  &lt;/p&gt;

&lt;p&gt;So as you can see serializers and partitioners are created by the Utils class.  &lt;/p&gt;

&lt;p&gt;Utils is inside the same bundle as all the Karaf stuff, that is why it needs to use the same class loader as Utils not of the calling thread.&lt;/p&gt;

</comment>
                            <comment id="15348439" author="jmandawg" created="Fri, 24 Jun 2016 15:37:38 +0000"  >&lt;p&gt;My mistake, i see you are talking about &quot;CUSTOM&quot; Serializers that aren&apos;t inside the Karaf package.  My apologies&lt;/p&gt;</comment>
                            <comment id="15348450" author="dkulp" created="Fri, 24 Jun 2016 15:49:01 +0000"  >&lt;p&gt;I understand that.  &lt;/p&gt;

&lt;p&gt;If my producer has is configured as:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
....to(&lt;span class=&quot;code-quote&quot;&gt;&quot;kafka:localhost:9999?topic=foo&amp;amp;serializerClass=com.dankulp.MySerializer&quot;&lt;/span&gt;)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;then that path above will NOT find my serializer.   It is not in the Kafka jar/bundle.   It&apos;s in MY application bundle which is currently the context classloader.   Thus, if you set the context classloader to null, then the changes for  &lt;a href=&quot;https://issues.apache.org/jira/browse/CAMEL-10069&quot; title=&quot;camel-kafka producer has problems loading serializers in OSGi&quot; class=&quot;issue-link&quot; data-issue-key=&quot;CAMEL-10069&quot;&gt;&lt;del&gt;CAMEL-10069&lt;/del&gt;&lt;/a&gt; are 100% necessary.&lt;/p&gt;

&lt;p&gt;Have you tried without your patch but WITH the CAMEL_10069 changes?   Is it the partitioner that its having problems loading?   I think if you add:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-quote&quot;&gt;&quot;&amp;amp;partioner=org.apache.kafka.clients.producer.internals.DefaultPartitioner&quot;&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;to the config, it may work.   For some reason, KafkaConfiguration isn&apos;t returning that default value for the partitioner like it is for the serializers.  &lt;/p&gt;</comment>
                            <comment id="15348495" author="jmandawg" created="Fri, 24 Jun 2016 16:16:05 +0000"  >&lt;p&gt;I&apos;m building camel-karaf from lastest 2.17.x -It is barfing on the serializer:&lt;/p&gt;

&lt;p&gt;org.apache.camel.RuntimeCamelException: org.apache.kafka.common.config.ConfigException: Invalid value org.apache.kafka.common.serialization.StringDeserializer f&lt;br/&gt;
or configuration value.deserializer: Class org.apache.kafka.common.serialization.StringDeserializer could not be found.&lt;br/&gt;
        at org.apache.camel.util.ObjectHelper.wrapRuntimeCamelException(ObjectHelper.java:1690)&lt;span class=&quot;error&quot;&gt;&amp;#91;97:org.apache.camel.camel-core:2.17.1&amp;#93;&lt;/span&gt;&lt;br/&gt;
        at org.apache.camel.spring.SpringCamelContext.onApplicationEvent(SpringCamelContext.java:138)&lt;span class=&quot;error&quot;&gt;&amp;#91;98:org.apache.camel.camel-spring:2.17.1&amp;#93;&lt;/span&gt;&lt;br/&gt;
        at org.apache.camel.spring.CamelContextFactoryBean.onApplicationEvent(CamelContextFactoryBean.java:340)&lt;span class=&quot;error&quot;&gt;&amp;#91;98:org.apache.camel.camel-spring:2.17.1&amp;#93;&lt;/span&gt;&lt;br/&gt;
        at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:96)[107:org.apache.servicem&lt;br/&gt;
ix.bundles.spring-context:3.2.14.RELEASE_1]&lt;br/&gt;
        at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:334)[107:org.apache.servicemix.bundles.sp&lt;br/&gt;
ring-context:3.2.14.RELEASE_1]&lt;br/&gt;
        at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:950)[107:org.apache.servicemix.bundles.s&lt;br/&gt;
pring-context:3.2.14.RELEASE_1]&lt;br/&gt;
        at org.springframework.osgi.context.support.AbstractOsgiBundleApplicationContext.finishRefresh(AbstractOsgiBundleApplicationContext.java:235)[112:org.sp&lt;br/&gt;
ringframework.osgi.core:1.2.1]&lt;br/&gt;
        at org.springframework.osgi.context.support.AbstractDelegatedExecutionApplicationContext$4.run(AbstractDelegatedExecutionApplicationContext.java:358)[11&lt;br/&gt;
2:org.springframework.osgi.core:1.2.1]&lt;br/&gt;
        at org.springframework.osgi.util.internal.PrivilegedUtils.executeWithCustomTCCL(PrivilegedUtils.java:85)&lt;span class=&quot;error&quot;&gt;&amp;#91;112:org.springframework.osgi.core:1.2.1&amp;#93;&lt;/span&gt;&lt;br/&gt;
        at org.springframework.osgi.context.support.AbstractDelegatedExecutionApplicationContext.completeRefresh(AbstractDelegatedExecutionApplicationContext.ja&lt;br/&gt;
va:320)&lt;span class=&quot;error&quot;&gt;&amp;#91;112:org.springframework.osgi.core:1.2.1&amp;#93;&lt;/span&gt;&lt;br/&gt;
        at org.springframework.osgi.extender.internal.dependencies.startup.DependencyWaiterApplicationContextExecutor$CompleteRefreshTask.run(DependencyWaiterAp&lt;br/&gt;
plicationContextExecutor.java:132)&lt;span class=&quot;error&quot;&gt;&amp;#91;113:org.springframework.osgi.extender:1.2.1&amp;#93;&lt;/span&gt;&lt;br/&gt;
        at java.lang.Thread.run(Thread.java:745)&lt;span class=&quot;error&quot;&gt;&amp;#91;:1.8.0_92-internal&amp;#93;&lt;/span&gt;&lt;br/&gt;
Caused by: org.apache.kafka.common.config.ConfigException: Invalid value org.apache.kafka.common.serialization.StringDeserializer for configuration value.deseri&lt;br/&gt;
alizer: Class org.apache.kafka.common.serialization.StringDeserializer could not be found.&lt;br/&gt;
        at org.apache.kafka.common.config.ConfigDef.parseType(ConfigDef.java:255)&lt;span class=&quot;error&quot;&gt;&amp;#91;149:wrap_mvn_org.apache.kafka_kafka-clients_0.9.0.1:0.0.0&amp;#93;&lt;/span&gt;&lt;br/&gt;
        at org.apache.kafka.common.config.ConfigDef.parse(ConfigDef.java:145)&lt;span class=&quot;error&quot;&gt;&amp;#91;149:wrap_mvn_org.apache.kafka_kafka-clients_0.9.0.1:0.0.0&amp;#93;&lt;/span&gt;&lt;br/&gt;
        at org.apache.kafka.common.config.AbstractConfig.&amp;lt;init&amp;gt;(AbstractConfig.java:49)&lt;span class=&quot;error&quot;&gt;&amp;#91;149:wrap_mvn_org.apache.kafka_kafka-clients_0.9.0.1:0.0.0&amp;#93;&lt;/span&gt;&lt;br/&gt;
        at org.apache.kafka.common.config.AbstractConfig.&amp;lt;init&amp;gt;(AbstractConfig.java:56)&lt;span class=&quot;error&quot;&gt;&amp;#91;149:wrap_mvn_org.apache.kafka_kafka-clients_0.9.0.1:0.0.0&amp;#93;&lt;/span&gt;&lt;br/&gt;
        at org.apache.kafka.clients.consumer.ConsumerConfig.&amp;lt;init&amp;gt;(ConsumerConfig.java:336)&lt;span class=&quot;error&quot;&gt;&amp;#91;149:wrap_mvn_org.apache.kafka_kafka-clients_0.9.0.1:0.0.0&amp;#93;&lt;/span&gt;&lt;br/&gt;
        at org.apache.kafka.clients.consumer.KafkaConsumer.&amp;lt;init&amp;gt;(KafkaConsumer.java:542)&lt;span class=&quot;error&quot;&gt;&amp;#91;149:wrap_mvn_org.apache.kafka_kafka-clients_0.9.0.1:0.0.0&amp;#93;&lt;/span&gt;&lt;br/&gt;
        at org.apache.kafka.clients.consumer.KafkaConsumer.&amp;lt;init&amp;gt;(KafkaConsumer.java:524)&lt;span class=&quot;error&quot;&gt;&amp;#91;149:wrap_mvn_org.apache.kafka_kafka-clients_0.9.0.1:0.0.0&amp;#93;&lt;/span&gt;&lt;br/&gt;
        at org.apache.camel.component.kafka.KafkaConsumer$KafkaFetchRecords.&amp;lt;init&amp;gt;(KafkaConsumer.java:97)&lt;span class=&quot;error&quot;&gt;&amp;#91;150:org.apache.camel.camel-kafka:2.17.2.SNAPSHOT&amp;#93;&lt;/span&gt;&lt;br/&gt;
        at org.apache.camel.component.kafka.KafkaConsumer.doStart(KafkaConsumer.java:67)&lt;span class=&quot;error&quot;&gt;&amp;#91;150:org.apache.camel.camel-kafka:2.17.2.SNAPSHOT&amp;#93;&lt;/span&gt;&lt;br/&gt;
        at org.apache.camel.support.ServiceSupport.start(ServiceSupport.java:61)&lt;span class=&quot;error&quot;&gt;&amp;#91;97:org.apache.camel.camel-core:2.17.1&amp;#93;&lt;/span&gt;&lt;br/&gt;
        at org.apache.camel.impl.DefaultCamelContext.startService(DefaultCamelContext.java:3269)&lt;span class=&quot;error&quot;&gt;&amp;#91;97:org.apache.camel.camel-core:2.17.1&amp;#93;&lt;/span&gt;&lt;br/&gt;
        at org.apache.camel.impl.DefaultCamelContext.doStartOrResumeRouteConsumers(DefaultCamelContext.java:3563)&lt;span class=&quot;error&quot;&gt;&amp;#91;97:org.apache.camel.camel-core:2.17.1&amp;#93;&lt;/span&gt;&lt;br/&gt;
        at org.apache.camel.impl.DefaultCamelContext.doStartRouteConsumers(DefaultCamelContext.java:3499)&lt;span class=&quot;error&quot;&gt;&amp;#91;97:org.apache.camel.camel-core:2.17.1&amp;#93;&lt;/span&gt;&lt;br/&gt;
        at org.apache.camel.impl.DefaultCamelContext.safelyStartRouteServices(DefaultCamelContext.java:3429)&lt;span class=&quot;error&quot;&gt;&amp;#91;97:org.apache.camel.camel-core:2.17.1&amp;#93;&lt;/span&gt;&lt;br/&gt;
        at org.apache.camel.impl.DefaultCamelContext.doStartOrResumeRoutes(DefaultCamelContext.java:3197)&lt;span class=&quot;error&quot;&gt;&amp;#91;97:org.apache.camel.camel-core:2.17.1&amp;#93;&lt;/span&gt;&lt;br/&gt;
        at org.apache.camel.impl.DefaultCamelContext.doStartCamel(DefaultCamelContext.java:3053)&lt;span class=&quot;error&quot;&gt;&amp;#91;97:org.apache.camel.camel-core:2.17.1&amp;#93;&lt;/span&gt;&lt;br/&gt;
        at org.apache.camel.impl.DefaultCamelContext.access$000(DefaultCamelContext.java:175)&lt;span class=&quot;error&quot;&gt;&amp;#91;97:org.apache.camel.camel-core:2.17.1&amp;#93;&lt;/span&gt;&lt;br/&gt;
        at org.apache.camel.impl.DefaultCamelContext$2.call(DefaultCamelContext.java:2848)&lt;span class=&quot;error&quot;&gt;&amp;#91;97:org.apache.camel.camel-core:2.17.1&amp;#93;&lt;/span&gt;&lt;br/&gt;
        at org.apache.camel.impl.DefaultCamelContext$2.call(DefaultCamelContext.java:2844)&lt;span class=&quot;error&quot;&gt;&amp;#91;97:org.apache.camel.camel-core:2.17.1&amp;#93;&lt;/span&gt;&lt;br/&gt;
        at org.apache.camel.impl.DefaultCamelContext.doWithDefinedClassLoader(DefaultCamelContext.java:2867)&lt;span class=&quot;error&quot;&gt;&amp;#91;97:org.apache.camel.camel-core:2.17.1&amp;#93;&lt;/span&gt;&lt;br/&gt;
        at org.apache.camel.impl.DefaultCamelContext.doStart(DefaultCamelContext.java:2844)&lt;span class=&quot;error&quot;&gt;&amp;#91;97:org.apache.camel.camel-core:2.17.1&amp;#93;&lt;/span&gt;&lt;br/&gt;
        at org.apache.camel.support.ServiceSupport.start(ServiceSupport.java:61)&lt;span class=&quot;error&quot;&gt;&amp;#91;97:org.apache.camel.camel-core:2.17.1&amp;#93;&lt;/span&gt;&lt;br/&gt;
        at org.apache.camel.impl.DefaultCamelContext.start(DefaultCamelContext.java:2813)&lt;span class=&quot;error&quot;&gt;&amp;#91;97:org.apache.camel.camel-core:2.17.1&amp;#93;&lt;/span&gt;&lt;br/&gt;
        at org.apache.camel.spring.SpringCamelContext.maybeStart(SpringCamelContext.java:270)&lt;span class=&quot;error&quot;&gt;&amp;#91;98:org.apache.camel.camel-spring:2.17.1&amp;#93;&lt;/span&gt;&lt;br/&gt;
        at org.apache.camel.spring.SpringCamelContext.onApplicationEvent(SpringCamelContext.java:136)&lt;span class=&quot;error&quot;&gt;&amp;#91;98:org.apache.camel.camel-spring:2.17.1&amp;#93;&lt;/span&gt;&lt;br/&gt;
        ... 10 more&lt;br/&gt;
2016-06-24 16:12:11,103 | INFO  | om-component-in] | AbstractCoordinator              | 149 - wrap_mvn_org.apache.kafka_kafka-clients_0.9.0.1 - 0.0.0 | Attempt&lt;br/&gt;
to heart beat failed since the group is rebalancing, try to re-join group.&lt;br/&gt;
2016-06-24 16:12:11,201 | INFO  | omponent-in-xml] | AbstractCoordinator              | 149 - wrap_mvn_org.apache.kafka_kafka-clients_0.9.0.1 - 0.0.0 | Marking&lt;br/&gt;
the coordinator 2147482646 dead.&lt;br/&gt;
2016-06-24 16:12:12,356 | INFO  | om-component-in] | AbstractCoordinator              | 149 - wrap_mvn_org.apache.kafka_kafka-clients_0.9.0.1 - 0.0.0 | Attempt&lt;br/&gt;
to heart beat failed since the group is rebalancing, try to re-join group.&lt;br/&gt;
2016-06-24 16:12:12,453 | INFO  | om-component-in] | AbstractCoordinator              | 149 - wrap_mvn_org.apache.kafka_kafka-clients_0.9.0.1 - 0.0.0 | Attempt&lt;br/&gt;
to heart beat failed since the group is rebalancing, try to re-join group.&lt;br/&gt;
2016-06-24 16:12:12,468 | INFO  | om-component-in] | AbstractCoordinator              | 149 - wrap_mvn_org.apache.kafka_kafka-clients_0.9.0.1 - 0.0.0 | Attempt&lt;br/&gt;
to heart beat failed since the group is rebalancing, try to re-join group.&lt;br/&gt;
2016-06-24 16:12:12,569 | INFO  | omponent-in-xml] | AbstractCoordinator              | 149 - wrap_mvn_org.apache.kafka_kafka-clients_0.9.0.1 - 0.0.0 | Attempt&lt;/p&gt;</comment>
                            <comment id="15348533" author="dkulp" created="Fri, 24 Jun 2016 16:28:19 +0000"  >&lt;p&gt;Any chance you could debug starting at line 84 of KafkaProducer?    In theory, the props file should have that string set to the StringDeserializer string which should then be replaced with the actual Class object that is found.   We search several classloaders to find that class.  &lt;/p&gt;</comment>
                            <comment id="15348560" author="dkulp" created="Fri, 24 Jun 2016 16:45:05 +0000"  >&lt;p&gt;Just did a test in Karaf using the latest 2.17.2-SNAPSHOT.   If I drop a simple blueprint route of:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-xml&quot;&gt;
&lt;span class=&quot;code-tag&quot;&gt;&amp;lt;?xml version=&lt;span class=&quot;code-quote&quot;&gt;&quot;1.0&quot;&lt;/span&gt; encoding=&lt;span class=&quot;code-quote&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;code-tag&quot;&gt;&amp;lt;blueprint xmlns=&lt;span class=&quot;code-quote&quot;&gt;&quot;http://www.osgi.org/xmlns/blueprint/v1.0.0&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;camelContext xmlns=&lt;span class=&quot;code-quote&quot;&gt;&quot;http://camel.apache.org/schema/blueprint&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;route&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;from uri=&lt;span class=&quot;code-quote&quot;&gt;&quot;timer:simple?period=5000&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;setBody&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;simple&amp;gt;&lt;/span&gt;Hello World&lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/simple&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/setBody&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;to uri=&lt;span class=&quot;code-quote&quot;&gt;&quot;kafka:localhost:9092?topic=camel&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/route&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/camelContext&amp;gt;&lt;/span&gt;
&lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/blueprint&amp;gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;into the deploy folder, the route works fine and I&apos;m getting &quot;Hello World&quot; via the kafka-console-consumer.&lt;/p&gt;</comment>
                            <comment id="15348772" author="jmandawg" created="Fri, 24 Jun 2016 22:11:49 +0000"  >&lt;p&gt;Sorry Jira was down for a long time...  I was able to debug, The problem is the consumer.  You only implemented the fix for the producer.  The consumer tries to create the following key classes:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
partition.assignment.strategy=org.apache.kafka.clients.consumer.RangeAssignor
key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I tried to implement your patch into the consumer, but it fails because it expects &quot;partition.assignment.strategy&quot; to be an array of strings.  &lt;/p&gt;

&lt;p&gt;I don&apos;t know how you can work around that without modifying the kafka code.&lt;/p&gt;

&lt;p&gt;For reference here what my route looks like:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-xml&quot;&gt;
        &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;route&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;from uri=&lt;span class=&quot;code-quote&quot;&gt;&quot;kafka:localhost:9092?topic=component-in&amp;amp;groupId=jman&amp;amp;autoOffsetReset=earliest&amp;amp;consumersCount=1&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;log message=&lt;span class=&quot;code-quote&quot;&gt;&quot;Received from Kafka ${body}&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;setHeader headerName=&lt;span class=&quot;code-quote&quot;&gt;&quot;kafka.PARTITION_KEY&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;constant&amp;gt;&lt;/span&gt;0&lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/constant&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/setHeader&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;setHeader headerName=&lt;span class=&quot;code-quote&quot;&gt;&quot;kafka.CONTENT_TYPE&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;constant&amp;gt;&lt;/span&gt;1&lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/constant&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/setHeader&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;to uri=&lt;span class=&quot;code-quote&quot;&gt;&quot;kafka:localhost:9092?topic=component-out&amp;amp;bridgeEndpoint=true&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/route&amp;gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

</comment>
                            <comment id="15348839" author="jmandawg" created="Fri, 24 Jun 2016 23:10:46 +0000"  >&lt;p&gt;Another option would be to use the simple fix (setting thread classloader to null before consumer/producer creation) and then if you want to create custom partitioners/serializers install them as a fragment bundle to kafka.&lt;/p&gt;</comment>
                            <comment id="15351262" author="jmandawg" created="Mon, 27 Jun 2016 15:41:15 +0000"  >&lt;p&gt;Daniel,&lt;/p&gt;

&lt;p&gt;Any idea how we should fix the consumer?  It should work with your patch and the one i submitted combined. &lt;/p&gt;</comment>
                            <comment id="15353234" author="jmandawg" created="Tue, 28 Jun 2016 15:34:06 +0000"  >&lt;p&gt;I see you implemented the fix.  But you did not add the deserializers for the consumer.  You need to add these keys in your updateClassProperties method:&lt;/p&gt;

&lt;p&gt;key.deserializer&lt;br/&gt;
value.deserializer&lt;/p&gt;

&lt;p&gt;btw, you should probably use the kafka constants as well:&lt;/p&gt;

&lt;p&gt;ConsumerConfig.KEY_DESERIALIZER_CLASS_CONFIG&lt;br/&gt;
ConsumerConfig.VALUE_DESERIALIZER_CLASS_CONFIG&lt;br/&gt;
ProducerConfig.KEY_SERIALIZER_CLASS_CONFIG&lt;br/&gt;
ProducerConfig.VALUE_SERIALIZER_CLASS_CONFIG&lt;/p&gt;

&lt;p&gt;I can open another PR if you want me to.&lt;/p&gt;

&lt;p&gt;-J&lt;/p&gt;</comment>
                            <comment id="15353236" author="githubbot" created="Tue, 28 Jun 2016 15:34:58 +0000"  >&lt;p&gt;Github user transamericamoon closed the pull request at:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/camel/pull/1049&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/camel/pull/1049&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="15353456" author="davsclaus" created="Tue, 28 Jun 2016 17:59:42 +0000"  >&lt;p&gt;Yeah a PR sounds good.&lt;/p&gt;</comment>
                            <comment id="15353606" author="jmandawg" created="Tue, 28 Jun 2016 19:49:42 +0000"  >&lt;p&gt;&lt;a href=&quot;https://github.com/apache/camel/pull/1053&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/camel/pull/1053&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="15355299" author="githubbot" created="Wed, 29 Jun 2016 14:06:31 +0000"  >&lt;p&gt;Github user jmandawg closed the pull request at:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/camel/pull/1053&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/camel/pull/1053&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="15355574" author="jmandawg" created="Wed, 29 Jun 2016 18:22:09 +0000"  >&lt;p&gt;Daniel,&lt;/p&gt;

&lt;p&gt;We need to put the same fix (setting classloader to null) for the Producer as well.  The kafka ProducerConfig has a static initializer that creates the DefaultPartiioner by default no matter what.&lt;/p&gt;

&lt;p&gt;Here is the kafka path:&lt;/p&gt;

&lt;p&gt;Static initializer:&lt;br/&gt;
&lt;a href=&quot;https://github.com/apache/kafka/blob/trunk/clients/src/main/java/org/apache/kafka/clients/producer/ProducerConfig.java#L293&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/kafka/blob/trunk/clients/src/main/java/org/apache/kafka/clients/producer/ProducerConfig.java#L293&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Defines default partitioner:&lt;br/&gt;
&lt;a href=&quot;https://github.com/apache/kafka/blob/trunk/clients/src/main/java/org/apache/kafka/common/config/ConfigDef.java#L110&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/kafka/blob/trunk/clients/src/main/java/org/apache/kafka/common/config/ConfigDef.java#L110&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Creates default instance of partitioner&lt;br/&gt;
&lt;a href=&quot;https://github.com/apache/kafka/blob/trunk/clients/src/main/java/org/apache/kafka/common/config/ConfigDef.java#L663&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/kafka/blob/trunk/clients/src/main/java/org/apache/kafka/common/config/ConfigDef.java#L663&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Since this is a static it only gets call on the first reference to the class, so it doesn&apos;t take into account what is  passed in from the camel-kafka producer.&lt;/p&gt;

&lt;p&gt;PR here:&lt;br/&gt;
&lt;a href=&quot;https://github.com/apache/camel/pull/1054&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/camel/pull/1054&lt;/a&gt;&lt;/p&gt;
</comment>
                            <comment id="15355611" author="githubbot" created="Wed, 29 Jun 2016 18:47:53 +0000"  >&lt;p&gt;GitHub user jmandawg opened a pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/camel/pull/1054&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/camel/pull/1054&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://issues.apache.org/jira/browse/CAMEL-10087&quot; title=&quot;camel-kafka does not work in OSGI container&quot; class=&quot;issue-link&quot; data-issue-key=&quot;CAMEL-10087&quot;&gt;&lt;del&gt;CAMEL-10087&lt;/del&gt;&lt;/a&gt; Fix for kafka partitioner static initializer in OSGI env&lt;/p&gt;

&lt;p&gt;    Sorry missed this:&lt;/p&gt;

&lt;p&gt;    We need to put the same fix (setting classloader to null) for the Producer as well. The kafka ProducerConfig has a static initializer that creates the DefaultPartiioner by default no matter what.&lt;br/&gt;
    Here is the kafka path:&lt;br/&gt;
    Static initializer:&lt;br/&gt;
    &lt;a href=&quot;https://github.com/apache/kafka/blob/trunk/clients/src/main/java/org/apache/kafka/clients/producer/ProducerConfig.java#L293&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/kafka/blob/trunk/clients/src/main/java/org/apache/kafka/clients/producer/ProducerConfig.java#L293&lt;/a&gt;&lt;br/&gt;
    Defines default partitioner:&lt;br/&gt;
    &lt;a href=&quot;https://github.com/apache/kafka/blob/trunk/clients/src/main/java/org/apache/kafka/common/config/ConfigDef.java#L110&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/kafka/blob/trunk/clients/src/main/java/org/apache/kafka/common/config/ConfigDef.java#L110&lt;/a&gt;&lt;br/&gt;
    Creates default instance of partitioner&lt;br/&gt;
    &lt;a href=&quot;https://github.com/apache/kafka/blob/trunk/clients/src/main/java/org/apache/kafka/common/config/ConfigDef.java#L663&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/kafka/blob/trunk/clients/src/main/java/org/apache/kafka/common/config/ConfigDef.java#L663&lt;/a&gt;&lt;br/&gt;
    Since this is a static it only gets call on the first reference to the class, so it doesn&apos;t take into account what is passed in from the camel-kafka producer.&lt;/p&gt;

&lt;p&gt;You can merge this pull request into a Git repository by running:&lt;/p&gt;

&lt;p&gt;    $ git pull &lt;a href=&quot;https://github.com/jmandawg/camel&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/jmandawg/camel&lt;/a&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/CAMEL-10087&quot; title=&quot;camel-kafka does not work in OSGI container&quot; class=&quot;issue-link&quot; data-issue-key=&quot;CAMEL-10087&quot;&gt;&lt;del&gt;CAMEL-10087&lt;/del&gt;&lt;/a&gt;-b&lt;/p&gt;

&lt;p&gt;Alternatively you can review and apply these changes as the patch at:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/camel/pull/1054.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/camel/pull/1054.patch&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To close this pull request, make a commit to your master/trunk branch&lt;br/&gt;
with (at least) the following in the commit message:&lt;/p&gt;

&lt;p&gt;    This closes #1054&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;commit 6c7ae2d4b8938ed60e2778536f7b92fa55cf1cff&lt;br/&gt;
Author: John Moon &amp;lt;john.moon@transamerica.com&amp;gt;&lt;br/&gt;
Date:   2016-06-29T18:44:55Z&lt;/p&gt;

&lt;p&gt;    Fix for kafka partitioner static initializer in OSGI env&lt;/p&gt;

&lt;hr /&gt;</comment>
                            <comment id="15358514" author="davsclaus" created="Fri, 1 Jul 2016 06:59:10 +0000"  >&lt;p&gt;Thanks for the PRs&lt;/p&gt;</comment>
                            <comment id="15358830" author="githubbot" created="Fri, 1 Jul 2016 11:36:35 +0000"  >&lt;p&gt;Github user jmandawg closed the pull request at:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/camel/pull/1054&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/camel/pull/1054&lt;/a&gt;&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12980204">CAMEL-10069</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 23 Jun 2016 13:55:27 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310060" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Estimated Complexity</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10060"><![CDATA[Unknown]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            22 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310041" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Patch Info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10042"><![CDATA[Patch Available]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2zz13:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>