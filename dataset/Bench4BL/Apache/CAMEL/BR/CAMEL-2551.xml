<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sat Dec 03 04:05:46 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/CAMEL-2551/CAMEL-2551.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[CAMEL-2551] File component does not correctly handle PipedInputStream in message body.</title>
                <link>https://issues.apache.org/jira/browse/CAMEL-2551</link>
                <project id="12311211" key="CAMEL">Camel</project>
                    <description>&lt;p&gt;Streams that do not have their contents length at immediate disposal, like PipedInputStream, are not processed correctly by the file component.&lt;/p&gt;

&lt;p&gt;&lt;br class=&quot;atl-forced-newline&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;    &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; void writeFileByStream(InputStream in, File target) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
        FileChannel out = &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;;
        &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
            out = prepareOutputFileChannel(target, out);

            &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (LOG.isTraceEnabled()) {
                LOG.trace(&lt;span class=&quot;code-quote&quot;&gt;&quot;Using InputStream to transfer from: &quot;&lt;/span&gt; + in + &lt;span class=&quot;code-quote&quot;&gt;&quot; to: &quot;&lt;/span&gt; + out);
            }
            &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; size = endpoint.getBufferSize();
            &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] buffer = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[size];
            ByteBuffer byteBuffer = ByteBuffer.wrap(buffer);
            &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; (&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;) {
                &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; count = in.read(buffer);
                &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (count &amp;lt;= 0) {
                    &lt;span class=&quot;code-keyword&quot;&gt;break&lt;/span&gt;;
                } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (count &amp;lt; size) {
                    byteBuffer = ByteBuffer.wrap(buffer, 0, count);
                    out.write(byteBuffer);
                    &lt;span class=&quot;code-keyword&quot;&gt;break&lt;/span&gt;;
                } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; {
                    out.write(byteBuffer);
                    byteBuffer.clear();
                }
            }
        } &lt;span class=&quot;code-keyword&quot;&gt;finally&lt;/span&gt; {
            ObjectHelper.close(in, target.getName(), LOG);
            ObjectHelper.close(out, target.getName(), LOG);
        }
    }

&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The code &lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;                } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (count &amp;lt; size) {
                    byteBuffer = ByteBuffer.wrap(buffer, 0, count);
                    out.write(byteBuffer);
                    &lt;span class=&quot;code-keyword&quot;&gt;break&lt;/span&gt;;
                } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;does not take into account that bytes read can be less than the size of the buffer passed into the InputStream.read method and stream can still have more content. The only indication that EOF was reached is -1 returned from the read method according to Java API.&lt;/p&gt;</description>
                <environment>&lt;p&gt;does not matter&lt;/p&gt;</environment>
        <key id="12487124">CAMEL-2551</key>
            <summary>File component does not correctly handle PipedInputStream in message body.</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="njiang">Willem Jiang</assignee>
                                    <reporter username="anydoby">Sergey Zolotaryov</reporter>
                        <labels>
                    </labels>
                <created>Mon, 15 Mar 2010 11:17:10 +0000</created>
                <updated>Sun, 24 Apr 2011 10:01:36 +0000</updated>
                            <resolved>Tue, 16 Mar 2010 12:06:25 +0000</resolved>
                                    <version>2.2.0</version>
                                    <fixVersion>2.3.0</fixVersion>
                                    <component>camel-core</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12955379" author="anydoby" created="Mon, 15 Mar 2010 11:18:09 +0000"  >&lt;p&gt;This is the patch which works ok for our project.&lt;/p&gt;</comment>
                            <comment id="12955384" author="anydoby" created="Mon, 15 Mar 2010 11:21:33 +0000"  >&lt;p&gt;Current workaround we have to use is the following:&lt;/p&gt;

&lt;p&gt;&lt;br class=&quot;atl-forced-newline&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;

        InputStream is = ....

        &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; InputStream camelBugWorkaround = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; InputStream()
        {

            @Override
            &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; read(&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] b, &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; off, &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; len) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException
            {
                &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; expectedMaxBytes = len;
                &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; read = 0;
                &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; totalRead = 0;
                &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; ((read = is.read(b, off, len)) != -1)
                {
                    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (read &amp;lt; len)
                    {
                        off += read;
                        len -= read;
                    }
                    totalRead += read;
                    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (totalRead == expectedMaxBytes)
                    {
                        &lt;span class=&quot;code-keyword&quot;&gt;break&lt;/span&gt;;
                    }
                }
                &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; totalRead == 0 ? -1 : totalRead;
            }

            @Override
            &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; read() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException
            {
                &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; is.read();
            }

            @Override
            &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void close() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException
            {
                is.close();
            }

            @Override
            &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; available() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException
            {
                &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; is.available();
            }

            @Override
            &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; skip(&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; n) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException
            {
                &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; is.skip(n);
            }

        };

        exchange.getOut().setBody(camelBugWorkaround);

&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Where &lt;em&gt;is&lt;/em&gt; is the PipedInputStream.&lt;/p&gt;</comment>
                            <comment id="12955395" author="davsclaus" created="Tue, 16 Mar 2010 05:03:27 +0000"  >&lt;p&gt;Sergey well spotted.&lt;/p&gt;

&lt;p&gt;Btw which use case do you use a PipedInputStream with?&lt;/p&gt;</comment>
                            <comment id="12955405" author="anydoby" created="Tue, 16 Mar 2010 12:01:30 +0000"  >&lt;p&gt;Hi Claus&lt;/p&gt;

&lt;p&gt;We use Camel for a downstream distribution product and one of the requirements is streaming of large amounts of data. The use case is bulk output of data - I put a db cursor into an Iterable, forward to a home made velocity component (out of the box velocity component writes to a String, which is not acceptable for us) - and it puts PipedInputStream as message body. A separate thread feeds the PipedOutputStream to velocity engine. Then when this stream is passed on to file component we get InputStream closed exception, because of the bug mentioned. For now I have to wrap PipedInputStream with a buffering stream, but if you include the fix, we will remove the workaround.&lt;/p&gt;</comment>
                            <comment id="12955386" author="davsclaus" created="Tue, 16 Mar 2010 12:06:17 +0000"  >&lt;p&gt;Sergey&lt;/p&gt;

&lt;p&gt;Thanks for taking the time to explain the use case. I was just wondering where the PipedInputStream came into the picture.&lt;br/&gt;
But its nice with some many different use cases people use Camel with.&lt;/p&gt;

&lt;p&gt;Willem have already committed your patch this morning:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/viewvc?rev=923583&amp;amp;view=rev&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewvc?rev=923583&amp;amp;view=rev&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13024548" author="davsclaus" created="Sun, 24 Apr 2011 10:01:36 +0000"  >&lt;p&gt;Closing all resolved tickets from 2010 or older&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12463194" name="patch.txt" size="1193" author="anydoby" created="Mon, 15 Mar 2010 11:18:09 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 16 Mar 2010 05:03:27 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>76493</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            5 years, 32 weeks, 5 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310041" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Patch Info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10042"><![CDATA[Patch Available]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i01p9z:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>7864</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>