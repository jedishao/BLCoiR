<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun Dec 04 00:45:51 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/CAMEL-1075/CAMEL-1075.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[CAMEL-1075] mina tcp: support for asyncronous InOut endpoint.</title>
                <link>https://issues.apache.org/jira/browse/CAMEL-1075</link>
                <project id="12311211" key="CAMEL">Camel</project>
                    <description>&lt;p&gt;Mina Component does not support async InOut connections. &lt;/p&gt;

&lt;p&gt;Many applications require two way or out only async tcp connections this is not supported.&lt;/p&gt;

&lt;p&gt;See a more full discussion on this here:&lt;br/&gt;
&lt;a href=&quot;http://www.nabble.com/Can-mina::tcp-do-asyncronous-bidirectional-messages--tc20431804s22882.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.nabble.com/Can-mina::tcp-do-asyncronous-bidirectional-messages--tc20431804s22882.html&lt;/a&gt;&lt;/p&gt;</description>
                <environment>&lt;p&gt;All.&lt;/p&gt;</environment>
        <key id="12486064">CAMEL-1075</key>
            <summary>mina tcp: support for asyncronous InOut endpoint.</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                            <parent id="12486106">CAMEL-1077</parent>
                                    <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="3">Duplicate</resolution>
                                        <assignee username="cabeaulac">Chad Beaulac</assignee>
                                    <reporter username="jeff_v">Jeff Vienneau</reporter>
                        <labels>
                    </labels>
                <created>Tue, 11 Nov 2008 16:13:49 +0000</created>
                <updated>Thu, 2 May 2013 02:29:35 +0000</updated>
                            <resolved>Tue, 3 Jan 2012 13:17:21 +0000</resolved>
                                    <version>1.0.0</version>
                    <version>1.1.0</version>
                    <version>1.2.0</version>
                    <version>1.3.0</version>
                    <version>1.4.0</version>
                    <version>1.5.0</version>
                                    <fixVersion>Future</fixVersion>
                                    <component>camel-mina</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12949558" author="davsclaus" created="Tue, 11 Nov 2008 19:15:23 +0000"  >&lt;p&gt;Hi Jeff&lt;/p&gt;

&lt;p&gt;I still don&apos;t get what you think is needed.&lt;/p&gt;

&lt;p&gt;aysync InOut, how is that possible? Isn&apos;t it contradictorily (opposite of each other). &lt;/p&gt;

&lt;p&gt;&lt;b&gt;InOut&lt;/b&gt; (option sync=true)&lt;br/&gt;
Camel support both client and server&lt;/p&gt;

&lt;p&gt;#1&lt;br/&gt;
Server: Camel exposes a TCP listener. This listener will wait for requests and send a reply to the caller (in out)&lt;/p&gt;

&lt;p&gt;#2&lt;br/&gt;
Client: Camel calls an external TCP server and sends a request and waits for a reply (in out)&lt;/p&gt;


&lt;p&gt;&lt;b&gt;InOnly&lt;/b&gt; (option sync=false)&lt;br/&gt;
Camel support both client and server&lt;/p&gt;

&lt;p&gt;#3&lt;br/&gt;
Server: Camel exposes a TCP listener. This listener will wait for requests and &lt;b&gt;not&lt;/b&gt; send a reply to the caller (in only). Note: The client is supposed to not wait for a reply.&lt;/p&gt;

&lt;p&gt;#4&lt;br/&gt;
Client: Camel calls an external TCP server and sends a request and do &lt;b&gt;not&lt;/b&gt; waits for a reply (in only)&lt;/p&gt;

&lt;p&gt;This can be used for instance as a TCP logger server, where clients can send logs to the TCP server.&lt;/p&gt;

&lt;p&gt;What am I missing in the picture?&lt;/p&gt;</comment>
                            <comment id="12949559" author="jeff_v" created="Wed, 12 Nov 2008 16:18:09 +0000"  >&lt;h4&gt;&lt;a name=&quot;Inthecaseof%3Atcp%2Cmode%3Dserver%3Bsync%3Dfalse%3A&quot;&gt;&lt;/a&gt;In the case of:  tcp,mode=server;sync=false:&lt;/h4&gt;
&lt;h5&gt;&lt;a name=&quot;NotConnected&quot;&gt;&lt;/a&gt;Not Connected&lt;/h5&gt;
&lt;p&gt;Listener is waiting for connections&lt;br/&gt;
Outbound - messages are discarded.&lt;br/&gt;
Inbound - messages do not occur. (camel is waiting for producer to produce message)&lt;/p&gt;

&lt;h5&gt;&lt;a name=&quot;Connected&quot;&gt;&lt;/a&gt;Connected&lt;/h5&gt;
&lt;p&gt;Outbound - messages are send over socket&lt;br/&gt;
Inbound - data coming from client is converted to messages and sent through producer to camel&lt;/p&gt;

&lt;h4&gt;&lt;a name=&quot;Inthecaseof%3Atcp.mode%3Dclient%3Bsync%3Dfalse%3A&quot;&gt;&lt;/a&gt;In the case of:  tcp.mode=client;sync=false:&lt;/h4&gt;
&lt;p&gt;A connection is made to client at startup when consumer is created. (Also, it would need to be re-established if connection is lost.)&lt;br/&gt;
Outbound - messages are sent over socket&lt;br/&gt;
Inbound - data coming from remote server is converted to messages and sent through producer to camel&lt;/p&gt;

&lt;p&gt;Further to the logging example above, what if you want to &lt;b&gt;be the client&lt;/b&gt; posting logs to another system?&lt;/p&gt;
</comment>
                            <comment id="12949658" author="davsclaus" created="Wed, 12 Nov 2008 17:45:01 +0000"  >&lt;p&gt;Jeff I posted 4 scenarios above I will re-edit to make them stand out.&lt;/p&gt;</comment>
                            <comment id="12949583" author="davsclaus" created="Wed, 12 Nov 2008 17:49:05 +0000"  >&lt;p&gt;&amp;gt; Further to the logging example above, what if you want to be the client posting logs to another system?&lt;br/&gt;
This is excatly what #4 does.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
producerTemplate.sendBody(&lt;span class=&quot;code-quote&quot;&gt;&quot;mina:tcp:&lt;span class=&quot;code-comment&quot;&gt;//externalserver:1234?sync=&lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;&amp;amp;textline=&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;Hello World&quot;&lt;/span&gt;);&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In the code above we send the text &quot;Hello World&quot; from Camel (where we is a client) to an external system (the externalserver) using TCP on port 1234. We use sync=false as we as the client do not want to wait for a response from the external server.&lt;/p&gt;</comment>
                            <comment id="12949657" author="jeff_v" created="Wed, 12 Nov 2008 20:26:16 +0000"  >&lt;p&gt;Thanks Claus,&lt;/p&gt;

&lt;p&gt;Can I do that in XML to route messages?&lt;/p&gt;

&lt;p&gt;None the less, my needs are to be able to open a tcp socket and have two way async message flow over that same socket. I suggest others would be interested in this as well.&lt;/p&gt;

&lt;p&gt;Re: #3 it would be useful if Camel could expose a listener and the send messages to the client once the connection is established.&lt;/p&gt;

&lt;p&gt;Re: #4 it would be useful if Camel could connect to a server and receive messages from the server.&lt;/p&gt;</comment>
                            <comment id="12949551" author="davsclaus" created="Thu, 13 Nov 2008 12:32:02 +0000"  >&lt;p&gt;Jeff,&lt;/p&gt;

&lt;p&gt;Yes all the routing can be done with Spring DSL (XML) eg:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-xml&quot;&gt;
&lt;span class=&quot;code-tag&quot;&gt;&amp;lt;route&amp;gt;&lt;/span&gt;
   &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;from uri=&lt;span class=&quot;code-quote&quot;&gt;&quot;mina:tcp://localhost:1234?sync=false&amp;amp;textline=true&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;
   &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;to uri=&lt;span class=&quot;code-quote&quot;&gt;&quot;log:logRequest&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/route&amp;gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This route above could be the TCP lister as example #3.&lt;/p&gt;</comment>
                            <comment id="12949622" author="davsclaus" created="Thu, 13 Nov 2008 12:35:40 +0000"  >&lt;p&gt;&amp;gt; Re: #3 it would be useful if Camel could expose a listener and the send messages to the client once the connection is established.&lt;br/&gt;
See the route above with the Spring DSL (XML). What do you mean with &lt;b&gt;once the connection is established&lt;/b&gt;? If you need more control of the listener you can use plain Apahca Mina that gives your plenty of options. &lt;/p&gt;

&lt;p&gt;Re: #4 it would be useful if Camel could connect to a server and receive messages from the server.&lt;br/&gt;
Such as this sample below where we send a request to the externalserver on TCP port 1234 with the text &quot;Hello World&quot; and waits for a response.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt; out = producerTemplate.requestBody(&lt;span class=&quot;code-quote&quot;&gt;&quot;mina:tcp:&lt;span class=&quot;code-comment&quot;&gt;//externalserver:1234?sync=&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;&amp;amp;textline=&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;Hello World&quot;&lt;/span&gt;);
&lt;/span&gt;&lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println(out);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;And the out is the response from the server such as &quot;Bye World&quot;&lt;/p&gt;

&lt;p&gt;See the mina documentation at:&lt;br/&gt;
&lt;a href=&quot;http://activemq.apache.org/camel/mina.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://activemq.apache.org/camel/mina.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And then try for yourself, it&apos;s about time you started &quot;asking the computer&quot; and get some hands on experience. Camel is very fast for rapid prototyping.&lt;/p&gt;</comment>
                            <comment id="12949595" author="jeff_v" created="Fri, 14 Nov 2008 14:19:41 +0000"  >&lt;p&gt;Re: #4, We&apos;re talking: &quot;connect to a server and receive massages&quot;, not connect to a server and send &quot;Hello World&quot; and wait for a response, that&apos;s &lt;b&gt;syncronous&lt;/b&gt;. &lt;/p&gt;

&lt;p&gt;I&apos;m talking &lt;b&gt;asyncronous&lt;/b&gt;. Connect to a server, leave the connection open and if it sends a message, route the message, otherwise keep the socket alive and keep waiting.&lt;/p&gt;

&lt;p&gt;We know the system can do InOut syncronous. but what I am talking about is: &lt;b&gt;Two way&lt;/b&gt; message routing of &lt;b&gt;asyncronous&lt;/b&gt; messages irrespective of the means to establish the connection.&lt;/p&gt;

&lt;p&gt;With all due respect, I have been prototyping and reading the code. You are misinterpreting me.&lt;/p&gt;

&lt;p&gt;I am trying to point out a need that I have with the system that is lacking for the greater good of Camel Mina. I will be solving my problem with a hand cobbled component, but I just wanted to point out the issue. If I end up with something of quality I will post it in the forum.&lt;/p&gt;</comment>
                            <comment id="12949647" author="davsclaus" created="Sat, 15 Nov 2008 09:26:24 +0000"  >&lt;p&gt;Sorry Jeff. I got it now. &lt;/p&gt;

&lt;p&gt;This use-case that you state last isn&apos;t something I have stumbled into in my 10+ years in the field. Usually messaging is used for that kind of use-case.&lt;/p&gt;

&lt;p&gt;Yeah we love contributions so if you crank up something usable please feel free to post it on the forum.&lt;br/&gt;
&lt;a href=&quot;http://activemq.apache.org/camel/contributing.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://activemq.apache.org/camel/contributing.html&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12950210" author="ylecaillez" created="Tue, 23 Dec 2008 16:22:17 +0000"  >&lt;p&gt;I&apos;m really new to camel so my point is perhaps totally wrong but ...&lt;br/&gt;
In fact, i had excatly the same problem. I have a custom server which bind to a socket and wait for some client to connect. Once connected, server and client can exchange messages but not in a request/reply way. Each end could send message to the other end from its own authority.&lt;/p&gt;

&lt;p&gt;When i discovered the (great) camel, i firstly thought i would be able to re-implement my custom server (based on mina) completly using apache camel and i fall in the same &quot;trap&quot; than you. From what i understood of camel your problem isn&apos;t solvable in that way. I mean you cannot use the mina component in that way. And as you said, you have to implement a custom component.&lt;/p&gt;

&lt;p&gt;So i wrote my own &quot;customserver&quot; component (so easily, thanks to camel great API). Rather than doing  from(&quot;mina:tcp//...&quot;) (which cause the problem of the communication from server -&amp;gt; client in a non request/reply scenario) i&apos;m currently doing a from(&quot;customserver://serverName&quot;) and a to(&quot;customserver://serverName&quot;). My server is registered into the camel registry using spring and is known as &quot;serverName&quot;.&lt;br/&gt;
Then from the consumer part of my component i fetch the server instance (using uri and registry) and add a listener to it (my consumer component is then listening for incoming message from my custom server. In fact, client messages). On the producer part i&apos;m listening for incoming message from camel. When message arrives i simply forward them to the &quot;myServer&quot; instance.&lt;/p&gt;

&lt;p&gt;The problem of mapping message to client is done by an internal clientID which is set on the header of each messages.&lt;/p&gt;

&lt;p&gt;I don&apos;t had time yet to test my implementation, but it should work.&lt;/p&gt;

&lt;p&gt;Hope that helps you.&lt;/p&gt;



</comment>
                            <comment id="12952276" author="davsclaus" created="Mon, 25 May 2009 13:00:00 +0000"  >&lt;p&gt;Yannick, thanks for reporting your experience and the layout of your solution.&lt;/p&gt;</comment>
                            <comment id="12952720" author="davsclaus" created="Thu, 12 Nov 2009 19:47:01 +0000"  >&lt;p&gt;With &lt;a href=&quot;https://issues.apache.org/jira/browse/CAMEL-2151&quot; title=&quot;Introduce asyncTo in the DSL to support non blocking request/reply conversations&quot; class=&quot;issue-link&quot; data-issue-key=&quot;CAMEL-2151&quot;&gt;&lt;del&gt;CAMEL-2151&lt;/del&gt;&lt;/a&gt; we have the pieces in camel-core for the foundation for async request/reply.&lt;/p&gt;

&lt;p&gt;When we upgrade to Mina 2.0 (when its GA) then Mina itself should have some support for this as well AFAIR&lt;/p&gt;</comment>
                            <comment id="12953531" author="davsclaus" created="Fri, 20 Nov 2009 07:34:52 +0000"  >&lt;p&gt;Requires Mina 2.0&lt;/p&gt;</comment>
                            <comment id="12954473" author="davsclaus" created="Tue, 19 Jan 2010 17:16:23 +0000"  >&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;18:14&amp;#93;&lt;/span&gt;  &amp;lt;jgenender&amp;gt; cibsen: Hehe... you need to get creative on that &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;18:15&amp;#93;&lt;/span&gt;  &amp;lt;jgenender&amp;gt; cibsen: I used Hashmaps with message ID s&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;18:15&amp;#93;&lt;/span&gt;  &amp;lt;jgenender&amp;gt; cibsen: Many ways to do it&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;18:15&amp;#93;&lt;/span&gt;  &amp;lt;cibsen&amp;gt; and the message ids then have to part of the data send over the wire?&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;18:15&amp;#93;&lt;/span&gt;  &amp;lt;jgenender&amp;gt; cibsen: You can do it via session id&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;18:15&amp;#93;&lt;/span&gt;  &amp;lt;cibsen&amp;gt; what if I use some old custom text based protocol which does not offer a field for that&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;18:16&amp;#93;&lt;/span&gt;  &amp;lt;jgenender&amp;gt; The socket session is unique&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;18:16&amp;#93;&lt;/span&gt;  &amp;lt;cibsen&amp;gt; ah cool that is what I liked to hear&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;18:16&amp;#93;&lt;/span&gt;  &amp;lt;cibsen&amp;gt; yeah then a map is sufficient&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;18:16&amp;#93;&lt;/span&gt;  &amp;lt;jgenender&amp;gt; So create a Hashmap that correlates teh session id (the socket) to information on the client and you have what you need&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;18:16&amp;#93;&lt;/span&gt;  &amp;lt;jgenender&amp;gt; You can even create state and store it in the hashmap&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;18:16&amp;#93;&lt;/span&gt;  &amp;lt;cibsen&amp;gt; &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; like it already&lt;/p&gt;</comment>
                            <comment id="12952543" author="davsclaus" created="Thu, 8 Jul 2010 18:04:40 +0000"  >&lt;p&gt;camel-netty producer is now fully non blocking async&lt;/p&gt;</comment>
                            <comment id="12982322" author="davsclaus" created="Sun, 16 Jan 2011 15:38:33 +0000"  >&lt;p&gt;We will work on this when we have upgraded to use Mina 2.0.x. There is a ticket about this.&lt;/p&gt;</comment>
                            <comment id="13178722" author="cabeaulac" created="Tue, 3 Jan 2012 13:17:21 +0000"  >&lt;p&gt;Dup of &lt;a href=&quot;https://issues.apache.org/jira/browse/CAMEL-2624&quot; title=&quot;support for async responses on single tcp connection&quot; class=&quot;issue-link&quot; data-issue-key=&quot;CAMEL-2624&quot;&gt;CAMEL-2624&lt;/a&gt;&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310000">
                    <name>Duplicate</name>
                                            <outwardlinks description="duplicates">
                                        <issuelink>
            <issuekey id="12486095">CAMEL-2624</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10001">
                    <name>dependent</name>
                                            <outwardlinks description="depends upon">
                                        <issuelink>
            <issuekey id="12486875">CAMEL-2151</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12494205">CAMEL-3471</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 11 Nov 2008 19:15:23 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>103497</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            4 years, 48 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i01g6f:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>6390</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>