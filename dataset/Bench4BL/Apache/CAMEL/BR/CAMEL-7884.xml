<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sat Dec 03 04:58:11 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/CAMEL-7884/CAMEL-7884.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[CAMEL-7884] camel-netty4-http does not work for HTTP POST requests on routingSlip</title>
                <link>https://issues.apache.org/jira/browse/CAMEL-7884</link>
                <project id="12311211" key="CAMEL">Camel</project>
                    <description>&lt;p&gt;I tried to add the camel-netty4-http component to a proper working project that uses camel-netty-http.&lt;br/&gt;
HTTP GET requests are working properly but POST requests are not working.&lt;br/&gt;
It might be an issue in Netty but I could not find a solution to get it to work.&lt;br/&gt;
Here is the exception I see:&lt;br/&gt;
2014-10-01 09:12:18,012 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;042ase_1412143933559.data&amp;#93;&lt;/span&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;n.s.ehcache.store.disk.Segment&amp;#93;&lt;/span&gt;     fault removed 0 from heap&lt;br/&gt;
2014-10-01 09:12:18,012 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;042ase_1412143933559.data&amp;#93;&lt;/span&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;n.s.ehcache.store.disk.Segment&amp;#93;&lt;/span&gt;     fault added 0 on disk&lt;br/&gt;
2014-10-01 09:12:18,012 TRACE &lt;span class=&quot;error&quot;&gt;&amp;#91;pool-1-thread-1          &amp;#93;&lt;/span&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;o.a.c.i.c.DefaultTypeConverter&amp;#93;&lt;/span&gt;     Converting io.netty.util.IllegalReferenceCountException -&amp;gt; java.lang.Throwable with value: {}&lt;br/&gt;
io.netty.util.IllegalReferenceCountException: refCnt: 0&lt;br/&gt;
	at io.netty.buffer.AbstractByteBuf.ensureAccessible(AbstractByteBuf.java:1187) ~&lt;span class=&quot;error&quot;&gt;&amp;#91;netty-buffer-4.0.23.Final.jar:4.0.23.Final&amp;#93;&lt;/span&gt;&lt;br/&gt;
	at io.netty.buffer.AbstractByteBuf.checkReadableBytes(AbstractByteBuf.java:1170) ~&lt;span class=&quot;error&quot;&gt;&amp;#91;netty-buffer-4.0.23.Final.jar:4.0.23.Final&amp;#93;&lt;/span&gt;&lt;br/&gt;
	at io.netty.buffer.AbstractByteBuf.readBytes(AbstractByteBuf.java:676) ~&lt;span class=&quot;error&quot;&gt;&amp;#91;netty-buffer-4.0.23.Final.jar:4.0.23.Final&amp;#93;&lt;/span&gt;&lt;br/&gt;
	at io.netty.buffer.CompositeByteBuf.readBytes(CompositeByteBuf.java:1461) ~&lt;span class=&quot;error&quot;&gt;&amp;#91;netty-buffer-4.0.23.Final.jar:4.0.23.Final&amp;#93;&lt;/span&gt;&lt;br/&gt;
	at io.netty.buffer.CompositeByteBuf.readBytes(CompositeByteBuf.java:40) ~&lt;span class=&quot;error&quot;&gt;&amp;#91;netty-buffer-4.0.23.Final.jar:4.0.23.Final&amp;#93;&lt;/span&gt;&lt;br/&gt;
	at org.apache.camel.component.netty4.http.NettyChannelBufferStreamCache.read(NettyChannelBufferStreamCache.java:69) ~&lt;span class=&quot;error&quot;&gt;&amp;#91;camel-netty4-http-2.14.0.jar:2.14.0&amp;#93;&lt;/span&gt;&lt;br/&gt;
	at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284) ~&lt;span class=&quot;error&quot;&gt;&amp;#91;na:1.8.0&amp;#93;&lt;/span&gt;&lt;br/&gt;
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326) ~&lt;span class=&quot;error&quot;&gt;&amp;#91;na:1.8.0&amp;#93;&lt;/span&gt;&lt;br/&gt;
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178) ~&lt;span class=&quot;error&quot;&gt;&amp;#91;na:1.8.0&amp;#93;&lt;/span&gt;&lt;br/&gt;
	at java.io.InputStreamReader.read(InputStreamReader.java:184) ~&lt;span class=&quot;error&quot;&gt;&amp;#91;na:1.8.0&amp;#93;&lt;/span&gt;&lt;br/&gt;
	at java.io.BufferedReader.fill(BufferedReader.java:161) ~&lt;span class=&quot;error&quot;&gt;&amp;#91;na:1.8.0&amp;#93;&lt;/span&gt;&lt;br/&gt;
	at java.io.BufferedReader.read1(BufferedReader.java:212) ~&lt;span class=&quot;error&quot;&gt;&amp;#91;na:1.8.0&amp;#93;&lt;/span&gt;&lt;br/&gt;
	at java.io.BufferedReader.read(BufferedReader.java:286) ~&lt;span class=&quot;error&quot;&gt;&amp;#91;na:1.8.0&amp;#93;&lt;/span&gt;&lt;br/&gt;
	at java.io.Reader.read(Reader.java:140) ~&lt;span class=&quot;error&quot;&gt;&amp;#91;na:1.8.0&amp;#93;&lt;/span&gt;&lt;br/&gt;
	at org.apache.camel.converter.IOConverter.toString(IOConverter.java:304) ~&lt;span class=&quot;error&quot;&gt;&amp;#91;camel-core-2.14.0.jar:2.14.0&amp;#93;&lt;/span&gt;&lt;br/&gt;
	at org.apache.camel.converter.IOConverter.toString(IOConverter.java:290) ~&lt;span class=&quot;error&quot;&gt;&amp;#91;camel-core-2.14.0.jar:2.14.0&amp;#93;&lt;/span&gt;&lt;br/&gt;
	at org.apache.camel.converter.IOConverter.toString(IOConverter.java:351) ~&lt;span class=&quot;error&quot;&gt;&amp;#91;camel-core-2.14.0.jar:2.14.0&amp;#93;&lt;/span&gt;&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~&lt;span class=&quot;error&quot;&gt;&amp;#91;na:1.8.0&amp;#93;&lt;/span&gt;&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~&lt;span class=&quot;error&quot;&gt;&amp;#91;na:1.8.0&amp;#93;&lt;/span&gt;&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~&lt;span class=&quot;error&quot;&gt;&amp;#91;na:1.8.0&amp;#93;&lt;/span&gt;&lt;br/&gt;
	at java.lang.reflect.Method.invoke(Method.java:483) ~&lt;span class=&quot;error&quot;&gt;&amp;#91;na:1.8.0&amp;#93;&lt;/span&gt;&lt;br/&gt;
	at org.apache.camel.util.ObjectHelper.invokeMethod(ObjectHelper.java:1002) ~&lt;span class=&quot;error&quot;&gt;&amp;#91;camel-core-2.14.0.jar:2.14.0&amp;#93;&lt;/span&gt;&lt;br/&gt;
	at org.apache.camel.impl.converter.StaticMethodTypeConverter.convertTo(StaticMethodTypeConverter.java:59) ~&lt;span class=&quot;error&quot;&gt;&amp;#91;camel-core-2.14.0.jar:2.14.0&amp;#93;&lt;/span&gt;&lt;br/&gt;
	at org.apache.camel.impl.converter.BaseTypeConverterRegistry.doConvertTo(BaseTypeConverterRegistry.java:276) ~&lt;span class=&quot;error&quot;&gt;&amp;#91;camel-core-2.14.0.jar:2.14.0&amp;#93;&lt;/span&gt;&lt;br/&gt;
	at org.apache.camel.impl.converter.BaseTypeConverterRegistry.mandatoryConvertTo(BaseTypeConverterRegistry.java:165) ~&lt;span class=&quot;error&quot;&gt;&amp;#91;camel-core-2.14.0.jar:2.14.0&amp;#93;&lt;/span&gt;&lt;br/&gt;
	at org.apache.camel.impl.MessageSupport.getMandatoryBody(MessageSupport.java:99) ~&lt;span class=&quot;error&quot;&gt;&amp;#91;camel-core-2.14.0.jar:2.14.0&amp;#93;&lt;/span&gt;&lt;br/&gt;
	at org.apache.camel.builder.ExpressionBuilder$41.evaluate(ExpressionBuilder.java:1011) ~&lt;span class=&quot;error&quot;&gt;&amp;#91;camel-core-2.14.0.jar:2.14.0&amp;#93;&lt;/span&gt;&lt;br/&gt;
	at org.apache.camel.support.ExpressionAdapter.evaluate(ExpressionAdapter.java:36) ~&lt;span class=&quot;error&quot;&gt;&amp;#91;camel-core-2.14.0.jar:2.14.0&amp;#93;&lt;/span&gt;&lt;br/&gt;
	at org.apache.camel.component.bean.MethodInfo$2.evaluateParameterBinding(MethodInfo.java:595) ~&lt;span class=&quot;error&quot;&gt;&amp;#91;camel-core-2.14.0.jar:2.14.0&amp;#93;&lt;/span&gt;&lt;br/&gt;
	at org.apache.camel.component.bean.MethodInfo$2.evaluate(MethodInfo.java:485) ~&lt;span class=&quot;error&quot;&gt;&amp;#91;camel-core-2.14.0.jar:2.14.0&amp;#93;&lt;/span&gt;&lt;br/&gt;
	at org.apache.camel.component.bean.MethodInfo.createMethodInvocation(MethodInfo.java:240) ~&lt;span class=&quot;error&quot;&gt;&amp;#91;camel-core-2.14.0.jar:2.14.0&amp;#93;&lt;/span&gt;&lt;br/&gt;
	at org.apache.camel.component.bean.BeanInfo.createInvocation(BeanInfo.java:280) ~&lt;span class=&quot;error&quot;&gt;&amp;#91;camel-core-2.14.0.jar:2.14.0&amp;#93;&lt;/span&gt;&lt;br/&gt;
	at org.apache.camel.component.bean.BeanInfo.createInvocation(BeanInfo.java:180) ~&lt;span class=&quot;error&quot;&gt;&amp;#91;camel-core-2.14.0.jar:2.14.0&amp;#93;&lt;/span&gt;&lt;br/&gt;
	at org.apache.camel.component.bean.BeanProcessor.process(BeanProcessor.java:149) ~&lt;span class=&quot;error&quot;&gt;&amp;#91;camel-core-2.14.0.jar:2.14.0&amp;#93;&lt;/span&gt;&lt;br/&gt;
	at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:398) ~&lt;span class=&quot;error&quot;&gt;&amp;#91;camel-core-2.14.0.jar:2.14.0&amp;#93;&lt;/span&gt;&lt;br/&gt;
	at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:191) &lt;span class=&quot;error&quot;&gt;&amp;#91;camel-core-2.14.0.jar:2.14.0&amp;#93;&lt;/span&gt;&lt;br/&gt;
	at org.apache.camel.processor.Pipeline.process(Pipeline.java:118) &lt;span class=&quot;error&quot;&gt;&amp;#91;camel-core-2.14.0.jar:2.14.0&amp;#93;&lt;/span&gt;&lt;br/&gt;
	at org.apache.camel.processor.Pipeline.access$100(Pipeline.java:43) &lt;span class=&quot;error&quot;&gt;&amp;#91;camel-core-2.14.0.jar:2.14.0&amp;#93;&lt;/span&gt;&lt;br/&gt;
	at org.apache.camel.processor.Pipeline$1.done(Pipeline.java:136) &lt;span class=&quot;error&quot;&gt;&amp;#91;camel-core-2.14.0.jar:2.14.0&amp;#93;&lt;/span&gt;&lt;br/&gt;
	at org.apache.camel.processor.CamelInternalProcessor$InternalCallback.done(CamelInternalProcessor.java:251) &lt;span class=&quot;error&quot;&gt;&amp;#91;camel-core-2.14.0.jar:2.14.0&amp;#93;&lt;/span&gt;&lt;br/&gt;
	at org.apache.camel.processor.RedeliveryErrorHandler$1.done(RedeliveryErrorHandler.java:410) &lt;span class=&quot;error&quot;&gt;&amp;#91;camel-core-2.14.0.jar:2.14.0&amp;#93;&lt;/span&gt;&lt;/p&gt;</description>
                <environment></environment>
        <key id="12745174">CAMEL-7884</key>
            <summary>camel-netty4-http does not work for HTTP POST requests on routingSlip</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="davsclaus">Claus Ibsen</assignee>
                                    <reporter username="yaronab">Yaron A</reporter>
                        <labels>
                    </labels>
                <created>Wed, 1 Oct 2014 06:29:14 +0000</created>
                <updated>Tue, 3 May 2016 12:29:17 +0000</updated>
                            <resolved>Tue, 3 May 2016 12:29:17 +0000</resolved>
                                    <version>2.14.0</version>
                                    <fixVersion>2.17.2</fixVersion>
                    <fixVersion>2.18.0</fixVersion>
                                    <component>camel-netty4-http</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>7</watches>
                                                                <comments>
                            <comment id="14154452" author="davsclaus" created="Wed, 1 Oct 2014 06:40:11 +0000"  >&lt;p&gt;Can you tell more about your HTTP POST. Maybe you can provide the details how that request &quot;looks like&quot; eg its HTTP headers and body etc. We do have unit tests that works with HTTP POST so it works in general.&lt;/p&gt;</comment>
                            <comment id="14154492" author="yaronab" created="Wed, 1 Oct 2014 07:14:16 +0000"  >&lt;p&gt;I got this exception on every POST request I issued using several HTTP clients (browser, Spring&apos;s RestTemplate) and also Camel&apos;s ProducerTemplate.&lt;br/&gt;
I&apos;m using netty-http both as the HTTP server and also as a HTTP client (my app is a proxy service) and the exception is being thrown after the HTTP client response is received.&lt;br/&gt;
Please guide me if the original POST request is what you need or the request that camel-netty4-http issues?&lt;/p&gt;

&lt;p&gt;thx&lt;/p&gt;</comment>
                            <comment id="14154527" author="yaronab" created="Wed, 1 Oct 2014 07:53:14 +0000"  >&lt;p&gt;After further digging on the issue, I&apos;ve now realized that it happens only when I use RoutingSlip.&lt;br/&gt;
I&apos;ve just tried to change my route to use &quot;to()&quot; instead of &quot;routingSlip()&quot; and everything is properly working.&lt;br/&gt;
I updated the title of the bug to be more specific with these findings.&lt;/p&gt;</comment>
                            <comment id="14156589" author="yaronab" created="Thu, 2 Oct 2014 13:52:44 +0000"  >&lt;p&gt;My latest finding is that the issue is not related to the RoutingSlip either but to the use of AsyncProcessor in my route.&lt;br/&gt;
I still could not figure how it is related but the same code worked properly with camel-netty-http.&lt;br/&gt;
Once I changed my code to be sync with a regular processor, everything got back to work.&lt;/p&gt;</comment>
                            <comment id="14156612" author="davsclaus" created="Thu, 2 Oct 2014 14:27:41 +0000"  >&lt;p&gt;If you are able to zip together a small application or unit test that reproduces your bug, then you are welcome to attach that to this JIRA so we can use that to track down the bug.&lt;/p&gt;</comment>
                            <comment id="14216533" author="amitr" created="Tue, 18 Nov 2014 18:13:50 +0000"  >&lt;p&gt;Hi Claus - &lt;br/&gt;
I&apos;m Yarons coworker, we&apos;ve created a small app with a unit test that reproduces this issue, &lt;br/&gt;
attached to this comment.&lt;/p&gt;

&lt;p&gt;Thx,&lt;br/&gt;
Amit.&lt;/p&gt;</comment>
                            <comment id="14217374" author="njiang" created="Wed, 19 Nov 2014 04:09:00 +0000"  >&lt;p&gt;I just ran the tests with camel-2.14.1-SNAPSHOT and camel-2.15-SNAPSHOT, all the tests are passed. After checking the change log, I think it may relate to the Fix of &lt;a href=&quot;https://issues.apache.org/jira/browse/CAMEL-7894&quot; title=&quot;Encoder exception after sending a message with null body&quot; class=&quot;issue-link&quot; data-issue-key=&quot;CAMEL-7894&quot;&gt;&lt;del&gt;CAMEL-7894&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="14217754" author="amitr" created="Wed, 19 Nov 2014 11:15:07 +0000"  >&lt;p&gt;Hi,&lt;br/&gt;
I&apos;ve rerun the UT with the latest 2.14.1-SNAPSHOT version and it&apos;s not passing - issue persists...&lt;br/&gt;
I&apos;m running with the following snapshots:&lt;br/&gt;
camel-netty4-2.14.1-20141119.032555-64&lt;br/&gt;
camel-netty4-http-2.14.1-20141119.032558-64&lt;/p&gt;

&lt;p&gt;Thx,&lt;br/&gt;
Amit.&lt;/p&gt;</comment>
                            <comment id="14217756" author="yaronab" created="Wed, 19 Nov 2014 11:16:11 +0000"  >&lt;p&gt;see Amit last comment&lt;/p&gt;</comment>
                            <comment id="14217777" author="njiang" created="Wed, 19 Nov 2014 11:37:07 +0000"  >&lt;p&gt;It looks like a spring version miss match.&lt;br/&gt;
When I changed the spring version to 4.0.7.release, the unit test passed even with Camel Netty 2.14.0.&lt;/p&gt;</comment>
                            <comment id="14217877" author="amitr" created="Wed, 19 Nov 2014 13:09:06 +0000"  >&lt;p&gt;Yes, the problem was with spring version - once changed to 4.0.7-Release - the issue seems to be resolved.&lt;br/&gt;
Thx!&lt;/p&gt;</comment>
                            <comment id="14231427" author="yaronab" created="Tue, 2 Dec 2014 12:53:59 +0000"  >&lt;p&gt;please see the following Amit&apos;s comment&lt;/p&gt;</comment>
                            <comment id="14231431" author="amitr" created="Tue, 2 Dec 2014 12:57:42 +0000"  >&lt;p&gt;Hi, &lt;br/&gt;
As previously reported - the problem was indeed resolved when running the unit test with spring 4.0.7-RELEASE - but unfortunately when trying to run it &quot;live&quot; with tomcat server I still got the same exception.&lt;/p&gt;

&lt;p&gt;I&apos;m attaching a zip (&quot;Reproduce2.zip&quot;) that includes a jar that can be executed from command-line, and contains another zip with the sources.&lt;br/&gt;
When running the jar it will load the camel route using spring boot.&lt;br/&gt;
in order to simulate the issue you need to send any POST message to &lt;a href=&quot;http://localhost:8080&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://localhost:8080&lt;/a&gt; on your machine after executing command line.&lt;/p&gt;

&lt;p&gt;Thx,&lt;br/&gt;
Amit.&lt;/p&gt;</comment>
                            <comment id="14262060" author="amitr" created="Wed, 31 Dec 2014 09:39:21 +0000"  >&lt;p&gt;MIght be related to issue Camel-8187: &lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/CAMEL-8187&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/CAMEL-8187&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="15268602" author="davsclaus" created="Tue, 3 May 2016 12:13:25 +0000"  >&lt;p&gt;Okay so the issue is that when you use async processor then netty will complete the http server request and deallocate its buffer, which you cannot read from afterwards when your thread wake up.&lt;/p&gt;

&lt;p&gt;So either you need to convert the content to byte[] / string etc to not use netty&apos;s buffer anymore. Or we have to add some logic in NettyChannelBufferStreamCache to detect hand over the lifecycle of the buffer, or do a copy of the buffer (a copy will cause 2x memory usage)&lt;/p&gt;</comment>
                            <comment id="15268621" author="davsclaus" created="Tue, 3 May 2016 12:29:17 +0000"  >&lt;p&gt;Thanks for the test case. It works now with latest code.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12684638" name="Reproduce2.zip.001" size="8500000" author="amitr" created="Tue, 2 Dec 2014 12:57:33 +0000"/>
                            <attachment id="12684639" name="Reproduce2.zip.002" size="8356343" author="amitr" created="Tue, 2 Dec 2014 12:57:33 +0000"/>
                            <attachment id="12682209" name="bug-reproduce.zip" size="23962" author="amitr" created="Tue, 18 Nov 2014 18:11:14 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 1 Oct 2014 06:40:11 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310060" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Estimated Complexity</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10063"><![CDATA[Advanced]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            30 weeks, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i20o7j:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>