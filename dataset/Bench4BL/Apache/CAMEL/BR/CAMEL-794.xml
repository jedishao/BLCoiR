<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sat Dec 03 04:19:12 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/CAMEL-794/CAMEL-794.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[CAMEL-794] Pipeline with thread() processor also redelivers following the default policy independently from the preset  errorhadling </title>
                <link>https://issues.apache.org/jira/browse/CAMEL-794</link>
                <project id="12311211" key="CAMEL">Camel</project>
                    <description>&lt;p&gt;When using the thread processor in a simple pipeline, the exchange will be redelivered 6 times (default policy) along with the preset errorhandler settings. The code below will re-deliver 6 times to the default DeadLetterChannel and once to the log:errorTester.&lt;/p&gt;

&lt;p&gt;    	errorHandler(deadLetterChannel(&quot;log:errorTester?level=ERROR&quot;).maximumRedeliveries(1));&lt;/p&gt;

&lt;p&gt;    	from(&quot;seda:whatEver&quot;)&lt;br/&gt;
        .thread(2)&lt;br/&gt;
       	.process(new Processor() {&lt;br/&gt;
        		public void process(Exchange exchange) throws Exception &lt;/p&gt;
{
        			System.out.println(&quot;### Exchg : &quot; + exchange.getExchangeId());
        			throw new Exception(&quot;Kaboom 2!&quot;);
        		}
&lt;p&gt;        });&lt;/p&gt;</description>
                <environment></environment>
        <key id="12485979">CAMEL-794</key>
            <summary>Pipeline with thread() processor also redelivers following the default policy independently from the preset  errorhadling </summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="davsclaus">Claus Ibsen</assignee>
                                    <reporter username="magyardude">Bela Vizy</reporter>
                        <labels>
                    </labels>
                <created>Fri, 8 Aug 2008 03:02:15 +0000</created>
                <updated>Mon, 16 Feb 2009 05:51:49 +0000</updated>
                            <resolved>Sun, 7 Sep 2008 16:58:04 +0000</resolved>
                                    <version>1.4.0</version>
                                    <fixVersion>1.5.0</fixVersion>
                                    <component>camel-core</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12948345" author="magyardude" created="Fri, 8 Aug 2008 03:06:19 +0000"  >&lt;p&gt;err correction: re-delivers 6 times  before it goes to the default DeadLetterChannel, then once more before it goes to the specified ErrorHandler. It seems like the message gets re-delivered parallel: once following the default ErrorHandler policy and also following the preset error handler.&lt;/p&gt;</comment>
                            <comment id="12948344" author="davsclaus" created="Fri, 8 Aug 2008 12:12:38 +0000"  >&lt;p&gt;Target for Camel 1.5. Error handling is important that it &lt;b&gt;just works&lt;/b&gt;&lt;/p&gt;</comment>
                            <comment id="12948448" author="magyardude" created="Fri, 15 Aug 2008 21:46:48 +0000"  >&lt;p&gt;So far this is what I see: &lt;/p&gt;

&lt;p&gt;The thread processor wraps everything following into a pipeline. One problem is that the &quot;children&quot; (the members of the pipeline) don&apos;t inherit the the settings for the Error Channel. Since the ErrorHandlerBulder is null it falls back to the default (6 re-tries, DLC). This probably can be corrected at ProcessorType.java:1610 by copying the ErrorHandlerBuilder of the parent.&lt;/p&gt;

&lt;p&gt;But there is another problem. If we bomb in one of the members of the pipeline after the thread processor, the error handling will be executed two times: once for the member (that would be the desirable behavior) and once for the whole pipeline. Camel actually re-delivers the exchange to the first member after the thread(). &lt;/p&gt;

&lt;p&gt;Well that is it so far.  Let me know if you want me to keep poking...&lt;/p&gt;
</comment>
                            <comment id="12948496" author="davsclaus" created="Sat, 16 Aug 2008 07:41:15 +0000"  >&lt;p&gt;Bela thanks for the help, much appreciated &lt;/p&gt;</comment>
                            <comment id="12948547" author="davsclaus" created="Sat, 16 Aug 2008 08:00:52 +0000"  >&lt;p&gt;It might already be fixed in Camel 1.5. Using your unit test I can only get it redelivered once.&lt;/p&gt;</comment>
                            <comment id="12948517" author="davsclaus" created="Sat, 16 Aug 2008 08:02:52 +0000"  >&lt;p&gt;See unit test added:&lt;br/&gt;
&lt;a href=&quot;http://svn.apache.org/viewvc?view=rev&amp;amp;revision=686461&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewvc?view=rev&amp;amp;revision=686461&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;org.apache.camel.issues.ThreadErrorHandlerTest&lt;/p&gt;</comment>
                            <comment id="12948432" author="magyardude" created="Sun, 17 Aug 2008 22:21:09 +0000"  >&lt;p&gt;More digging...&lt;/p&gt;

&lt;p&gt;I attached 2 unit tests. The extra is that I&apos;m counting the actual execution of the processor.&lt;/p&gt;

&lt;p&gt;The first  is the simpler test (BelasThreadErrorHandlerTest1.java). It demonstrates that the exchange gets delivered 1 less times than the number specified in the errorHandler statement. This happens even without the thread processor. By the way am I right here? We mean &quot;re&quot;-delivery, meaning executing the processor, where the failure occurred, once (failure) + plus the number of &quot;re&quot; times, right? Btw with zero doesn&apos;t even call the processor. &lt;/p&gt;

&lt;p&gt;The second unit test is about the thread processor behavior (BelasThreadErrorHandlerTest1.java). The error handlig behavior is different depending where you put the errorHandler call inside the route: before or after. If it comes before the only problem is the one less re-delivery (see above in the first unit test). If you put the errorHandler spec after the thread processor it gets ignored and Camel will redeliver 5 times followed by the default DLC (one less again because 6 is the default).&lt;/p&gt;</comment>
                            <comment id="12948492" author="magyardude" created="Sun, 17 Aug 2008 22:22:19 +0000"  >&lt;p&gt;Unit test to show the number of re-deliveries is one less than expected.&lt;/p&gt;</comment>
                            <comment id="12948545" author="magyardude" created="Sun, 17 Aug 2008 22:22:56 +0000"  >&lt;p&gt;Unit test to test the errorHandling with thread processor.&lt;/p&gt;</comment>
                            <comment id="12948504" author="davsclaus" created="Mon, 18 Aug 2008 04:05:56 +0000"  >&lt;p&gt;Hi Bela&lt;/p&gt;

&lt;p&gt;Thanks for all the digging.&lt;br/&gt;
maximumRedelivery=0 should disable it = newer retry.&lt;/p&gt;</comment>
                            <comment id="12948519" author="davsclaus" created="Sat, 23 Aug 2008 10:01:38 +0000"  >&lt;p&gt;Thanks for the unit tests. Will look into it later.&lt;/p&gt;</comment>
                            <comment id="12948580" author="davsclaus" created="Thu, 28 Aug 2008 05:29:51 +0000"  >&lt;p&gt;The &quot;number of re-deliveries is one less than expected.&quot; has been fixed.&lt;/p&gt;</comment>
                            <comment id="12948600" author="davsclaus" created="Thu, 28 Aug 2008 08:22:04 +0000"  >&lt;p&gt;The outstanding issue is when you configure an errorHandler &lt;b&gt;after&lt;/b&gt; the &lt;b&gt;thread&lt;/b&gt;.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
   from(xxx)
   .thread(2)
   .errorHandler(...)
   .process(...)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Then its using the parent errorhandler and if none exists its the default error handler using DLC with 5 retries.&lt;/p&gt;


&lt;p&gt;But setting the errorhandler &lt;b&gt;before&lt;/b&gt; works as expected:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
   from(xxx)
   .errorHandler(...)
   .thread(2)
   .process(...)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;So we gotta figure out how Camel should handle this, and if the &lt;b&gt;after&lt;/b&gt; should be supported also. &lt;/p&gt;</comment>
                            <comment id="12948708" author="davsclaus" created="Sun, 7 Sep 2008 16:58:04 +0000"  >&lt;p&gt;Setting error handler &lt;b&gt;after&lt;/b&gt; thread is not supported. End users should set it on the correct type such as a RouteType such as the &lt;b&gt;from&lt;/b&gt;.&lt;/p&gt;

&lt;p&gt;The thread children is now also configured with the inherited error handler as suggested by Bela.&lt;/p&gt;

&lt;p&gt;Thanks Bela for reporting and digging into this issue.&lt;/p&gt;</comment>
                            <comment id="12948719" author="magyardude" created="Sun, 7 Sep 2008 21:06:51 +0000"  >&lt;p&gt;There&apos;s only one issue with this, but isn&apos;t a big deal. The failure gets logged twice. Once for the thread&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/thumbs_down.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; and once for the processor which failed somewhere after the thread&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/thumbs_down.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;.  They get logged with their respective exchanges. I think only the exchange before the failed processor should be logged.&lt;/p&gt;

&lt;p&gt;I will try to create a test case, but not sure how can this be automated with JUnit (you have to set it to debug and watch the log). &lt;br/&gt;
Anyway this is not a showstopper bug.&lt;/p&gt;

</comment>
                            <comment id="12948774" author="davsclaus" created="Mon, 8 Sep 2008 08:53:24 +0000"  >&lt;p&gt;Bela yes please if you are digging into this create a new ticket with the findings.&lt;/p&gt;

&lt;p&gt;When you say &quot;logged&quot; do you mean the DEBUG logging in camel or that the exchange is moved to a dead letter channel after all redeliveries failed? Can you elaborate a bit on this?&lt;/p&gt;</comment>
                            <comment id="12948897" author="magyardude" created="Sun, 14 Sep 2008 21:22:52 +0000"  >&lt;p&gt;Yes, I meant the log messages. I cannot reproduce it in a unit test, but it is still happening in my system.&lt;br/&gt;
While trying to create the test I found someting else:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/activemq/browse/CAMEL-901&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/activemq/browse/CAMEL-901&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It maybe the indirect cause of my logging problem. Let me know if I can help in any ways.&lt;/p&gt;</comment>
                            <comment id="12950777" author="davsclaus" created="Mon, 16 Feb 2009 05:51:49 +0000"  >&lt;p&gt;Closing all 1.5.0 issues&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12462620" name="BelasThreadErrorHandlerTest1.java" size="2907" author="magyardude" created="Sun, 17 Aug 2008 22:22:19 +0000"/>
                            <attachment id="12462563" name="BelasThreadErrorHandlerTest2.java" size="3846" author="magyardude" created="Sun, 17 Aug 2008 22:22:56 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 8 Aug 2008 12:12:38 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>83301</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            7 years, 42 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i01efr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>6108</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>