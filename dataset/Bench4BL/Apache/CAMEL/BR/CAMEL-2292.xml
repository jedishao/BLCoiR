<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sat Dec 03 02:23:31 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/CAMEL-2292/CAMEL-2292.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[CAMEL-2292] RejectedExecutionException after restarting camel context</title>
                <link>https://issues.apache.org/jira/browse/CAMEL-2292</link>
                <project id="12311211" key="CAMEL">Camel</project>
                    <description>&lt;p&gt;User reported over the #camel channel the following exception trying to send a message after the context was stopped and restarted&lt;/p&gt;

&lt;p&gt; &quot;Failed to create Producer for endpoint:&quot;. Thats the exception I&apos;m getting&lt;br/&gt;
Reason: java.util.concurrent.RejectedExecutionException&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;Exception in thread &lt;span class=&quot;code-quote&quot;&gt;&quot;core&quot;&lt;/span&gt; org.apache.camel.FailedToCreateProducerException: Failed to create Producer &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; endpoint: Endpoint[activemq:&lt;span class=&quot;code-comment&quot;&gt;//queue:request.lavaOrderProducer.powerTraderServer]. Reason: java.util.concurrent.RejectedExecutionException
&lt;/span&gt;	at org.apache.camel.component.jms.JmsProducer.testAndSetRequestor(JmsProducer.java:116)
	at org.apache.camel.component.jms.JmsProducer.processInOut(JmsProducer.java:175)
	at org.apache.camel.component.jms.JmsProducer.process(JmsProducer.java:147)
	at org.apache.camel.impl.ProducerCache$1.doInProducer(ProducerCache.java:179)
	at org.apache.camel.impl.ProducerCache$1.doInProducer(ProducerCache.java:161)
	at org.apache.camel.impl.ProducerCache.doInProducer(ProducerCache.java:146)
	at org.apache.camel.impl.ProducerCache.sendExchange(ProducerCache.java:160)
	at org.apache.camel.impl.ProducerCache.send(ProducerCache.java:98)
	at org.apache.camel.impl.DefaultProducerTemplate.send(DefaultProducerTemplate.java:97)
	at com.wjb.producer.lavaData.dispatcher.ServerRequestDispatcher.requestSymbolSectorArray(ServerRequestDispatcher.java:122)
	at com.wjb.producer.core.LavaDataManager.initialize(LavaDataManager.java:64)
	at com.wjb.producer.core.ProducerCore.run(ProducerCore.java:98)
	at java.lang.&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.run(&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.java:619)
Caused by: java.util.concurrent.RejectedExecutionException
	at java.util.concurrent.ThreadPoolExecutor$AbortPolicy.rejectedExecution(ThreadPoolExecutor.java:1760)
	at java.util.concurrent.ThreadPoolExecutor.reject(ThreadPoolExecutor.java:767)
	at java.util.concurrent.ScheduledThreadPoolExecutor.delayedExecute(ScheduledThreadPoolExecutor.java:216)
	at java.util.concurrent.ScheduledThreadPoolExecutor.schedule(ScheduledThreadPoolExecutor.java:366)
	at org.apache.camel.util.DefaultTimeoutMap.schedulePoll(DefaultTimeoutMap.java:156)
	at org.apache.camel.util.DefaultTimeoutMap.&amp;lt;init&amp;gt;(DefaultTimeoutMap.java:52)
	at org.apache.camel.component.jms.requestor.Requestor.&amp;lt;init&amp;gt;(Requestor.java:68)
	at org.apache.camel.component.jms.JmsProducer.testAndSetRequestor(JmsProducer.java:107)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The following unit tests seems to reproduce the problem:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;ublic &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; class StartStopTest 
{
	&lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; GenericApplicationContext applicationContext = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; GenericApplicationContext();
	&lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; testCount = 3;
	
	@Test
	&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void test() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; Exception 
	{		
		&lt;span class=&quot;code-comment&quot;&gt;//Initialize
&lt;/span&gt;		&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; File propertiesFile = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; File(Constants.RESOURCE_DIRECTORY_NAME, Constants.PROPERTIES_FILE_NAME);
		PropertyConfigurator.configure(propertiesFile.getPath());
		
		&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; File applicationContextFile = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; File(Constants.RESOURCE_DIRECTORY_NAME, Constants.CONTEXT_FILE_NAME);	
		&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; Resource applicationContextResource = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; FileSystemResource(applicationContextFile);
				
		&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; AbstractBeanDefinitionReader beanDefinitionReader = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; XmlBeanDefinitionReader(&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.applicationContext);
		
		beanDefinitionReader.loadBeanDefinitions(applicationContextResource);
		&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.applicationContext.refresh();	
		
		&lt;span class=&quot;code-comment&quot;&gt;//Begin Testing
&lt;/span&gt;		&lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; i = 0; i &amp;lt; &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.testCount; i++)
		{			
			&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.startSendStop();
		    &lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.sleep(3000);
		}		
	}
	
	&lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; void startSendStop() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; Exception
	{
		&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; SpringCamelContext springCamelContext = (SpringCamelContext)&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.applicationContext.getBean(Constants.CAMEL_CONTEXT_NAME);
		&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; ProducerTemplate producerTemplate;
		&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; Endpoint serverRequestQueue;
		
		springCamelContext.start();
		
		producerTemplate = springCamelContext.createProducerTemplate();
		serverRequestQueue = springCamelContext.getEndpoint(&lt;span class=&quot;code-quote&quot;&gt;&quot;serverRequestQueue&quot;&lt;/span&gt;);
		
		&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; Exchange exchange = producerTemplate.send(serverRequestQueue, &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Processor()
		{
			&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void process(&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; Exchange exchange) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; Exception 
			{				
				exchange.setPattern(ExchangePattern.InOut);	
				exchange.getIn().setHeader(ServerJmsServices.REQUEST, ServerJmsServices.GET_SYMBOL_INFO);
				exchange.getIn().setBody(&quot;&quot;);
			}			
		});
		&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; responseString = (&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;)exchange.getOut().getBody();
		
		Assert.assertTrue(responseString.length() &amp;gt; 0);
		
		springCamelContext.stop();
	}
}


&amp;lt;?xml version=&lt;span class=&quot;code-quote&quot;&gt;&quot;1.0&quot;&lt;/span&gt; encoding=&lt;span class=&quot;code-quote&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;?&amp;gt;
&amp;lt;beans xmlns=&lt;span class=&quot;code-quote&quot;&gt;&quot;http:&lt;span class=&quot;code-comment&quot;&gt;//www.springframework.org/schema/beans&quot;&lt;/span&gt; 
&lt;/span&gt;       xmlns:xsi=&lt;span class=&quot;code-quote&quot;&gt;&quot;http:&lt;span class=&quot;code-comment&quot;&gt;//www.w3.org/2001/XMLSchema-instance&quot;&lt;/span&gt;
&lt;/span&gt;       xmlns:camel=&lt;span class=&quot;code-quote&quot;&gt;&quot;http:&lt;span class=&quot;code-comment&quot;&gt;//camel.apache.org/schema/spring&quot;&lt;/span&gt;
&lt;/span&gt;       xsi:schemaLocation=&quot;http:&lt;span class=&quot;code-comment&quot;&gt;//www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
&lt;/span&gt;                           http:&lt;span class=&quot;code-comment&quot;&gt;//camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd&quot;&amp;gt;
&lt;/span&gt;        
    &amp;lt;!-- ActiveMQ component &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; Camel to use --&amp;gt;   
    &amp;lt;bean id=&lt;span class=&quot;code-quote&quot;&gt;&quot;activemq&quot;&lt;/span&gt; class=&lt;span class=&quot;code-quote&quot;&gt;&quot;org.apache.activemq.camel.component.ActiveMQComponent&quot;&lt;/span&gt; &amp;gt; 
        &amp;lt;property name=&lt;span class=&quot;code-quote&quot;&gt;&quot;connectionFactory&quot;&lt;/span&gt;&amp;gt; 
            &amp;lt;bean class=&lt;span class=&quot;code-quote&quot;&gt;&quot;org.apache.activemq.ActiveMQConnectionFactory&quot;&lt;/span&gt;&amp;gt; 
                &amp;lt;property name=&lt;span class=&quot;code-quote&quot;&gt;&quot;brokerURL&quot;&lt;/span&gt; value=&lt;span class=&quot;code-quote&quot;&gt;&quot;tcp:&lt;span class=&quot;code-comment&quot;&gt;//192.168.5.10:61616?daemon=&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;&quot;&lt;/span&gt; /&amp;gt;
&lt;/span&gt;            &amp;lt;/bean&amp;gt; 
        &amp;lt;/property&amp;gt; 
    &amp;lt;/bean&amp;gt; 
           
    &amp;lt;!-- Camel Context --&amp;gt;
    &amp;lt;camelContext id=&lt;span class=&quot;code-quote&quot;&gt;&quot;camelContext&quot;&lt;/span&gt; xmlns=&lt;span class=&quot;code-quote&quot;&gt;&quot;http:&lt;span class=&quot;code-comment&quot;&gt;//camel.apache.org/schema/spring&quot;&lt;/span&gt; autoStartup=&lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;&quot;&lt;/span&gt;&amp;gt;   	
&lt;/span&gt;    	&amp;lt;camel:endpoint id=&lt;span class=&quot;code-quote&quot;&gt;&quot;serverRequestQueue&quot;&lt;/span&gt;	uri=&lt;span class=&quot;code-quote&quot;&gt;&quot;activemq:queue:request.lavaOrderProducer.powerTraderServer&quot;&lt;/span&gt; /&amp;gt;   	
    &amp;lt;/camelContext&amp;gt;
&amp;lt;/beans&amp;gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</description>
                <environment></environment>
        <key id="12486318">CAMEL-2292</key>
            <summary>RejectedExecutionException after restarting camel context</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="davsclaus">Claus Ibsen</assignee>
                                    <reporter username="hadrian">Hadrian Zbarcea</reporter>
                        <labels>
                    </labels>
                <created>Tue, 15 Dec 2009 15:18:02 +0000</created>
                <updated>Wed, 3 Nov 2010 05:12:58 +0000</updated>
                            <resolved>Tue, 29 Dec 2009 02:01:00 +0000</resolved>
                                    <version>2.1.0</version>
                                    <fixVersion>2.2.0</fixVersion>
                                        <due></due>
                            <votes>1</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12954199" author="davsclaus" created="Wed, 16 Dec 2009 08:54:09 +0000"  >&lt;p&gt;You need to stop the producer template as well as you are in charge of its lifecycle&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
producerTemplate.stop();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="12954206" author="davsclaus" created="Wed, 16 Dec 2009 10:54:52 +0000"  >&lt;p&gt;trunk: 891183.&lt;/p&gt;</comment>
                            <comment id="12953945" author="eubinas" created="Mon, 21 Dec 2009 14:20:20 +0000"  >&lt;p&gt;So I changed the startSendStop function to the following and I still get the same exception. Is the producerTemplate stopping correctly?&lt;/p&gt;

&lt;p&gt;private void startSendStop() throws Exception&lt;br/&gt;
{		&lt;br/&gt;
	final SpringCamelContext springCamelContext = (SpringCamelContext)this.applicationContext.getBean(Constants.CAMEL_CONTEXT_NAME);&lt;br/&gt;
	final ProducerTemplate producerTemplate;&lt;br/&gt;
	final Endpoint serverRequestQueue;&lt;/p&gt;

&lt;p&gt;	springCamelContext.start();&lt;/p&gt;

&lt;p&gt;	producerTemplate = springCamelContext.createProducerTemplate();&lt;br/&gt;
	serverRequestQueue = springCamelContext.getEndpoint(&quot;serverRequestQueue&quot;);&lt;/p&gt;

&lt;p&gt;	final Exchange exchange = producerTemplate.send(serverRequestQueue, new Processor()&lt;br/&gt;
	{&lt;br/&gt;
		public void process(final Exchange exchange) throws Exception &lt;/p&gt;
		{				
			exchange.setPattern(ExchangePattern.InOut);	
			exchange.getIn().setHeader(ServerJmsServices.REQUEST, ServerJmsServices.GET_SYMBOL_INFO);
			exchange.getIn().setBody(&quot;&quot;);
		}			
&lt;p&gt;	});&lt;br/&gt;
	final String responseString = (String)exchange.getOut().getBody();&lt;/p&gt;

&lt;p&gt;	Assert.assertTrue(responseString.length() &amp;gt; 0);&lt;/p&gt;

&lt;p&gt;	producerTemplate.stop();&lt;br/&gt;
	springCamelContext.stop();&lt;br/&gt;
}&lt;/p&gt;</comment>
                            <comment id="12953944" author="davsclaus" created="Mon, 21 Dec 2009 14:57:35 +0000"  >&lt;p&gt;Try with latest code from trunk as there was a fix in shutting down ProducerTemplate which could affect your use-case&lt;/p&gt;</comment>
                            <comment id="12953960" author="eubinas" created="Tue, 29 Dec 2009 02:01:00 +0000"  >&lt;p&gt;Successfully passed the unit test. Thanks guys.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 16 Dec 2009 08:54:09 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>76560</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            6 years, 49 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i01np3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>7608</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>