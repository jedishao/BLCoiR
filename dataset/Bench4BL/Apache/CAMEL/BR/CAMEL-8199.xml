<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sat Dec 03 04:29:40 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/CAMEL-8199/CAMEL-8199.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[CAMEL-8199] Race condition in JmsProducer for request/response messaging causing nondeterministic setting body to null.</title>
                <link>https://issues.apache.org/jira/browse/CAMEL-8199</link>
                <project id="12311211" key="CAMEL">Camel</project>
                    <description>&lt;p&gt;In my team we have noticed that there is a race condition problem in JmsProducer class for request/response messaging. It causes that sometimes (nondeterministically) body of a response message is changed to null. It can happen when JMS response is received very fast (we use in-memory ActiveMQ with VM transport and no persistence) under heavy load.&lt;/p&gt;

&lt;p&gt;It looks that there is a problem in JmsProducer class in processInOut(exchange, callback) method.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    &lt;span class=&quot;code-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; processInOut(&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; Exchange exchange, &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; AsyncCallback callback) {
        &#8230;
        doSend(&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;, destinationName, destination, messageCreator, messageSentCallback);
        &lt;span class=&quot;code-comment&quot;&gt;// after sending then set the OUT message id to the JMSMessageID so its identical
&lt;/span&gt;        setMessageId(exchange);
        &lt;span class=&quot;code-comment&quot;&gt;// &lt;span class=&quot;code-keyword&quot;&gt;continue&lt;/span&gt; routing asynchronously (reply will be processed async when its received)
&lt;/span&gt;        &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;;
    }

...
    &lt;span class=&quot;code-keyword&quot;&gt;protected&lt;/span&gt; void setMessageId(Exchange exchange) {
        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (exchange.hasOut()) {
            JmsMessage out = exchange.getOut(JmsMessage.class);
            &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
                &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (out != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; out.getJmsMessage() != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
                    out.setMessageId(out.getJmsMessage().getJMSMessageID());
                }
            } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (JMSException e) {
                LOG.warn(&lt;span class=&quot;code-quote&quot;&gt;&quot;Unable to retrieve JMSMessageID from outgoing JMS Message and set it into Camel&apos;s MessageId&quot;&lt;/span&gt;, e);
            }
        }
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The problem is caused by invoking setMessageId(...) method after doSend(...). Method doSend(...) is sending JMS request message and causes that another thread is used to handle JMS reply message. This leads to a situation that 2 different threads can operate on the same exchange (which is not synchronized at all) at the same time:&lt;br/&gt;
1) original thread in which processInOut(...) method was called,&lt;br/&gt;
2) separate thread from JMS component for handling JMS response.&lt;/p&gt;

&lt;p&gt;In our case there it was happening sometimes that setMessageId(...) was invoked at the same time as PipelineHelper.createNextMessage(exchange) method:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; Exchange createNextExchange(Exchange previousExchange) {
        Exchange answer = previousExchange;
        &lt;span class=&quot;code-comment&quot;&gt;// now lets set the input of the next exchange to the output of the
&lt;/span&gt;        &lt;span class=&quot;code-comment&quot;&gt;// previous message &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; it is not &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;
&lt;/span&gt;        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (answer.hasOut()) {
            answer.setIn(answer.getOut());
            answer.setOut(&lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;);
        }
        &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; answer;
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;It caused that body of response message was lost (set to null).&lt;/p&gt;


&lt;p&gt;It looks for me that calling setMessageId(...) at the end of processInOut(...) method is redundant and this logic should be executed when JMS reply message is handled.&lt;/p&gt;

&lt;p&gt;I&apos;ve attached a patch where invokation of setMessageId(...) is removed.&lt;br/&gt;
I&apos;ve checked that it doesn&apos;t break any test for camel-jms component.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12764200">CAMEL-8199</key>
            <summary>Race condition in JmsProducer for request/response messaging causing nondeterministic setting body to null.</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="3">Duplicate</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="kmackowiak">Krzysztof Mackowiak</reporter>
                        <labels>
                    </labels>
                <created>Tue, 30 Dec 2014 13:58:00 +0000</created>
                <updated>Wed, 31 Dec 2014 07:15:26 +0000</updated>
                            <resolved>Wed, 31 Dec 2014 07:15:25 +0000</resolved>
                                    <version>2.14.0</version>
                                                    <component>camel-jms</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="14262002" author="davsclaus" created="Wed, 31 Dec 2014 07:15:26 +0000"  >&lt;p&gt;Duplicate of &lt;a href=&quot;https://issues.apache.org/jira/browse/CAMEL-8200&quot; title=&quot;Race condition in JmsProducer for request/response messaging causing nondeterministic setting body to null.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;CAMEL-8200&quot;&gt;&lt;del&gt;CAMEL-8200&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 31 Dec 2014 07:15:26 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310060" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Estimated Complexity</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10060"><![CDATA[Unknown]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 48 weeks, 2 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310041" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Patch Info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10042"><![CDATA[Patch Available]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i23ukn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>