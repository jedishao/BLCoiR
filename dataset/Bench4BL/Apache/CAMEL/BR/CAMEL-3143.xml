<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sat Dec 03 03:39:21 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/CAMEL-3143/CAMEL-3143.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[CAMEL-3143] OsgiDefaultCamelContext.getTypeConverterRegistry() returns null </title>
                <link>https://issues.apache.org/jira/browse/CAMEL-3143</link>
                <project id="12311211" key="CAMEL">Camel</project>
                    <description>&lt;p&gt;The showed up when using dozer as shown in &lt;a href=&quot;http://camel.apache.org/dozer-type-conversion.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://camel.apache.org/dozer-type-conversion.html&lt;/a&gt;, whose DozerTypeConverterLoader tries to get the type converter registry using: {{&lt;/p&gt;
{TypeConverterRegistry registry = camelContext.getTypeConverterRegistry();}
&lt;p&gt;}}&lt;/p&gt;

&lt;p&gt;Plausible error:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeHeader panelHeader&quot; style=&quot;border-bottom-width: 1px;&quot;&gt;&lt;b&gt;OsgiDefaultCamelContext.java&lt;/b&gt;&lt;/div&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;   @Override
    &lt;span class=&quot;code-keyword&quot;&gt;protected&lt;/span&gt; TypeConverter createTypeConverter() {
        &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; OsgiTypeConverter(bundleContext, getInjector());
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeHeader panelHeader&quot; style=&quot;border-bottom-width: 1px;&quot;&gt;&lt;b&gt;DefaultCamelContext.java&lt;/b&gt;&lt;/div&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; TypeConverterRegistry getTypeConverterRegistry() {
        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (typeConverterRegistry == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
            &lt;span class=&quot;code-comment&quot;&gt;// init type converter as its lazy
&lt;/span&gt;            &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (typeConverter == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
                getTypeConverter();
            }
            &lt;span class=&quot;code-comment&quot;&gt;// type converter is usually the &lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt; one that also is the registry
&lt;/span&gt;            &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (typeConverter &lt;span class=&quot;code-keyword&quot;&gt;instanceof&lt;/span&gt; DefaultTypeConverter) {
                typeConverterRegistry = (DefaultTypeConverter) typeConverter;
            }
        }
        &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; typeConverterRegistry;
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Error:&lt;br/&gt;
getTypeConverter() returns an OsgiTypeConverter &lt;br/&gt;
OsgiTypeConverter does not inherit from DefaultTypeConverter, thus the instanceof returns false&lt;br/&gt;
=&amp;gt; null is returned&lt;/p&gt;

&lt;p&gt;Solution:&lt;br/&gt;
Lots of different ways to do this, and it&apos;s getting late here. In this case, maybe it&apos;s OsgiDefaultCamelContext&apos;s responsibility to also override getTypeConverterRegistry with something along the lines of:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;@Override
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; TypeConverterRegistry getTypeConverterRegistry() {
        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (typeConverterRegistry == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
            &lt;span class=&quot;code-comment&quot;&gt;// init type converter as its lazy
&lt;/span&gt;            &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (typeConverter == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
                getTypeConverter();
            }
            &lt;span class=&quot;code-comment&quot;&gt;// type converter is usually the &lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt; one that also is the registry
&lt;/span&gt;            &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (typeConverter &lt;span class=&quot;code-keyword&quot;&gt;instanceof&lt;/span&gt; OsgiDefaultTypeConverter) {
                typeConverterRegistry = ((OsgiDefaultTypeConverter) typeConverter).getRegistry();
            }
        }
        &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; typeConverterRegistry;
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We&apos;ve employed an (ugly) workaround in a local version of DozerTypeConverterLoader.java:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;        TypeConverter typeConverter = camelContext.getTypeConverter();
        DefaultTypeConverter registry = &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;;
        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (typeConverter &lt;span class=&quot;code-keyword&quot;&gt;instanceof&lt;/span&gt; DefaultTypeConverter) {
            registry = (DefaultTypeConverter)typeConverter;
        } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (typeConverter &lt;span class=&quot;code-keyword&quot;&gt;instanceof&lt;/span&gt; OsgiTypeConverter) {
            OsgiTypeConverter osgiTypeConverter = (OsgiTypeConverter)typeConverter;
            registry = osgiTypeConverter.getRegistry();
        }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</description>
                <environment></environment>
        <key id="12487627">CAMEL-3143</key>
            <summary>OsgiDefaultCamelContext.getTypeConverterRegistry() returns null </summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="davsclaus">Claus Ibsen</assignee>
                                    <reporter username="cl4es">Claes Redestad</reporter>
                        <labels>
                    </labels>
                <created>Tue, 21 Sep 2010 19:40:01 +0000</created>
                <updated>Sun, 24 Apr 2011 09:58:02 +0000</updated>
                            <resolved>Wed, 22 Sep 2010 09:40:42 +0000</resolved>
                                    <version>2.4.0</version>
                                    <fixVersion>2.5.0</fixVersion>
                                    <component>osgi</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12956826" author="davsclaus" created="Wed, 22 Sep 2010 06:31:50 +0000"  >&lt;p&gt;Yeah lets add a dozer test in camel-itest-osgi. Then we can look at a nicer solution to this&lt;/p&gt;</comment>
                            <comment id="12956726" author="davsclaus" created="Wed, 22 Sep 2010 09:03:09 +0000"  >&lt;p&gt;Dozer is not OSGi compliant. &lt;/p&gt;

&lt;p&gt;The Dozer team is working on integration out of the box with Apache Camel.&lt;/p&gt;</comment>
                            <comment id="12956724" author="davsclaus" created="Wed, 22 Sep 2010 09:24:14 +0000"  >&lt;p&gt;Looking into the source code of Dozer its really not well designed for 3rd party to influence loading of resources, overriding classes or hooking into custom logic.&lt;/p&gt;
</comment>
                            <comment id="12956723" author="davsclaus" created="Wed, 22 Sep 2010 09:29:53 +0000"  >&lt;p&gt;See here&lt;br/&gt;
&lt;a href=&quot;http://sourceforge.net/tracker/?func=detail&amp;amp;aid=3022810&amp;amp;group_id=133517&amp;amp;atid=727371&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://sourceforge.net/tracker/?func=detail&amp;amp;aid=3022810&amp;amp;group_id=133517&amp;amp;atid=727371&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As far as in the current camel-dozer component we cannot make it osgi compliant due &lt;tt&gt;DozerBeanMapper&lt;/tt&gt; being poorly configurable. So we cannot configure how the mapping files should be loaded, by using a custom loader.&lt;/p&gt;
</comment>
                            <comment id="12956832" author="davsclaus" created="Wed, 22 Sep 2010 09:31:52 +0000"  >&lt;p&gt;Also &lt;tt&gt;MappingProcessor&lt;/tt&gt; which does the actual mapping is also a big heavy weight and not easily customizable.&lt;/p&gt;

&lt;p&gt;The &lt;tt&gt;DozerBeanMapper&lt;/tt&gt; will load the mapping files using thread context classloader which doesnt work in that way in OSGi land.&lt;br/&gt;
So we end up with this error&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
Caused by: org.dozer.MappingException: Unable to locate dozer mapping file [org/apache/camel/itest/osgi/dozer/dozer-mapping.xml] in the classpath!
	at org.dozer.util.MappingUtils.throwMappingException(MappingUtils.java:93)
	at org.dozer.util.MappingValidator.validateURL(MappingValidator.java:61)
	at org.dozer.loader.CustomMappingsLoader.loadFromFiles(CustomMappingsLoader.java:101)
	at org.dozer.loader.CustomMappingsLoader.load(CustomMappingsLoader.java:57)
	at org.dozer.DozerBeanMapper.loadCustomMappings(DozerBeanMapper.java:153)
	at org.dozer.DozerBeanMapper.getMappingProcessor(DozerBeanMapper.java:136)
	at org.dozer.DozerBeanMapper.map(DozerBeanMapper.java:92)
	at org.apache.camel.converter.dozer.DozerTypeConverter.convertTo(DozerTypeConverter.java:46)
	at org.apache.camel.converter.dozer.DozerTypeConverter.convertTo(DozerTypeConverter.java:50)
	at org.apache.camel.impl.converter.DefaultTypeConverter.doConvertTo(DefaultTypeConverter.java:181)
	at org.apache.camel.impl.converter.DefaultTypeConverter.mandatoryConvertTo(DefaultTypeConverter.java:136)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="12956831" author="davsclaus" created="Wed, 22 Sep 2010 09:40:42 +0000"  >&lt;p&gt;Fixed the OSGi type converter stuff.&lt;/p&gt;

&lt;p&gt;trunk: 999836.&lt;/p&gt;

&lt;p&gt;But Dozer is still not working in OSGi when loading the mapping files from classpath. Or can you get it working?&lt;/p&gt;</comment>
                            <comment id="12956836" author="bjornbength" created="Wed, 22 Sep 2010 09:48:29 +0000"  >&lt;p&gt;Hello Claus,&lt;/p&gt;

&lt;p&gt;I&apos;m a colleague of Claes, &lt;br/&gt;
This ticket (as I assume you understand) is not related directly to Dozer. The same null pointer is encountered for me&lt;br/&gt;
when i try to explicitly add type converters and fallback converters using java code in our routebuilders in servicemix 4.3.&lt;/p&gt;


&lt;p&gt;About dozer:&lt;br/&gt;
I can confirm that Dozer could be simpler to use in OSGi but we currently have it running in a few bundles in camel contexts &lt;br/&gt;
in ServiceMix 4.2 with mapping files. &lt;br/&gt;
An upgrade to ServiceMix 4.3 encountered this problem that Claes did work around . However, as you you know,&lt;br/&gt;
the camel and osgi refactoring last time around seems to have hidden a few camel osgi packages as private, which means that, with this workaround we need access to these hidden osgi classes. But thats another story..&lt;/p&gt;

</comment>
                            <comment id="12956835" author="davsclaus" created="Wed, 22 Sep 2010 09:56:40 +0000"  >&lt;p&gt;Thanks Bjorn.&lt;/p&gt;

&lt;p&gt;I have fixed it so the &lt;tt&gt;getTypeConverterRegistry&lt;/tt&gt; on &lt;tt&gt;CamelContext&lt;/tt&gt; returns the osgi aware which is now also a &lt;tt&gt;TypeConverterRegistry&lt;/tt&gt; so you can add your custom type converters directly to it. So the ugly hack is not needed.&lt;/p&gt;

&lt;p&gt;Also I have refined the code in &lt;tt&gt;DozerTypeConverterLoader&lt;/tt&gt; to not use the Dozer CustomerMappingLoader which doesn&apos;t work in OSGi.&lt;br/&gt;
Now the mapping files can be correctly loaded in OSGi.&lt;/p&gt;

&lt;p&gt;However Dozer bits me later when you use the &lt;tt&gt;DozerBeanMapper&lt;/tt&gt; because it want&apos;s to load the mapping file once again.&lt;br/&gt;
And the Dozer API is unfriendly to customize so we can&apos;t work around this.&lt;/p&gt;</comment>
                            <comment id="12956814" author="cl4es" created="Wed, 22 Sep 2010 12:09:40 +0000"  >&lt;p&gt;Nicely done! &lt;/p&gt;

&lt;p&gt; We&apos;ve gotten dozer to work in ServiceMix 4.3 by explicitly importing the resource folder which contains the dozer mapping file, i.e. &lt;tt&gt;&amp;lt;Export-Package&amp;gt;mappings&amp;lt;/Export-Package&amp;gt;&lt;/tt&gt; in the maven felix plugin. &lt;/p&gt;

&lt;p&gt; We had to get this to work inside ServiceMix 4.3, so we improved the previous temporary workaround some to account for camel-core-osgi being a private package with an even &lt;b&gt;uglier&lt;/b&gt; hack to account for the mindboggling fact that OSGi can load stuff in different classloaders, making us unable to actually cast to OsgiTypeConverter (as in our previous workaround - test code first, good, yes yes):&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;

    TypeConverter typeConverter = camelContext.getTypeConverter();
    &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; { 
        Method method = typeConverter.getClass().getMethod(&lt;span class=&quot;code-quote&quot;&gt;&quot;getRegistry&quot;&lt;/span&gt;);
        registry = (DefaultTypeConverter)method.invoke(typeConverter);
    } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (Throwable t) {
        registry = (DefaultTypeConverter)typeConverter; 
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Cheers! &lt;/p&gt;</comment>
                            <comment id="13024028" author="davsclaus" created="Sun, 24 Apr 2011 09:58:02 +0000"  >&lt;p&gt;Closing all resolved tickets from 2010 or older&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 22 Sep 2010 06:31:50 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>76331</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            5 years, 32 weeks, 5 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i01sxb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>8455</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>