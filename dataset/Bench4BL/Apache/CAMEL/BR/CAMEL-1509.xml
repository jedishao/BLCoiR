<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sat Dec 03 03:03:02 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/CAMEL-1509/CAMEL-1509.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[CAMEL-1509] DefaultCamelContext.isStarting returns incorrect status</title>
                <link>https://issues.apache.org/jira/browse/CAMEL-1509</link>
                <project id="12311211" key="CAMEL">Camel</project>
                    <description>&lt;p&gt;DefaultCamelContext.isStarting returns true while it actually not started.&lt;br/&gt;
So the following groovy test case fails:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeHeader panelHeader&quot; style=&quot;border-bottom-width: 1px;&quot;&gt;&lt;b&gt;test.groovy&lt;/b&gt;&lt;/div&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.camel.impl.DefaultCamelContext;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.camel.language.groovy.GroovyRouteBuilder;

class Foo {
    def name
    def data
    void run(data) {
        println &lt;span class=&quot;code-quote&quot;&gt;&quot;[${name}] got ${data}&quot;&lt;/span&gt;
        &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.data = data
    }
}

&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; class MyRoute &lt;span class=&quot;code-keyword&quot;&gt;extends&lt;/span&gt; GroovyRouteBuilder {
    def bean = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Foo(name: &lt;span class=&quot;code-quote&quot;&gt;&quot;bean&quot;&lt;/span&gt;)
    &lt;span class=&quot;code-keyword&quot;&gt;protected&lt;/span&gt; void configure() {
        from(&lt;span class=&quot;code-quote&quot;&gt;&quot;direct:start&quot;&lt;/span&gt;).bean(bean, &lt;span class=&quot;code-quote&quot;&gt;&quot;run&quot;&lt;/span&gt;)
    }
}

camelCtx = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; DefaultCamelContext()
route = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; MyRoute()
camelCtx.addRoutes(route);

&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.start {
    camelCtx.start();
}

&lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; (camelCtx.isStarting()) {
    &lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.sleep(1000)
}

camelCtx.createProducerTemplate().sendBody(&lt;span class=&quot;code-quote&quot;&gt;&quot;direct:start&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;data&quot;&lt;/span&gt;)
&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (!route.bean.data) {
    println &lt;span class=&quot;code-quote&quot;&gt;&quot;FAILED: no data has been received!&quot;&lt;/span&gt;
} &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; {
    println &lt;span class=&quot;code-quote&quot;&gt;&quot;PASSED&quot;&lt;/span&gt;
}

camelCtx.stop();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Note, after moving of  &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;camelCtx.addRoutes(route)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt; after&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.start {
    camelCtx.start();
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;the test passes.&lt;/p&gt;

&lt;p&gt;Also the program does not finish after camelCtx.stop();&lt;/p&gt;</description>
                <environment></environment>
        <key id="12485056">CAMEL-1509</key>
            <summary>DefaultCamelContext.isStarting returns incorrect status</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="njiang">Willem Jiang</assignee>
                                    <reporter username="san">Alexander Kleymenov</reporter>
                        <labels>
                    </labels>
                <created>Wed, 1 Apr 2009 17:12:45 +0000</created>
                <updated>Sat, 21 Nov 2009 11:57:57 +0000</updated>
                            <resolved>Wed, 8 Apr 2009 09:23:01 +0000</resolved>
                                    <version>1.6.0</version>
                    <version>2.0-M1</version>
                                    <fixVersion>1.6.1</fixVersion>
                    <fixVersion>2.0-M2</fixVersion>
                                    <component>camel-core</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12951563" author="njiang" created="Thu, 2 Apr 2009 02:28:46 +0000"  >&lt;p&gt;Hi&lt;br/&gt;
Can you add a check for the camelCtx.isStarted() for waiting for camelCtx starting?&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
camelCtx = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; DefaultCamelContext()
route = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; MyRoute()
camelCtx.addRoutes(route);

&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.start {
    camelCtx.start();
}

&lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; (!camelCtx.isStarted() || camelCtx.isStarting()) {
    &lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.sleep(1000)
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I just checked the code. If the camelCtx.start() code is running later than the camelCtx.isStarting() check,&lt;br/&gt;
the test will failed since the route rule is not started yet.&lt;/p&gt;</comment>
                            <comment id="12951480" author="san" created="Thu, 2 Apr 2009 03:37:22 +0000"  >&lt;p&gt;Willem, thank you for taking this!&lt;br/&gt;
Should not this implication be always true:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
isStarting =&amp;gt; !isStarted
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;?&lt;/p&gt;</comment>
                            <comment id="12951562" author="njiang" created="Thu, 2 Apr 2009 03:51:23 +0000"  >&lt;p&gt;Here your are the starting codes&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void start() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; Exception {
        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (started.compareAndSet(&lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;, &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;)) {
            starting.set(&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;);
            &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
                &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (childServices != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
                    ServiceHelper.startServices(childServices);
                }
                doStart();
            } &lt;span class=&quot;code-keyword&quot;&gt;finally&lt;/span&gt; {
                notStarting();
            }
        }
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;started and starting flag are false by default.&lt;/p&gt;

&lt;p&gt;if the camel context finishe the start process, &lt;br/&gt;
the staring flag wil be set to false again.&lt;/p&gt;

&lt;p&gt;So , if the camel context&apos;s start method doesn&apos;t be called , &lt;br/&gt;
isStarting != ! isStarted.&lt;/p&gt;
</comment>
                            <comment id="12951561" author="san" created="Thu, 2 Apr 2009 03:56:32 +0000"  >&lt;p&gt;BTW,&lt;br/&gt;
Timer thread introduced in &lt;a href=&quot;https://issues.apache.org/activemq/browse/CAMEL-1129&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/activemq/browse/CAMEL-1129&lt;/a&gt; prevents the program from being finished.&lt;br/&gt;
That&apos;s because timer is being created as not a daemon. I tried DeadLetterChannel.java with line 52 fixed as this:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; Timer timer = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Timer(&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;); &lt;span class=&quot;code-comment&quot;&gt;// create timer with associated thread running as daemon&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;and it works fine.&lt;br/&gt;
Should it be a separate issue, or this info is enough for issue to be fixed?&lt;/p&gt;</comment>
                            <comment id="12951568" author="san" created="Thu, 2 Apr 2009 04:03:31 +0000"  >&lt;blockquote&gt;
&lt;p&gt;if the camel context finishe the start process,&lt;br/&gt;
the staring flag wil be set to false again.&lt;/p&gt;

&lt;p&gt;So , if the camel context&apos;s start method doesn&apos;t be called ,&lt;br/&gt;
isStarting != ! isStarted.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; of course, I mean the timeline between ctx.start() and ctx.stop() (outside of which both methods should return false).&lt;/p&gt;</comment>
                            <comment id="12951569" author="marat" created="Thu, 2 Apr 2009 04:23:50 +0000"  >&lt;p&gt;The logic in the ServiceSupport is somewhat interesting. &lt;/p&gt;

&lt;p&gt;The state goes from&lt;/p&gt;

&lt;p&gt;Thread1 -&amp;gt; ServiceSuppoet.start() -&amp;gt; starting = false and stared = false -&amp;gt; starting = true and started = true -&amp;gt; starting = false and started = true&lt;/p&gt;

&lt;p&gt;Now why is started = true is set before starting = true? started is in pass tense, so to me this is clearly that started = true should have been set &lt;b&gt;after&lt;/b&gt; starting went from true to false&lt;/p&gt;

&lt;p&gt;Moreover there is also a race.&lt;/p&gt;

&lt;p&gt;Look at the ServiceSupport.stop() method its state goes like this:&lt;/p&gt;

&lt;p&gt;Thread 1-&amp;gt; ServiceSupport.stop() -&amp;gt; started = true and stopping = false -&amp;gt; stopping = true -&amp;gt; stopped = true and  started = false and stopping = false&lt;/p&gt;

&lt;p&gt;Now lets look at this scenario, 2 threads invoking onto the same CamelContext&lt;/p&gt;

&lt;p&gt;Thread1 -&amp;gt;ServiceSupport.start() -&amp;gt; starting = false and stared = false -&amp;gt; starting = true and started = true -&amp;gt; @&lt;br/&gt;
Thread2-&amp;gt; ServiceSupport.stop() -&amp;gt; started = true and stopping = false -&amp;gt; stopping = true -&amp;gt; @&lt;/p&gt;

&lt;p&gt;@ is the point in time when we will have a concurrent start and stop logic executed on the same context and I&apos;d imagine this can&apos;t be good &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;
</comment>
                            <comment id="12951578" author="njiang" created="Thu, 2 Apr 2009 07:01:40 +0000"  >&lt;p&gt;@Alexander&lt;br/&gt;
Thanks for point out the timer&apos;s issue. I will did a quick fix for that.&lt;br/&gt;
Since it a small fix, I think we can trace it in this issue.&lt;/p&gt;</comment>
                            <comment id="12951579" author="njiang" created="Thu, 2 Apr 2009 07:08:01 +0000"  >&lt;p&gt;@Marat&lt;/p&gt;

&lt;p&gt;I  think we set tthe started and stopped to true at first line is to avoid different thread calling the start() or stop() more than twice at the same time.&lt;br/&gt;
For the thread1, and thread2 call the start() and stop() at the same time I don&apos;t think it will happen in normal situation. &lt;/p&gt;</comment>
                            <comment id="12951587" author="davsclaus" created="Thu, 2 Apr 2009 07:20:17 +0000"  >&lt;p&gt;Yeah the logic is a bit special&lt;/p&gt;

&lt;p&gt;I guess it needs to be set as Started before starting all its child services. I am just guessing here. James S. might remember.&lt;/p&gt;

&lt;p&gt;However it could be that the &lt;b&gt;isStarted&lt;/b&gt; method could be changed to:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; isStarted() {
        &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; started.get() &amp;amp;&amp;amp; !starting.get();
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Then it will only return true when the starting is complete.&lt;/p&gt;
</comment>
                            <comment id="12951580" author="njiang" created="Thu, 2 Apr 2009 07:23:06 +0000"  >&lt;p&gt;@Alexander,&lt;/p&gt;

&lt;p&gt;I just checked the code of Camel trunk ( Camel 2.0-SNAPSHOT) the timer thread issue was fixed in &lt;a href=&quot;https://issues.apache.org/jira/browse/CAMEL-1460&quot; title=&quot;DeadLetterChannel - Should be able to set Endpoint as ref&quot; class=&quot;issue-link&quot; data-issue-key=&quot;CAMEL-1460&quot;&gt;&lt;del&gt;CAMEL-1460&lt;/del&gt;&lt;/a&gt;, but the patch is not merged into camel-1.x branch.&lt;br/&gt;
I&apos;m working on this.&lt;/p&gt;</comment>
                            <comment id="12951673" author="hadrian" created="Tue, 7 Apr 2009 06:21:20 +0000"  >&lt;p&gt;@Willem, I just committed a fix for the state machine.  The state transitions are:&lt;/p&gt;

&lt;p&gt;Created -&amp;gt; Starting&lt;br/&gt;
Starting -&amp;gt; Started&lt;br/&gt;
Starting -&amp;gt; Stopping (on exception)&lt;br/&gt;
Stopping -&amp;gt; Stopped&lt;/p&gt;

&lt;p&gt;Started only becomes true &lt;b&gt;after&lt;/b&gt; the starting process finished, so starting and started are not true at the same time anymore.&lt;/p&gt;

&lt;p&gt;Please note that I left the previous route starting behavior unchanged.  That is routes start &lt;b&gt;after&lt;/b&gt; the context is started, which means that the context may be reported as started, but the routes may still be starting.  I believe this is the correct behavior given the fact that routes could be added at runtime to a started context.&lt;/p&gt;

&lt;p&gt;Is there anything left to be done for this issue? &lt;/p&gt;</comment>
                            <comment id="12951679" author="njiang" created="Tue, 7 Apr 2009 08:20:49 +0000"  >&lt;p&gt;@Hadrian&lt;br/&gt;
Thanks for looking into this issue, your patch make the service state more clear &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; &lt;br/&gt;
Here is a side effect of your changing (&lt;a href=&quot;https://issues.apache.org/jira/browse/CAMEL-1515&quot; title=&quot;Add isStratingFinished() method to the ServiceSupport class&quot; class=&quot;issue-link&quot; data-issue-key=&quot;CAMEL-1515&quot;&gt;&lt;del&gt;CAMEL-1515&lt;/del&gt;&lt;/a&gt;) if we change the semantic of started, it will cause some side effect by adding some component which will not be started.&lt;br/&gt;
Don&apos;t worry , I just did a quick fix for that. &lt;/p&gt;</comment>
                            <comment id="12951687" author="hadrian" created="Tue, 7 Apr 2009 12:01:51 +0000"  >&lt;p&gt;@Willem, you&apos;re right.  I saw that and later forgot about it, that method didn&apos;t need to be there anymore. Thanks!&lt;/p&gt;

&lt;p&gt;Can we close this now?&lt;/p&gt;</comment>
                            <comment id="12951697" author="njiang" created="Wed, 8 Apr 2009 09:22:24 +0000"  >&lt;p&gt;@Hadrian&lt;/p&gt;

&lt;p&gt;I merged the patch back to camel-1.x, so we can close it know.&lt;/p&gt;

&lt;p&gt;trunk&lt;br/&gt;
&lt;a href=&quot;http://svn.apache.org/viewvc?rev=762633&amp;amp;view=rev&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewvc?rev=762633&amp;amp;view=rev&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;camel-1.x&lt;br/&gt;
&lt;a href=&quot;http://svn.apache.org/viewvc?rev=763092&amp;amp;view=rev&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewvc?rev=763092&amp;amp;view=rev&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12953600" author="davsclaus" created="Sat, 21 Nov 2009 11:57:57 +0000"  >&lt;p&gt;Closing all 2.0M2 tickets&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 2 Apr 2009 02:28:46 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>76828</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            7 years, 2 weeks, 6 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i01iun:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>6823</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>