<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sat Dec 03 03:27:27 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/CAMEL-2129/CAMEL-2129.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[CAMEL-2129] Misleading exception when a Camel-CXF Service call times out (Null InputStream is not a valid argument)</title>
                <link>https://issues.apache.org/jira/browse/CAMEL-2129</link>
                <project id="12311211" key="CAMEL">Camel</project>
                    <description>&lt;p&gt;We use camel-cxf and camel-jms to offer CXF services over SOAP/JMS.&lt;/p&gt;

&lt;p&gt;When the client calls the service by using the generated stub code and a timeout occurs I get an exception &quot;Null InputStream is not a valid argument&quot;. I would rather expect something like &quot;Timeout calling service&quot;. Full stack trace is attached below.&lt;/p&gt;

&lt;p&gt;The routing config is attached below.&lt;br/&gt;
&amp;lt;client id=&quot;customerService&quot; xmlns=&quot;http://cxf.apache.org/jaxws&quot;&lt;br/&gt;
xmlns:service=&quot;http://examples.etg.services.enbw.net/&quot;&lt;br/&gt;
  serviceName=&quot;service:CustomerService&quot;&lt;br/&gt;
  endpointName=&quot;service:CustomerServiceEndpoint&quot;&lt;br/&gt;
  serviceClass=&quot;net.enbw.services.etg.examples.customerservice.CustomerServiceV1&quot;&lt;br/&gt;
  address=&quot;camel://direct:client&quot;&amp;gt;&lt;br/&gt;
&amp;lt;/client&amp;gt;&lt;/p&gt;

&lt;p&gt;&amp;lt;camelContext id=&quot;camelContext&quot; trace=&quot;false&quot; xmlns=&quot;http://camel.apache.org/schema/spring&quot;&amp;gt;&lt;br/&gt;
  &amp;lt;route&amp;gt;&lt;br/&gt;
    &amp;lt;from uri=&quot;direct:client&quot;/&amp;gt;&lt;br/&gt;
    &amp;lt;to uri=&quot;jms://queue.net.enbw.services.etg.examples.customerservice.CustomerService&quot; /&amp;gt;&lt;br/&gt;
  &amp;lt;/route&amp;gt;&lt;br/&gt;
&amp;lt;/camelContext&amp;gt;&lt;/p&gt;

&lt;p&gt;------&lt;br/&gt;
03.11.2009 13:20:58 org.apache.cxf.phase.PhaseInterceptorChain doIntercept&lt;br/&gt;
WARNUNG: Interceptor has thrown exception, unwinding now&lt;br/&gt;
java.lang.IllegalArgumentException: Null InputStream is not a valid argument&lt;br/&gt;
	at com.ctc.wstx.stax.WstxInputFactory.createSR(WstxInputFactory.java:614)&lt;br/&gt;
	at com.ctc.wstx.stax.WstxInputFactory.createXMLStreamReader(WstxInputFactory.java:324)&lt;br/&gt;
	at org.apache.cxf.staxutils.StaxUtils.createXMLStreamReader(StaxUtils.java:879)&lt;br/&gt;
	at org.apache.cxf.interceptor.StaxInInterceptor.handleMessage(StaxInInterceptor.java:83)&lt;br/&gt;
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:236)&lt;br/&gt;
	at org.apache.cxf.endpoint.ClientImpl.onMessage(ClientImpl.java:664)&lt;br/&gt;
	at org.apache.camel.component.cxf.transport.CamelConduit$CamelOutputStream.handleResponse(CamelConduit.java:191)&lt;br/&gt;
	at org.apache.camel.component.cxf.transport.CamelConduit$CamelOutputStream.commitOutputMessage(CamelConduit.java:183)&lt;br/&gt;
	at org.apache.camel.component.cxf.transport.CamelConduit$CamelOutputStream.doClose(CamelConduit.java:153)&lt;br/&gt;
	at org.apache.cxf.io.CachedOutputStream.close(CachedOutputStream.java:185)&lt;br/&gt;
	at org.apache.cxf.transport.AbstractConduit.close(AbstractConduit.java:66)&lt;br/&gt;
	at org.apache.cxf.interceptor.MessageSenderInterceptor$MessageSenderEndingInterceptor.handleMessage(MessageSenderInterceptor.java:62)&lt;br/&gt;
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:236)&lt;br/&gt;
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:478)&lt;br/&gt;
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:308)&lt;br/&gt;
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:260)&lt;br/&gt;
	at org.apache.cxf.frontend.ClientProxy.invokeSync(ClientProxy.java:73)&lt;br/&gt;
	at org.apache.cxf.jaxws.JaxWsClientProxy.invoke(JaxWsClientProxy.java:124)&lt;br/&gt;
	at $Proxy63.readCustomersByName(Unknown Source)&lt;br/&gt;
	at net.enbw.endur.AppModule.doBusiness(AppModule.java:34)&lt;br/&gt;
	at net.enbw.endur.AppMain.main(AppMain.java:23)&lt;br/&gt;
Exception in thread &quot;main&quot; javax.xml.ws.soap.SOAPFaultException: Null InputStream is not a valid argument&lt;br/&gt;
	at org.apache.cxf.jaxws.JaxWsClientProxy.invoke(JaxWsClientProxy.java:146)&lt;br/&gt;
	at $Proxy63.readCustomersByName(Unknown Source)&lt;br/&gt;
	at net.enbw.endur.AppModule.doBusiness(AppModule.java:34)&lt;br/&gt;
	at net.enbw.endur.AppMain.main(AppMain.java:23)&lt;br/&gt;
Caused by: java.lang.IllegalArgumentException: Null InputStream is not a valid argument&lt;br/&gt;
	at com.ctc.wstx.stax.WstxInputFactory.createSR(WstxInputFactory.java:614)&lt;br/&gt;
	at com.ctc.wstx.stax.WstxInputFactory.createXMLStreamReader(WstxInputFactory.java:324)&lt;br/&gt;
	at org.apache.cxf.staxutils.StaxUtils.createXMLStreamReader(StaxUtils.java:879)&lt;br/&gt;
	at org.apache.cxf.interceptor.StaxInInterceptor.handleMessage(StaxInInterceptor.java:83)&lt;br/&gt;
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:236)&lt;br/&gt;
	at org.apache.cxf.endpoint.ClientImpl.onMessage(ClientImpl.java:664)&lt;br/&gt;
	at org.apache.camel.component.cxf.transport.CamelConduit$CamelOutputStream.handleResponse(CamelConduit.java:191)&lt;br/&gt;
	at org.apache.camel.component.cxf.transport.CamelConduit$CamelOutputStream.commitOutputMessage(CamelConduit.java:183)&lt;br/&gt;
	at org.apache.camel.component.cxf.transport.CamelConduit$CamelOutputStream.doClose(CamelConduit.java:153)&lt;br/&gt;
	at org.apache.cxf.io.CachedOutputStream.close(CachedOutputStream.java:185)&lt;br/&gt;
	at org.apache.cxf.transport.AbstractConduit.close(AbstractConduit.java:66)&lt;br/&gt;
	at org.apache.cxf.interceptor.MessageSenderInterceptor$MessageSenderEndingInterceptor.handleMessage(MessageSenderInterceptor.java:62)&lt;br/&gt;
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:236)&lt;br/&gt;
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:478)&lt;br/&gt;
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:308)&lt;br/&gt;
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:260)&lt;br/&gt;
	at org.apache.cxf.frontend.ClientProxy.invokeSync(ClientProxy.java:73)&lt;br/&gt;
	at org.apache.cxf.jaxws.JaxWsClientProxy.invoke(JaxWsClientProxy.java:124)&lt;br/&gt;
	... 3 more&lt;/p&gt;
</description>
                <environment></environment>
        <key id="12486711">CAMEL-2129</key>
            <summary>Misleading exception when a Camel-CXF Service call times out (Null InputStream is not a valid argument)</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="njiang">Willem Jiang</assignee>
                                    <reporter username="chris@die-schneider.net">Christian Schneider</reporter>
                        <labels>
                    </labels>
                <created>Tue, 3 Nov 2009 13:01:35 +0000</created>
                <updated>Sun, 15 Nov 2009 08:31:38 +0000</updated>
                            <resolved>Wed, 11 Nov 2009 01:52:04 +0000</resolved>
                                    <version>2.0.0</version>
                                    <fixVersion>1.6.2</fixVersion>
                    <fixVersion>2.1.0</fixVersion>
                                    <component>camel-cxf</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12953371" author="chris@die-schneider.net" created="Tue, 3 Nov 2009 13:05:31 +0000"  >&lt;p&gt;The same exception appears if the jms server is not started. In this case I would expect an exception like &quot;JMS Component could not connect to jms server&quot;. At least shortly after this exception an info message is logged that says &quot;Could not refresh JMS Connection&quot;.&lt;/p&gt;

&lt;p&gt;Stack trace:&lt;br/&gt;
&amp;#8211; &lt;br/&gt;
03.11.2009 14:03:42 org.apache.cxf.phase.PhaseInterceptorChain doIntercept&lt;br/&gt;
WARNUNG: Interceptor has thrown exception, unwinding now&lt;br/&gt;
java.lang.IllegalArgumentException: Null InputStream is not a valid argument&lt;br/&gt;
	at com.ctc.wstx.stax.WstxInputFactory.createSR(WstxInputFactory.java:614)&lt;br/&gt;
	at com.ctc.wstx.stax.WstxInputFactory.createXMLStreamReader(WstxInputFactory.java:324)&lt;br/&gt;
	at org.apache.cxf.staxutils.StaxUtils.createXMLStreamReader(StaxUtils.java:879)&lt;br/&gt;
	at org.apache.cxf.interceptor.StaxInInterceptor.handleMessage(StaxInInterceptor.java:83)&lt;br/&gt;
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:236)&lt;br/&gt;
	at org.apache.cxf.endpoint.ClientImpl.onMessage(ClientImpl.java:664)&lt;br/&gt;
	at org.apache.camel.component.cxf.transport.CamelConduit$CamelOutputStream.handleResponse(CamelConduit.java:191)&lt;br/&gt;
	at org.apache.camel.component.cxf.transport.CamelConduit$CamelOutputStream.commitOutputMessage(CamelConduit.java:183)&lt;br/&gt;
	at org.apache.camel.component.cxf.transport.CamelConduit$CamelOutputStream.doClose(CamelConduit.java:153)&lt;br/&gt;
	at org.apache.cxf.io.CachedOutputStream.close(CachedOutputStream.java:185)&lt;br/&gt;
	at org.apache.cxf.transport.AbstractConduit.close(AbstractConduit.java:66)&lt;br/&gt;
	at org.apache.cxf.interceptor.MessageSenderInterceptor$MessageSenderEndingInterceptor.handleMessage(MessageSenderInterceptor.java:62)&lt;br/&gt;
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:236)&lt;br/&gt;
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:478)&lt;br/&gt;
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:308)&lt;br/&gt;
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:260)&lt;br/&gt;
	at org.apache.cxf.frontend.ClientProxy.invokeSync(ClientProxy.java:73)&lt;br/&gt;
	at org.apache.cxf.jaxws.JaxWsClientProxy.invoke(JaxWsClientProxy.java:124)&lt;br/&gt;
	at $Proxy63.readCustomersByName(Unknown Source)&lt;br/&gt;
	at net.enbw.endur.AppModule.doBusiness(AppModule.java:25)&lt;br/&gt;
	at net.enbw.endur.AppMain.main(AppMain.java:23)&lt;br/&gt;
14:05:09,213 INFO  org.springframework.jms.listener.DefaultMessageListenerContainer refreshConnectionUntilSuccessful - Could not refresh JMS Connection - retrying in 100000 ms: javax.jms.JMSException: Failed to connect to the server at tcp://localhost:7222&lt;/p&gt;</comment>
                            <comment id="12952240" author="njiang" created="Thu, 5 Nov 2009 03:14:26 +0000"  >&lt;p&gt;@Christian&lt;br/&gt;
I rechecked to code of CamelConduit and found we should check the template&apos;s exception before we continue to process the message.&lt;br/&gt;
I will commit a quick patch for this. You should get a IOException with the cause message now.&lt;/p&gt;</comment>
                            <comment id="12952253" author="njiang" created="Thu, 5 Nov 2009 03:26:00 +0000"  >&lt;p&gt;trunk&lt;br/&gt;
&lt;a href=&quot;http://svn.apache.org/viewvc?rev=832981&amp;amp;view=rev&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewvc?rev=832981&amp;amp;view=rev&lt;/a&gt;&lt;br/&gt;
camel 1.x branch&lt;br/&gt;
&lt;a href=&quot;http://svn.apache.org/viewvc?rev=832983&amp;amp;view=rev&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewvc?rev=832983&amp;amp;view=rev&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12952288" author="chris@die-schneider.net" created="Thu, 5 Nov 2009 08:28:02 +0000"  >&lt;p&gt;Hi Willem,&lt;/p&gt;

&lt;p&gt;could you change the two places where you throw the exception into:&lt;br/&gt;
  throw new IOException(&quot;Can&apos;t get the response message&quot;, ex);&lt;br/&gt;
instead of:&lt;br/&gt;
  throw new IOException(&quot;Can&apos;t get the response message. Caused by: &quot; + ex);&lt;/p&gt;

&lt;p&gt;and &lt;/p&gt;

&lt;p&gt;   throw new IOException(&quot;Can&apos;t get the response message&quot;, exchange.getException());&lt;br/&gt;
instead of &lt;br/&gt;
   throw new IOException(&quot;Can&apos;t get the response message. Caused by &quot; + exchange.getException());&lt;/p&gt;

&lt;p&gt;This will forward the stack trace.&lt;/p&gt;

&lt;p&gt;After this additional change when I simply start a cxf client that forwards its message to camel jms I get the exception below. This still does not look correct. The root cause is a nullpointer exception in SimpleMessageListenerContainer.doShutdown. The attributes consumers and sessions are null. The implementation does not check this though. This results in the throw ex not being executed:&lt;/p&gt;

&lt;p&gt;if (ex != null) &lt;/p&gt;
{

  stop(childrenStarted); &amp;lt;----- inside here we get the nullpointer ex

  throw ex; &amp;lt;---- So this exception is lost

}

&lt;p&gt;As we can not directly fix this I think the way to fix the problem is catching this exception in camel.impl.ServiceSupport.stop. A try catch that ignores all errors should do the trick. &lt;/p&gt;

&lt;p&gt;org.apache.cxf.interceptor.Fault: Could not send Message.&lt;br/&gt;
	at org.apache.cxf.interceptor.MessageSenderInterceptor$MessageSenderEndingInterceptor.handleMessage(MessageSenderInterceptor.java:64)&lt;br/&gt;
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:236)&lt;br/&gt;
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:471)&lt;br/&gt;
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:301)&lt;br/&gt;
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:253)&lt;br/&gt;
	at org.apache.cxf.frontend.ClientProxy.invokeSync(ClientProxy.java:73)&lt;br/&gt;
	at org.apache.cxf.jaxws.JaxWsClientProxy.invoke(JaxWsClientProxy.java:121)&lt;br/&gt;
	at $Proxy61.getCustomersByName(Unknown Source)&lt;br/&gt;
	at com.example.customerservice.impl.CustomerServiceClient.main(CustomerServiceClient.java:45)&lt;br/&gt;
Caused by: java.io.IOException: Can&apos;t get the response message&lt;br/&gt;
	at org.apache.camel.component.cxf.transport.CamelConduit$CamelOutputStream.commitOutputMessage(CamelConduit.java:186)&lt;br/&gt;
	at org.apache.camel.component.cxf.transport.CamelConduit$CamelOutputStream.doClose(CamelConduit.java:155)&lt;br/&gt;
	at org.apache.cxf.io.CachedOutputStream.close(CachedOutputStream.java:177)&lt;br/&gt;
	at org.apache.cxf.transport.AbstractConduit.close(AbstractConduit.java:66)&lt;br/&gt;
	at org.apache.cxf.interceptor.MessageSenderInterceptor$MessageSenderEndingInterceptor.handleMessage(MessageSenderInterceptor.java:62)&lt;br/&gt;
	... 8 more&lt;br/&gt;
Caused by: org.apache.camel.FailedToCreateProducerException: Failed to create Producer for endpoint: Endpoint&lt;span class=&quot;error&quot;&gt;&amp;#91;jms://queue:CustomerService&amp;#93;&lt;/span&gt;. Reason: java.lang.NullPointerException&lt;br/&gt;
	at org.apache.camel.component.jms.JmsProducer.testAndSetRequestor(JmsProducer.java:116)&lt;br/&gt;
	at org.apache.camel.component.jms.JmsProducer.processInOut(JmsProducer.java:175)&lt;br/&gt;
	at org.apache.camel.component.jms.JmsProducer.process(JmsProducer.java:147)&lt;br/&gt;
	at org.apache.camel.processor.SendProcessor$1.doInProducer(SendProcessor.java:81)&lt;br/&gt;
	at org.apache.camel.processor.SendProcessor$1.doInProducer(SendProcessor.java:79)&lt;br/&gt;
	at org.apache.camel.impl.ProducerCache.doInProducer(ProducerCache.java:141)&lt;br/&gt;
	at org.apache.camel.processor.SendProcessor.process(SendProcessor.java:78)&lt;br/&gt;
	at org.apache.camel.management.InstrumentationProcessor.process(InstrumentationProcessor.java:61)&lt;br/&gt;
	at org.apache.camel.management.InstrumentationProcessor.process(InstrumentationProcessor.java:61)&lt;br/&gt;
	at org.apache.camel.processor.RedeliveryErrorHandler.processExchange(RedeliveryErrorHandler.java:186)&lt;br/&gt;
	at org.apache.camel.processor.RedeliveryErrorHandler.processErrorHandler(RedeliveryErrorHandler.java:155)&lt;br/&gt;
	at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:88)&lt;br/&gt;
	at org.apache.camel.processor.DefaultErrorHandler.process(DefaultErrorHandler.java:49)&lt;br/&gt;
	at org.apache.camel.processor.DefaultChannel.process(DefaultChannel.java:148)&lt;br/&gt;
	at org.apache.camel.processor.UnitOfWorkProcessor.processNext(UnitOfWorkProcessor.java:54)&lt;br/&gt;
	at org.apache.camel.processor.DelegateProcessor.process(DelegateProcessor.java:48)&lt;br/&gt;
	at org.apache.camel.component.direct.DirectProducer.process(DirectProducer.java:45)&lt;br/&gt;
	at org.apache.camel.impl.ProducerCache$1.doInProducer(ProducerCache.java:170)&lt;br/&gt;
	at org.apache.camel.impl.ProducerCache$1.doInProducer(ProducerCache.java:156)&lt;br/&gt;
	at org.apache.camel.impl.ProducerCache.doInProducer(ProducerCache.java:141)&lt;br/&gt;
	at org.apache.camel.impl.ProducerCache.sendExchange(ProducerCache.java:155)&lt;br/&gt;
	at org.apache.camel.impl.ProducerCache.send(ProducerCache.java:111)&lt;br/&gt;
	at org.apache.camel.impl.DefaultProducerTemplate.send(DefaultProducerTemplate.java:101)&lt;br/&gt;
	at org.apache.camel.impl.DefaultProducerTemplate.send(DefaultProducerTemplate.java:88)&lt;br/&gt;
	at org.apache.camel.component.cxf.transport.CamelConduit$CamelOutputStream.commitOutputMessage(CamelConduit.java:172)&lt;br/&gt;
	... 12 more&lt;br/&gt;
Caused by: java.lang.NullPointerException&lt;br/&gt;
	at org.springframework.jms.listener.SimpleMessageListenerContainer.doShutdown(SimpleMessageListenerContainer.java:304)&lt;br/&gt;
	at org.springframework.jms.listener.AbstractJmsListeningContainer.shutdown(AbstractJmsListeningContainer.java:211)&lt;br/&gt;
	at org.springframework.jms.listener.AbstractJmsListeningContainer.destroy(AbstractJmsListeningContainer.java:149)&lt;br/&gt;
	at org.apache.camel.component.jms.requestor.Requestor.doStop(Requestor.java:212)&lt;br/&gt;
	at org.apache.camel.impl.ServiceSupport.stop(ServiceSupport.java:74)&lt;br/&gt;
	at org.apache.camel.impl.ServiceSupport.start(ServiceSupport.java:57)&lt;br/&gt;
	at org.apache.camel.component.jms.JmsProducer.testAndSetRequestor(JmsProducer.java:108)&lt;br/&gt;
	... 36 more&lt;/p&gt;</comment>
                            <comment id="12952305" author="njiang" created="Thu, 5 Nov 2009 08:38:43 +0000"  >&lt;p&gt;@Christian&lt;br/&gt;
JDK 1.5 doesn&apos;t provide the construction method of IOException like this&lt;br/&gt;
IOException(String message, Throwable t);&lt;/p&gt;

&lt;p&gt;So I took the advise of Claus to use the utils method of camel to create IOException like this&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
IOException cause = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; IOException(&lt;span class=&quot;code-quote&quot;&gt;&quot;xxxx&quot;&lt;/span&gt;):
cause.initCause(e);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Can you try out the last trunk code which contains my change to verify it ?&lt;/p&gt;</comment>
                            <comment id="12951350" author="chris@die-schneider.net" created="Thu, 5 Nov 2009 23:45:01 +0000"  >&lt;p&gt;I have tested your new patch. Looks good to me but we should still fix the bug that causes the &quot;Could not connect to broker&quot; to be swallowed. I will add a patch for this.&lt;/p&gt;</comment>
                            <comment id="12951355" author="chris@die-schneider.net" created="Thu, 5 Nov 2009 23:50:27 +0000"  >&lt;p&gt;This is a patch for camel core done on basis of camel 2.0.0. The bug is in ServiceSupport.start().&lt;br/&gt;
After an exception happens it tries to stop the service without catch possible exceptions the could happen inside the stop method. I just added a try catch and ignored any exceptions. A comment explains why the catch is empty.&lt;/p&gt;</comment>
                            <comment id="12953334" author="njiang" created="Wed, 11 Nov 2009 01:52:04 +0000"  >&lt;p&gt;Applied the patch with thanks to Christian&lt;br/&gt;
trunk&lt;br/&gt;
&lt;a href=&quot;http://svn.apache.org/viewvc?rev=833285&amp;amp;view=rev&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewvc?rev=833285&amp;amp;view=rev&lt;/a&gt;&lt;br/&gt;
camel 1.x branch&lt;br/&gt;
&lt;a href=&quot;http://svn.apache.org/viewvc?rev=833288&amp;amp;view=rev&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewvc?rev=833288&amp;amp;view=rev&lt;/a&gt;&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12462835" name="camel-core-2.0.0.patch" size="797" author="chris@die-schneider.net" created="Thu, 5 Nov 2009 23:50:27 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 5 Nov 2009 03:14:26 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>76628</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            7 years, 4 weeks, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i01mon:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>7444</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>