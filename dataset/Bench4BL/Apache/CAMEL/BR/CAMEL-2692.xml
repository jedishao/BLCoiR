<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sat Dec 03 02:46:30 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/CAMEL-2692/CAMEL-2692.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[CAMEL-2692] Multithreading bug: getBody sporadically returns null</title>
                <link>https://issues.apache.org/jira/browse/CAMEL-2692</link>
                <project id="12311211" key="CAMEL">Camel</project>
                    <description>&lt;p&gt;Note that the only workaround for this bug is to remove the parallelProcessing() call in the builder.&lt;/p&gt;

&lt;p&gt;I have a simple route that processes a file by splitting on a tag and processing the DOM of each split message. The problem is that getBody is randomly returning null but ONLY when using the parallelProcessing feature of split. For some runs of the same XML file, the error does not occur at all (the file is about 2MB of data), others it will happen once or twice. I am currently using the latest 2.3-SNAPSHOT. &lt;/p&gt;

&lt;p&gt;Also note, that after detecting the null, I tried calling getBody(String.class) - this also may return null. Sometimes it does return the proper XML. &lt;/p&gt;

&lt;p&gt;Route configuration that reproduces the problem (my input XML is about 2MB with about 500 article tags): &lt;/p&gt;

&lt;p&gt;        public void configure() throws Exception { &lt;br/&gt;
          from(&quot;file&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/biggrin.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;:/inbox&quot;) &lt;br/&gt;
            .split(new XPathBuilder(&quot;//article&quot;)) &lt;br/&gt;
              .parallelProcessing()                     // remove this line getBody below never returns null &lt;br/&gt;
              .process(new Processor() { &lt;br/&gt;
                public void process(Exchange exchange) throws Exception { &lt;br/&gt;
                  Message inMessage = exchange.getIn(); &lt;br/&gt;
                  org.w3c.dom.Document domDocument = inMessage.getBody(org.w3c.dom.Document.class); &lt;br/&gt;
                  if (domDocument == null) &lt;/p&gt;
{ 
                    log(&quot;Null body&quot;); 
                  }
&lt;p&gt; else &lt;/p&gt;
{ 
                    // process DOM here 
                  }
&lt;p&gt; &lt;br/&gt;
                } &lt;br/&gt;
              }) &lt;br/&gt;
            .end() &lt;br/&gt;
        } &lt;br/&gt;
      }); &lt;/p&gt;</description>
                <environment>&lt;p&gt;Windows 7 64 bit, JDK 1.6.0_20&lt;/p&gt;</environment>
        <key id="12487318">CAMEL-2692</key>
            <summary>Multithreading bug: getBody sporadically returns null</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="davsclaus">Claus Ibsen</assignee>
                                    <reporter username="scrutinizer">Roland Knight</reporter>
                        <labels>
                    </labels>
                <created>Wed, 5 May 2010 04:57:40 +0000</created>
                <updated>Mon, 17 Jan 2011 16:50:42 +0000</updated>
                            <resolved>Wed, 12 May 2010 07:02:18 +0000</resolved>
                                    <version>1.6.2</version>
                    <version>2.3.0</version>
                                    <fixVersion>1.6.3</fixVersion>
                    <fixVersion>2.3.0</fixVersion>
                                    <component>camel-core</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12955888" author="davsclaus" created="Wed, 5 May 2010 05:01:08 +0000"  >&lt;p&gt;Can you attach a sample XML file?&lt;/p&gt;</comment>
                            <comment id="12955889" author="davsclaus" created="Wed, 5 May 2010 05:01:39 +0000"  >&lt;p&gt;And what OS are you using?&lt;br/&gt;
And can you report the JDK version number as well?&lt;/p&gt;</comment>
                            <comment id="12955890" author="scrutinizer" created="Wed, 5 May 2010 13:24:51 +0000"  >&lt;p&gt;Updated OS and exact JDK version&lt;br/&gt;
Claus, I can&apos;t attach the XML here, but I can email to you directly (please delete when finished with the file).&lt;/p&gt;</comment>
                            <comment id="12955897" author="scrutinizer" created="Wed, 5 May 2010 13:30:21 +0000"  >&lt;p&gt;Sample XML attached with JIRA user only visibility. If possible, remove this file once this issue is closed.&lt;/p&gt;</comment>
                            <comment id="12955892" author="davsclaus" created="Thu, 6 May 2010 07:00:38 +0000"  >&lt;p&gt;And you do not use any 3rd party XML parser? eg you use the parser which is included in the JDK core?&lt;/p&gt;</comment>
                            <comment id="12955891" author="davsclaus" created="Thu, 6 May 2010 07:19:32 +0000"  >&lt;p&gt;I cannot reproduce the problem you may have&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; class SplitXPathParallelBigFileIssueTest &lt;span class=&quot;code-keyword&quot;&gt;extends&lt;/span&gt; ContextTestSupport {

    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void testSplitXPathParallelBigFileIssue() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; Exception {
        getMockEndpoint(&lt;span class=&quot;code-quote&quot;&gt;&quot;mock:result&quot;&lt;/span&gt;).expectedMessageCount(144);

        assertMockEndpointsSatisfied();
    }

    @Override
    &lt;span class=&quot;code-keyword&quot;&gt;protected&lt;/span&gt; RouteBuilder createRouteBuilder() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; Exception {
        &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; RouteBuilder() {
            @Override
            &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void configure() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; Exception {
                from(&lt;span class=&quot;code-quote&quot;&gt;&quot;file:news/?noop=&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;&quot;&lt;/span&gt;)
                        .split(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; XPathBuilder(&lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-comment&quot;&gt;//article&quot;&lt;/span&gt;))
&lt;/span&gt;                            .parallelProcessing()
                            .process(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Processor() {
                                &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void process(Exchange exchange) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; Exception {
                                    Document doc = exchange.getIn().getBody(Document.class);
                                    assertNotNull(doc);

                                    &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; id = doc.getFirstChild().getAttributes().getNamedItem(&lt;span class=&quot;code-quote&quot;&gt;&quot;id&quot;&lt;/span&gt;).getTextContent();
                                    &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println(id);
                                    &lt;span class=&quot;code-comment&quot;&gt;//&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; txt = exchange.getContext().getTypeConverter().convertTo(&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;.class, doc.getFirstChild());
&lt;/span&gt;                                }
                            }).to(&lt;span class=&quot;code-quote&quot;&gt;&quot;mock:result&quot;&lt;/span&gt;)
                        .end();
            }
        };
    }

}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I can always read the 144 articles from the xml file.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;

2010-05-06 09:17:44,748 [main           ] INFO  DefaultCamelContext            - Apache Camel  (CamelContext: camel-1) is starting
2010-05-06 09:17:44,749 [main           ] INFO  DefaultCamelContext            - JMX is disabled. Using DefaultManagementStrategy.
2010-05-06 09:17:45,112 [main           ] INFO  FileEndpoint                   - Endpoint is configured with noop=&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt; so forcing endpoint to be idempotent as well
2010-05-06 09:17:45,113 [main           ] INFO  FileEndpoint                   - Using &lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt; memory based idempotent repository with cache max size: 1000
2010-05-06 09:17:45,116 [main           ] INFO  DefaultCamelContext            - Route: route1 started and consuming from: Endpoint[file:&lt;span class=&quot;code-comment&quot;&gt;//news/?noop=&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;]
&lt;/span&gt;2010-05-06 09:17:45,117 [main           ] INFO  DefaultCamelContext            - Started 1 routes
2010-05-06 09:17:45,118 [main           ] INFO  DefaultCamelContext            - Apache Camel  (CamelContext: camel-1) started in 371 millis
2010-05-06 09:17:45,121 [main           ] INFO  MockEndpoint                   - Asserting: Endpoint[mock:&lt;span class=&quot;code-comment&quot;&gt;//result] is satisfied
&lt;/span&gt;_2744977482
_2744977610
_2744977541
_2744977483
_2744977566
_2744977496
_2744977557
_2744977581
_2744977585
_2744977661
_2744977576
_2744977632
_2744977675
_2744977612
_2744977682
_2744977685
_2744977833
_2744977734
_2744977760
_2744977707
_2744977798
_2744977791
_2744977840
_2744977677
_2744977887
_2744977842
_2744977906
_2744977913
_2744977737
_2744977876
_2744977930
_2744977901
_2744977869
_2744977681
_2744977938
_2744977962
_2744977986
_2744977987
_2744977895
_2744977977
_2744977997
_2744978016
_2744978026
_2744978048
_2744978065
_2744978057
_2744978064
_2744978076
_2744978068
_2744978088
_2744978084
_2744978090
_2744978097
_2744978091
_2744978103
_2744978112
_2744978114
_2744978122
_2744978130
_2744978131
_2744978160
_2744978161
_2744978170
_2744978172
_2744978139
_2744978196
_2744978211
_2744978205
_2744978222
_2744978195
_2744978245
_2744978326
_2744978318
_2744978340
_2744978223
_2744978335
_2744978355
_2744978368
_2744978369
_2744978384
_2744978401
_2744978382
_2744978408
_2744978411
_2744978415
_2744978452
_2744978458
_2744978462
_2744978440
_2744978471
_2744978439
_2744978460
_2744978485
_2744978497
_2744978510
_2744978511
_2744978512
_2744978536
_2744978517
_2744978552
_2744978569
_2744978577
_2744978579
_2744978583
_2744978592
_2744978635
_2744978609
_2744978642
_2744978611
_2744978621
_2744978598
_2744978606
_2744978647
_2744978694
_2744978679
_2744978692
_2744978719
_2744978732
_2744978759
_2744978730
_2744978763
_2744978886
_2744978838
_2744978895
_2744978900
_2744978903
_2744978911
_2744978918
_2744978810
_2744978800
_2744978963
_2744978968
_2744978972
_2744978765
_2744978982
_2744978948
_2744978997
_2744978883
_2744978801
_2744978782
_2744978821
_2744978989
_2744978950
_2744978985
2010-05-06 09:17:47,316 [main           ] INFO  DefaultCamelContext            - Apache Camel  (CamelContext:camel-1) is shutting down
2010-05-06 09:17:47,317 [main           ] INFO  DefaultShutdownStrategy        - Starting to graceful shutdown 1 routes (timeout 10 seconds)
2010-05-06 09:17:47,320 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: route1 suspended and shutdown deferred, was consuming from: Endpoint[file:&lt;span class=&quot;code-comment&quot;&gt;//news/?noop=&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;]
&lt;/span&gt;2010-05-06 09:17:47,320 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: route1 shutdown complete.
2010-05-06 09:17:47,321 [main           ] INFO  DefaultShutdownStrategy        - Graceful shutdown of 1 routes completed in 0 seconds
2010-05-06 09:17:47,321 [main           ] INFO  DefaultInflightRepository      - Shutting down with no inflight exchanges.
2010-05-06 09:17:47,322 [main           ] INFO  DefaultCamelContext            - Apache Camel  (CamelContext: camel-1) is shutdown in 6 millis
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="12955899" author="davsclaus" created="Thu, 6 May 2010 08:42:17 +0000"  >&lt;p&gt;Roland is it possible for you to create a anonym and public XML file we can use and add as an unit test to camel-core ?&lt;/p&gt;

&lt;p&gt;Then we will have it tested throughly on CI servers which tests it on all kind of OS and JDK levels.&lt;/p&gt;</comment>
                            <comment id="12955898" author="davsclaus" created="Thu, 6 May 2010 08:57:38 +0000"  >&lt;p&gt;I have tested it on both Mac OS and Windows&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
C:\workspace\camel\camel-core&amp;gt;mvn -version
Apache Maven 2.2.1 (r801777; 2009-08-06 21:16:01+0200)
Java version: 1.6.0_18
Java home: C:\jdk1.6.0_18\jre
Default locale: en_GB, platform encoding: Cp1252
OS name: &lt;span class=&quot;code-quote&quot;&gt;&quot;windows xp&quot;&lt;/span&gt; version: &lt;span class=&quot;code-quote&quot;&gt;&quot;5.1&quot;&lt;/span&gt; arch: &lt;span class=&quot;code-quote&quot;&gt;&quot;x86&quot;&lt;/span&gt; Family: &lt;span class=&quot;code-quote&quot;&gt;&quot;windows&quot;&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And I cannot reproduce it. I do not have a Windows 7 machine with 64bit JDK.&lt;/p&gt;</comment>
                            <comment id="12955903" author="scrutinizer" created="Thu, 6 May 2010 13:07:18 +0000"  >&lt;p&gt;Yes, I am using the stock JDK 6 XML parser.&lt;/p&gt;

&lt;p&gt;Turning debugging on reveals the underlying problem. It appears that Camel is calling Document.importNode from multiple threads on the same Document causing an ArrayIndexOutOfBounds error. This occurs in the converter and results in a null value. The stack trace for this error is below:&lt;/p&gt;

&lt;p&gt;Thread &lt;span class=&quot;error&quot;&gt;&amp;#91;Camel Thread 9 - Split&amp;#93;&lt;/span&gt; (Suspended (exception ArrayIndexOutOfBoundsException))	&lt;br/&gt;
	Vector&amp;lt;E&amp;gt;.elementAt(int) line: 427	&lt;br/&gt;
	DeferredDocumentImpl.getNodeValueString(int, boolean) line: 1167	&lt;br/&gt;
	DeferredDocumentImpl.getNodeValueString(int) line: 1120	&lt;br/&gt;
	DeferredTextImpl.synchronizeData() line: 93 &lt;span class=&quot;error&quot;&gt;&amp;#91;local variables unavailable&amp;#93;&lt;/span&gt;	&lt;br/&gt;
	DeferredTextImpl(CharacterDataImpl).getNodeValue() line: 88	&lt;br/&gt;
	DocumentImpl(CoreDocumentImpl).importNode(Node, boolean, boolean, Hashtable) line: 1629	&lt;br/&gt;
	DocumentImpl(CoreDocumentImpl).importNode(Node, boolean, boolean, Hashtable) line: 1742	&lt;br/&gt;
	DocumentImpl(CoreDocumentImpl).importNode(Node, boolean, boolean, Hashtable) line: 1742	&lt;br/&gt;
	DocumentImpl(CoreDocumentImpl).importNode(Node, boolean) line: 1498	&lt;br/&gt;
	XmlConverter.toDOMDocument(Node) line: 572	&lt;br/&gt;
	NativeMethodAccessorImpl.invoke0(Method, Object, Object[]) line: not available &lt;span class=&quot;error&quot;&gt;&amp;#91;native method&amp;#93;&lt;/span&gt;	&lt;br/&gt;
	NativeMethodAccessorImpl.invoke(Object, Object[]) line: 39	&lt;br/&gt;
	DelegatingMethodAccessorImpl.invoke(Object, Object[]) line: 25	&lt;br/&gt;
	Method.invoke(Object, Object...) line: 597	&lt;br/&gt;
	ObjectHelper.invokeMethod(Method, Object, Object...) line: 772	&lt;br/&gt;
	InstanceMethodTypeConverter.convertTo(Class&amp;lt;T&amp;gt;, Exchange, Object) line: 69	&lt;br/&gt;
	DefaultTypeConverter.doConvertTo(Class, Exchange, Object) line: 165	&lt;br/&gt;
	DefaultTypeConverter.convertTo(Class&amp;lt;T&amp;gt;, Exchange, Object) line: 91	&lt;br/&gt;
	DefaultMessage(MessageSupport).getBody(Class&amp;lt;T&amp;gt;, Object) line: 74	&lt;br/&gt;
	DefaultMessage(MessageSupport).getBody(Class&amp;lt;T&amp;gt;) line: 48	&lt;br/&gt;
	MoreoverTest$1$1.process(Exchange) line: 25	&lt;br/&gt;
	InstrumentationProcessor.process(Exchange) line: 67	&lt;br/&gt;
	TraceInterceptor(DelegateProcessor).processNext(Exchange) line: 53	&lt;br/&gt;
	TraceInterceptor(DelegateProcessor).proceed(Exchange) line: 82	&lt;br/&gt;
	TraceInterceptor.process(Exchange) line: 97	&lt;br/&gt;
	InstrumentationProcessor.process(Exchange) line: 67	&lt;br/&gt;
	DefaultErrorHandler(RedeliveryErrorHandler).processExchange(Exchange) line: 177	&lt;br/&gt;
	DefaultErrorHandler(RedeliveryErrorHandler).processErrorHandler(Exchange, RedeliveryErrorHandler$RedeliveryData) line: 143	&lt;br/&gt;
	DefaultErrorHandler(RedeliveryErrorHandler).process(Exchange) line: 88	&lt;br/&gt;
	DefaultErrorHandler.process(Exchange) line: 49	&lt;br/&gt;
	DefaultChannel.process(Exchange) line: 228	&lt;br/&gt;
	DefaultErrorHandler(RedeliveryErrorHandler).processExchange(Exchange) line: 177	&lt;br/&gt;
	DefaultErrorHandler(RedeliveryErrorHandler).processErrorHandler(Exchange, RedeliveryErrorHandler$RedeliveryData) line: 143	&lt;br/&gt;
	DefaultErrorHandler(RedeliveryErrorHandler).process(Exchange) line: 88	&lt;br/&gt;
	DefaultErrorHandler.process(Exchange) line: 49	&lt;br/&gt;
	Splitter(MulticastProcessor).doProcess(Processor, Processor, Exchange) line: 278	&lt;br/&gt;
	MulticastProcessor.access$000(MulticastProcessor, Processor, Processor, Exchange) line: 62	&lt;br/&gt;
	MulticastProcessor$1.call() line: 199	&lt;br/&gt;
	MulticastProcessor$1.call() line: 193	&lt;br/&gt;
	FutureTask$Sync.innerRun() line: 303	&lt;br/&gt;
	SubmitOrderedCompletionService$SubmitOrderFutureTask(FutureTask&amp;lt;V&amp;gt;).run() line: 138	&lt;br/&gt;
	ThreadPoolExecutor$Worker.runTask(Runnable) line: 886	&lt;br/&gt;
	ThreadPoolExecutor$Worker.run() line: 908	&lt;br/&gt;
	Thread.run() line: 619	&lt;/p&gt;


&lt;p&gt;Inspection of the JDK getNodeValueString shows that this error can only occur if this function is called in parallel from two threads:&lt;br/&gt;
                for (int i = chunkCount - 1; i &amp;gt;= 0; i--) &lt;/p&gt;
{                                                               
                    fBufferStr.append((String)fStrChunks.elementAt(i));
                }

&lt;p&gt;                value = fBufferStr.toString();&lt;br/&gt;
                fStrChunks.removeAllElements();&lt;/p&gt;

&lt;p&gt;One thread is looping over fStrChunks, while the other thread clear it via removeAllElements.&lt;/p&gt;</comment>
                            <comment id="12955954" author="davsclaus" created="Tue, 11 May 2010 06:03:32 +0000"  >&lt;p&gt;Thanks Roland. Yeah unfortunately the XML API in the JDK is pretty well terrible.&lt;/p&gt;

&lt;p&gt;Let me look into what we can do in Camel&lt;/p&gt;</comment>
                            <comment id="12955952" author="davsclaus" created="Tue, 11 May 2010 06:32:48 +0000"  >&lt;p&gt;Got a fix ready which is being tested now&lt;/p&gt;</comment>
                            <comment id="12955960" author="davsclaus" created="Tue, 11 May 2010 07:14:13 +0000"  >&lt;p&gt;trunk: 943024.&lt;/p&gt;</comment>
                            <comment id="12955968" author="davsclaus" created="Tue, 11 May 2010 08:07:00 +0000"  >&lt;p&gt;1.x: 943033.&lt;/p&gt;</comment>
                            <comment id="12955966" author="davsclaus" created="Tue, 11 May 2010 08:07:33 +0000"  >&lt;p&gt;Roland feel free to test with latest code on your system&lt;/p&gt;</comment>
                            <comment id="12955987" author="scrutinizer" created="Tue, 11 May 2010 22:42:54 +0000"  >&lt;p&gt;Claus, the synchronize you added didn&apos;t fix the problem. Seems that importNode requires the Document to be synchronized (yuck). Changing your fix in XmlConverter.toDOMDocument to:&lt;br/&gt;
                Document doc = createDocument();&lt;br/&gt;
                // import node must no occur concurrent on the same node&lt;br/&gt;
                // so we need to synchronize on it&lt;br/&gt;
                synchronized (node.getOwnerDocument()) &lt;/p&gt;
{
                    doc.appendChild(doc.importNode(node, true));
                }
&lt;p&gt;fixed the problem.&lt;/p&gt;

&lt;p&gt;I agree about the JDK XML API. It is horrible. I wrote a converter for DOM4J and always convert the body to a DOM4J Document before any DOM manipulation.&lt;/p&gt;</comment>
                            <comment id="12955969" author="davsclaus" created="Wed, 12 May 2010 07:02:18 +0000"  >&lt;p&gt;Hi Roland&lt;/p&gt;

&lt;p&gt;Thanks for spotting this again.&lt;/p&gt;

&lt;p&gt;trunk: 943394.&lt;br/&gt;
1.x: 943395.&lt;/p&gt;</comment>
                            <comment id="12982724" author="davsclaus" created="Mon, 17 Jan 2011 16:50:42 +0000"  >&lt;p&gt;Closing all 1.x tickets&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12463250" name="news_20100502000001.zip" size="247817" author="scrutinizer" created="Wed, 5 May 2010 13:26:32 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 5 May 2010 05:01:08 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>76461</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            5 years, 46 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i01q53:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>8004</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>