<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun Dec 04 00:50:00 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/CAMEL-3535/CAMEL-3535.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[CAMEL-3535] Aggregation fails to call onComplete for exchanges if the aggregation is after a bean or process.</title>
                <link>https://issues.apache.org/jira/browse/CAMEL-3535</link>
                <project id="12311211" key="CAMEL">Camel</project>
                    <description>&lt;p&gt;When creating a route that contains an aggregation, if that aggregation is preceded by a bean or process, it will fail to call AggregateOnCompletion.onComplete(). I&apos;ve attached a unit test that can show you the behavior. Trace level loggging will need to be enabled to see the difference. With the call to the bean, it won&apos;t show the following log entry:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;TRACE org.apache.camel.processor.aggregate.AggregateProcessor - Aggregated exchange onComplete: Exchange[Message: ab]&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;If you remove the bean call, it&apos;ll start calling onComplete() again.&lt;/p&gt;

&lt;p&gt;What I&apos;ve noticed is that if this call is not made, it ends up in a memory leak since the inProgressCompleteExchanges HashSet in AggregateProcessor never has any exchange ID&apos;s removed.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12495418">CAMEL-3535</key>
            <summary>Aggregation fails to call onComplete for exchanges if the aggregation is after a bean or process.</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="davsclaus">Claus Ibsen</assignee>
                                    <reporter username="bfeaver">Brian Feaver</reporter>
                        <labels>
                    </labels>
                <created>Wed, 12 Jan 2011 20:43:57 +0000</created>
                <updated>Tue, 25 Oct 2011 11:36:00 +0000</updated>
                            <resolved>Fri, 14 Jan 2011 10:37:32 +0000</resolved>
                                    <version>2.5.0</version>
                                    <fixVersion>2.6.0</fixVersion>
                                    <component>camel-core</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12981147" author="davsclaus" created="Thu, 13 Jan 2011 06:19:16 +0000"  >&lt;p&gt;Works fine in trunk&lt;/p&gt;</comment>
                            <comment id="12981407" author="bfeaver" created="Thu, 13 Jan 2011 18:44:44 +0000"  >&lt;p&gt;I noticed in the test that you committed, that you changed it to use a completion size instead of a completion interval or timeout. After running it against trunk with completion size, I see it does in fact call the AggregateOnCompletion.onComplete(). However, I&apos;m still noticing that if you set an interval or timeout, it doesn&apos;t appear to hit that method.&lt;/p&gt;</comment>
                            <comment id="12981433" author="davsclaus" created="Thu, 13 Jan 2011 19:20:42 +0000"  >&lt;p&gt;Brain this route works fine as well&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
                from(&lt;span class=&quot;code-quote&quot;&gt;&quot;seda:start&quot;&lt;/span&gt;)
                    .bean(TestBean.class)
                    .aggregate(constant(&lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;&quot;&lt;/span&gt;), &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; BodyInAggregatingStrategy())
                        .completionInterval(2000)
                        .to(&lt;span class=&quot;code-quote&quot;&gt;&quot;mock:result&quot;&lt;/span&gt;);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Trace logging show the interval task triggers and invokes the onComplete&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;

2011-01-13 20:20:06,218 [eTimeoutChecker] TRACE AggregateProcessor             - Completion interval triggered &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; correlation key: &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;
2011-01-13 20:20:06,219 [eTimeoutChecker] DEBUG AggregateProcessor             - Aggregation complete &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; correlation key &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt; sending aggregated exchange: Exchange[Message: A+B]
2011-01-13 20:20:06,221 [eTimeoutChecker] DEBUG AggregateProcessor             - Processing aggregated exchange: Exchange[Message: A+B]
2011-01-13 20:20:06,223 [eTimeoutChecker] TRACE AggregateProcessor             - Processing aggregated exchange: Exchange[Message: A+B] complete.
2011-01-13 20:20:06,223 [main           ] INFO  DefaultCamelContext            - Apache Camel  (CamelContext:camel-1) is shutting down
2011-01-13 20:20:06,223 [eTimeoutChecker] TRACE AggregateProcessor             - Completion interval task complete
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="12981462" author="bfeaver" created="Thu, 13 Jan 2011 20:26:46 +0000"  >&lt;p&gt;Even in your output the line I&apos;m expecting is missing. Hope this clears up what I&apos;m seeing. Here&apos;s the output when it works&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;[Camel (camel-1) thread #0 - AggregateTimeoutChecker] TRACE org.apache.camel.processor.aggregate.AggregateProcessor - Completion interval triggered for correlation key: true
[Camel (camel-1) thread #0 - AggregateTimeoutChecker] DEBUG org.apache.camel.processor.aggregate.AggregateProcessor - Aggregation complete for correlation key true sending aggregated exchange: Exchange[Message: AB]
[Camel (camel-1) thread #0 - AggregateTimeoutChecker] DEBUG org.apache.camel.processor.aggregate.AggregateProcessor - Processing aggregated exchange: Exchange[Message: AB]
[Camel (camel-1) thread #0 - AggregateTimeoutChecker] TRACE org.apache.camel.processor.aggregate.AggregateProcessor - Aggregated exchange onComplete: Exchange[Message: AB]
[main] INFO test.AggregationTest - Testing done: test.AggregationTest@77546dbc
[Camel (camel-1) thread #0 - AggregateTimeoutChecker] TRACE org.apache.camel.processor.aggregate.AggregateProcessor - Processing aggregated exchange: Exchange[Message: AB] complete.
[Camel (camel-1) thread #0 - AggregateTimeoutChecker] TRACE org.apache.camel.processor.aggregate.AggregateProcessor - Completion interval task complete
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Here&apos;s the output when it doesn&apos;t&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;[Camel (camel-1) thread #0 - AggregateTimeoutChecker] TRACE org.apache.camel.processor.aggregate.AggregateProcessor - Completion interval triggered for correlation key: true
[Camel (camel-1) thread #0 - AggregateTimeoutChecker] DEBUG org.apache.camel.processor.aggregate.AggregateProcessor - Aggregation complete for correlation key true sending aggregated exchange: Exchange[Message: AB]
[Camel (camel-1) thread #0 - AggregateTimeoutChecker] DEBUG org.apache.camel.processor.aggregate.AggregateProcessor - Processing aggregated exchange: Exchange[Message: AB]
[Camel (camel-1) thread #0 - AggregateTimeoutChecker] TRACE org.apache.camel.processor.aggregate.AggregateProcessor - Processing aggregated exchange: Exchange[Message: AB] complete.
[main] INFO test.AggregationTest - Testing done: test.AggregationTest@614a75bb
[Camel (camel-1) thread #0 - AggregateTimeoutChecker] TRACE org.apache.camel.processor.aggregate.AggregateProcessor - Completion interval task complete
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The difference between the two is the following line:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;[Camel (camel-1) thread #0 - AggregateTimeoutChecker] TRACE org.apache.camel.processor.aggregate.AggregateProcessor - Aggregated exchange onComplete: Exchange[Message: AB]
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This would be written to the log in AggregateProcesor$AggregateOnCompletion.onComplete() on or around line 544 in AggregateProcessor.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;        &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void onComplete(Exchange exchange) {
            &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (LOG.isTraceEnabled()) {
                LOG.trace(&lt;span class=&quot;code-quote&quot;&gt;&quot;Aggregated exchange onComplete: &quot;&lt;/span&gt; + exchange);
            }

            &lt;span class=&quot;code-comment&quot;&gt;// only confirm &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; we processed without a problem
&lt;/span&gt;            &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
                aggregationRepository.confirm(exchange.getContext(), exchangeId);
                &lt;span class=&quot;code-comment&quot;&gt;// and remove redelivery state as well
&lt;/span&gt;                redeliveryState.remove(exchangeId);
            } &lt;span class=&quot;code-keyword&quot;&gt;finally&lt;/span&gt; {
                &lt;span class=&quot;code-comment&quot;&gt;// must remember to remove in progress when we are complete
&lt;/span&gt;                inProgressCompleteExchanges.remove(exchangeId);
            }
        }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The lack of the inProgressCompleteExchanges.remove(exchangeId); call is precisely what&apos;s causing inProgressCompleteExchanges to grow larger and not get cleaned up.&lt;/p&gt;</comment>
                            <comment id="12981597" author="bfeaver" created="Fri, 14 Jan 2011 01:30:45 +0000"  >&lt;p&gt;Looking through it a bit more, I believe the problem is related to the Pipeline that is created when there is a bean before the aggregation. Without the Pipeline, each exchange&apos;s unit of work is done after each iteration of the aggregation. When there is a pipeline, the pipeline is creating the next exchange as a copy of the first exchange and the unit of work for the copy is what is done instead of the original exchange. But the exchange that is stored within the aggregation repository is the original exchange, still with a unit of work defined (it hasn&apos;t been done, and therefore hasn&apos;t been set to null). When the aggregation completes, the UnitOfWorkProcessor finds the unit of work in the original exchange and doesn&apos;t complete that unit of work (process() method in UnitOfWorkProcessor).&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-comment&quot;&gt;// There was an existing UoW, so we should just pass through..
&lt;/span&gt;&lt;span class=&quot;code-comment&quot;&gt;// so that the guy the initiated the UoW can terminate it.
&lt;/span&gt;&lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; processor.process(exchange, callback);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Since the unit of work never gets done, it never calls the AggregateOnCompletion.onComplete() method. In a debugger, I ended up nulling out the UnitOfWork on the exchange before it finished the aggregation and it worked as expected.&lt;/p&gt;</comment>
                            <comment id="12981694" author="davsclaus" created="Fri, 14 Jan 2011 09:45:45 +0000"  >&lt;p&gt;Thanks Brian for explaining it in more details. I will look into it.&lt;/p&gt;</comment>
                            <comment id="12981710" author="davsclaus" created="Fri, 14 Jan 2011 10:37:32 +0000"  >&lt;p&gt;trunk: 1058930.&lt;/p&gt;

&lt;p&gt;Thanks Brian it should be fixed now. Can you test it on yours side as well.&lt;/p&gt;</comment>
                            <comment id="12981826" author="bfeaver" created="Fri, 14 Jan 2011 17:02:51 +0000"  >&lt;p&gt;Confirmed. Working for me as well.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10001">
                    <name>dependent</name>
                                                                <inwardlinks description="is depended upon by">
                                        <issuelink>
            <issuekey id="12487434">CAMEL-3317</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12468161" name="AggregationTest.java" size="1446" author="bfeaver" created="Wed, 12 Jan 2011 20:45:15 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 13 Jan 2011 06:19:16 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>76231</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            5 years, 47 weeks, 1 day ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i01vc7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>8846</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>