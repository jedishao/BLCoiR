<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun Dec 04 00:06:20 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HIVE-338/HIVE-338.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HIVE-338] Executing cli commands into thrift server</title>
                <link>https://issues.apache.org/jira/browse/HIVE-338</link>
                <project id="12310843" key="HIVE">Hive</project>
                    <description>&lt;p&gt;Let thrift server support set, add/delete file/jar and normal HSQL query.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12416601">HIVE-338</key>
            <summary>Executing cli commands into thrift server</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="4">Incomplete</resolution>
                                        <assignee username="coderplay">Min Zhou</assignee>
                                    <reporter username="coderplay">Min Zhou</reporter>
                        <labels>
                    </labels>
                <created>Wed, 11 Mar 2009 01:44:47 +0000</created>
                <updated>Sat, 17 Dec 2011 00:07:39 +0000</updated>
                            <resolved>Wed, 24 Jun 2009 04:08:33 +0000</resolved>
                                    <version>0.3.0</version>
                                    <fixVersion>0.4.0</fixVersion>
                                    <component>Server Infrastructure</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>4</watches>
                                                                <comments>
                            <comment id="12681621" author="coderplay" created="Fri, 13 Mar 2009 05:51:54 +0000"  >&lt;p&gt;support add file/jar now&lt;/p&gt;


&lt;p&gt;python example&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
#!/usr/bin/env python

&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; sys

from hive &lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; ThriftHive
from hive.ttypes &lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; HiveServerException
from thrift &lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; Thrift
from thrift.transport &lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; TSocket
from thrift.transport &lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; TTransport
from thrift.protocol &lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; TBinaryProtocol

&lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt;:
    transport = TSocket.TSocket(&apos;localhost&apos;, 10000)
    transport = TTransport.TBufferedTransport(transport)
    protocol = TBinaryProtocol.TBinaryProtocol(transport)

    client = ThriftHive.Client(protocol)
    transport.open()

    client.execute(&apos;ADD FILE /home/zhoumin/py/foo&apos;)
    client.execute(&apos;ADD FILE /home/zhoumin/py/streaming.py&apos;)
    query = &apos;&apos;&apos;
        INSERT OVERWRITE TABLE streaming_pokes
        MAP (pokes.foo, pokes.bar)         
            USING &apos;streaming.py&apos;
        AS new_foo, new_bar
        FROM pokes                                &apos;&apos;&apos;

    client.execute(query)
    row = client.fetchOne()
    print row
    
    transport.close()

except Thrift.TException, tx:
    print &apos;%s&apos; % (tx.message)

&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;java example:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;package&lt;/span&gt; zhoumin.example;

&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; java.util.ArrayList;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; java.util.concurrent.Callable;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; java.util.concurrent.ExecutionException;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; java.util.concurrent.ExecutorService;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; java.util.concurrent.Executors;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; java.util.concurrent.Future;

&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.hive.metastore.api.MetaException;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.hive.service.HiveClient;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.hive.service.HiveServerException;

&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; com.facebook.thrift.TException;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; com.facebook.thrift.protocol.TBinaryProtocol;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; com.facebook.thrift.protocol.TProtocol;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; com.facebook.thrift.transport.TSocket;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; com.facebook.thrift.transport.TTransport;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; com.facebook.thrift.transport.TTransportException;


&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; class MyClient {
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; THREADS_NUMBER = 10;
  
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; class Worker &lt;span class=&quot;code-keyword&quot;&gt;implements&lt;/span&gt; Callable&amp;lt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;&amp;gt; {
    
    TTransport transport;
    TProtocol protocol;
    HiveClient client;
    
    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; Worker() {
      transport = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; TSocket(&lt;span class=&quot;code-quote&quot;&gt;&quot;localhost&quot;&lt;/span&gt;, 10000);
      protocol = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; TBinaryProtocol(transport);
      client = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; HiveClient(protocol); 
    }

    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; call() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; Exception {
      transport.open();
      client.execute(&lt;span class=&quot;code-quote&quot;&gt;&quot;add jar /home/zhoumin&lt;span class=&quot;code-comment&quot;&gt;//hadoop/mapreduce/zhoumin/dist/zhoumin-0.00.1.jar&quot;&lt;/span&gt;);
&lt;/span&gt;      client.execute(&lt;span class=&quot;code-quote&quot;&gt;&quot;CREATE TEMPORARY FUNCTION strlen AS &apos;hadoop.hive.udf.UdfStringLength&apos;&quot;&lt;/span&gt;);
      client.execute(&lt;span class=&quot;code-quote&quot;&gt;&quot;select strlen(mid) from log_data&quot;&lt;/span&gt;);
      &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; row = client.fetchOne();
      transport.close();
      &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; row;
    }
    
  }
  
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; void main(&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;[] args) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; TTransportException,
      TException, HiveServerException, MetaException {
    ExecutorService exec = Executors.newCachedThreadPool();
    
    ArrayList&amp;lt;Future&amp;lt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;&amp;gt;&amp;gt; results = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ArrayList&amp;lt;Future&amp;lt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;&amp;gt;&amp;gt;();
    &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; i = 0; i &amp;lt; THREADS_NUMBER; i++) {
      results.add(exec.submit(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Worker()));
    }
    
    &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt;(Future&amp;lt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;&amp;gt; fs : results) {
      &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
        &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println(fs.get());
      }&lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (InterruptedException e) {
        &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println(e);
      } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt;(ExecutionException e) {
        &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println(e);
      } &lt;span class=&quot;code-keyword&quot;&gt;finally&lt;/span&gt; {
        exec.shutdown();
      }
    }
  }
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;the add jar command is also supported on CLI now.&lt;/p&gt;</comment>
                            <comment id="12682212" author="jsensarma" created="Mon, 16 Mar 2009 03:27:07 +0000"  >&lt;p&gt;some comments:&lt;/p&gt;

&lt;p&gt;HiveServer.java: &lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;where is &apos;sp&apos; constructed?&lt;/li&gt;
	&lt;li&gt;can you encapsulate the &apos;add&apos;/&apos;delete&apos;/&apos;list&apos; commands in a new processor and call that from both CliDriver and HiveServer. Even though the logic is trivial - duplicating code sucks.&lt;/li&gt;
	&lt;li&gt;SessionState.java: addToClassPath()  - this looks like the same as the one in ExecDriver.java - can you just make the latter public static and invoke that&lt;/li&gt;
	&lt;li&gt;metadata/Hive.java: can you tell why this change was made?&lt;/li&gt;
	&lt;li&gt;exec/FunctionTask.java: is it necessary to specify the loader in the Class.forName call? I thought that that the current thread context loader was the always the first loader to be tried anyway during name resolution.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;This is missing one change in MapRedTask.java - take a look at the execute() that generates a command line that executes ExecDriver in a separate jvm (we use this mode in tests) - here we are setting -libjars option and this needs to add the ones from the jar resources as well.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;One problem is that this will not work for hadoop-17 (at least local mode) - see ExecDriver:main() - where addToClassPath is invoked on auxjars as a workaround for hadoop-17. this would need to be done for other jars added via &apos;add jar&apos; as well - except there would be no way to do this unless the list of jar file resources was also passed in as a conf variable.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Related point - we need a test for this. some dummy udf in a separate jar file that is added and then invoked from a query would be great (and would have revealed the above two issues).&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;finally - &apos;delete jar&apos; doesn&apos;t seem to get rid of the jar from the classpath. perhaps this was not required at this time - but would be good to add this just for sake of completeness. The delete resource codepath is missing a callback (hook) - that would need to be added as well.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;thanks for taking this on - too many small hadoop related complexities here ..&lt;/p&gt;

</comment>
                            <comment id="12682548" author="coderplay" created="Tue, 17 Mar 2009 03:48:49 +0000"  >&lt;p&gt;oops, Some mistakes was made when migrate code from another repository. &lt;br/&gt;
I was considering running CLI as client of thrift server,  thus junior user can run sql every where,  that would not be  limited execution on the server node not opened to anybody. Thrift server would run like a multi-user interface,   cli clients could respectively sumbit commands with different privileges, they can do set , add/delete commands, even upload resource download results if  it&apos;s too huge to display .&lt;/p&gt;


&lt;ul&gt;
	&lt;li&gt;metadata/Hive.java: can you tell why this change was made?&lt;br/&gt;
pls see &lt;a href=&quot;https://issues.apache.org/jira/browse/HIVE-324&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HIVE-324&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I&apos;ll upgrade this patch for solving problem you metioned later. &lt;/p&gt;</comment>
                            <comment id="12715316" author="jsensarma" created="Tue, 2 Jun 2009 00:37:34 +0000"  >&lt;p&gt;can we complete this one? or at least get the changes required to HiveServer in as part of some other Jira? (since the server is pretty broken without these thread related fixes)&lt;/p&gt;</comment>
                            <comment id="12716515" author="coderplay" created="Fri, 5 Jun 2009 05:53:54 +0000"  >&lt;ol&gt;
	&lt;li&gt;I thought we need a more efficient RPC rather than thrift. Lots of tries has been done here, and reflected it&apos;s not very suitable for a multi-user server.&lt;/li&gt;
	&lt;li&gt;SesstionState in hive must an abusage of  ThreadLocal  by treating its thread confinement property as a license to use global variables or as a means of creating &quot;hidden&quot; method arguments. Like global variables, thread-local variables can detract from reusability and introduce hidden.&lt;/li&gt;
&lt;/ol&gt;
</comment>
                            <comment id="12716655" author="jsensarma" created="Fri, 5 Jun 2009 15:55:36 +0000"  >&lt;p&gt;there&apos;s a singleton sessionstate per thread that captures session settings. thread can switch from one session to another.&lt;/p&gt;

&lt;p&gt;yes - the variables in SessionState are pseudo global variables - but this is easier to organize than passing those properties to each and every method. Do you consider the System object in Java to be an abuse of global variables? Or do you consider environment variables and system properties available globally to processes as things that prevent reuse? If you look at the things that are part of sessionstate - they are similar in nature (input/output streams, list of systemwide resources and so on).&lt;/p&gt;

&lt;p&gt;this is of course open-source and re-writes are as welcome as any other contribution. i have not been a heavy user of thrift myself so cannot comment on its speed. it would be easy enough to write more rpc layers on top of hive if required. however - the current problems in the threaded server code need immediate fixing since users are trying to use it right now. probably we will have to do this as part of a separate jira.&lt;/p&gt;
</comment>
                            <comment id="12717651" author="coderplay" created="Tue, 9 Jun 2009 11:46:19 +0000"  >&lt;ul&gt;
	&lt;li&gt;exec/FunctionTask.java: is it necessary to specify the loader in the Class.forName call? I thought that that the current thread context loader was the always the first loader to be tried anyway during name resolution.&lt;br/&gt;
Yes, of course. the class loader holding by HiveConf is older than that of current thread.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;this pacth support dfs, add/delete file/jar, set now.  &lt;/p&gt;

&lt;p&gt;btw, Joydeep, would you do me a favor writing some test code that I am not familiar with?  you know, &apos; add jar&apos;  need a separate jar, and i not quite sure how to organize them.&lt;/p&gt;</comment>
                            <comment id="12720241" author="jsensarma" created="Tue, 16 Jun 2009 17:04:26 +0000"  >&lt;p&gt;thanks! - this looks pretty good. i will add a test case - and there&apos;s also an extra addtoclasspath in execdriver.main() (for hadoop-17) that needs to get added.&lt;/p&gt;

&lt;p&gt;will commit after adding/running some tests.&lt;/p&gt;</comment>
                            <comment id="12720393" author="jsensarma" created="Tue, 16 Jun 2009 22:33:04 +0000"  >&lt;p&gt;modified version:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;clean up commandprocessors to use factory and put into separate directory&lt;/li&gt;
	&lt;li&gt;added test for add jar (reusing existing jar - TestSerDe.jar)&lt;/li&gt;
	&lt;li&gt;added jars should augment -libjars in command line (required for local mode execution)&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;i didn&apos;t understand the comment about the FunctionTask change. &lt;/p&gt;</comment>
                            <comment id="12720462" author="coderplay" created="Wed, 17 Jun 2009 01:47:16 +0000"  >&lt;p&gt;I think you should take a look at these lines of org.apache.hadoop.conf.Configuration&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;ClassLoader&lt;/span&gt; classLoader;
  {
    classLoader = &lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.currentThread().getContextClassLoader();
    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (classLoader == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
      classLoader = Configuration.class.getClassLoader();
    }
  }
...

  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;Class&lt;/span&gt;&amp;lt;?&amp;gt; getClassByName(&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; name) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; ClassNotFoundException {
    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;Class&lt;/span&gt;.forName(name, &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;, classLoader);
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;ClassLoader of current thread changed  when adding jars into ClassPath,  conf hasnot synchronously get that change. &lt;/p&gt;</comment>
                            <comment id="12721392" author="jsensarma" created="Thu, 18 Jun 2009 18:15:12 +0000"  >&lt;p&gt;ok - this is making a little more sense to me now. aside from looking at the thread classloader - we should look at the current classloader (if the former is null). the tests probably don&apos;t catch this since the thread classloader is always set.&lt;/p&gt;</comment>
                            <comment id="12722353" author="jsensarma" created="Sun, 21 Jun 2009 12:55:14 +0000"  >&lt;p&gt;final version:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;add test for delete jar&lt;/li&gt;
	&lt;li&gt;use thread class loader preferentially in whole bunch of places (wherever configurable classes are used)&lt;/li&gt;
	&lt;li&gt;remove ^Ms&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;also forgot to mention - addtoclasspath logic was only adding new jars and not retaining existing jars in the classpath&lt;/p&gt;</comment>
                            <comment id="12722356" author="jsensarma" created="Sun, 21 Jun 2009 13:14:57 +0000"  >&lt;p&gt;committed - thanks Min!&lt;/p&gt;</comment>
                            <comment id="12722950" author="zshao" created="Tue, 23 Jun 2009 04:06:09 +0000"  >&lt;p&gt;This patch fixes the unit test failure as in:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
ant -lib testlibs test -Dtestcase=TestCliDriver -Dqfile=input16_cc.q
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;It basically adds the resource jars to auxjars, so that in local mode, hive can add those jars to class path.&lt;/p&gt;</comment>
                            <comment id="12723168" author="jsensarma" created="Tue, 23 Jun 2009 16:31:29 +0000"  >&lt;p&gt;hmmm - the MapRedTask changes don&apos;t seem good to me ..&lt;/p&gt;

&lt;p&gt;the conf variable that gets passed to MapRedTask is a shared global object i think. if we set added jars into it - then delete jar command will not work.&lt;/p&gt;

&lt;p&gt;also - -libjars is the proper way of passing jars to hadoop based commands. it also sets the supplied jars into the sub-process&apos;s classpath - something that we depend on hadoop to do. so if the execdriver subprocess needs to access (by any chance) classes in the added/aux jars - then things will not work. bin/hive also uses -libjars to make sure jars are added to the process classpath.&lt;/p&gt;

&lt;p&gt;if the problem is primarily with the &lt;a href=&quot;file:/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;file:/&lt;/a&gt; uri - why do we need the mapredtask changes?&lt;/p&gt;</comment>
                            <comment id="12723314" author="zshao" created="Tue, 23 Jun 2009 21:26:32 +0000"  >&lt;p&gt;There are two problems:&lt;/p&gt;

&lt;p&gt;1. The jars added by the the &quot;add jar&quot; command only goes to -libjars but not &quot;-jobconf hive.aux.jars&quot;&lt;br/&gt;
2. For hadoop 0.17.0 local mode, ExecDriver reads &quot;hive.aux.jars&quot; and we set the classpath ourselves (instead of depending on hadoop).&lt;/p&gt;

&lt;p&gt;In order to let the hadoop 0.17.0 local mode work, I have to add the added jars to hive.aux.jars and pass it to ExecDriver through the command line jobconf.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
ExecDriver.java:526
    &lt;span class=&quot;code-comment&quot;&gt;// workaround &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; hadoop-17 - libjars are not added to classpath. &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;
&lt;/span&gt;    &lt;span class=&quot;code-comment&quot;&gt;// affects local
&lt;/span&gt;    &lt;span class=&quot;code-comment&quot;&gt;// mode execution
&lt;/span&gt;    &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; localMode = HiveConf.getVar(conf, HiveConf.ConfVars.HADOOPJT)
        .equals(&lt;span class=&quot;code-quote&quot;&gt;&quot;local&quot;&lt;/span&gt;);
    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (localMode) {
      &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; auxJars = HiveConf.getVar(conf, HiveConf.ConfVars.HIVEAUXJARS);
      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (StringUtils.isNotBlank(auxJars)) {
        &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
          Utilities.addToClassPath(StringUtils.split(auxJars, &lt;span class=&quot;code-quote&quot;&gt;&quot;,&quot;&lt;/span&gt;));
        } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (Exception e) {
          &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; HiveException(e.getMessage(), e);
        }
      }
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Several way to fix the global object problem:&lt;br/&gt;
A. copy-create a new conf variable&lt;br/&gt;
B. Add a new jobconf to replicate the value of -libjars (e.g. hive.hadoop.libjars)&lt;br/&gt;
C. Set the auxjars before starting the MapRed job, and reset it after the job started.&lt;/p&gt;

&lt;p&gt;I prefer approach B. Thoughts?&lt;/p&gt;</comment>
                            <comment id="12723322" author="jsensarma" created="Tue, 23 Jun 2009 21:55:12 +0000"  >&lt;p&gt;B sounds good to me as well.&lt;/p&gt;

&lt;p&gt;once we deprecate support for older versions of hadoop - we can get rid of this special case code in execdriver then.&lt;/p&gt;</comment>
                            <comment id="12723400" author="coderplay" created="Wed, 24 Jun 2009 02:20:46 +0000"  >&lt;p&gt;Can you exlain why you made a change at FunctionTask .java? It caused a java.lang.ClassNotFoundException when I executing my udf where mr jobs were submitted by hive cli. &lt;br/&gt;
ClassLoader didnot work.&lt;/p&gt;</comment>
                            <comment id="12723402" author="jsensarma" created="Wed, 24 Jun 2009 02:30:24 +0000"  >&lt;p&gt;the initial change only used the thread context classloader for looking up the class.&lt;/p&gt;

&lt;p&gt;the change i made was to (in addition) use the current (default) class loader if the thread context loader was null. this is in sync with the example you pointed out in Configuration.java (and in general seems like the right way after reading a few documents on the web). Note that it&apos;s not just FunctionTask - wherever we pick up user configured classes (inputformat being another obvious place) - we need to use this logic (and this was missing from the patch as well).&lt;/p&gt;

&lt;p&gt;it&apos;s possible there&apos;s some other issue if we are getting classnotfound. Zheng just committed the postfix patch that he has posted here earlier in the day - it might make sense to revert to an earlier version (in case u are synced to the latest trunk) prior to this commit and check if that works.&lt;/p&gt;</comment>
                            <comment id="12723419" author="jsensarma" created="Wed, 24 Jun 2009 03:47:58 +0000"  >&lt;p&gt;it turns out that the way we did the classloader (thread and then current) is not working for hadoop-20. The issue is that local job runner runs in a separate thread.  Setting the thread context classloader is useless. Based on the changes for hadoop-4612 - it seems that the way to set the classloader is to set it in the Conf object and then to always use the Conf objects classloader for locating classes. Yuck.&lt;/p&gt;

&lt;p&gt;For some reason it works (only) on hadoop-19. I have no idea how this stuff works in hadoop-19 (and why setting the thread context loader makes a difference in 17/18). &lt;/p&gt;

&lt;p&gt;it might be best if we just fixed this as part of hive-487 (so that we could address 20 related issues as well).&lt;/p&gt;</comment>
                            <comment id="12723422" author="zshao" created="Wed, 24 Jun 2009 04:08:33 +0000"  >&lt;p&gt;It seems this one is getting bigger. I will open a new jira for this.&lt;/p&gt;</comment>
                            <comment id="12723459" author="coderplay" created="Wed, 24 Jun 2009 06:00:25 +0000"  >&lt;p&gt;@Joydeep&lt;br/&gt;
even 0.19 didnot work here appling your patch.&lt;/p&gt;</comment>
                            <comment id="12723461" author="jsensarma" created="Wed, 24 Jun 2009 06:09:36 +0000"  >&lt;p&gt;i added a test for add jar (input16*.q) - that seems to work mysteriously in hadoop-19 (where of course i ran all the tests) - and nowhere else.&lt;/p&gt;

&lt;p&gt;since i don&apos;t really understand why the heck its working in 19 - let&apos;s just try this once more time via 574.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10032">
                    <name>Blocker</name>
                                            <outwardlinks description="blocks">
                                        <issuelink>
            <issuekey id="12428732">HIVE-574</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="12310000">
                    <name>Duplicate</name>
                                            <outwardlinks description="duplicates">
                                        <issuelink>
            <issuekey id="12416074">HIVE-322</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12411492" name="HIVE-338.postfix.1.patch" size="2993" author="zshao" created="Tue, 23 Jun 2009 04:06:09 +0000"/>
                            <attachment id="12411340" name="hive-338.final.patch" size="56123" author="jsensarma" created="Sun, 21 Jun 2009 12:55:14 +0000"/>
                            <attachment id="12402116" name="hiveserver-v1.patch" size="11434" author="coderplay" created="Fri, 13 Mar 2009 05:51:54 +0000"/>
                            <attachment id="12410218" name="hiveserver-v2.patch" size="22184" author="coderplay" created="Tue, 9 Jun 2009 11:58:58 +0000"/>
                            <attachment id="12410860" name="hiveserver-v3.patch" size="43150" author="jsensarma" created="Tue, 16 Jun 2009 22:33:04 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 16 Mar 2009 03:27:07 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>73603</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            7 years, 24 weeks, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0l99b:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>122150</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>- a&amp;#39;dd/delete jar&amp;#39; commands to add/remove jars from classpath used during query compilation and execution&lt;br/&gt;
- cli commands (set/add/delete/dfs) commands are now executable on hive server</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>