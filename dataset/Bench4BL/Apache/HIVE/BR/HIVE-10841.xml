<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun Dec 04 00:00:27 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HIVE-10841/HIVE-10841.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HIVE-10841] [WHERE col is not null] does not work sometimes for queries with many JOIN statements</title>
                <link>https://issues.apache.org/jira/browse/HIVE-10841</link>
                <project id="12310843" key="HIVE">Hive</project>
                    <description>&lt;p&gt;The result from the following SELECT query is 3 rows but it should be 1 row.&lt;br/&gt;
I checked it in MySQL - it returned 1 row.&lt;/p&gt;

&lt;p&gt;To reproduce the issue in Hive&lt;br/&gt;
1. prepare tables&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
drop table &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; exists L;
drop table &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; exists LA;
drop table &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; exists FR;
drop table &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; exists A;
drop table &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; exists PI;
drop table &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; exists acct;

create table L as select 4436 id;
create table LA as select 4436 loan_id, 4748 aid, 4415 pi_id;
create table FR as select 4436 loan_id;
create table A as select 4748 id;
create table PI as select 4415 id;

create table acct as select 4748 aid, 10 acc_n, 122 brn;
insert into table acct values(4748, &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;);
insert into table acct values(4748, &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;2. run SELECT query&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
select
  acct.ACC_N,
  acct.brn
FROM L
JOIN LA ON L.id = LA.loan_id
JOIN FR ON L.id = FR.loan_id
JOIN A ON LA.aid = A.id
JOIN PI ON PI.id = LA.pi_id
JOIN acct ON A.id = acct.aid
WHERE
  L.id = 4436
  and acct.brn is not &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;the result is 3 rows&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
10	122
NULL	NULL
NULL	NULL
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;but it should be 1 row&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
10	122
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;2.1 &quot;explain select ...&quot; output for hive-1.3.0 MR&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
STAGE DEPENDENCIES:
  Stage-12 is a root stage
  Stage-9 depends on stages: Stage-12
  Stage-0 depends on stages: Stage-9

STAGE PLANS:
  Stage: Stage-12
    Map Reduce Local Work
      Alias -&amp;gt; Map Local Tables:
        a 
          Fetch Operator
            limit: -1
        acct 
          Fetch Operator
            limit: -1
        fr 
          Fetch Operator
            limit: -1
        l 
          Fetch Operator
            limit: -1
        pi 
          Fetch Operator
            limit: -1
      Alias -&amp;gt; Map Local Operator Tree:
        a 
          TableScan
            alias: a
            Statistics: Num rows: 1 Data size: 4 Basic stats: COMPLETE Column stats: NONE
            Filter Operator
              predicate: id is not &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; (type: &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt;)
              Statistics: Num rows: 1 Data size: 4 Basic stats: COMPLETE Column stats: NONE
              HashTable Sink Operator
                keys:
                  0 _col5 (type: &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;)
                  1 id (type: &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;)
                  2 aid (type: &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;)
        acct 
          TableScan
            alias: acct
            Statistics: Num rows: 3 Data size: 31 Basic stats: COMPLETE Column stats: NONE
            Filter Operator
              predicate: aid is not &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; (type: &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt;)
              Statistics: Num rows: 2 Data size: 20 Basic stats: COMPLETE Column stats: NONE
              HashTable Sink Operator
                keys:
                  0 _col5 (type: &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;)
                  1 id (type: &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;)
                  2 aid (type: &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;)
        fr 
          TableScan
            alias: fr
            Statistics: Num rows: 1 Data size: 4 Basic stats: COMPLETE Column stats: NONE
            Filter Operator
              predicate: (loan_id = 4436) (type: &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt;)
              Statistics: Num rows: 1 Data size: 4 Basic stats: COMPLETE Column stats: NONE
              HashTable Sink Operator
                keys:
                  0 4436 (type: &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;)
                  1 4436 (type: &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;)
                  2 4436 (type: &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;)
        l 
          TableScan
            alias: l
            Statistics: Num rows: 1 Data size: 4 Basic stats: COMPLETE Column stats: NONE
            Filter Operator
              predicate: (id = 4436) (type: &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt;)
              Statistics: Num rows: 1 Data size: 4 Basic stats: COMPLETE Column stats: NONE
              HashTable Sink Operator
                keys:
                  0 4436 (type: &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;)
                  1 4436 (type: &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;)
                  2 4436 (type: &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;)
        pi 
          TableScan
            alias: pi
            Statistics: Num rows: 1 Data size: 4 Basic stats: COMPLETE Column stats: NONE
            Filter Operator
              predicate: id is not &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; (type: &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt;)
              Statistics: Num rows: 1 Data size: 4 Basic stats: COMPLETE Column stats: NONE
              HashTable Sink Operator
                keys:
                  0 _col6 (type: &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;)
                  1 id (type: &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;)

  Stage: Stage-9
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: la
            Statistics: Num rows: 1 Data size: 14 Basic stats: COMPLETE Column stats: NONE
            Filter Operator
              predicate: (((loan_id is not &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; and aid is not &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) and pi_id is not &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) and (loan_id = 4436)) (type: &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt;)
              Statistics: Num rows: 1 Data size: 14 Basic stats: COMPLETE Column stats: NONE
              Map Join Operator
                condition map:
                     Inner Join 0 to 1
                     Inner Join 0 to 2
                keys:
                  0 4436 (type: &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;)
                  1 4436 (type: &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;)
                  2 4436 (type: &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;)
                outputColumnNames: _col5, _col6
                Statistics: Num rows: 2 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                Map Join Operator
                  condition map:
                       Inner Join 0 to 1
                       Inner Join 1 to 2
                  keys:
                    0 _col5 (type: &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;)
                    1 id (type: &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;)
                    2 aid (type: &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;)
                  outputColumnNames: _col6, _col19, _col20
                  Statistics: Num rows: 4 Data size: 17 Basic stats: COMPLETE Column stats: NONE
                  Map Join Operator
                    condition map:
                         Inner Join 0 to 1
                    keys:
                      0 _col6 (type: &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;)
                      1 id (type: &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;)
                    outputColumnNames: _col19, _col20
                    Statistics: Num rows: 4 Data size: 18 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: _col19 (type: &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;), _col20 (type: &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;)
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 4 Data size: 18 Basic stats: COMPLETE Column stats: NONE
                      File Output Operator
                        compressed: &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;
                        Statistics: Num rows: 4 Data size: 18 Basic stats: COMPLETE Column stats: NONE
                        table:
                            input format: org.apache.hadoop.mapred.TextInputFormat
                            output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
      Local Work:
        Map Reduce Local Work

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

Time taken: 0.57 seconds, Fetched: 142 row(s)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;2.2. &quot;explain select...&quot; output for hive-0.13.1 Tez&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Tez
      Edges:
        Reducer 2 &amp;lt;- Map 1 (SIMPLE_EDGE), Map 4 (SIMPLE_EDGE), Reducer 6 (SIMPLE_EDGE)
        Reducer 3 &amp;lt;- Reducer 2 (SIMPLE_EDGE), Map 9 (SIMPLE_EDGE)
        Reducer 6 &amp;lt;- Map 5 (SIMPLE_EDGE), Map 7 (SIMPLE_EDGE), Map 8 (SIMPLE_EDGE)
      DagName: lcapp_20150528111717_06c57a5b-8dc6-4ce9-bce7-b9e0a7818fe4:1
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: acct
                  Statistics: Num rows: 1 Data size: 4 Basic stats: COMPLETE Column stats: NONE
                  Reduce Output Operator
                    key expressions: aid (type: &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;)
                    sort order: +
                    Map-reduce partition columns: aid (type: &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;)
                    Statistics: Num rows: 1 Data size: 4 Basic stats: COMPLETE Column stats: NONE
                    value expressions: acc_n (type: &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;), brn (type: &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;)
        Map 4 
            Map Operator Tree:
                TableScan
                  alias: a
                  Statistics: Num rows: 46 Data size: 187 Basic stats: COMPLETE Column stats: NONE
                  Reduce Output Operator
                    key expressions: id (type: &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;)
                    sort order: +
                    Map-reduce partition columns: id (type: &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;)
                    Statistics: Num rows: 46 Data size: 187 Basic stats: COMPLETE Column stats: NONE
        Map 5 
            Map Operator Tree:
                TableScan
                  alias: la
                  Statistics: Num rows: 28 Data size: 347 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: (loan_id = 4436) (type: &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt;)
                    Statistics: Num rows: 14 Data size: 173 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: loan_id (type: &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;)
                      sort order: +
                      Map-reduce partition columns: loan_id (type: &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;)
                      Statistics: Num rows: 14 Data size: 173 Basic stats: COMPLETE Column stats: NONE
                      value expressions: aid (type: &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;), pi_id (type: &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;)
        Map 7 
            Map Operator Tree:
                TableScan
                  alias: fr
                  Statistics: Num rows: 46 Data size: 187 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: (loan_id = 4436) (type: &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt;)
                    Statistics: Num rows: 23 Data size: 93 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: loan_id (type: &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;)
                      sort order: +
                      Map-reduce partition columns: loan_id (type: &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;)
                      Statistics: Num rows: 23 Data size: 93 Basic stats: COMPLETE Column stats: NONE
        Map 8 
            Map Operator Tree:
                TableScan
                  alias: l
                  Statistics: Num rows: 46 Data size: 187 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: (id = 4436) (type: &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt;)
                    Statistics: Num rows: 23 Data size: 93 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: id (type: &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;)
                      sort order: +
                      Map-reduce partition columns: id (type: &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;)
                      Statistics: Num rows: 23 Data size: 93 Basic stats: COMPLETE Column stats: NONE
        Map 9 
            Map Operator Tree:
                TableScan
                  alias: pi
                  Statistics: Num rows: 46 Data size: 187 Basic stats: COMPLETE Column stats: NONE
                  Reduce Output Operator
                    key expressions: id (type: &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;)
                    sort order: +
                    Map-reduce partition columns: id (type: &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;)
                    Statistics: Num rows: 46 Data size: 187 Basic stats: COMPLETE Column stats: NONE
        Reducer 2 
            Reduce Operator Tree:
              Join Operator
                condition map:
                     Inner Join 0 to 1
                     Inner Join 1 to 2
                condition expressions:
                  0 {VALUE._col2}
                  1 
                  2 {VALUE._col1} {VALUE._col2}
                outputColumnNames: _col2, _col15, _col16
                Statistics: Num rows: 110 Data size: 448 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  key expressions: _col2 (type: &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;)
                  sort order: +
                  Map-reduce partition columns: _col2 (type: &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;)
                  Statistics: Num rows: 110 Data size: 448 Basic stats: COMPLETE Column stats: NONE
                  value expressions: _col15 (type: &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;), _col16 (type: &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;)
        Reducer 3 
            Reduce Operator Tree:
              Join Operator
                condition map:
                     Inner Join 0 to 1
                condition expressions:
                  0 {VALUE._col1} {VALUE._col2}
                  1 
                outputColumnNames: _col1, _col2
                Statistics: Num rows: 121 Data size: 492 Basic stats: COMPLETE Column stats: NONE
                Select Operator
                  expressions: _col1 (type: &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;), _col2 (type: &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;)
                  outputColumnNames: _col0, _col1
                  Statistics: Num rows: 121 Data size: 492 Basic stats: COMPLETE Column stats: NONE
                  File Output Operator
                    compressed: &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;
                    Statistics: Num rows: 121 Data size: 492 Basic stats: COMPLETE Column stats: NONE
                    table:
                        input format: org.apache.hadoop.mapred.TextInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
        Reducer 6 
            Reduce Operator Tree:
              Join Operator
                condition map:
                     Inner Join 0 to 1
                     Inner Join 0 to 2
                condition expressions:
                  0 
                  1 {VALUE._col1} {VALUE._col2}
                  2 
                outputColumnNames: _col4, _col5
                Statistics: Num rows: 50 Data size: 204 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  key expressions: _col4 (type: &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;)
                  sort order: +
                  Map-reduce partition columns: _col4 (type: &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;)
                  Statistics: Num rows: 50 Data size: 204 Basic stats: COMPLETE Column stats: NONE
                  value expressions: _col5 (type: &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;)

  Stage: Stage-0
    Fetch Operator
      limit: -1

Time taken: 1.377 seconds, Fetched: 146 row(s)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;3. The workaround is to put &quot;acct.brn is not null&quot; to join condition&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
select
  acct.ACC_N,
  acct.brn
FROM L
JOIN LA ON L.id = LA.loan_id
JOIN FR ON L.id = FR.loan_id
JOIN A ON LA.aid = A.id
JOIN PI ON PI.id = LA.pi_id
JOIN acct ON A.id = acct.aid and acct.brn is not &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;
WHERE
  L.id = 4436;

OK
10	122
Time taken: 23.479 seconds, Fetched: 1 row(s)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I tried it on hive-1.3.0 (MR) and hive-0.13.1 (MR and Tez) - all combinations have the issue&lt;/p&gt;</description>
                <environment></environment>
        <key id="12833234">HIVE-10841</key>
            <summary>[WHERE col is not null] does not work sometimes for queries with many JOIN statements</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="jpullokkaran">Laljo John Pullokkaran</assignee>
                                    <reporter username="apivovarov">Alexander Pivovarov</reporter>
                        <labels>
                    </labels>
                <created>Wed, 27 May 2015 23:05:09 +0000</created>
                <updated>Tue, 16 Feb 2016 23:51:26 +0000</updated>
                            <resolved>Mon, 15 Jun 2015 19:38:30 +0000</resolved>
                                    <version>0.13.0</version>
                    <version>0.14.0</version>
                    <version>0.13.1</version>
                    <version>1.2.0</version>
                    <version>1.3.0</version>
                                    <fixVersion>1.3.0</fixVersion>
                    <fixVersion>1.2.1</fixVersion>
                    <fixVersion>2.0.0</fixVersion>
                    <fixVersion>1.0.2</fixVersion>
                                    <component>Query Planning</component>
                    <component>Query Processor</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>14</watches>
                                                                <comments>
                            <comment id="14563668" author="selinazh" created="Thu, 28 May 2015 20:47:57 +0000"  >&lt;p&gt;Seems this is introduced with Hive 0.13. Have tested with Hive 0.12 MR and got correct result.&lt;/p&gt;</comment>
                            <comment id="14564098" author="jpullokkaran" created="Fri, 29 May 2015 02:26:48 +0000"  >&lt;p&gt;This seems to be an issue with PPD.&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=apivovarov&quot; class=&quot;user-hover&quot; rel=&quot;apivovarov&quot;&gt;Alexander Pivovarov&lt;/a&gt; are you working on this?&lt;/p&gt;</comment>
                            <comment id="14564213" author="apivovarov" created="Fri, 29 May 2015 05:10:19 +0000"  >&lt;p&gt;if we look at hive-0.12 plan then we can see that it has &quot;brn is not null&quot; predicate in Filter Operator&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
acct 
          TableScan
            alias: acct
            Filter Operator
              predicate:
                  expr: brn is not &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;
                  type: &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;But in hive-1.3.0 plan I do not see &quot;brn&quot; at all. It only has &quot;predicate: aid is not null&quot; for acct table.&lt;br/&gt;
Does it mean that hive-1.3.0 plan is wrong?&lt;/p&gt;

&lt;p&gt;I checked ppd folder diff btw 0.12.0 and 0.13.0&lt;br/&gt;
It was two fixes&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HIVE-4293&quot; title=&quot;Predicates following UDTF operator are removed by PPD&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HIVE-4293&quot;&gt;&lt;del&gt;HIVE-4293&lt;/del&gt;&lt;/a&gt; : Predicates following UDTF operator are removed by PPD &lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HIVE-5411&quot; title=&quot;Migrate expression serialization to Kryo&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HIVE-5411&quot;&gt;&lt;del&gt;HIVE-5411&lt;/del&gt;&lt;/a&gt; : Migrate expression serialization to Kryo&lt;/p&gt;
</comment>
                            <comment id="14564215" author="apivovarov" created="Fri, 29 May 2015 05:12:29 +0000"  >&lt;p&gt;hive-0.12.0 plan&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
ABSTRACT SYNTAX TREE:
  (TOK_QUERY (TOK_FROM (TOK_JOIN (TOK_JOIN (TOK_JOIN (TOK_JOIN (TOK_JOIN (TOK_TABREF (TOK_TABNAME L)) (TOK_TABREF (TOK_TABNAME LA)) (= (. (TOK_TABLE_OR_COL L) id) (. (TOK_TABLE_OR_COL LA) loan_id))) (TOK_TABREF (TOK_TABNAME FR)) (= (. (TOK_TABLE_OR_COL L) id) (. (TOK_TABLE_OR_COL FR) loan_id))) (TOK_TABREF (TOK_TABNAME A)) (= (. (TOK_TABLE_OR_COL LA) aid) (. (TOK_TABLE_OR_COL A) id))) (TOK_TABREF (TOK_TABNAME PI)) (= (. (TOK_TABLE_OR_COL PI) id) (. (TOK_TABLE_OR_COL LA) pi_id))) (TOK_TABREF (TOK_TABNAME acct)) (= (. (TOK_TABLE_OR_COL A) id) (. (TOK_TABLE_OR_COL acct) aid)))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL acct) ACC_N)) (TOK_SELEXPR (. (TOK_TABLE_OR_COL acct) brn))) (TOK_WHERE (and (= (. (TOK_TABLE_OR_COL L) id) 4436) (TOK_FUNCTION TOK_ISNOTNULL (. (TOK_TABLE_OR_COL acct) brn))))))

STAGE DEPENDENCIES:
  Stage-11 is a root stage
  Stage-8 depends on stages: Stage-11
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-11
    Map Reduce Local Work
      Alias -&amp;gt; Map Local Tables:
        a 
          Fetch Operator
            limit: -1
        acct 
          Fetch Operator
            limit: -1
        fr 
          Fetch Operator
            limit: -1
        l 
          Fetch Operator
            limit: -1
        pi 
          Fetch Operator
            limit: -1
      Alias -&amp;gt; Map Local Operator Tree:
        a 
          TableScan
            alias: a
            HashTable Sink Operator
              condition expressions:
                0 {_col5}
                1 
                2 {acc_n} {brn}
              handleSkewJoin: &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;
              keys:
                0 [Column[_col4]]
                1 [Column[id]]
                2 [Column[aid]]
              Position of Big Table: 0
        acct 
          TableScan
            alias: acct
            Filter Operator
              predicate:
                  expr: brn is not &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;
                  type: &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt;
              HashTable Sink Operator
                condition expressions:
                  0 {_col5}
                  1 
                  2 {acc_n} {brn}
                handleSkewJoin: &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;
                keys:
                  0 [Column[_col4]]
                  1 [Column[id]]
                  2 [Column[aid]]
                Position of Big Table: 0
        fr 
          TableScan
            alias: fr
            Filter Operator
              predicate:
                  expr: (loan_id = 4436)
                  type: &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt;
              HashTable Sink Operator
                condition expressions:
                  0 
                  1 {aid} {pi_id}
                  2 
                handleSkewJoin: &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;
                keys:
                  0 [Column[id]]
                  1 [Column[loan_id]]
                  2 [Column[loan_id]]
                Position of Big Table: 1
        l 
          TableScan
            alias: l
            Filter Operator
              predicate:
                  expr: (id = 4436)
                  type: &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt;
              HashTable Sink Operator
                condition expressions:
                  0 
                  1 {aid} {pi_id}
                  2 
                handleSkewJoin: &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;
                keys:
                  0 [Column[id]]
                  1 [Column[loan_id]]
                  2 [Column[loan_id]]
                Position of Big Table: 1
        pi 
          TableScan
            alias: pi
            HashTable Sink Operator
              condition expressions:
                0 {_col15} {_col16}
                1 
              handleSkewJoin: &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;
              keys:
                0 [Column[_col2]]
                1 [Column[id]]
              Position of Big Table: 0

  Stage: Stage-8
    Map Reduce
      Alias -&amp;gt; Map Operator Tree:
        la 
          TableScan
            alias: la
            Filter Operator
              predicate:
                  expr: (loan_id = 4436)
                  type: &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt;
              Map Join Operator
                condition map:
                     Inner Join 0 to 1
                     Inner Join 0 to 2
                condition expressions:
                  0 
                  1 {aid} {pi_id}
                  2 
                handleSkewJoin: &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;
                keys:
                  0 [Column[id]]
                  1 [Column[loan_id]]
                  2 [Column[loan_id]]
                outputColumnNames: _col4, _col5
                Position of Big Table: 1
                Map Join Operator
                  condition map:
                       Inner Join 0 to 1
                       Inner Join 1 to 2
                  condition expressions:
                    0 {_col5}
                    1 
                    2 {acc_n} {brn}
                  handleSkewJoin: &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;
                  keys:
                    0 [Column[_col4]]
                    1 [Column[id]]
                    2 [Column[aid]]
                  outputColumnNames: _col2, _col15, _col16
                  Position of Big Table: 0
                  Map Join Operator
                    condition map:
                         Inner Join 0 to 1
                    condition expressions:
                      0 {_col15} {_col16}
                      1 
                    handleSkewJoin: &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;
                    keys:
                      0 [Column[_col2]]
                      1 [Column[id]]
                    outputColumnNames: _col1, _col2
                    Position of Big Table: 0
                    Select Operator
                      expressions:
                            expr: _col1
                            type: &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;
                            expr: _col2
                            type: &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;
                      outputColumnNames: _col0, _col1
                      File Output Operator
                        compressed: &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;
                        GlobalTableId: 0
                        table:
                            input format: org.apache.hadoop.mapred.TextInputFormat
                            output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
      Local Work:
        Map Reduce Local Work

  Stage: Stage-0
    Fetch Operator
      limit: -1
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="14564229" author="apivovarov" created="Fri, 29 May 2015 05:33:20 +0000"  >&lt;p&gt;if we change &quot;is not null&quot; to &quot;is null&quot; or to &quot; = 122&quot; then all 3 rows will be NULL or 122 for column &quot;brn&quot; (second column).&lt;/p&gt;

&lt;p&gt;and acct.brn is null;&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
10	NULL
NULL	NULL
NULL	NULL
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and acct.brn = 122;&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
10	122
NULL	122
NULL	122
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and acct.brn is null;&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
10	122
NULL	NULL
NULL	NULL
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="14564243" author="apivovarov" created="Fri, 29 May 2015 05:49:56 +0000"  >&lt;p&gt;I found that &quot;JOIN FR&quot; can be removed - the result still will be 3 rows&lt;br/&gt;
But adding or removing &quot;JOIN PI&quot; changes Filter Operator predicate for acct table&lt;/p&gt;

&lt;p&gt;if we remove &quot;JOIN PI&quot; then acct table Filter Operator predicate has &quot;brn is not null&quot; and query returns 1 row&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
        acct 
          TableScan
            alias: acct
            Statistics: Num rows: 5 Data size: 63 Basic stats: COMPLETE Column stats: NONE
            Filter Operator
              predicate: (aid is not &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; and brn is not &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) (type: &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt;)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;How it can be possible that removing &quot;JOIN PI&quot; changes Filter Operator predicate for acct table?&lt;/p&gt;

&lt;p&gt;The query below returns 1 row. Query plan has &quot;brn is not null&quot; predicate in Filter Operator for acct table.&lt;br/&gt;
But if we remove comment before &quot;JOIN PI&quot; then query plan will not have &quot;brn is not null&quot; predicate.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
explain select
  acct.ACC_N,
  acct.brn
FROM L
JOIN LA ON L.id = LA.loan_id
JOIN A ON LA.aid = A.id
--JOIN PI ON PI.id = LA.pi_id
JOIN acct ON A.id = acct.aid
WHERE
  L.id = 4436
  and acct.brn is not &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="14564244" author="gopalv" created="Fri, 29 May 2015 05:51:19 +0000"  >&lt;p&gt;can you try this with &lt;/p&gt;

&lt;p&gt;set hive.optimize.ppd=false;&lt;/p&gt;

&lt;p&gt;?&lt;/p&gt;</comment>
                            <comment id="14564273" author="apivovarov" created="Fri, 29 May 2015 06:20:18 +0000"  >&lt;p&gt;L tables also can be removed from the query - it does not affect the result.&lt;/p&gt;

&lt;p&gt;But I found that order of JOIN statements matters.&lt;br/&gt;
I tries the following combinations of the JOIN statements&lt;br/&gt;
(PI,acct,A) (PI,A,acct) (A,PI,acct) (acct,PI,A) (A,act,PI) (act,A,PI)&lt;/p&gt;

&lt;p&gt;3 rows are returned only for (A,PI,acct) combination&lt;br/&gt;
FROM LA&lt;br/&gt;
JOIN A&lt;br/&gt;
JOIN PI&lt;br/&gt;
JOIN acct&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
select
  acct.ACC_N,
  acct.brn
FROM LA
JOIN A ON LA.aid = A.id
JOIN PI ON PI.id = LA.pi_id
JOIN acct ON LA.aid = acct.aid
WHERE
  LA.loan_id = 4436
  and acct.brn is not &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;;
OK
10	122
NULL	NULL
NULL	NULL
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="14564297" author="apivovarov" created="Fri, 29 May 2015 06:43:01 +0000"  >&lt;p&gt;if I set hive.optimize.ppd=false then query returns 1 row BUT the plan does not have &quot;brn is not null&quot;&lt;/p&gt;

&lt;p&gt;if I  set hive.optimize.ppd=true and change JOIN statements order to (A,acct,PI) then query returns 1 row AND the plan HAS &quot;brn is not null&quot;.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
set hive.optimize.ppd=&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;;

select
  acct.ACC_N,
  acct.brn
FROM LA
JOIN A ON LA.aid = A.id
JOIN acct ON LA.aid = acct.aid
JOIN PI ON PI.id = LA.pi_id
WHERE
  LA.loan_id = 4436
  and acct.brn is not &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;;
OK
10	122
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

</comment>
                            <comment id="14565502" author="apivovarov" created="Fri, 29 May 2015 22:00:54 +0000"  >&lt;p&gt;I tested one of my queries with &quot;set hive.optimize.ppd=false;&quot;&lt;br/&gt;
Disabling ppd kills the performance. 9min vs 60 min.&lt;/p&gt;</comment>
                            <comment id="14566239" author="apivovarov" created="Sat, 30 May 2015 22:53:00 +0000"  >&lt;p&gt;disabling hive.ppd.remove.duplicatefilters helps&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
set hive.ppd.remove.duplicatefilters=&lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="14568042" author="apivovarov" created="Mon, 1 Jun 2015 21:24:25 +0000"  >&lt;p&gt;I looked at the query plans for both cases - remove.duplicatefilters false and true&lt;br/&gt;
if remove.duplicatefilters is false then&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Filter Operator predicates are added to Reduce step (including the predicates for &quot;acct&quot; table)&lt;/li&gt;
	&lt;li&gt;But Filter Operator predicates still not added to Map step for &quot;acct&quot; table.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I did some performance tests - looks like duplicating Filter Operator predicates to Reduce step does not affect the performance noticeably.&lt;br/&gt;
So, disabling hive.ppd.remove.duplicatefilters can be used as a good workaround until we find a way on how to fix query plan to include Filter Operator predicates on Map step for &quot;acct&quot; table.&lt;/p&gt;
</comment>
                            <comment id="14568044" author="apivovarov" created="Mon, 1 Jun 2015 21:27:21 +0000"  >&lt;p&gt;Changing the order of JOIN operators fixes the plan.&lt;br/&gt;
Filter Operator predicates are added to Map step for &quot;acct&quot; table.&lt;/p&gt;</comment>
                            <comment id="14568731" author="jpullokkaran" created="Tue, 2 Jun 2015 07:59:00 +0000"  >&lt;p&gt;I have attached an exploratory patch. This fixes the issue but needs to be revised further.&lt;br/&gt;
It seems like &lt;a href=&quot;https://issues.apache.org/jira/browse/HIVE-4293&quot; title=&quot;Predicates following UDTF operator are removed by PPD&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HIVE-4293&quot;&gt;&lt;del&gt;HIVE-4293&lt;/del&gt;&lt;/a&gt; introduced this bug.&lt;br/&gt;
Will upload a revised patch later.&lt;/p&gt;</comment>
                            <comment id="14570374" author="apivovarov" created="Wed, 3 Jun 2015 06:48:02 +0000"  >&lt;p&gt;Thank you Laljo John for looking at the issue. I tried the patch #1. Yes, it makes output to contain just 1 row. Probably the filter is added to Reduce step.&lt;br/&gt;
BUT, IMHO the patch #1 does not fix the root cause of the problem. I still do not see Filter Operator predicate (brn is not null) for acct table on Map step.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
select
  acct.ACC_N,
  acct.brn
FROM L
JOIN LA ON L.id = LA.loan_id
JOIN FR ON L.id = FR.loan_id
JOIN A ON LA.aid = A.id
JOIN PI ON PI.id = LA.pi_id
JOIN acct ON A.id = acct.aid
WHERE
  L.id = 4436
  and acct.brn is not &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
        acct 
          TableScan
            alias: acct
            Statistics: Num rows: 5 Data size: 63 Basic stats: COMPLETE Column stats: NONE
            Filter Operator
              predicate: aid is not &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; (type: &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt;)
              Statistics: Num rows: 3 Data size: 37 Basic stats: COMPLETE Column stats: NONE
              HashTable Sink Operator
                keys:
                  0 _col5 (type: &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;)
                  1 id (type: &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;)
                  2 aid (type: &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Hovewer, if you change JOIN order and put &quot;acct&quot; before &quot;PI&quot; then the plan will be correct - Map Local Operator Tree for acct table will have Filter Operator predicate (brn is not null)&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
select
  acct.ACC_N,
  acct.brn
FROM L
JOIN LA ON L.id = LA.loan_id
JOIN FR ON L.id = FR.loan_id
JOIN A ON LA.aid = A.id
JOIN acct ON A.id = acct.aid
JOIN PI ON PI.id = LA.pi_id
WHERE
  L.id = 4436
  and acct.brn is not &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
          TableScan
            alias: acct
            Statistics: Num rows: 5 Data size: 63 Basic stats: COMPLETE Column stats: NONE
            Filter Operator
              predicate: (aid is not &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; and brn is not &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) (type: &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt;)
              Statistics: Num rows: 2 Data size: 25 Basic stats: COMPLETE Column stats: NONE
              HashTable Sink Operator
                keys:
                  0 _col5 (type: &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;)
                  1 id (type: &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;)
                  2 aid (type: &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="14571849" author="apivovarov" created="Wed, 3 Jun 2015 23:53:11 +0000"  >&lt;p&gt;LOG info for the queries with different JOIN operators order&lt;/p&gt;

&lt;p&gt;L, LA, FR, A, PI, acct - only 2 log messages from ppd.OpProcFactory contain &quot;= 120&quot;&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
explain
select
  acct.ACC_N,
  acct.brn
FROM L
JOIN LA ON L.id = LA.loan_id
JOIN FR ON L.id = FR.loan_id
JOIN A ON LA.aid = A.id
JOIN PI ON PI.id = LA.pi_id
JOIN acct ON A.id = acct.aid
WHERE
  L.id = 4436
  and acct.brn = 120;

15/06/03 16:31:47 [main]: INFO ppd.OpProcFactory: Processing &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; FIL(25)
15/06/03 16:31:47 [main]: INFO ppd.OpProcFactory: Pushdown Predicates of FIL For Alias : acct
15/06/03 16:31:47 [main]: INFO ppd.OpProcFactory: 	(_col20 = 120)

15/06/03 16:31:47 [main]: INFO ppd.OpProcFactory: Processing &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; JOIN(24)
15/06/03 16:31:47 [main]: INFO ppd.OpProcFactory: Pushdown Predicates of JOIN For Alias : acct
15/06/03 16:31:47 [main]: INFO ppd.OpProcFactory: 	(VALUE._col19 = 120)

  Stage: Stage-9
    Map Reduce
                    Select Operator
                      expressions: _col19 (type: &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;), 120 (type: &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;L, LA, FR, A, acct, PI - 8 log lines from  ppd.OpProcFactory contain &quot;= 120&quot;&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
explain
select
  acct.ACC_N,
  acct.brn
FROM L
JOIN LA ON L.id = LA.loan_id
JOIN FR ON L.id = FR.loan_id
JOIN A ON LA.aid = A.id
JOIN acct ON A.id = acct.aid
JOIN PI ON PI.id = LA.pi_id
WHERE
  L.id = 4436
  and acct.brn = 120;

15/06/03 15:45:25 [main]: INFO ppd.OpProcFactory: Processing &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; FIL(25)
15/06/03 15:45:39 [main]: INFO ppd.OpProcFactory: Pushdown Predicates of FIL For Alias : acct
15/06/03 15:45:39 [main]: INFO ppd.OpProcFactory: 	(_col20 = 120)

15/06/03 15:46:23 [main]: INFO ppd.OpProcFactory: Processing &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; JOIN(24)
15/06/03 15:46:23 [main]: INFO ppd.OpProcFactory: Pushdown Predicates of JOIN For Alias : acct
15/06/03 15:46:23 [main]: INFO ppd.OpProcFactory: 	(VALUE._col19 = 120)

15/06/03 15:46:26 [main]: INFO ppd.OpProcFactory: Processing &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; RS(21)
15/06/03 15:46:26 [main]: INFO ppd.OpProcFactory: Pushdown Predicates of RS For Alias : acct
15/06/03 15:46:26 [main]: INFO ppd.OpProcFactory: 	(_col20 = 120)

15/06/03 15:46:43 [main]: INFO ppd.OpProcFactory: Processing &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; FIL(20)
15/06/03 15:46:49 [main]: INFO ppd.OpProcFactory: Pushdown Predicates of FIL For Alias : acct
15/06/03 15:46:49 [main]: INFO ppd.OpProcFactory: 	(_col20 = 120)

15/06/03 15:46:52 [main]: INFO ppd.OpProcFactory: Processing &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; JOIN(19)
15/06/03 15:46:52 [main]: INFO ppd.OpProcFactory: Pushdown Predicates of JOIN For Alias : acct
15/06/03 15:46:52 [main]: INFO ppd.OpProcFactory: 	(VALUE._col1 = 120)

15/06/03 15:59:18 [main]: INFO ppd.OpProcFactory: Processing &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; RS(18)
15/06/03 15:59:18 [main]: INFO ppd.OpProcFactory: Pushdown Predicates of RS For Alias : acct
15/06/03 15:59:18 [main]: INFO ppd.OpProcFactory: 	(brn = 120)

15/06/03 15:59:19 [main]: INFO ppd.OpProcFactory: Processing &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; FIL(17)
15/06/03 15:59:50 [main]: INFO ppd.OpProcFactory: Pushdown Predicates of FIL For Alias : acct
15/06/03 15:59:50 [main]: INFO ppd.OpProcFactory: 	(brn = 120)

15/06/03 16:00:20 [main]: INFO ppd.OpProcFactory: Processing &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; TS(4)
15/06/03 16:00:20 [main]: INFO ppd.OpProcFactory: Pushdown Predicates of TS For Alias : acct
15/06/03 16:00:20 [main]: INFO ppd.OpProcFactory: 	aid is not &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;
15/06/03 16:00:20 [main]: INFO ppd.OpProcFactory: 	(brn = 120)

15/06/03 16:01:38 [main]: INFO optimizer.ConstantPropagateProcFactory: expr Const &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; 120 fold from Column[VALUE._col19] is removed.

15/06/03 16:01:38 [main]: INFO optimizer.ColumnPrunerProcFactory: RS 21 oldColExprMap: {VALUE._col5=Column[_col5], VALUE._col4=Const &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; 4436, VALUE._col3=Column[_col3], VALUE._col2=Column[_col2], VALUE._col1=Column[_col1], VALUE._col0=Const &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; 4436, KEY.reducesinkkey0=Column[_col6], VALUE._col14=Column[_col15], VALUE._col13=Column[_col14], VALUE._col16=Column[_col17], VALUE._col15=Column[_col16], VALUE._col18=Column[_col19], VALUE._col9=Const &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; 4436, VALUE._col17=Column[_col18], VALUE._col8=Column[_col9], VALUE._col7=Column[_col8], VALUE._col19=Const &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; 120, VALUE._col6=Column[_col7], VALUE._col20=Column[_col21], VALUE._col11=Column[_col12], VALUE._col21=Column[_col22], VALUE._col12=Column[_col13], VALUE._col22=Column[_col23], VALUE._col10=Column[_col11]}

15/06/03 16:01:38 [main]: INFO optimizer.ColumnPrunerProcFactory: RS 18 oldColExprMap: {VALUE._col4=Column[ROW__ID], VALUE._col3=Column[INPUT__FILE__NAME], VALUE._col2=Column[BLOCK__OFFSET__INSIDE__FILE], VALUE._col1=Const &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; 120, VALUE._col0=Column[acc_n], KEY.reducesinkkey0=Column[aid]}

STAGE PLANS:
  Stage: Stage-12
        acct 
          TableScan
            alias: acct
            Statistics: Num rows: 5 Data size: 63 Basic stats: COMPLETE Column stats: NONE
            Filter Operator
              predicate: (aid is not &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; and (brn = 120)) (type: &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt;


  Stage: Stage-9
    Map Reduce
                    Select Operator
                      expressions: _col19 (type: &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;), 120 (type: &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="14572263" author="jpullokkaran" created="Thu, 4 Jun 2015 06:35:15 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=apivovarov&quot; class=&quot;user-hover&quot; rel=&quot;apivovarov&quot;&gt;Alexander Pivovarov&lt;/a&gt; I see that predicate is being pushed down with the patch. See the attached explain below:&lt;br/&gt;
hive&amp;gt; explain select acct.ACC_N,  acct.brn FROM L JOIN LA ON L.id = LA.loan_id JOIN FR ON L.id = FR.loan_id JOIN A ON LA.aid = A.id JOIN PI ON PI.id = LA.pi_id JOIN acct ON A.id = acct.aid and acct.brn is not null WHERE  L.id = 4436; &lt;br/&gt;
OK&lt;br/&gt;
STAGE DEPENDENCIES:&lt;br/&gt;
  Stage-12 is a root stage&lt;br/&gt;
  Stage-9 depends on stages: Stage-12&lt;br/&gt;
  Stage-0 depends on stages: Stage-9&lt;/p&gt;

&lt;p&gt;STAGE PLANS:&lt;br/&gt;
  Stage: Stage-12&lt;br/&gt;
    Map Reduce Local Work&lt;br/&gt;
      Alias -&amp;gt; Map Local Tables:&lt;br/&gt;
        a &lt;br/&gt;
          Fetch Operator&lt;br/&gt;
            limit: -1&lt;br/&gt;
        acct &lt;br/&gt;
          Fetch Operator&lt;br/&gt;
            limit: -1&lt;br/&gt;
        fr &lt;br/&gt;
          Fetch Operator&lt;br/&gt;
            limit: -1&lt;br/&gt;
        l &lt;br/&gt;
          Fetch Operator&lt;br/&gt;
            limit: -1&lt;br/&gt;
        pi &lt;br/&gt;
          Fetch Operator&lt;br/&gt;
            limit: -1&lt;br/&gt;
      Alias -&amp;gt; Map Local Operator Tree:&lt;br/&gt;
        a &lt;br/&gt;
          TableScan&lt;br/&gt;
            alias: a&lt;br/&gt;
            filterExpr: id is not null (type: boolean)&lt;br/&gt;
            Statistics: Num rows: 1 Data size: 4 Basic stats: COMPLETE Column stats: NONE&lt;br/&gt;
            Filter Operator&lt;br/&gt;
              predicate: id is not null (type: boolean)&lt;br/&gt;
              Statistics: Num rows: 1 Data size: 4 Basic stats: COMPLETE Column stats: NONE&lt;br/&gt;
              HashTable Sink Operator&lt;br/&gt;
                keys:&lt;br/&gt;
                  0 _col5 (type: int)&lt;br/&gt;
                  1 id (type: int)&lt;br/&gt;
                  2 aid (type: int)&lt;br/&gt;
        acct &lt;br/&gt;
          TableScan&lt;br/&gt;
            alias: acct&lt;br/&gt;
            filterExpr: (brn is not null and aid is not null) (type: boolean)&lt;br/&gt;
            Statistics: Num rows: 3 Data size: 31 Basic stats: COMPLETE Column stats: NONE&lt;br/&gt;
            Filter Operator&lt;br/&gt;
              predicate: (brn is not null and aid is not null) (type: boolean)&lt;br/&gt;
              Statistics: Num rows: 1 Data size: 10 Basic stats: COMPLETE Column stats: NONE&lt;br/&gt;
              HashTable Sink Operator&lt;br/&gt;
                keys:&lt;br/&gt;
                  0 _col5 (type: int)&lt;br/&gt;
                  1 id (type: int)&lt;br/&gt;
                  2 aid (type: int)&lt;br/&gt;
        fr &lt;br/&gt;
          TableScan&lt;br/&gt;
            alias: fr&lt;br/&gt;
            filterExpr: (loan_id = 4436) (type: boolean)&lt;br/&gt;
            Statistics: Num rows: 1 Data size: 4 Basic stats: COMPLETE Column stats: NONE&lt;br/&gt;
            Filter Operator&lt;br/&gt;
              predicate: (loan_id = 4436) (type: boolean)&lt;br/&gt;
              Statistics: Num rows: 1 Data size: 4 Basic stats: COMPLETE Column stats: NONE&lt;br/&gt;
              HashTable Sink Operator&lt;br/&gt;
                keys:&lt;br/&gt;
                  0 4436 (type: int)&lt;br/&gt;
                  1 4436 (type: int)&lt;br/&gt;
                  2 4436 (type: int)&lt;br/&gt;
        l &lt;br/&gt;
          TableScan&lt;br/&gt;
            alias: l&lt;br/&gt;
            filterExpr: (id = 4436) (type: boolean)&lt;br/&gt;
            Statistics: Num rows: 1 Data size: 4 Basic stats: COMPLETE Column stats: NONE&lt;br/&gt;
            Filter Operator&lt;br/&gt;
              predicate: (id = 4436) (type: boolean)&lt;br/&gt;
              Statistics: Num rows: 1 Data size: 4 Basic stats: COMPLETE Column stats: NONE&lt;br/&gt;
              HashTable Sink Operator&lt;br/&gt;
                keys:&lt;br/&gt;
                  0 4436 (type: int)&lt;br/&gt;
                  1 4436 (type: int)&lt;br/&gt;
                  2 4436 (type: int)&lt;br/&gt;
        pi &lt;br/&gt;
          TableScan&lt;br/&gt;
            alias: pi&lt;br/&gt;
            filterExpr: id is not null (type: boolean)&lt;br/&gt;
            Statistics: Num rows: 1 Data size: 4 Basic stats: COMPLETE Column stats: NONE&lt;br/&gt;
            Filter Operator&lt;br/&gt;
              predicate: id is not null (type: boolean)&lt;br/&gt;
              Statistics: Num rows: 1 Data size: 4 Basic stats: COMPLETE Column stats: NONE&lt;br/&gt;
              HashTable Sink Operator&lt;br/&gt;
                keys:&lt;br/&gt;
                  0 _col6 (type: int)&lt;br/&gt;
                  1 id (type: int)&lt;/p&gt;

&lt;p&gt;  Stage: Stage-9&lt;br/&gt;
    Map Reduce&lt;br/&gt;
      Map Operator Tree:&lt;br/&gt;
          TableScan&lt;br/&gt;
            alias: la&lt;br/&gt;
            filterExpr: (((loan_id is not null and aid is not null) and pi_id is not null) and (loan_id = 4436)) (type: boolean)&lt;br/&gt;
            Statistics: Num rows: 1 Data size: 14 Basic stats: COMPLETE Column stats: NONE&lt;br/&gt;
            Filter Operator&lt;br/&gt;
              predicate: (((loan_id is not null and aid is not null) and pi_id is not null) and (loan_id = 4436)) (type: boolean)&lt;br/&gt;
              Statistics: Num rows: 1 Data size: 14 Basic stats: COMPLETE Column stats: NONE&lt;br/&gt;
              Map Join Operator&lt;br/&gt;
                condition map:&lt;br/&gt;
                     Inner Join 0 to 1&lt;br/&gt;
                     Inner Join 0 to 2&lt;br/&gt;
                keys:&lt;br/&gt;
                  0 4436 (type: int)&lt;br/&gt;
                  1 4436 (type: int)&lt;br/&gt;
                  2 4436 (type: int)&lt;br/&gt;
                outputColumnNames: _col5, _col6&lt;br/&gt;
                Statistics: Num rows: 2 Data size: 8 Basic stats: COMPLETE Column stats: NONE&lt;br/&gt;
                Filter Operator&lt;br/&gt;
                  predicate: _col5 is not null (type: boolean)&lt;br/&gt;
                  Statistics: Num rows: 1 Data size: 4 Basic stats: COMPLETE Column stats: NONE&lt;br/&gt;
                  Map Join Operator&lt;br/&gt;
                    condition map:&lt;br/&gt;
                         Inner Join 0 to 1&lt;br/&gt;
                         Inner Join 1 to 2&lt;br/&gt;
                    keys:&lt;br/&gt;
                      0 _col5 (type: int)&lt;br/&gt;
                      1 id (type: int)&lt;br/&gt;
                      2 aid (type: int)&lt;br/&gt;
                    outputColumnNames: _col6, _col19, _col20&lt;br/&gt;
                    Statistics: Num rows: 2 Data size: 8 Basic stats: COMPLETE Column stats: NONE&lt;br/&gt;
                    Filter Operator&lt;br/&gt;
                      predicate: _col6 is not null (type: boolean)&lt;br/&gt;
                      Statistics: Num rows: 1 Data size: 4 Basic stats: COMPLETE Column stats: NONE&lt;br/&gt;
                      Map Join Operator&lt;br/&gt;
                        condition map:&lt;br/&gt;
                             Inner Join 0 to 1&lt;br/&gt;
                        keys:&lt;br/&gt;
                          0 _col6 (type: int)&lt;br/&gt;
                          1 id (type: int)&lt;br/&gt;
                        outputColumnNames: _col19, _col20&lt;br/&gt;
                        Statistics: Num rows: 1 Data size: 4 Basic stats: COMPLETE Column stats: NONE&lt;br/&gt;
                        Select Operator&lt;br/&gt;
                          expressions: _col19 (type: int), _col20 (type: int)&lt;br/&gt;
                          outputColumnNames: _col0, _col1&lt;br/&gt;
                          Statistics: Num rows: 1 Data size: 4 Basic stats: COMPLETE Column stats: NONE&lt;br/&gt;
                          File Output Operator&lt;br/&gt;
                            compressed: false&lt;br/&gt;
                            Statistics: Num rows: 1 Data size: 4 Basic stats: COMPLETE Column stats: NONE&lt;br/&gt;
                            table:&lt;br/&gt;
                                input format: org.apache.hadoop.mapred.TextInputFormat&lt;br/&gt;
                                output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat&lt;br/&gt;
                                serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe&lt;br/&gt;
      Local Work:&lt;br/&gt;
        Map Reduce Local Work&lt;/p&gt;

&lt;p&gt;  Stage: Stage-0&lt;br/&gt;
    Fetch Operator&lt;br/&gt;
      limit: -1&lt;br/&gt;
      Processor Tree:&lt;br/&gt;
        ListSink&lt;/p&gt;

&lt;p&gt;Time taken: 3143.501 seconds, Fetched: 154 row(s)&lt;br/&gt;
hive&amp;gt; &lt;/p&gt;</comment>
                            <comment id="14572310" author="jpullokkaran" created="Thu, 4 Jun 2015 07:27:09 +0000"  >&lt;p&gt;Never Mind thats the wrong query.&lt;br/&gt;
I think i can report the filter not getting in to mapper with the original query.&lt;/p&gt;</comment>
                            <comment id="14572733" author="hiveqa" created="Thu, 4 Jun 2015 13:14:16 +0000"  >

&lt;p&gt;&lt;font color=&quot;red&quot;&gt;Overall&lt;/font&gt;: -1 at least one tests failed&lt;/p&gt;

&lt;p&gt;Here are the results of testing the latest attachment:&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/secure/attachment/12736779/HIVE-10841.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/secure/attachment/12736779/HIVE-10841.patch&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;font color=&quot;red&quot;&gt;ERROR:&lt;/font&gt; -1 due to 101 failed/errored test(s), 8998 tests executed&lt;br/&gt;
&lt;b&gt;Failed tests:&lt;/b&gt;&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_auto_join12
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_auto_join23
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_auto_sortmerge_join_12
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_autogen_colalias
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_bucketsortoptimize_insert_2
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_bucketsortoptimize_insert_7
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_correlationoptimizer2
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_correlationoptimizer3
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_filter_cond_pushdown
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_filter_join_breaktask
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_join12
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_join19
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_join23
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_join28
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_join32
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_join32_lessSize
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_join33
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_join_alt_syntax
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_join_cond_pushdown_1
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_join_cond_pushdown_2
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_join_cond_pushdown_3
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_join_cond_pushdown_4
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_join_cond_pushdown_unqual1
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_join_cond_pushdown_unqual2
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_join_cond_pushdown_unqual3
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_join_cond_pushdown_unqual4
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_join_hive_626
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_join_star
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_join_vc
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_join_view
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_lateral_view_ppd
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_mapjoin_subquery
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_mapjoin_subquery2
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_multiMapJoin1
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_multi_join_union
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_no_hooks
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_ppd_join5
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_ppd_outer_join5
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_skewjoin
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_smb_mapjoin9
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_udf_nondeterministic
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_udtf_json_tuple
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_udtf_parse_url_tuple
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_union22
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_unionDistinct_1
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_vector_inner_join
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_vector_mr_diff_schema_alias
org.apache.hadoop.hive.cli.TestMiniTezCliDriver.testCliDriver_auto_sortmerge_join_12
org.apache.hadoop.hive.cli.TestMiniTezCliDriver.testCliDriver_bucket_map_join_tez1
org.apache.hadoop.hive.cli.TestMiniTezCliDriver.testCliDriver_dynamic_partition_pruning
org.apache.hadoop.hive.cli.TestMiniTezCliDriver.testCliDriver_explainuser_2
org.apache.hadoop.hive.cli.TestMiniTezCliDriver.testCliDriver_filter_join_breaktask
org.apache.hadoop.hive.cli.TestMiniTezCliDriver.testCliDriver_hybridgrace_hashjoin_2
org.apache.hadoop.hive.cli.TestMiniTezCliDriver.testCliDriver_lvj_mapjoin
org.apache.hadoop.hive.cli.TestMiniTezCliDriver.testCliDriver_skewjoin
org.apache.hadoop.hive.cli.TestMiniTezCliDriver.testCliDriver_unionDistinct_1
org.apache.hadoop.hive.cli.TestMiniTezCliDriver.testCliDriver_vector_inner_join
org.apache.hadoop.hive.cli.TestMiniTezCliDriver.testCliDriver_vector_mr_diff_schema_alias
org.apache.hadoop.hive.cli.TestMiniTezCliDriver.testCliDriver_vectorized_dynamic_partition_pruning
org.apache.hadoop.hive.cli.TestMinimrCliDriver.testCliDriver_ql_rewrite_gbtoidx_cbo_2
org.apache.hadoop.hive.cli.TestMinimrCliDriver.testCliDriver_schemeAuthority
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver_auto_join12
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver_auto_join16
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver_auto_join23
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver_auto_sortmerge_join_12
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver_bucket_map_join_tez1
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver_bucketsortoptimize_insert_2
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver_bucketsortoptimize_insert_7
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver_cbo_subq_in
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver_filter_join_breaktask
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver_index_auto_self_join
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver_join12
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver_join16
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver_join19
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver_join23
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver_join28
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver_join32
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver_join32_lessSize
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver_join33
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver_join_alt_syntax
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver_join_cond_pushdown_1
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver_join_cond_pushdown_2
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver_join_cond_pushdown_3
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver_join_cond_pushdown_4
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver_join_cond_pushdown_unqual1
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver_join_cond_pushdown_unqual2
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver_join_cond_pushdown_unqual3
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver_join_cond_pushdown_unqual4
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver_join_hive_626
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver_join_star
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver_join_vc
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver_join_view
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver_mapjoin_subquery
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver_mapjoin_subquery2
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver_multi_join_union
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver_ppd_join5
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver_ppd_outer_join5
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver_skewjoin
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver_subquery_in
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver_union22
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver_vector_mapjoin_reduce
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Test results: &lt;a href=&quot;http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/4172/testReport&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/4172/testReport&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/4172/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/4172/console&lt;/a&gt;&lt;br/&gt;
Test logs: &lt;a href=&quot;http://ec2-174-129-184-35.compute-1.amazonaws.com/logs/PreCommit-HIVE-TRUNK-Build-4172/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://ec2-174-129-184-35.compute-1.amazonaws.com/logs/PreCommit-HIVE-TRUNK-Build-4172/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Messages:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 101 tests failed
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;

&lt;p&gt;ATTACHMENT ID: 12736779 - PreCommit-HIVE-TRUNK-Build&lt;/p&gt;</comment>
                            <comment id="14573342" author="apivovarov" created="Thu, 4 Jun 2015 18:33:52 +0000"  >&lt;p&gt;Better to put code/sql/plan to {code}...{code} blocks. It will be easier to read&lt;/p&gt;</comment>
                            <comment id="14575506" author="jpullokkaran" created="Sat, 6 Jun 2015 02:03:38 +0000"  >&lt;p&gt;Attached modified patch.&lt;br/&gt;
This patch address correctness &amp;amp; predicate push down to mapper.&lt;/p&gt;</comment>
                            <comment id="14576044" author="hiveqa" created="Sun, 7 Jun 2015 00:43:25 +0000"  >

&lt;p&gt;&lt;font color=&quot;red&quot;&gt;Overall&lt;/font&gt;: -1 at least one tests failed&lt;/p&gt;

&lt;p&gt;Here are the results of testing the latest attachment:&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/secure/attachment/12738118/HIVE-10841.1.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/secure/attachment/12738118/HIVE-10841.1.patch&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;font color=&quot;red&quot;&gt;ERROR:&lt;/font&gt; -1 due to 98 failed/errored test(s), 9002 tests executed&lt;br/&gt;
&lt;b&gt;Failed tests:&lt;/b&gt;&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_auto_join12
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_auto_join23
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_auto_sortmerge_join_12
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_autogen_colalias
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_bucketsortoptimize_insert_2
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_bucketsortoptimize_insert_7
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_correlationoptimizer2
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_correlationoptimizer3
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_filter_cond_pushdown
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_filter_join_breaktask
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_join12
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_join19
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_join23
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_join28
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_join32
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_join32_lessSize
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_join33
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_join_alt_syntax
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_join_cond_pushdown_1
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_join_cond_pushdown_2
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_join_cond_pushdown_3
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_join_cond_pushdown_4
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_join_cond_pushdown_unqual1
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_join_cond_pushdown_unqual2
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_join_cond_pushdown_unqual3
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_join_cond_pushdown_unqual4
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_join_hive_626
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_join_star
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_join_vc
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_join_view
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_lateral_view_ppd
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_mapjoin_subquery
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_mapjoin_subquery2
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_multiMapJoin1
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_multi_join_union
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_no_hooks
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_ppd_join5
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_ppd_outer_join5
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_skewjoin
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_smb_mapjoin9
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_udtf_json_tuple
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_udtf_parse_url_tuple
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_union22
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_unionDistinct_1
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_vector_inner_join
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_vector_mr_diff_schema_alias
org.apache.hadoop.hive.cli.TestMiniTezCliDriver.testCliDriver_auto_sortmerge_join_12
org.apache.hadoop.hive.cli.TestMiniTezCliDriver.testCliDriver_bucket_map_join_tez1
org.apache.hadoop.hive.cli.TestMiniTezCliDriver.testCliDriver_dynamic_partition_pruning
org.apache.hadoop.hive.cli.TestMiniTezCliDriver.testCliDriver_explainuser_2
org.apache.hadoop.hive.cli.TestMiniTezCliDriver.testCliDriver_filter_join_breaktask
org.apache.hadoop.hive.cli.TestMiniTezCliDriver.testCliDriver_hybridgrace_hashjoin_2
org.apache.hadoop.hive.cli.TestMiniTezCliDriver.testCliDriver_lvj_mapjoin
org.apache.hadoop.hive.cli.TestMiniTezCliDriver.testCliDriver_skewjoin
org.apache.hadoop.hive.cli.TestMiniTezCliDriver.testCliDriver_unionDistinct_1
org.apache.hadoop.hive.cli.TestMiniTezCliDriver.testCliDriver_vector_inner_join
org.apache.hadoop.hive.cli.TestMiniTezCliDriver.testCliDriver_vector_mr_diff_schema_alias
org.apache.hadoop.hive.cli.TestMiniTezCliDriver.testCliDriver_vectorized_dynamic_partition_pruning
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver_auto_join12
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver_auto_join16
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver_auto_join23
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver_auto_sortmerge_join_12
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver_bucket_map_join_tez1
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver_bucketsortoptimize_insert_2
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver_bucketsortoptimize_insert_7
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver_cbo_subq_in
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver_filter_join_breaktask
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver_index_auto_self_join
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver_join12
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver_join16
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver_join19
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver_join23
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver_join28
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver_join32
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver_join32_lessSize
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver_join33
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver_join_alt_syntax
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver_join_cond_pushdown_1
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver_join_cond_pushdown_2
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver_join_cond_pushdown_3
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver_join_cond_pushdown_4
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver_join_cond_pushdown_unqual1
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver_join_cond_pushdown_unqual2
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver_join_cond_pushdown_unqual3
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver_join_cond_pushdown_unqual4
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver_join_hive_626
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver_join_star
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver_join_vc
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver_join_view
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver_mapjoin_subquery
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver_mapjoin_subquery2
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver_multi_join_union
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver_ppd_join5
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver_ppd_outer_join5
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver_skewjoin
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver_subquery_in
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver_union22
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver_vector_mapjoin_reduce
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Test results: &lt;a href=&quot;http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/4204/testReport&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/4204/testReport&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/4204/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/4204/console&lt;/a&gt;&lt;br/&gt;
Test logs: &lt;a href=&quot;http://ec2-174-129-184-35.compute-1.amazonaws.com/logs/PreCommit-HIVE-TRUNK-Build-4204/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://ec2-174-129-184-35.compute-1.amazonaws.com/logs/PreCommit-HIVE-TRUNK-Build-4204/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Messages:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 98 tests failed
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;

&lt;p&gt;ATTACHMENT ID: 12738118 - PreCommit-HIVE-TRUNK-Build&lt;/p&gt;</comment>
                            <comment id="14578345" author="apivovarov" created="Tue, 9 Jun 2015 05:30:56 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jpullokkaran&quot; class=&quot;user-hover&quot; rel=&quot;jpullokkaran&quot;&gt;Laljo John Pullokkaran&lt;/a&gt;, thank you for &lt;a href=&quot;https://issues.apache.org/jira/browse/HIVE-10841&quot; title=&quot;[WHERE col is not null] does not work sometimes for queries with many JOIN statements&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HIVE-10841&quot;&gt;&lt;del&gt;HIVE-10841&lt;/del&gt;&lt;/a&gt;.1.patch.&lt;br/&gt;
It changes 2 files:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;SemanticAnalyzer.java&lt;/li&gt;
	&lt;li&gt;OpProcFactory.java&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I tried the fix in SemanticAnalyzer.java only. It solve the issue with my test query.&lt;br/&gt;
So, looks like the fix in SemanticAnalyzer.java is enough to solve the issue.&lt;/p&gt;

&lt;p&gt;Why do we need fixes in OpProcFactory.java? Should we open separate Jira for them?&lt;/p&gt;

&lt;p&gt;2. Looks like we need to rerun bunch of Cli, Tez and Spark tests...&lt;/p&gt;</comment>
                            <comment id="14578474" author="jpullokkaran" created="Tue, 9 Jun 2015 07:25:05 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=a.semyannikov&quot; class=&quot;user-hover&quot; rel=&quot;a.semyannikov&quot;&gt;Alexander&lt;/a&gt;&lt;br/&gt;
#1. We need both: SemanticAnalyzer(JoinTree) change for predicate push down &amp;amp; OpProc factory to prevent illegal push downs.&lt;br/&gt;
#2 Yes, the failed tests need to be analyzed&lt;/p&gt;
</comment>
                            <comment id="14579397" author="jpullokkaran" created="Tue, 9 Jun 2015 18:53:45 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=a.semyannikov&quot; class=&quot;user-hover&quot; rel=&quot;a.semyannikov&quot;&gt;Alexander&lt;/a&gt; I hope you don&apos;t mind; i have assigned the bug to myself.&lt;/p&gt;</comment>
                            <comment id="14579530" author="apivovarov" created="Tue, 9 Jun 2015 20:36:53 +0000"  >&lt;p&gt;Sure, np. Btw, my apache id is apivovarov&lt;/p&gt;</comment>
                            <comment id="14581443" author="apivovarov" created="Thu, 11 Jun 2015 05:14:10 +0000"  >&lt;p&gt;3. New integration test which reproduces the issue is also needed&lt;br/&gt;
4. Is it possible to add JUnit tests for the fixes?&lt;/p&gt;</comment>
                            <comment id="14581444" author="apivovarov" created="Thu, 11 Jun 2015 05:14:43 +0000"  >&lt;p&gt;5. Can you add RB link?&lt;/p&gt;</comment>
                            <comment id="14581622" author="hiveqa" created="Thu, 11 Jun 2015 07:59:01 +0000"  >

&lt;p&gt;&lt;font color=&quot;red&quot;&gt;Overall&lt;/font&gt;: -1 at least one tests failed&lt;/p&gt;

&lt;p&gt;Here are the results of testing the latest attachment:&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/secure/attachment/12738988/HIVE-10841.2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/secure/attachment/12738988/HIVE-10841.2.patch&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;font color=&quot;red&quot;&gt;ERROR:&lt;/font&gt; -1 due to 4 failed/errored test(s), 9005 tests executed&lt;br/&gt;
&lt;b&gt;Failed tests:&lt;/b&gt;&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver_join28
org.apache.hive.beeline.TestSchemaTool.testSchemaInit
org.apache.hive.beeline.TestSchemaTool.testSchemaUpgrade
org.apache.hive.hcatalog.hbase.TestPigHBaseStorageHandler.org.apache.hive.hcatalog.hbase.TestPigHBaseStorageHandler
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Test results: &lt;a href=&quot;http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/4246/testReport&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/4246/testReport&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/4246/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/4246/console&lt;/a&gt;&lt;br/&gt;
Test logs: &lt;a href=&quot;http://ec2-174-129-184-35.compute-1.amazonaws.com/logs/PreCommit-HIVE-TRUNK-Build-4246/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://ec2-174-129-184-35.compute-1.amazonaws.com/logs/PreCommit-HIVE-TRUNK-Build-4246/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Messages:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 4 tests failed
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;

&lt;p&gt;ATTACHMENT ID: 12738988 - PreCommit-HIVE-TRUNK-Build&lt;/p&gt;</comment>
                            <comment id="14581816" author="jcamachorodriguez" created="Thu, 11 Jun 2015 10:52:11 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jpullokkaran&quot; class=&quot;user-hover&quot; rel=&quot;jpullokkaran&quot;&gt;Laljo John Pullokkaran&lt;/a&gt;, I verified that test fails are unrelated.&lt;/p&gt;

&lt;p&gt;I uploaded a new version of the patch that includes the test case provided by &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=apivovarov&quot; class=&quot;user-hover&quot; rel=&quot;apivovarov&quot;&gt;Alexander Pivovarov&lt;/a&gt;. It will trigger a new QA run.&lt;/p&gt;</comment>
                            <comment id="14581895" author="hiveqa" created="Thu, 11 Jun 2015 12:59:14 +0000"  >

&lt;p&gt;&lt;font color=&quot;red&quot;&gt;Overall&lt;/font&gt;: -1 at least one tests failed&lt;/p&gt;

&lt;p&gt;Here are the results of testing the latest attachment:&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/secure/attachment/12739033/HIVE-10841.03.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/secure/attachment/12739033/HIVE-10841.03.patch&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;font color=&quot;red&quot;&gt;ERROR:&lt;/font&gt; -1 due to 2 failed/errored test(s), 9008 tests executed&lt;br/&gt;
&lt;b&gt;Failed tests:&lt;/b&gt;&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;org.apache.hive.beeline.TestSchemaTool.testSchemaInit
org.apache.hive.beeline.TestSchemaTool.testSchemaUpgrade
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Test results: &lt;a href=&quot;http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/4248/testReport&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/4248/testReport&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/4248/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/4248/console&lt;/a&gt;&lt;br/&gt;
Test logs: &lt;a href=&quot;http://ec2-174-129-184-35.compute-1.amazonaws.com/logs/PreCommit-HIVE-TRUNK-Build-4248/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://ec2-174-129-184-35.compute-1.amazonaws.com/logs/PreCommit-HIVE-TRUNK-Build-4248/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Messages:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 2 tests failed
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;

&lt;p&gt;ATTACHMENT ID: 12739033 - PreCommit-HIVE-TRUNK-Build&lt;/p&gt;</comment>
                            <comment id="14582001" author="jpullokkaran" created="Thu, 11 Jun 2015 14:40:10 +0000"  >&lt;p&gt;RB Link posted.&lt;/p&gt;</comment>
                            <comment id="14582055" author="ashutoshc" created="Thu, 11 Jun 2015 15:18:25 +0000"  >&lt;p&gt;+1 LGTM&lt;/p&gt;</comment>
                            <comment id="14582596" author="jpullokkaran" created="Thu, 11 Jun 2015 22:13:54 +0000"  >&lt;p&gt;Committed to 1.2.1&lt;/p&gt;</comment>
                            <comment id="14583777" author="apivovarov" created="Fri, 12 Jun 2015 17:54:06 +0000"  >&lt;p&gt;Laljo, I noticed that in patches 2 and 03 you removed the change to OpProc.&lt;br/&gt;
So, looks like the fix in SemanticAnalyzer.java is enough to solve the issue.&lt;/p&gt;

&lt;p&gt;Do you want to cherry-pick the fix to master branch and mark Jira as Resolved?&lt;/p&gt;</comment>
                            <comment id="14583819" author="jpullokkaran" created="Fri, 12 Jun 2015 18:13:26 +0000"  >&lt;p&gt;yes, adding the check in OpProc would have preserved pushed predicates in some cases.&lt;br/&gt;
I will start back porting the fixes to other branches.&lt;/p&gt;</comment>
                            <comment id="14583950" author="jpullokkaran" created="Fri, 12 Jun 2015 19:41:10 +0000"  >&lt;p&gt;Committed to trunk.&lt;/p&gt;</comment>
                            <comment id="14583956" author="jpullokkaran" created="Fri, 12 Jun 2015 19:43:59 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=vikram.dixit&quot; class=&quot;user-hover&quot; rel=&quot;vikram.dixit&quot;&gt;Vikram Dixit K&lt;/a&gt; Can i get approval for back porting this to Hive 0.14 maintenance branch?&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rhbutani&quot; class=&quot;user-hover&quot; rel=&quot;rhbutani&quot;&gt;Harish Butani&lt;/a&gt; Can i get approval for back porting this to Hive 0.13 maintenance branch?&lt;/p&gt;</comment>
                            <comment id="14583988" author="apivovarov" created="Fri, 12 Jun 2015 20:05:35 +0000"  >&lt;p&gt;Laljo, could you cherry-pick the commit to branch-1  (hive-1.3.0)?&lt;br/&gt;
&lt;a href=&quot;https://github.com/apache/hive/commits/branch-1&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/hive/commits/branch-1&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="14584075" author="jpullokkaran" created="Fri, 12 Jun 2015 21:00:37 +0000"  >&lt;p&gt;Committed to branch-1.&lt;/p&gt;</comment>
                            <comment id="14585400" author="vikram.dixit" created="Mon, 15 Jun 2015 03:34:04 +0000"  >&lt;p&gt;+1 for 0.14 branch.&lt;/p&gt;</comment>
                            <comment id="14586542" author="hagleitn" created="Mon, 15 Jun 2015 19:38:30 +0000"  >&lt;p&gt;Resolving. This has been committed to 1.2, 1 and master.&lt;/p&gt;</comment>
                            <comment id="14587064" author="jpullokkaran" created="Mon, 15 Jun 2015 22:42:21 +0000"  >&lt;p&gt;Committed to branch 1.0.&lt;/p&gt;</comment>
                            <comment id="14587589" author="lefty@hortonworks.com" created="Tue, 16 Jun 2015 07:23:00 +0000"  >&lt;p&gt;Does branch-1.0 mean version 1.0.1 or is it the same as branch-1 (version 1.3.0)?&lt;/p&gt;

&lt;p&gt;Today I&apos;ve seen three commits to &quot;refs/heads/branch-1.0&quot; but they don&apos;t show Fix Version 1.0.1 on the jira (&lt;a href=&quot;https://issues.apache.org/jira/browse/HIVE-10273&quot; title=&quot;Union with partition tables which have no data fails with NPE&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HIVE-10273&quot;&gt;&lt;del&gt;HIVE-10273&lt;/del&gt;&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/browse/HIVE-10685&quot; title=&quot;Alter table concatenate oparetor will cause duplicate data&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HIVE-10685&quot;&gt;&lt;del&gt;HIVE-10685&lt;/del&gt;&lt;/a&gt;, and &lt;a href=&quot;https://issues.apache.org/jira/browse/HIVE-10841&quot; title=&quot;[WHERE col is not null] does not work sometimes for queries with many JOIN statements&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HIVE-10841&quot;&gt;&lt;del&gt;HIVE-10841&lt;/del&gt;&lt;/a&gt;).  Many other commits go to &quot;refs/heads/branch-1&quot; so I&apos;m confused.  Perhaps we need more details in the wiki.&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://cwiki.apache.org/confluence/display/Hive/HowToContribute#HowToContribute-UnderstandingHiveBranches&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;Understanding Hive Branches &lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14589081" author="apivovarov" created="Wed, 17 Jun 2015 00:26:40 +0000"  >&lt;p&gt;Currently the patch is committed to&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/apache/hive/commits/branch-1&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/hive/commits/branch-1&lt;/a&gt;&lt;br/&gt;
&lt;a href=&quot;https://github.com/apache/hive/commits/branch-1.0&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/hive/commits/branch-1.0&lt;/a&gt;&lt;br/&gt;
&lt;a href=&quot;https://github.com/apache/hive/commits/branch-1.2&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/hive/commits/branch-1.2&lt;/a&gt;&lt;br/&gt;
&lt;a href=&quot;https://github.com/apache/hive/commits/master&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/hive/commits/master&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I updated Fix Version/s field accordingly&lt;/p&gt;</comment>
                            <comment id="14589489" author="lefty@hortonworks.com" created="Wed, 17 Jun 2015 08:34:18 +0000"  >&lt;p&gt;So what is branch-1.0?  I thought it was 1.0.1 but don&apos;t see it in Fix Version (currently 1.3.0, 1.2.1, 2.0.0).&lt;/p&gt;</comment>
                            <comment id="14590253" author="jpullokkaran" created="Wed, 17 Jun 2015 18:20:20 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=leftylev&quot; class=&quot;user-hover&quot; rel=&quot;leftylev&quot;&gt;Lefty Leverenz&lt;/a&gt; I am told 1.0 is the branch that i should commit to.&lt;br/&gt;
cc, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=vikram.dixit&quot; class=&quot;user-hover&quot; rel=&quot;vikram.dixit&quot;&gt;Vikram Dixit K&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="14590267" author="vikram.dixit" created="Wed, 17 Jun 2015 18:27:06 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=leftylev&quot; class=&quot;user-hover&quot; rel=&quot;leftylev&quot;&gt;Lefty Leverenz&lt;/a&gt; 1.0.1 is a release tag not a branch by itself. Branch 1.0 is the branch where 1.0.1 was spun off from. If we have a 1.0.2, it would be from the top of branch-1.0. The fix versions cannot say 1.0.0 though. We can say it is going to be in 1.0.2.&lt;/p&gt;</comment>
                            <comment id="14590278" author="apivovarov" created="Wed, 17 Jun 2015 18:32:07 +0000"  >&lt;p&gt;1.0.1 was released on May 20. How it can be fixed in 1.0.1?  &lt;a href=&quot;http://apache.mirrors.lucidnetworks.net/hive/hive-1.0.1/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://apache.mirrors.lucidnetworks.net/hive/hive-1.0.1/&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="14590280" author="apivovarov" created="Wed, 17 Jun 2015 18:33:12 +0000"  >&lt;p&gt;Yes, 1.0.2 is better&lt;/p&gt;</comment>
                            <comment id="14590303" author="jpullokkaran" created="Wed, 17 Jun 2015 18:43:57 +0000"  >&lt;p&gt;Thanks&lt;/p&gt;</comment>
                            <comment id="14591226" author="lefty@hortonworks.com" created="Thu, 18 Jun 2015 04:30:34 +0000"  >&lt;p&gt;The light dawns!  Thanks, all.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310000">
                    <name>Duplicate</name>
                                                                <inwardlinks description="is duplicated by">
                                        <issuelink>
            <issuekey id="12838367">HIVE-11034</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12640695">HIVE-4293</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12625501">HIVE-3847</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12739033" name="HIVE-10841.03.patch" size="16831" author="jcamachorodriguez" created="Thu, 11 Jun 2015 10:52:11 +0000"/>
                            <attachment id="12738118" name="HIVE-10841.1.patch" size="2912" author="jpullokkaran" created="Sat, 6 Jun 2015 02:01:45 +0000"/>
                            <attachment id="12738988" name="HIVE-10841.2.patch" size="2195" author="jpullokkaran" created="Thu, 11 Jun 2015 04:26:48 +0000"/>
                            <attachment id="12736779" name="HIVE-10841.patch" size="717" author="jpullokkaran" created="Tue, 2 Jun 2015 07:55:27 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 28 May 2015 20:47:57 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 24 weeks, 2 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2fadb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>