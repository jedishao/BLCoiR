<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 02 23:35:04 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HIVE-1534/HIVE-1534.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HIVE-1534] Join filters do not work correctly with outer joins</title>
                <link>https://issues.apache.org/jira/browse/HIVE-1534</link>
                <project id="12310843" key="HIVE">Hive</project>
                    <description>&lt;p&gt; SELECT * FROM T1 LEFT OUTER JOIN T2 ON (T1.c1=T2.c2 AND T1.c1 &amp;lt; 10)&lt;br/&gt;
and  SELECT * FROM T1 RIGHT OUTER JOIN T2 ON (T1.c1=T2.c2 AND T2.c1 &amp;lt; 10)&lt;br/&gt;
do not give correct results.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12471377">HIVE-1534</key>
            <summary>Join filters do not work correctly with outer joins</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="amareshwari">Amareshwari Sriramadasu</assignee>
                                    <reporter username="amareshwari">Amareshwari Sriramadasu</reporter>
                        <labels>
                    </labels>
                <created>Thu, 12 Aug 2010 06:05:13 +0000</created>
                <updated>Tue, 6 Sep 2016 23:39:01 +0000</updated>
                            <resolved>Tue, 21 Sep 2010 21:00:41 +0000</resolved>
                                                    <fixVersion>0.7.0</fixVersion>
                                    <component>Query Processor</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                <comments>
                            <comment id="12897587" author="amareshwari" created="Thu, 12 Aug 2010 06:13:09 +0000"  >&lt;p&gt;For a table input3 with following data:&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;key &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; value &lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;NULL &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;   35 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;12 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;     NULL&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;10 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;     1000 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;10 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;     100&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;100&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;    100 &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;


&lt;p&gt;The queries&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
 SELECT * FROM input3 a left &lt;span class=&quot;code-keyword&quot;&gt;outer&lt;/span&gt; JOIN input3 b ON (a.key=b.key AND a.key &amp;lt; 100);
and
 SELECT * FROM input3 a right &lt;span class=&quot;code-keyword&quot;&gt;outer&lt;/span&gt; JOIN input3 b ON (a.key=b.key AND b.key &amp;lt; 100);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt; 
&lt;p&gt;produce the output as &lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;10      1000    10      100
10      1000    10      1000
10      100     10      100
10      100     10      1000
12      NULL    12      NULL
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Where as the expected output for &lt;br/&gt;
&quot;SELECT * FROM input3 a left outer JOIN input3 b ON (a.key=b.key AND a.key &amp;lt; 100);&quot; is&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; NULL &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;   35 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; NULL &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; NULL &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;   10 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; 1000 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;   10 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; 1000 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;   10 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; 1000 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;   10 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  100 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  100 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  100 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; NULL &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; NULL &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;   12 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; NULL &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;   12 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; NULL &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;   10 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  100 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;   10 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; 1000 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;   10 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  100 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;   10 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  100 &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;


&lt;p&gt; and expected output for &quot;SELECT * FROM input3 a right outer JOIN input3 b ON (a.key=b.key AND b.key &amp;lt; 100);&quot; is&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; NULL &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; NULL &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; NULL &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;   35 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;   10 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; 1000 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;   10 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; 1000 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;   10 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  100 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;   10 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; 1000 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; NULL &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; NULL &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  100 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  100 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;   12 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; NULL &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;   12 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; NULL &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;   10 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; 1000 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;   10 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  100 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;   10 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  100 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;   10 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  100 &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
</comment>
                            <comment id="12897909" author="jvs" created="Thu, 12 Aug 2010 19:26:52 +0000"  >&lt;p&gt;Definitely a bug.  It happens regardless of the setting of hive.optimize.ppd, so it probably has something to do with the way the join condition is decomposed rather than the predicate pushdown optimization.&lt;/p&gt;</comment>
                            <comment id="12897912" author="jvs" created="Thu, 12 Aug 2010 19:30:12 +0000"  >&lt;p&gt;Assigning this to you in case you want to take a look at it together with &lt;a href=&quot;https://issues.apache.org/jira/browse/HIVE-741&quot; title=&quot;NULL is not handled correctly in join&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HIVE-741&quot;&gt;&lt;del&gt;HIVE-741&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="12898124" author="amareshwari" created="Fri, 13 Aug 2010 08:01:24 +0000"  >&lt;p&gt;With ppd on or off, Mapper is filtering out table with alias a on the predicate a.key &amp;lt; 100 for the left outer join query. Similarly on alias b for right outer join query. This is mostly because of &lt;a href=&quot;https://issues.apache.org/jira/browse/HIVE-1538&quot; title=&quot;FilterOperator is applied twice with ppd on.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HIVE-1538&quot;&gt;&lt;del&gt;HIVE-1538&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="12906673" author="amareshwari" created="Tue, 7 Sep 2010 05:02:18 +0000"  >&lt;blockquote&gt;&lt;p&gt;Definitely a bug. It happens regardless of the setting of hive.optimize.ppd, so it probably has something to do with the way the join condition is decomposed rather than the predicate pushdown optimization.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yes. This has nothing to do with predicate pushdown. After going through Join implementation, I see that after Join-tree is generated, join filters are pushed and then join operator is generated for the join condition. But for outer joins, filters should be part of the join condition i.e. if the condition is not obeyed (or the filter is not obeyed), the values should be joined with nulls.&lt;/p&gt;</comment>
                            <comment id="12907001" author="namit" created="Tue, 7 Sep 2010 22:32:45 +0000"  >&lt;p&gt;Definitely a bug, but not related to &lt;a href=&quot;https://issues.apache.org/jira/browse/HIVE-1538&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HIVE-1538&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;For outer joins, the filters should not be pushed above the join.&lt;/p&gt;


&lt;p&gt;For the query,&lt;/p&gt;

&lt;p&gt;SELECT * FROM input3 a left outer JOIN input3 b ON (a.key=b.key AND a.key &amp;lt; 100);&quot; &lt;/p&gt;


&lt;p&gt;the row: 100 100&lt;/p&gt;

&lt;p&gt;is being pruned even before it reaches the join.&lt;/p&gt;

&lt;p&gt;As you suggested above,  the correct solution is to have the filter as part of the join, which we dont support currently.&lt;/p&gt;

&lt;p&gt;For now, I would suggest not supporting filters in the join condition for outer joins, since we are returning wrong results,&lt;br/&gt;
and the correct fix will involve a big change&lt;/p&gt;</comment>
                            <comment id="12907094" author="amareshwari" created="Wed, 8 Sep 2010 05:22:46 +0000"  >&lt;blockquote&gt;&lt;p&gt;I would suggest not supporting filters in the join condition for outer joins, since we are returning wrong results.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Created &lt;a href=&quot;https://issues.apache.org/jira/browse/HIVE-1621&quot; title=&quot;Disable join filters for outer joins.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HIVE-1621&quot;&gt;&lt;del&gt;HIVE-1621&lt;/del&gt;&lt;/a&gt; for this. Leaving this jira to do the correct fix.&lt;/p&gt;</comment>
                            <comment id="12907605" author="amareshwari" created="Thu, 9 Sep 2010 11:52:40 +0000"  >&lt;p&gt;I worked on separating filters for outer joins. &lt;br/&gt;
Here is a patch which does not push filters for outer joins and filters are applied in the join implementation.&lt;/p&gt;

&lt;p&gt;Patch would need some more work on SMBMapJoin. Please have look if the approach looks fine.&lt;/p&gt;</comment>
                            <comment id="12908657" author="amareshwari" created="Mon, 13 Sep 2010 07:38:11 +0000"  >&lt;p&gt;With the uploaded patch, there is bug with cartesian products and right outer joins, when there are filters. Looking into it.&lt;/p&gt;</comment>
                            <comment id="12908858" author="namit" created="Mon, 13 Sep 2010 16:54:19 +0000"  >&lt;p&gt;The approach looks OK - I will look into the code for more detailed comments.&lt;/p&gt;

&lt;p&gt;One general comment was that you also need to account for progress if the join filters filter all the rows.&lt;br/&gt;
The task tracker may be thought of an un-responsive. Look at the filter operator, we send a progress in&lt;br/&gt;
that case if there are &apos;n&apos; consecutive rows filtered out.&lt;/p&gt;</comment>
                            <comment id="12909182" author="amareshwari" created="Tue, 14 Sep 2010 10:43:04 +0000"  >&lt;p&gt;Thanks Namit for the feedback.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;One general comment was that you also need to account for progress if the join filters filter all the rows.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;This shouldn&apos;t be a problem because, even if the row is filtered, the join will emit output by joining it with nulls. Am I sounding right?&lt;/p&gt;

&lt;p&gt;I&apos;m almost done with the next patch which fixes the bugs with right outer join, full outer join and nested joins in the earlier patch. Will upload it once all the tests pass.&lt;/p&gt;</comment>
                            <comment id="12909202" author="amareshwari" created="Tue, 14 Sep 2010 11:42:25 +0000"  >&lt;p&gt;Patch with bug fixes. Also takes care of SMBMapJoin.&lt;/p&gt;

&lt;p&gt;Patch does the following:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Moved the code which decides whether to push the filters or not from pushJoinFilters() to creation of filters (parseJoinCondition). Because, for nested joins, mergeJoinTree changes the join-tree structure.
	&lt;ul&gt;
		&lt;li&gt;Join filters are not pushed if
		&lt;ul&gt;
			&lt;li&gt;join is full outer join or&lt;/li&gt;
			&lt;li&gt;join is left outer join and filter is on left alias&lt;/li&gt;
			&lt;li&gt;join is right outer join and filter is on right alias&lt;/li&gt;
		&lt;/ul&gt;
		&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
	&lt;li&gt;Join impl changes:
	&lt;ul&gt;
		&lt;li&gt;When join values are computed from the row object, the row is evaluated to be filtered or not.&lt;/li&gt;
		&lt;li&gt;Depending on the row is filtered or not, joinObjects*OuterJoin methods put null arrays&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
	&lt;li&gt;Fixed a minor bug in JoinDesc with noOuterJoin variable. The variable is not passed down properly and isNoOuterJoin looks for the join type and evaluates. Fixed it so that noOuterJoin variable contains correct value&lt;/li&gt;
&lt;/ul&gt;


</comment>
                            <comment id="12909388" author="namit" created="Tue, 14 Sep 2010 19:04:14 +0000"  >&lt;p&gt;Since we are still pushing filters for non-outer joins, the assumption that we will always output a row by the filters is true, and therefore &lt;br/&gt;
we dont need a progress.&lt;/p&gt;

&lt;p&gt;Cool, I will take a look at the patch again&lt;/p&gt;</comment>
                            <comment id="12909539" author="namit" created="Wed, 15 Sep 2010 00:33:03 +0000"  >&lt;p&gt;Did you run all the tests ? Some of the tests should break - minimally a change of explain plans.&lt;br/&gt;
What about semi joins ?&lt;/p&gt;

&lt;p&gt;Why did you add a genExprNode() ? Cant you re-use the one from SemanticAnalyzer ?&lt;/p&gt;</comment>
                            <comment id="12909604" author="amareshwari" created="Wed, 15 Sep 2010 06:02:49 +0000"  >&lt;blockquote&gt;&lt;p&gt;Did you run all the tests ? Some of the tests should break - minimally a change of explain plans.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I commented Explain annotation for filter predicates to skip test failures with explain plans for now; trying to figure out if filter predicates can be displayed only when they are present. Even then, all the tests did not pass. I&apos;m looking into the failures.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;What about semi joins ? &lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I did not do anything for semi join. I will go through semi join and its expected output with filters. Will update the patch if any changes are needed and add tests.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Why did you add a genExprNode() ? Cant you re-use the one from SemanticAnalyzer ?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;genExprNode() in SemanticAnalyzer is not a static method. It uses unparseTranslator while generating. Will change genExprNode() in SemanticAnalyzer to use the new static method introduced and remove duplicate code.&lt;/p&gt;</comment>
                            <comment id="12910503" author="amareshwari" created="Fri, 17 Sep 2010 08:11:02 +0000"  >&lt;blockquote&gt;&lt;p&gt;What about semi joins ? &lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I did not find anything wrong with semijoin queries and filters. They can be pushed as they are now. I don&apos;t think any change is required for semi joins. What do you think?&lt;/p&gt;

&lt;p&gt;Uploading patch with following changes from earlier one:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;I think it makes sense to push the filters on partitioned columns and not output all the table for outer join. Patch pushes filters on partitioned columns, even for outer joins. Thoughts?&lt;/li&gt;
	&lt;li&gt;Removed duplicate code in genExprNode() in SemanticAnalyzer.&lt;/li&gt;
	&lt;li&gt;Fixed some minor bugs in SemanticAnalyzer and CommonJoinOperator, found in the test failures.&lt;/li&gt;
	&lt;li&gt;Updated the test results for clientpositive queries in join20.q.out, join21.q.out and join40.q.out, which involve filters on outer joins. Also, updated test results for TestParse join queries.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;All the tests passed with the uploaded patch.&lt;/p&gt;</comment>
                            <comment id="12910669" author="namit" created="Fri, 17 Sep 2010 17:15:46 +0000"  >&lt;blockquote&gt;&lt;p&gt;I think it makes sense to push the filters on partitioned columns and not output all the table for outer join. Patch pushes filters on partitioned columns, even for outer joins. Thoughts?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I dont think it is a good idea to special case partitioned columns - can you treat them like any other column&lt;/p&gt;
</comment>
                            <comment id="12910723" author="jvs" created="Fri, 17 Sep 2010 18:40:38 +0000"  >&lt;p&gt;+1 to what Namit said about partitioned columns...although I have seen this mistake come up a lot, it&apos;s better to have consistent semantics and just educate users.&lt;/p&gt;</comment>
                            <comment id="12910763" author="namit" created="Fri, 17 Sep 2010 20:14:18 +0000"  >&lt;p&gt;You can cleanup the patch by not special-casing for partitioned columns. Otherwise, the patch looks good&lt;/p&gt;</comment>
                            <comment id="12912416" author="amareshwari" created="Mon, 20 Sep 2010 09:47:47 +0000"  >&lt;p&gt;Patch updated with following changes:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;removed the special casing for partitioned columns from SemanticAnalyzer&lt;/li&gt;
	&lt;li&gt;Updated ColumnPrunerProcFactory.pruneJoinOperator() to add columns from join-filters.&lt;/li&gt;
	&lt;li&gt;Updated test results for  queries: union22.q, louter_join_ppr.q, outer_join_ppr.q and router_join_ppr.q, which involve filters on partition predicates.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12912428" author="amareshwari" created="Mon, 20 Sep 2010 10:22:04 +0000"  >&lt;p&gt;All the tests passed with uploaded patch.&lt;/p&gt;</comment>
                            <comment id="12912590" author="namit" created="Mon, 20 Sep 2010 17:01:52 +0000"  >&lt;p&gt;I will take a look again&lt;/p&gt;</comment>
                            <comment id="12912741" author="namit" created="Mon, 20 Sep 2010 22:00:29 +0000"  >&lt;p&gt;The patch looks good - however, we have a deployment issue.&lt;/p&gt;

&lt;p&gt;This is a incompatible change, and will change/break existing queries. I cant think of a great way of getting this in.&lt;br/&gt;
One option is to cover it via a configurable parameter (it is ON by default). For internal deployments (like Facebook),&lt;br/&gt;
we can turn it off and find all the bad queries slowly and convert them, and only then enable this.&lt;/p&gt;</comment>
                            <comment id="12912831" author="amareshwari" created="Tue, 21 Sep 2010 04:01:56 +0000"  >&lt;blockquote&gt;&lt;p&gt;This is a incompatible change, and will change/break existing queries.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;The patch changes the query results to be different from what it was earlier. It does not give out any error, unlike &lt;a href=&quot;https://issues.apache.org/jira/browse/HIVE-1621&quot; title=&quot;Disable join filters for outer joins.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HIVE-1621&quot;&gt;&lt;del&gt;HIVE-1621&lt;/del&gt;&lt;/a&gt;.  The effect is similar to &lt;a href=&quot;https://issues.apache.org/jira/browse/HIVE-741&quot; title=&quot;NULL is not handled correctly in join&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HIVE-741&quot;&gt;&lt;del&gt;HIVE-741&lt;/del&gt;&lt;/a&gt;.  I don&apos;t think this is incompatible change, because the current query results are wrong and the issue fixes the correctness.&lt;/p&gt;

&lt;p&gt;If you still think it is incompatible change, we can add a configuration like hive.outerjoin.supports.filters with following semantics:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;when it is off,  print a warning saying &quot;the results could be wrong. please turn on  hive.outerjoin.supports.filters&quot; and add it to filtersForPushing (same as old behavior).&lt;/li&gt;
	&lt;li&gt;When it is on, the filters are added to join filters.&lt;/li&gt;
&lt;/ol&gt;
</comment>
                            <comment id="12912845" author="namit" created="Tue, 21 Sep 2010 05:50:20 +0000"  >&lt;p&gt;What I meant to say was the following:&lt;/p&gt;


&lt;p&gt;People are running queries in the warehouse with the expected wrong semantics - if we suddenly fix this, the queries will break.&lt;br/&gt;
We need to give some time to everyone to change their queries to use a sub-query if they want the filter to be pushed up.&lt;/p&gt;

&lt;p&gt;Adding the above config, parameter seems like the only choice - we can try to remove this parameter before 0.7 goes out &lt;br/&gt;
(if everyone agrees), but we need it right now for deployment&lt;/p&gt;</comment>
                            <comment id="12912912" author="amareshwari" created="Tue, 21 Sep 2010 09:54:58 +0000"  >&lt;p&gt;Added hive.outerjoin.supports.filter configuration with above semantics. Updated testcase to repeat the filter queries in join_filters.q with configuration turned off.&lt;/p&gt;</comment>
                            <comment id="12913105" author="namit" created="Tue, 21 Sep 2010 17:39:31 +0000"  >&lt;p&gt;+1&lt;/p&gt;</comment>
                            <comment id="12913249" author="namit" created="Tue, 21 Sep 2010 21:00:41 +0000"  >&lt;p&gt;Committed. Thanks Amareshwari&lt;/p&gt;</comment>
                            <comment id="13772169" author="apivovarov" created="Thu, 19 Sep 2013 19:01:16 +0000"  >&lt;p&gt;I still see this issue in hive-0.11.0&lt;/p&gt;</comment>
                            <comment id="13772179" author="apivovarov" created="Thu, 19 Sep 2013 19:14:23 +0000"  >&lt;p&gt;to reproduce:&lt;/p&gt;

&lt;p&gt;hive&amp;gt; create table tt1 (c1 int);&lt;br/&gt;
hive&amp;gt; create table tt2 (c1 int);&lt;/p&gt;

&lt;p&gt;$ vi tt1&lt;br/&gt;
1&lt;br/&gt;
2&lt;br/&gt;
3&lt;br/&gt;
4&lt;/p&gt;

&lt;p&gt;$ vi tt2&lt;br/&gt;
1&lt;br/&gt;
2&lt;br/&gt;
8&lt;br/&gt;
9&lt;/p&gt;

&lt;p&gt;$ hadoop fs -put tt1 /user/hive/warehouse/tt1/&lt;br/&gt;
$ hadoop fs -put tt2 /user/hive/warehouse/tt2/&lt;/p&gt;

&lt;p&gt;wrong result:&lt;br/&gt;
hive&amp;gt; select * from tt1 left outer join tt2 on (tt1.c1 = tt2.c1 and tt1.c1 &amp;lt;= 2);&lt;br/&gt;
1	1&lt;br/&gt;
2	2&lt;br/&gt;
3	NULL&lt;br/&gt;
4	NULL&lt;/p&gt;

&lt;p&gt;correct result:&lt;br/&gt;
select * from tt1 left outer join tt2 on (tt1.c1 = tt2.c1) where tt1.c1 &amp;lt;= 2;&lt;br/&gt;
1	1&lt;br/&gt;
2	2&lt;/p&gt;


&lt;p&gt;alexp@t1:~/hive-0.11.0-bin$ head -1 RELEASE_NOTES.txt &lt;br/&gt;
Release Notes - Hive - Version 0.11.0&lt;/p&gt;</comment>
                            <comment id="13772576" author="apivovarov" created="Fri, 20 Sep 2013 02:36:56 +0000"  >&lt;p&gt;Actually the result below is correct - all tt1 filters in &quot;join on&quot; should be ignored&lt;br/&gt;
hive&amp;gt; select * from tt1 left outer join tt2 on (tt1.c1 = tt2.c1 and tt1.c1 &amp;lt;= 2);&lt;br/&gt;
1	1&lt;br/&gt;
2	2&lt;br/&gt;
3	NULL&lt;br/&gt;
4	NULL&lt;/p&gt;

&lt;p&gt;Please skip my prev 2 comments&lt;/p&gt;</comment>
                            <comment id="15468965" author="lefty@hortonworks.com" created="Tue, 6 Sep 2016 23:39:01 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=sladymon&quot; class=&quot;user-hover&quot; rel=&quot;sladymon&quot;&gt;Shannon Ladymon&lt;/a&gt; documented the property &lt;b&gt;hive.outerjoin.supports.filters&lt;/b&gt; in the wiki:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://cwiki.apache.org/confluence/display/Hive/Configuration+Properties#ConfigurationProperties-hive.outerjoin.supports.filters&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;Configuration Properties - hive.outerjoin.supports.filters &lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Thanks, Shannon.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10032">
                    <name>Blocker</name>
                                                                <inwardlinks description="is blocked by">
                                        <issuelink>
            <issuekey id="12669516">HIVE-5321</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12473528">HIVE-1621</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12996758">HIVE-14522</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12473528">HIVE-1621</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12454537" name="patch-1534-1.txt" size="93188" author="amareshwari" created="Tue, 14 Sep 2010 11:42:25 +0000"/>
                            <attachment id="12454831" name="patch-1534-2.txt" size="273829" author="amareshwari" created="Fri, 17 Sep 2010 08:11:01 +0000"/>
                            <attachment id="12455027" name="patch-1534-3.txt" size="297625" author="amareshwari" created="Mon, 20 Sep 2010 09:47:47 +0000"/>
                            <attachment id="12455128" name="patch-1534-4.txt" size="355090" author="amareshwari" created="Tue, 21 Sep 2010 09:54:58 +0000"/>
                            <attachment id="12454206" name="patch-1534.txt" size="52281" author="amareshwari" created="Thu, 9 Sep 2010 11:52:40 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 12 Aug 2010 19:26:52 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>72850</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            12 weeks, 2 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0lfk7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>123171</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>