<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun Dec 04 00:24:01 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HIVE-1096/HIVE-1096.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HIVE-1096] Hive Variables</title>
                <link>https://issues.apache.org/jira/browse/HIVE-1096</link>
                <project id="12310843" key="HIVE">Hive</project>
                    <description>&lt;p&gt;From mailing list:&lt;br/&gt;
--Amazon Elastic MapReduce version of Hive seems to have a nice feature called &quot;Variables.&quot; Basically you can define a variable via command-line while invoking hive with -d DT=2009-12-09 and then refer to the variable via $&lt;/p&gt;
{DT}
&lt;p&gt; within the hive queries. This could be extremely useful. I can&apos;t seem to find this feature even on trunk. Is this feature currently anywhere in the roadmap?--&lt;/p&gt;

&lt;p&gt;This could be implemented in many places.&lt;br/&gt;
A simple place to put this is &lt;br/&gt;
in Driver.compile or Driver.run we can do string substitutions at that level, and further downstream need not be effected. &lt;/p&gt;

&lt;p&gt;There could be some benefits to doing this further downstream, parser,plan. but based on the simple needs we may not need to overthink this.&lt;/p&gt;

&lt;p&gt;I will get started on implementing in compile unless someone wants to discuss this more.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12446587">HIVE-1096</key>
            <summary>Hive Variables</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="appodictic">Edward Capriolo</assignee>
                                    <reporter username="appodictic">Edward Capriolo</reporter>
                        <labels>
                    </labels>
                <created>Mon, 25 Jan 2010 18:57:39 +0000</created>
                <updated>Sat, 17 Dec 2011 00:00:49 +0000</updated>
                            <resolved>Wed, 8 Dec 2010 23:27:15 +0000</resolved>
                                                    <fixVersion>0.7.0</fixVersion>
                                    <component>Query Processor</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>7</watches>
                                                                <comments>
                            <comment id="12804660" author="jvs" created="Mon, 25 Jan 2010 19:19:15 +0000"  >&lt;p&gt;What will happen if a variable is referenced by CREATE VIEW?  If the substitution is done via simple string replacement, then the variable&apos;s value at time of CREATE VIEW will be statically bound.  If done downstream, we could instead make it dynamic, but this might require making variables first-class objects in the metastore (as globals, potentially with overrides at other scopes such as per-session or per-user).&lt;/p&gt;</comment>
                            <comment id="12804668" author="appodictic" created="Mon, 25 Jan 2010 19:39:58 +0000"  >&lt;p&gt;John,&lt;/p&gt;

&lt;p&gt;I understand your comment.&lt;/p&gt;

&lt;p&gt;I have not looked at any of the view related patches, but I do see how views and variable replacement could pose a complex set of discussions, as would introducing variables into the grammer itself. &lt;/p&gt;

&lt;p&gt;Based on the user requested feature, metastore level changes is a fairly drastic and complex way to solve a simple problem. If i were a gambling man, I would bet that the &apos;Elastic MapReduce version of Hive&apos; does a simple text based replacement high upstream or possibly outside of hive entirely. &lt;/p&gt;

&lt;p&gt;Thus, I proposed some simple string replacement before the query ever hits the compiler. In the implementation I am suggesting a VIEW could never have a variable, because it should be replaced before it ever becomes a view.&lt;/p&gt;

&lt;p&gt;I see people using this feature like so:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;hive -hiveconf DAY=5 -e &quot;LOAD DATA INFILE &apos;/tmp/${DAY}&apos;  into logs partition=${DAY}&quot;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This is a common problem that many people (including myself) face. Do you think it is short-side thinking to not consider implementing further down in the process?&lt;/p&gt;</comment>
                            <comment id="12804685" author="jvs" created="Mon, 25 Jan 2010 20:11:42 +0000"  >&lt;p&gt;I&apos;m fine with it if we start with the implementation you are proposing, document the limitation with respect to views, and decide if more is needed based on user feedback.&lt;/p&gt;

&lt;p&gt;I&apos;m guessing that once people start using the two features together, they might end up wanting the variables to be expanded as part of evaluating a view, otherwise they may be forced to move ETL logic which belongs inside a reusable view out into the calling SQL statements instead where the expansion happens.  This would limit the utility of views.&lt;/p&gt;

&lt;p&gt;I agree that treating variables as first-class objects is a heavyweight change.&lt;/p&gt;

&lt;p&gt;There is one possible middle ground approach, which is to avoid introducing variables as first-class objects, but still try to expand them in views by passing the substitution map down into SemanticAnalyzer and letting it apply the substitutions as part of reparsing the view&apos;s definition obtained from the catalog.&lt;/p&gt;

&lt;p&gt;This would imply&lt;/p&gt;

&lt;p&gt;(a) CREATE VIEW would need to be able to undo the substitutions so that the stored view definition in the catalog would contain variable references instead of replacements.&lt;/p&gt;

&lt;p&gt;(b) If a variable was defined when the view was created, but undefined when referenced later, we&apos;d need to substitute NULL or raise an exception.  Probably best to be consistent with whatever you&apos;re planning for the top-level substitutions in this case.  I made the view reparse error handling verbose so that a user should have a chance of figuring out what happened in this case, although it will be about as pretty as a C++ template compilation failure.&lt;/p&gt;
</comment>
                            <comment id="12804688" author="prasadc" created="Mon, 25 Jan 2010 20:17:39 +0000"  >&lt;p&gt;I think most useful global variables are in-built variables that do not really need metastore (eg. date based stuff, TODAY, THIS_WEEK, THIS_MONTH or user name or host name etc). Also session variables and user specific variables that can be loaded with a .hiverc. So it may be possible to implement most of the requirements without true global variables (and metastore).&lt;/p&gt;

&lt;p&gt;String substitution will create problems with comments and also with error reporting. &lt;/p&gt;
</comment>
                            <comment id="12804701" author="appodictic" created="Mon, 25 Jan 2010 20:48:54 +0000"  >&lt;p&gt;@Prasad,&lt;/p&gt;


&lt;p&gt;I do not think we should do anything fancy here, just look for simple $&lt;/p&gt;
{var}
&lt;p&gt; and replace with var from session state. It could happen that ${ } could appear in a comment, but not very likely.&lt;/p&gt;

&lt;p&gt;&amp;gt;&amp;gt;String substitution will create problems with comments and also with error reporting. &lt;br/&gt;
Based on that we should make variables part of the grammar then?&lt;/p&gt;

&lt;p&gt;In my example...&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;hive -hiveconf DAY=5 -e &quot;LOAD DATA INFILE &apos;/tmp/${DAY}&apos;  into logs partition=${DAY}&quot;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Can we make the grammar look inside a string like &apos;/tmp/$&lt;/p&gt;
{DAY}
&lt;p&gt;&apos; ?&lt;/p&gt;</comment>
                            <comment id="12804716" author="prasadc" created="Mon, 25 Jan 2010 21:04:50 +0000"  >&lt;p&gt;Hive will be doing string replace on all string literals returned from parser.&lt;/p&gt;</comment>
                            <comment id="12804732" author="appodictic" created="Mon, 25 Jan 2010 21:33:53 +0000"  >&lt;p&gt;That sounds like a good way to handle it. &lt;br/&gt;
Two questions&lt;br/&gt;
*) What to support&lt;br/&gt;
*) How to escape&lt;/p&gt;

&lt;p&gt;Suggestions:&lt;br/&gt;
*) Simple replacements $&lt;/p&gt;
{VAR}
&lt;p&gt; syntax ONLY no $VAR no $&lt;/p&gt;
{VAR[3]}
&lt;p&gt;*) \$ ignore&lt;/p&gt;

&lt;p&gt;?&lt;/p&gt;</comment>
                            <comment id="12804736" author="cwsteinbach" created="Mon, 25 Jan 2010 21:38:22 +0000"  >&lt;p&gt;Wanted to make sure that everyone is aware of &lt;a href=&quot;https://issues.apache.org/jira/browse/HIVE-1063&quot; title=&quot;Variable interpolation for testcase qfiles&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HIVE-1063&quot;&gt;&lt;del&gt;HIVE-1063&lt;/del&gt;&lt;/a&gt; which aims to&lt;br/&gt;
implement simple variable interpolation for test qfiles. The patch I provided&lt;br/&gt;
adds a system property variable interpolation mechanism to QTestUtil using&lt;br/&gt;
some code I borrowed from Hadoop&apos;s Configuration class.&lt;/p&gt;

&lt;p&gt;The bug I mention in the JIRA relates to some details of how the test diffs&lt;br/&gt;
are compared, and not to the interpolation mechanism itself which I think works&lt;br/&gt;
OK.&lt;/p&gt;</comment>
                            <comment id="12804742" author="appodictic" created="Mon, 25 Jan 2010 21:47:11 +0000"  >&lt;p&gt;@Carl,&lt;/p&gt;

&lt;p&gt;I took a look at that.  I imagine we needed this to deal with the version&apos;ed jar names. I will look at how you did the interpolation, and try to follow your example.&lt;/p&gt;

&lt;p&gt;I see how what you did is useful in the build infrastructure. This is geared at end user but the logic is roughly the same.&lt;/p&gt;</comment>
                            <comment id="12804749" author="cwsteinbach" created="Mon, 25 Jan 2010 22:06:20 +0000"  >&lt;p&gt;I think a simple query preprocessor that does string substitution (and is physically distinct&lt;br/&gt;
from the actual query processor) will satisfy the vast majority of user needs, will be easy&lt;br/&gt;
to implement, and won&apos;t result in a lot of unexpected bugs and corner cases. Doing anything&lt;br/&gt;
fancier should be deferred until we start work on implementing PL/QL &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="12804833" author="jvs" created="Tue, 26 Jan 2010 01:19:20 +0000"  >&lt;p&gt;Regarding error reporting (where the line/col offsets may be shifted by the substitutions), one possible solution (which I implemented for view reparse) is to include the processed text along with the error message.  Downside is that the error message length becomes proportional to the SQL.&lt;/p&gt;

&lt;p&gt;Another way to do it is something like this.&lt;br/&gt;
-------------------------------^&lt;/p&gt;

&lt;p&gt;and then only include the line with the error.&lt;/p&gt;</comment>
                            <comment id="12804842" author="namit" created="Tue, 26 Jan 2010 01:36:39 +0000"  >&lt;p&gt;Static/dynamic binding will also come in when we allow resuming execution of a query - what happens if the variable value changes ?&lt;br/&gt;
Are we saying that everything is bound when the query is first compiled (which is true for views also) ?&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HIVE-1100&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HIVE-1100&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12804895" author="appodictic" created="Tue, 26 Jan 2010 05:25:37 +0000"  >
&lt;p&gt;@namit, &lt;/p&gt;

&lt;p&gt;&amp;gt;&amp;gt;Static/dynamic binding will also come in when we allow resuming execution of a query-&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HIVE-1100&quot; title=&quot;Make it possible for users to retry map-reduce jobs in a single Hive query&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HIVE-1100&quot;&gt;HIVE-1100&lt;/a&gt; sounds pretty complex. How can you move a query to a new session, when the session effects how the query is executed? For example, if i start a query in a session with without strict mode then move it to a session with strict mode is the query even valid anymore? &lt;/p&gt;

&lt;p&gt;This leads me back with my original thinking to do the substitution in  Driver.run. 1) it&apos;s fast 2) it&apos;s easy 3)a caveman (like me) can do it. Really, the feature could go all the way up to the CLI, HiveService/clients really would not have a great use for this.&lt;/p&gt;

&lt;p&gt;&amp;gt;&amp;gt;&apos;Hive will be doing string replace on all string literals returned from parser&apos;&lt;/p&gt;

&lt;p&gt;sounds good too, but not if it will change the debugging offsets. &lt;/p&gt;

&lt;p&gt;I am sure some crafty sed hacker could cook up out a one-liner for this, which is maybe fine we punt it and do not support it, might be better then totally obfuscating the code base for it. &lt;/p&gt;
</comment>
                            <comment id="12805332" author="appodictic" created="Wed, 27 Jan 2010 03:10:42 +0000"  >&lt;p&gt;This is a patch using my simple replace before plan generation technique. I will look into the other suggestions next&lt;/p&gt;</comment>
                            <comment id="12806386" author="appodictic" created="Fri, 29 Jan 2010 16:34:11 +0000"  >&lt;p&gt;@Prasad&lt;br/&gt;
I would like to give a try at your suggestion.&lt;br/&gt;
&amp;gt;&amp;gt;Hive will be doing string replace on all string literals returned from parser. &lt;/p&gt;

&lt;p&gt;Can you point me at a class and or method as a starting point. The parsing in QL is a fairly elaborate process I do not fully have my head wrapped around yet. If you have a starting point that would help me greatly.&lt;/p&gt;
</comment>
                            <comment id="12806486" author="prasadc" created="Fri, 29 Jan 2010 20:27:55 +0000"  >&lt;p&gt;@edward, your patch will have problems if a comment has $ and it is not a real variable. hive will be throwing necessary errors.&lt;/p&gt;

&lt;p&gt;regarding the parsing code, afaik there is no single place where all string literals are processed. either ashish and zheng would be able to answer this better.&lt;/p&gt;</comment>
                            <comment id="12806531" author="zshao" created="Fri, 29 Jan 2010 22:06:49 +0000"  >&lt;p&gt;Regarding &lt;a href=&quot;https://issues.apache.org/jira/browse/HIVE-1100&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HIVE-1100&lt;/a&gt;, the plan is to bind everything at compilation time.&lt;/p&gt;

&lt;p&gt;Currently the code path for &quot;set&quot;, &quot;add &amp;lt;jar|file|archive&amp;gt;&quot; and hive queries are completely separated. We probably want to support this in all 3 cases.&lt;br/&gt;
Unless we extract the common code out, we will have to replicate the variable substitution code, which is even worse.&lt;/p&gt;

&lt;p&gt;+1 on the patch given that we don&apos;t have a single place to extract the strings. We probably need to modify the syntax of &quot;add jar&quot; etc to use quotes for string constants.&lt;/p&gt;</comment>
                            <comment id="12828003" author="appodictic" created="Mon, 1 Feb 2010 04:27:04 +0000"  >&lt;p&gt;I decided we should introduce a configuration variable to control the replacement. Otherwise no way to escape the variable.&lt;/p&gt;

&lt;p&gt;For some strange reason my .q file blows up when a comment is in it ... any ideas.&lt;/p&gt;</comment>
                            <comment id="12828029" author="zshao" created="Mon, 1 Feb 2010 07:59:57 +0000"  >&lt;p&gt;Edward, currently Hive only allows &quot;--&quot; comment before a query, but not before a &quot;set&quot; command or something like that. That might be the reason. (It ought to be fixed)&lt;/p&gt;</comment>
                            <comment id="12828131" author="appodictic" created="Mon, 1 Feb 2010 15:15:05 +0000"  >&lt;p&gt;@Zheng&lt;/p&gt;

&lt;p&gt;I want to laugh now, but I spent about 4-5 hours trying to figure out what problem Hive was having. In general trying to debug the test cases through the testCliDriver can sometimes be difficult.  Sometimes you get a decent stack trace, sometimes you get error code 11 or error code 2. I agree it ought to be fixed.&lt;/p&gt;

&lt;p&gt;Ok well now that I know the comment issue is not actually my problem I will remove the print statements and submit something that could go +1&lt;/p&gt;</comment>
                            <comment id="12828201" author="prasadc" created="Mon, 1 Feb 2010 18:13:03 +0000"  >&lt;p&gt;@edward, I usually use Eclipse to debug these kind of things. Much faster IMO.&lt;/p&gt;</comment>
                            <comment id="12828305" author="appodictic" created="Mon, 1 Feb 2010 22:20:41 +0000"  >&lt;p&gt;Patch adds pre-parsed variable replacement. Also added is a configuration variable hive.variable.replace to turn this feature on and off. (set to false by default) &lt;/p&gt;</comment>
                            <comment id="12829482" author="zshao" created="Thu, 4 Feb 2010 06:49:11 +0000"  >&lt;p&gt;Looks great! It seems with your approach, a variable can be a number, string, or whatever else (like a WHERE condition).&lt;/p&gt;

&lt;p&gt;Can you modify the test case to include those cases?&lt;/p&gt;</comment>
                            <comment id="12829692" author="appodictic" created="Thu, 4 Feb 2010 18:48:03 +0000"  >&lt;p&gt;Added more rigorous test case.&lt;/p&gt;</comment>
                            <comment id="12835053" author="namit" created="Wed, 17 Feb 2010 23:42:13 +0000"  >&lt;p&gt;Can you re-generate the patch ? It is not applying cleanly.&lt;/p&gt;</comment>
                            <comment id="12835083" author="appodictic" created="Thu, 18 Feb 2010 01:15:50 +0000"  >&lt;p&gt;Regenerated against trunk.&lt;/p&gt;</comment>
                            <comment id="12835093" author="cwsteinbach" created="Thu, 18 Feb 2010 02:20:03 +0000"  >&lt;ul&gt;
	&lt;li&gt;Test cases?&lt;/li&gt;
	&lt;li&gt;Using the HiveConf namespace for user variables seems like a bad idea, especially since there are no checks in place to prevent people from defining variables with names like &quot;hive.foo.bar&quot; Giving users unprotected access to your configuration namespace usually leads to problems down the road.&lt;/li&gt;
	&lt;li&gt;It would be nice to be able to reference Java system properties using this syntax.&lt;/li&gt;
	&lt;li&gt;It would be nice to be able to nest variable definitions, e.g. version=&quot;0.6.0&quot;, jar_name=&quot;hive-exec-$
{version}
&lt;p&gt;&quot;. The variable interpolation code in Hadoop&apos;s Configuration class does this.&lt;/p&gt;&lt;/li&gt;
	&lt;li&gt;It would be nice to be able to prevent interpolation using an escape character, e.g. &quot;\$
{somevar}
&lt;p&gt;&quot;.&lt;/p&gt;&lt;/li&gt;
	&lt;li&gt;Driver.replace(String) should have a name like Driver.interpolateCommandVariables(), or Driver.replaceVariables().&lt;/li&gt;
	&lt;li&gt;Driver.replace() iterates over the list of defined variables. Instead, I think it should iterate over the tokens in the command that match the pattern &apos;$
{.*}
&lt;p&gt;&apos;. This would make it easy to log any cases where the command contains &quot;$&lt;/p&gt;
{foo.bar}
&lt;p&gt;&quot; and foo.bar is undefined.&lt;/p&gt;&lt;/li&gt;
	&lt;li&gt;Replace the reference to the string literal &quot;hive.variable.replace&quot; with HIVEVARREPLACE.&lt;/li&gt;
&lt;/ul&gt;


</comment>
                            <comment id="12835096" author="cwsteinbach" created="Thu, 18 Feb 2010 02:39:06 +0000"  >&lt;blockquote&gt;&lt;p&gt;Test cases?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Missed the test case. Sorry.&lt;/p&gt;

&lt;p&gt;Also, I think that in order to get committed this needs to&lt;br/&gt;
address the use case described in &lt;a href=&quot;https://issues.apache.org/jira/browse/HIVE-1063&quot; title=&quot;Variable interpolation for testcase qfiles&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HIVE-1063&quot;&gt;&lt;del&gt;HIVE-1063&lt;/del&gt;&lt;/a&gt;. The last thing&lt;br/&gt;
we want is two completely separate variable interpolation &lt;br/&gt;
mechanisms.&lt;/p&gt;</comment>
                            <comment id="12835112" author="appodictic" created="Thu, 18 Feb 2010 04:10:33 +0000"  >
&lt;p&gt;&amp;gt;&amp;gt;&lt;br/&gt;
Using the HiveConf namespace for user variables seems like a bad idea, especially since there are no checks in place to prevent people from defining variables with names like &quot;hive.foo.bar&quot; Giving users unprotected access to your configuration namespace usually leads to problems down the road.&lt;br/&gt;
Philosophically I agree. In actuality have Hive/Hadoop conf is easily manipulated by changing your hadoop-site.xml or hive-site.xml. Users do have unprotected access to the namespace that is the nature of hadoop. Users of hive are setting variables all the time.&lt;/p&gt;

&lt;p&gt;&amp;gt;&amp;gt;&lt;br/&gt;
It would be nice to be able to reference Java system properties using this syntax.&lt;br/&gt;
Hive /Hadoop do not often refer to system properties during normal operation. I am on the fence about this.&lt;/p&gt;

&lt;p&gt;&amp;gt;&amp;gt;Driver.replace() iterates over the list of defined variables. Instead, I think it should iterate over the tokens in the command that match the pattern &apos;$&lt;/p&gt;
{.*}
&lt;p&gt;&apos;.&lt;/p&gt;

&lt;p&gt;The hive CLI really needs some type of top level parser. Because we don&apos;t have this there are many ways we could do certain things but all of them are a little &apos;hackish&apos;. If we had a real parser, reading character by character, we would not need a regex or string replace to do variable processing.&lt;/p&gt;

&lt;p&gt;&amp;gt;&amp;gt;&lt;br/&gt;
This would make it easy to log any cases where the command contains &quot;$&lt;/p&gt;
{foo.bar}
&lt;p&gt;&quot; and foo.bar is undefined.&lt;/p&gt;

&lt;p&gt;I think the code should replace &quot;&quot; for an undefined variable. &lt;/p&gt;

&lt;p&gt;&amp;gt;&amp;gt;Driver.replace(String) should have a name like Driver.interpolateCommandVariables(), or Driver.replaceVariables().&lt;br/&gt;
Agreed, my notorious spelling usually causes me to avoid words like &apos;interpolate&apos; &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&amp;gt;&amp;gt;It would be nice to be able to prevent interpolation using an escape character, e.g. &quot;\$&lt;/p&gt;
{somevar}
&lt;p&gt;&quot;.&lt;br/&gt;
I punted on that by being able to turn the replacement on and off. As I said above true parser would do stuff like this.&lt;/p&gt;

&lt;p&gt;&amp;gt;&amp;gt;It would be nice to be able to nest variable definitions, e.g. version=&quot;0.6.0&quot;, jar_name=&quot;hive-exec-$&lt;/p&gt;
{version}
&lt;p&gt;&quot;. The variable interpolation code in Hadoop&apos;s Configuration class does this.&lt;br/&gt;
Yes. Carl I started with your code, the bug I mentioned above (comments before set), caused me to rip the entire thing apart, before I found out what I was doing wrong I had ripped out all the regex. I am not very comfortable with regex, and I was not in love with the while construct with a return in the middle. Again nesting would be easy with a true parser. I do not mind going back to your code.  &lt;/p&gt;

&lt;p&gt;&amp;gt;&amp;gt;The last thing we want is two completely separate variable interpolation mechanisms.&lt;/p&gt;

&lt;p&gt;Agreed. The only true difference in implementation is that your doing it with properties and I am doing it with HiveConf Vars. If we support both I think we are both happy. Any ideas?&lt;/p&gt;</comment>
                            <comment id="12835504" author="cwsteinbach" created="Thu, 18 Feb 2010 23:48:51 +0000"  >&lt;blockquote&gt;&lt;p&gt;Philosophically I agree. In actuality have Hive/Hadoop conf is easily manipulated by changing your hadoop-site.xml or hive-site.xml. Users do have unprotected access to the namespace that is the nature of hadoop. Users of hive are setting variables all the time.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;True, but I think we should try to improve the situation. As a start we can add code to throw an error if hive-default.xml or hive-site.xml sets a hive.* configuration property that is not defined in HiveConf. This would protect the hive.* namespace and at the same time make it easy to track down cases where folks misspell a hive.* property name.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;The only true difference in implementation is that your doing it with properties and I am doing it with HiveConf Vars. If we support both I think we are both happy. Any ideas?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I agree that we should support access to both system properties and hiveconf properties, but if we do how will we resolve cases where the user references {{$&lt;/p&gt;
{foo.bar}
&lt;p&gt;}} and both the system and hiveconf define properties named foo.bar? Also, another problem I see with using the hiveconf namespace for user variable definitions is that user variables cease to have any meaning past the client-side query preprocessing step, yet since they&apos;re part of the hiveconf they will get included in the jobconf and sent to datanodes. &lt;/p&gt;

&lt;p&gt;Here&apos;s a proposal:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Allow users to reference variables in QL statements using the syntax {{$
{namespace:variable_name}
&lt;p&gt;}}.&lt;/p&gt;&lt;/li&gt;
	&lt;li&gt;Users can define variables on the command line using a new &quot;&lt;tt&gt;-hivevar x=y&lt;/tt&gt;&quot; switch. Values defined in this manner become part of the user namespace, which is the default namespace. They can be referenced as either {{$
{default:variablename}
&lt;p&gt;}} or {{$&lt;/p&gt;
{variablename}
&lt;p&gt;}}.&lt;/p&gt;&lt;/li&gt;
	&lt;li&gt;Hive configuration properties are part of the &quot;hiveconf&quot; namespace, and can be referenced as {{$
{hiveconf:propertyname}
&lt;p&gt;}}.&lt;/p&gt;&lt;/li&gt;
	&lt;li&gt;System properties are part of the &quot;system&quot; namespace, and can be referenced as {{$
{system:property_name}
&lt;p&gt;}}.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;What do you think?&lt;/p&gt;
</comment>
                            <comment id="12835560" author="hammer" created="Fri, 19 Feb 2010 02:30:08 +0000"  >&lt;p&gt;Where does the $&lt;/p&gt;
{VARNAME}
&lt;p&gt; syntax come from? SCOPE uses @@VARNAME for their syntax for a somewhat similar feature. Just curious.&lt;/p&gt;</comment>
                            <comment id="12835566" author="cwsteinbach" created="Fri, 19 Feb 2010 03:25:33 +0000"  >&lt;blockquote&gt;&lt;p&gt;Where does the ${VARNAME} syntax come from? SCOPE uses @@VARNAME for their syntax for a somewhat similar feature. Just curious.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Unix shell command interpreters, Perl, Make, Ant, Eclipse, &lt;a href=&quot;http://developer.amazonwebservices.com/connect/entry.jspa?externalID=2856&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;Amazon&apos;s EMR version of Hive &lt;/a&gt; and many templating systems (which is basically what this is) use the unary operator $ for string substitution. Eclipse also defines various namespaces, so for example it is possible to reference environment variables as $&lt;/p&gt;
{env_var:HOME}
&lt;p&gt; and system properties as $&lt;/p&gt;
{system_property:java.home}
&lt;p&gt;. MySQL and T-SQL both use @ to identify user variables, and @@ to identify system variables (see &lt;a href=&quot;http://dev.mysql.com/doc/refman/5.0/en/user-variables.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://dev.mysql.com/doc/refman/5.0/en/user-variables.html&lt;/a&gt;), which was probably the inspiration for SCOPE&apos;s syntax. SQL*Plus apparently uses &apos;&amp;amp;&apos;. &lt;/p&gt;</comment>
                            <comment id="12835785" author="appodictic" created="Fri, 19 Feb 2010 15:45:37 +0000"  >&lt;blockquote&gt;
&lt;p&gt;True, but I think we should try to improve the situation. As a start we can add code to throw an error if hive-default.xml or hive-site.xml sets a hive.* configuration property that is not defined in HiveConf. This would protect the hive.* namespace and at the same time make it easy to track down cases where folks misspell a hive.* property name.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I only see one problem with this. HiveConf has an enumeration of valid properties. I do not think Hadoop Conf shares that trait. So if someone were to say: &lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;set hadoop.wrong.variable.name
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Would we have a simple way of knowing if that variable was variable is valid. Anyway that is out of scope a bit.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;$&lt;/p&gt;
&lt;div class=&quot;error&quot;&gt;&lt;span class=&quot;error&quot;&gt;Unknown macro: {namespace}&lt;/span&gt; &lt;/div&gt;
&lt;p&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I like this. How about?&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;${hiveconf:variable_name}.
${env:variable_name}.
${property:variable_name}.
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This way we do not need the &quot;-hivevar x=y&quot; switch.&quot; I say this because we already have three mechanism to pass data into Java/hive adding a forth is a little confusing.  &lt;/p&gt;

&lt;p&gt;The only problem with introducing this is now we have a new question. How do we extend SET to read/write these?&lt;/p&gt;</comment>
                            <comment id="12835924" author="cwsteinbach" created="Fri, 19 Feb 2010 20:02:48 +0000"  >&lt;blockquote&gt;&lt;p&gt;I only see one problem with this. HiveConf has an enumeration of valid properties. I do not think Hadoop Conf shares that trait.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;You&apos;re right, it doesn&apos;t. So the best we can do is try to protect the hive.* namespace, which is still better than nothing.&lt;/p&gt;

&lt;p&gt;In your example, what do the &quot;env&quot; and &quot;property&quot; namespaces signify? Are these environment variables and and system properties, respectively?&lt;/p&gt;

</comment>
                            <comment id="12835942" author="appodictic" created="Fri, 19 Feb 2010 20:38:30 +0000"  >&lt;blockquote&gt;
&lt;p&gt;In your example, what do the &quot;env&quot; and &quot;property&quot; namespaces signify? Are these environment variables and and system properties, respectively?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Sorry I misread something you posted above. To be double clear &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;${hiveconf:variable_name}. --hive conf   &amp;amp;&amp;amp; also SET
${env:variable_name}. --environmental properties
${system:property_name}-- java/system properties
${default:variable_name}. --set with -hivevar x=y
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I understand you want to introduce  &apos;-hivevar x&apos; to create a very clear separation. Do you think we need to go this far? As far as I know properties and environment are mostly unused by hive. &lt;/p&gt;

&lt;p&gt;I am looking at this from terms of a new end user to hive. The simple part about my 1096-9.diff is we were expanding upon the &apos;SET&apos; and &apos;-hiveconf&apos;. What we have arrived at is cleaner but more complex, and now we have to dip into the SetProcessor and introduce a new switch. &lt;/p&gt;

&lt;p&gt;I am ok with the more complex approach however. Does anyone else want to chime in?&lt;/p&gt;</comment>
                            <comment id="12856609" author="jvs" created="Tue, 13 Apr 2010 20:46:56 +0000"  >&lt;p&gt;I&apos;m taking a look at this one.&lt;/p&gt;</comment>
                            <comment id="12856615" author="jvs" created="Tue, 13 Apr 2010 21:09:53 +0000"  >&lt;p&gt;I&apos;m getting a conflict with latest trunk--can you regenerate the patch?  (Use filename &lt;a href=&quot;https://issues.apache.org/jira/browse/HIVE-1096&quot; title=&quot;Hive Variables&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HIVE-1096&quot;&gt;&lt;del&gt;HIVE-1096&lt;/del&gt;&lt;/a&gt;.10.patch to follow the usual convention.)&lt;/p&gt;

&lt;p&gt;Sorry it took us so long to get to this one; here are a few review comments to be addressed as part of a new patch:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;add a test with a query which references the same variable twice&lt;/li&gt;
	&lt;li&gt;add a test which references a built-in variable such as hive.map.aggr&lt;/li&gt;
	&lt;li&gt;add a test with hive.variable.replace=false to verify that expansion does not happen when the variable is turned off (reference the variable in a literal string)&lt;/li&gt;
	&lt;li&gt;add a test which references a variable which has not been set&lt;/li&gt;
	&lt;li&gt;for description, change &quot;This setting controls if hive will...&quot; to &quot;Whether hive will...&quot;&lt;/li&gt;
	&lt;li&gt;rename method to replaceVariableReferences&lt;/li&gt;
	&lt;li&gt;for the LOG.info&apos;s, add a space after the colon, and change &quot;replacement&quot; to &quot;variable replacement&quot; for clarity&lt;/li&gt;
	&lt;li&gt;run ant checkstyle and fix some issues with spaces before braces and arglists&lt;/li&gt;
	&lt;li&gt;to optimize the replacement, you could do a contains(&quot;${&quot;) precheck before looping over conf&lt;/li&gt;
	&lt;li&gt;if you want to allow for uber-cool recursive variable expansion, change if (command.contains(s)) to a while instead&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12856620" author="pauly" created="Tue, 13 Apr 2010 21:16:08 +0000"  >&lt;p&gt;I like the idea of &apos;uber-cool recursive variable expansion&apos;. Probably need a depth check though.&lt;/p&gt;</comment>
                            <comment id="12856632" author="jvs" created="Tue, 13 Apr 2010 21:38:22 +0000"  >&lt;p&gt;@Paul:  heh, good point.  Actually let&apos;s just leave this out since doing it correctly requires a different loop structure entirely; we can always do a followup for it if someone wants it (ant added them eventually).&lt;/p&gt;</comment>
                            <comment id="12856645" author="cwsteinbach" created="Tue, 13 Apr 2010 21:56:00 +0000"  >&lt;p&gt;@Paul and John: Check out substituteVars() in Hadoop&apos;s Configuration class. It does recursive&lt;br/&gt;
variable interpolation with a depth check.&lt;/p&gt;</comment>
                            <comment id="12856669" author="jvs" created="Tue, 13 Apr 2010 22:36:41 +0000"  >&lt;p&gt;@Carl:  oops, that&apos;s what I get for only reading the tail of the thread.&lt;/p&gt;

&lt;p&gt;OK, besides the interpolation question, are there other unresolved issues from the discussion between you and Ed?  Let&apos;s try to drive this to closure.&lt;/p&gt;</comment>
                            <comment id="12856674" author="cwsteinbach" created="Tue, 13 Apr 2010 22:51:12 +0000"  >&lt;p&gt;@John: I don&apos;t think the current patch includes the namespace tags that Ed and I&lt;br/&gt;
agreed to in a previous comment. I&apos;d like to see that get added, and in particular the ability&lt;br/&gt;
to reference system properties (this is really useful for testing).&lt;/p&gt;</comment>
                            <comment id="12870480" author="appodictic" created="Mon, 24 May 2010 01:08:06 +0000"  >&lt;p&gt;I am back on this one. Keep your eye out for the next patch.&lt;/p&gt;</comment>
                            <comment id="12879171" author="cwsteinbach" created="Tue, 15 Jun 2010 23:14:14 +0000"  >&lt;p&gt;Parameters Substitution in Pig: &lt;a href=&quot;http://wiki.apache.org/pig/ParameterSubstitution&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://wiki.apache.org/pig/ParameterSubstitution&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12879173" author="cwsteinbach" created="Tue, 15 Jun 2010 23:15:12 +0000"  >&lt;p&gt;@Ed: Any update on this? I&apos;d like to help out if you are low on cycles.&lt;/p&gt;</comment>
                            <comment id="12879233" author="appodictic" created="Wed, 16 Jun 2010 02:21:31 +0000"  >&lt;p&gt;This is my next target after the xdoc ticket. I should not be to far off.&lt;/p&gt;</comment>
                            <comment id="12881711" author="appodictic" created="Wed, 23 Jun 2010 14:59:18 +0000"  >&lt;p&gt;Patch adds variable interpretation. &lt;/p&gt;</comment>
                            <comment id="12881955" author="cwsteinbach" created="Wed, 23 Jun 2010 23:32:42 +0000"  >&lt;p&gt;Hi Ed, can you please post this patch to review.hbase.org? Thanks!&lt;/p&gt;</comment>
                            <comment id="12882013" author="appodictic" created="Thu, 24 Jun 2010 02:49:57 +0000"  >&lt;p&gt;Was not interpolating system:vars. Fixed with better test case.&lt;/p&gt;</comment>
                            <comment id="12883336" author="jvs" created="Mon, 28 Jun 2010 22:33:06 +0000"  >&lt;p&gt;Carl, can you review?&lt;/p&gt;</comment>
                            <comment id="12883362" author="cwsteinbach" created="Tue, 29 Jun 2010 00:10:31 +0000"  >&lt;p&gt;@John: Will do (hopefully before the end of today).&lt;/p&gt;</comment>
                            <comment id="12883452" author="cwsteinbach" created="Tue, 29 Jun 2010 07:56:00 +0000"  >

&lt;p&gt;trunk/common/src/java/org/apache/hadoop/hive/conf/HiveConf.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.hbase.org/r/229/#comment1289&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/229/#comment1289&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;   This code does not belong in common. Please move it to ql.&lt;/p&gt;



&lt;p&gt;trunk/common/src/java/org/apache/hadoop/hive/conf/HiveConf.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.hbase.org/r/229/#comment1290&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/229/#comment1290&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;   The variables varPat and MAX_SUBST both exist as private variables in the parent class. I think that redefining them in HiveConf will result in lots of confusion down the road, plus they don&apos;t really belong here. Please move this to a &quot;VariableSubstitution&quot; class located in ql.&lt;/p&gt;



&lt;p&gt;trunk/common/src/java/org/apache/hadoop/hive/conf/HiveConf.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.hbase.org/r/229/#comment1291&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/229/#comment1291&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;   I like the word &quot;interpolate&quot; too, but I think more people are probably familiar with &quot;substitute&quot;. Please change the name to HIVESUBSTITUTEVARIABLES.&lt;/p&gt;



&lt;p&gt;trunk/common/src/java/org/apache/hadoop/hive/conf/HiveConf.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.hbase.org/r/229/#comment1292&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/229/#comment1292&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;   Please fix the formatting problems in this method (spaces before and after parens, no space between literals and operators, etc). Please run checkstyle and verify that you are not introducing any new checkstyle errors.&lt;/p&gt;



&lt;p&gt;trunk/common/src/java/org/apache/hadoop/hive/conf/HiveConf.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.hbase.org/r/229/#comment1293&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/229/#comment1293&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;   No need to test a boolean valued method for equality to true. The logic can also be simplified as follows:&lt;/p&gt;

&lt;p&gt;   if (!getBoolVar(ConfVars.HIVEVARIABLEINTERPOLATE)) &lt;/p&gt;
{
     return expr;
   }
&lt;p&gt;   l4j.info(&quot;Interpolation is on&quot;);&lt;br/&gt;
   ...&lt;/p&gt;

&lt;p&gt;   Also, please move this out of the substitution function and into the Driver, i.e Driver.compile() calls VariableSubstitution.substitute() iff HIVESUBSTITUEVARIABLES == true.&lt;/p&gt;



&lt;p&gt;trunk/common/src/java/org/apache/hadoop/hive/conf/HiveConf.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.hbase.org/r/229/#comment1294&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/229/#comment1294&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;   This log message is going to generate a lot of noise, and is unnecessary since you can determine the value using the &apos;set&apos; command. Please remove it.&lt;/p&gt;



&lt;p&gt;trunk/common/src/java/org/apache/hadoop/hive/conf/HiveConf.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.hbase.org/r/229/#comment1295&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/229/#comment1295&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;   Presumably there aren&apos;t going to be any properties in the HiveConf starting with &quot;system:&quot; or &quot;env:&quot;. Please move the &quot;env:&quot; check before the conf check, and move these string comparisons outside of the try/catch blocks, e.g:&lt;/p&gt;

&lt;p&gt;   private static final String SYSTEM_VAR_PREFIX = &quot;system:&quot;;&lt;br/&gt;
   private static final String ENV_VAR_PREFIX = &quot;env:&quot;;&lt;/p&gt;

&lt;p&gt;   if (var.startsWith(SYSTEM_VAR_PREFIX)) {&lt;br/&gt;
     try &lt;/p&gt;
{
       val = System.getProperty(var.substring(SYSTEM_VAR_PREFIX.length()));
     }
&lt;p&gt; catch (SecurityException se) &lt;/p&gt;
{
       ...
     }
&lt;p&gt;   } else if (var.startsWith(ENV_VAR_PREFIX)) &lt;/p&gt;
{
     val = System.getenv(var.substring(ENV_VAR_PREFIX.length()));
   }
&lt;p&gt; else &lt;/p&gt;
{
     val = ss.getConf().get(var);
   }



&lt;p&gt;trunk/common/src/java/org/apache/hadoop/hive/conf/HiveConf.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.hbase.org/r/229/#comment1303&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/229/#comment1303&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;   I thought the plan was to also introduce a &quot;conf:&quot; prefix for referencing configuration properties, and that any value not prefixed by system/env/conf would map to a new variable namespace? Please add the conf prefix and introduce some state in the SessionState for storing variables (i.e. non System/Env/Conf properties).&lt;/p&gt;



&lt;p&gt;trunk/common/src/java/org/apache/hadoop/hive/conf/HiveConf.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.hbase.org/r/229/#comment1296&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/229/#comment1296&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;   Please remove this log call. It will generate a lot of noise.&lt;/p&gt;



&lt;p&gt;trunk/conf/hive-default.xml&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.hbase.org/r/229/#comment1297&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/229/#comment1297&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;   Please change the name to &quot;hive.substitute.variables&quot;, and the description to &quot;Enable variable substitution&quot;.&lt;/p&gt;



&lt;p&gt;trunk/ql/src/java/org/apache/hadoop/hive/ql/Driver.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.hbase.org/r/229/#comment1298&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/229/#comment1298&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;   Check HIVESUBSTITUTEVARIABLES here.&lt;/p&gt;



&lt;p&gt;trunk/ql/src/java/org/apache/hadoop/hive/ql/processors/SetProcessor.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.hbase.org/r/229/#comment1299&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/229/#comment1299&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;   Please create static final variables for &quot;system:&quot; and &quot;env:&quot; and call length() on these variables instead of using magic numbers.&lt;/p&gt;



&lt;p&gt;trunk/ql/src/java/org/apache/hadoop/hive/ql/processors/SetProcessor.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.hbase.org/r/229/#comment1300&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/229/#comment1300&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;   I don&apos;t think you want to perform variable substitution at this point. It makes it impossible to create nested variables.&lt;/p&gt;



&lt;p&gt;trunk/ql/src/java/org/apache/hadoop/hive/ql/processors/SetProcessor.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.hbase.org/r/229/#comment1301&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/229/#comment1301&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;   This logic for mapping variable names to values has been repeated several times. Please move it to a dedicated method in the VariableSubstitution class.&lt;/p&gt;



&lt;p&gt;trunk/ql/src/java/org/apache/hadoop/hive/ql/processors/SetProcessor.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.hbase.org/r/229/#comment1302&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/229/#comment1302&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;   Please run checkstyle and fix any checkstyle errors that you have introduced.&lt;/p&gt;



&lt;p&gt;trunk/ql/src/test/queries/clientpositive/set_processor_namespaces.q&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.hbase.org/r/229/#comment1304&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/229/#comment1304&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;   You need a test for the &quot;env&quot; namespace. I think this is impossible to do here, so you probably need to add a unit test.&lt;/p&gt;</comment>
                            <comment id="12883453" author="hbasereviewboard" created="Tue, 29 Jun 2010 07:56:50 +0000"  >&lt;p&gt;Message from: &quot;Carl Steinbach&quot; &amp;lt;carl@cloudera.com&amp;gt;&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.hbase.org/r/229/#review288&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/229/#review288&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;



&lt;p&gt;trunk/common/src/java/org/apache/hadoop/hive/conf/HiveConf.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.hbase.org/r/229/#comment1289&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/229/#comment1289&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    This code does not belong in common. Please move it to ql.&lt;/p&gt;



&lt;p&gt;trunk/common/src/java/org/apache/hadoop/hive/conf/HiveConf.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.hbase.org/r/229/#comment1290&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/229/#comment1290&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    The variables varPat and MAX_SUBST both exist as private variables in the parent class. I think that redefining them in HiveConf will result in lots of confusion down the road, plus they don&apos;t really belong here. Please move this to a &quot;VariableSubstitution&quot; class located in ql.&lt;/p&gt;



&lt;p&gt;trunk/common/src/java/org/apache/hadoop/hive/conf/HiveConf.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.hbase.org/r/229/#comment1291&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/229/#comment1291&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    I like the word &quot;interpolate&quot; too, but I think more people are probably familiar with &quot;substitute&quot;. Please change the name to HIVESUBSTITUTEVARIABLES.&lt;/p&gt;



&lt;p&gt;trunk/common/src/java/org/apache/hadoop/hive/conf/HiveConf.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.hbase.org/r/229/#comment1292&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/229/#comment1292&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Please fix the formatting problems in this method (spaces before and after parens, no space between literals and operators, etc). Please run checkstyle and verify that you are not introducing any new checkstyle errors.&lt;/p&gt;



&lt;p&gt;trunk/common/src/java/org/apache/hadoop/hive/conf/HiveConf.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.hbase.org/r/229/#comment1293&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/229/#comment1293&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    No need to test a boolean valued method for equality to true. The logic can also be simplified as follows:&lt;/p&gt;

&lt;p&gt;    if (!getBoolVar(ConfVars.HIVEVARIABLEINTERPOLATE)) &lt;/p&gt;
{
      return expr;
    }
&lt;p&gt;    l4j.info(&quot;Interpolation is on&quot;);&lt;br/&gt;
    ...&lt;/p&gt;

&lt;p&gt;    Also, please move this out of the substitution function and into the Driver, i.e Driver.compile() calls VariableSubstitution.substitute() iff HIVESUBSTITUEVARIABLES == true.&lt;/p&gt;



&lt;p&gt;trunk/common/src/java/org/apache/hadoop/hive/conf/HiveConf.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.hbase.org/r/229/#comment1294&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/229/#comment1294&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    This log message is going to generate a lot of noise, and is unnecessary since you can determine the value using the &apos;set&apos; command. Please remove it.&lt;/p&gt;



&lt;p&gt;trunk/common/src/java/org/apache/hadoop/hive/conf/HiveConf.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.hbase.org/r/229/#comment1295&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/229/#comment1295&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Presumably there aren&apos;t going to be any properties in the HiveConf starting with &quot;system:&quot; or &quot;env:&quot;. Please move the &quot;env:&quot; check before the conf check, and move these string comparisons outside of the try/catch blocks, e.g:&lt;/p&gt;

&lt;p&gt;    private static final String SYSTEM_VAR_PREFIX = &quot;system:&quot;;&lt;br/&gt;
    private static final String ENV_VAR_PREFIX = &quot;env:&quot;;&lt;/p&gt;

&lt;p&gt;    if (var.startsWith(SYSTEM_VAR_PREFIX)) {&lt;br/&gt;
      try &lt;/p&gt;
{
        val = System.getProperty(var.substring(SYSTEM_VAR_PREFIX.length()));
      }
&lt;p&gt; catch (SecurityException se) &lt;/p&gt;
{
        ...
      }
&lt;p&gt;    } else if (var.startsWith(ENV_VAR_PREFIX)) &lt;/p&gt;
{
      val = System.getenv(var.substring(ENV_VAR_PREFIX.length()));
    }
&lt;p&gt; else &lt;/p&gt;
{
      val = ss.getConf().get(var);
    }



&lt;p&gt;trunk/common/src/java/org/apache/hadoop/hive/conf/HiveConf.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.hbase.org/r/229/#comment1303&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/229/#comment1303&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    I thought the plan was to also introduce a &quot;conf:&quot; prefix for referencing configuration properties, and that any value not prefixed by system/env/conf would map to a new variable namespace? Please add the conf prefix and introduce some state in the SessionState for storing variables (i.e. non System/Env/Conf properties).&lt;/p&gt;



&lt;p&gt;trunk/common/src/java/org/apache/hadoop/hive/conf/HiveConf.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.hbase.org/r/229/#comment1296&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/229/#comment1296&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Please remove this log call. It will generate a lot of noise.&lt;/p&gt;



&lt;p&gt;trunk/conf/hive-default.xml&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.hbase.org/r/229/#comment1297&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/229/#comment1297&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Please change the name to &quot;hive.substitute.variables&quot;, and the description to &quot;Enable variable substitution&quot;.&lt;/p&gt;



&lt;p&gt;trunk/ql/src/java/org/apache/hadoop/hive/ql/Driver.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.hbase.org/r/229/#comment1298&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/229/#comment1298&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Check HIVESUBSTITUTEVARIABLES here.&lt;/p&gt;



&lt;p&gt;trunk/ql/src/java/org/apache/hadoop/hive/ql/processors/SetProcessor.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.hbase.org/r/229/#comment1299&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/229/#comment1299&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Please create static final variables for &quot;system:&quot; and &quot;env:&quot; and call length() on these variables instead of using magic numbers.&lt;/p&gt;



&lt;p&gt;trunk/ql/src/java/org/apache/hadoop/hive/ql/processors/SetProcessor.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.hbase.org/r/229/#comment1300&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/229/#comment1300&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    I don&apos;t think you want to perform variable substitution at this point. It makes it impossible to create nested variables.&lt;/p&gt;



&lt;p&gt;trunk/ql/src/java/org/apache/hadoop/hive/ql/processors/SetProcessor.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.hbase.org/r/229/#comment1301&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/229/#comment1301&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    This logic for mapping variable names to values has been repeated several times. Please move it to a dedicated method in the VariableSubstitution class.&lt;/p&gt;



&lt;p&gt;trunk/ql/src/java/org/apache/hadoop/hive/ql/processors/SetProcessor.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.hbase.org/r/229/#comment1302&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/229/#comment1302&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Please run checkstyle and fix any checkstyle errors that you have introduced.&lt;/p&gt;



&lt;p&gt;trunk/ql/src/test/queries/clientpositive/set_processor_namespaces.q&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.hbase.org/r/229/#comment1304&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/229/#comment1304&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    You need a test for the &quot;env&quot; namespace. I think this is impossible to do here, so you probably need to add a unit test.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Carl&lt;/li&gt;
&lt;/ul&gt;



</comment>
                            <comment id="12883561" author="hbasereviewboard" created="Tue, 29 Jun 2010 14:27:32 +0000"  >&lt;p&gt;Message from: &quot;Edward Capriolo&quot; &amp;lt;edlinuxguru@gmail.com&amp;gt;&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-06-29 00:50:22, Carl Steinbach wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; trunk/common/src/java/org/apache/hadoop/hive/conf/HiveConf.java, line 260&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.hbase.org/r/229/diff/1/?file=1601#file1601line260&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/229/diff/1/?file=1601#file1601line260&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     I like the word &quot;interpolate&quot; too, but I think more people are probably familiar with &quot;substitute&quot;. Please change the name to HIVESUBSTITUTEVARIABLES.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I do not want to have the feature called different things across the code base. Replace here interpolate there it will be confusing for all. You originally suggested interpolate: &quot;Driver.interpolateCommandVariables()&quot;.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-06-29 00:50:22, Carl Steinbach wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; trunk/common/src/java/org/apache/hadoop/hive/conf/HiveConf.java, line 561&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.hbase.org/r/229/diff/1/?file=1601#file1601line561&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/229/diff/1/?file=1601#file1601line561&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     No need to test a boolean valued method for equality to true. The logic can also be simplified as follows:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     if (!getBoolVar(ConfVars.HIVEVARIABLEINTERPOLATE)) {
bq.  &amp;gt;       return expr;
bq.  &amp;gt;     }&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     l4j.info(&quot;Interpolation is on&quot;);&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     ...&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Also, please move this out of the substitution function and into the Driver, i.e Driver.compile() calls VariableSubstitution.substitute() iff HIVESUBSTITUEVARIABLES == true.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Different components are using substitute SetProcessor, Driver , File Processor, having the interpolation on/off logic in each class is redundant. This way is better as it supports information hiding.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-06-29 00:50:22, Carl Steinbach wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; trunk/common/src/java/org/apache/hadoop/hive/conf/HiveConf.java, line 562&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.hbase.org/r/229/diff/1/?file=1601#file1601line562&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/229/diff/1/?file=1601#file1601line562&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     This log message is going to generate a lot of noise, and is unnecessary since you can determine the value using the &apos;set&apos; command. Please remove it.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I think it is very important to see the command before and after substitution. We can set this to debug, I do not think it is noise.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-06-29 00:50:22, Carl Steinbach wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; trunk/common/src/java/org/apache/hadoop/hive/conf/HiveConf.java, line 587&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.hbase.org/r/229/diff/1/?file=1601#file1601line587&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/229/diff/1/?file=1601#file1601line587&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     I thought the plan was to also introduce a &quot;conf:&quot; prefix for referencing configuration properties, and that any value not prefixed by system/env/conf would map to a new variable namespace? Please add the conf prefix and introduce some state in the SessionState for storing variables (i.e. non System/Env/Conf properties).&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;After pondering this I think the &quot;conf:&quot; prefix is confusing and hurts backwards compatibility. Right now this is &quot;hive &lt;del&gt;hiveconf x=y&quot;  = &quot;set x=y&quot;. I do not think we want to introduce another switch. &quot;&lt;/del&gt;-hivevarconf&quot;. in most cases users want conf access to set properties that can be picked up by classes. hadoop &amp;amp; hive conf is the way it is adding something else will not fix the problem and will confuse people.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-06-29 00:50:22, Carl Steinbach wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; trunk/ql/src/test/queries/clientpositive/set_processor_namespaces.q, line 4&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.hbase.org/r/229/diff/1/?file=1605#file1605line4&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/229/diff/1/?file=1605#file1605line4&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     You need a test for the &quot;env&quot; namespace. I think this is impossible to do here, so you probably need to add a unit test.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Env variables are not changeable and are system dependent. I do not think there is a way to test these.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-06-29 00:50:22, Carl Steinbach wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; trunk/common/src/java/org/apache/hadoop/hive/conf/HiveConf.java, line 595&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.hbase.org/r/229/diff/1/?file=1601#file1601line595&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/229/diff/1/?file=1601#file1601line595&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Please remove this log call. It will generate a lot of noise.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I think it is very important to see the command before and after substitution. We can set this to debug, I do not think it is noise.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-06-29 00:50:22, Carl Steinbach wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; trunk/common/src/java/org/apache/hadoop/hive/conf/HiveConf.java, line 50&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.hbase.org/r/229/diff/1/?file=1601#file1601line50&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/229/diff/1/?file=1601#file1601line50&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     The variables varPat and MAX_SUBST both exist as private variables in the parent class. I think that redefining them in HiveConf will result in lots of confusion down the road, plus they don&apos;t really belong here. Please move this to a &quot;VariableSubstitution&quot; class located in ql.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I see your point. Then again, hadoop does the substitution inside the conf class. Also QL is becoming the &apos;ubber package&apos; At this point what isnt ql?&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-06-29 00:50:22, Carl Steinbach wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; trunk/ql/src/java/org/apache/hadoop/hive/ql/processors/SetProcessor.java, line 93&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.hbase.org/r/229/diff/1/?file=1604#file1604line93&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/229/diff/1/?file=1604#file1604line93&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     I don&apos;t think you want to perform variable substitution at this point. It makes it impossible to create nested variables.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I will check it out.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Edward&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.hbase.org/r/229/#review288&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/229/#review288&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


</comment>
                            <comment id="12886606" author="appodictic" created="Fri, 9 Jul 2010 03:54:20 +0000"  >&lt;p&gt;Change interpolate to substitute....Added the substitution logic to file, dfs, set , and query processor&lt;/p&gt;</comment>
                            <comment id="12886889" author="cwsteinbach" created="Fri, 9 Jul 2010 21:17:31 +0000"  >&lt;p&gt;Hi Ed, please update the diff on reviewboard. Thanks.&lt;/p&gt;</comment>
                            <comment id="12886912" author="appodictic" created="Fri, 9 Jul 2010 22:02:23 +0000"  >&lt;p&gt;I am having trouble uploading with the update diff function of the review board.  As I mentioned several times, I really had one simple requirement&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;hive -hiveconf DAY=5 -e &quot;LOAD DATA INFILE &apos;/tmp/${DAY}&apos;  into logs partition=${DAY}&quot;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I am all for doing things 100% correct, but this is such a simple thing I am really getting worn out by the endless revisions and doing lots of fancy things just because someone might want to do ${x$&lt;/p&gt;
{y}
&lt;p&gt;bla}. &lt;br/&gt;
Really, I would like to make this ticket go +1, and get on with something more interesting.&lt;/p&gt;</comment>
                            <comment id="12886918" author="hbasereviewboard" created="Fri, 9 Jul 2010 22:13:53 +0000"  >&lt;p&gt;Message from: &quot;Carl Steinbach&quot; &amp;lt;carl@cloudera.com&amp;gt;&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.hbase.org/r/229/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/229/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;(Updated 2010-07-09 15:10:54.970189)&lt;/p&gt;


&lt;p&gt;Review request for Hive Developers.&lt;/p&gt;


&lt;p&gt;Changes&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Updated the diff with &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12449054/hive-1096-12.patch.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12449054/hive-1096-12.patch.txt&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Hive Variables&lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HIVE-1096&quot; title=&quot;Hive Variables&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HIVE-1096&quot;&gt;&lt;del&gt;HIVE-1096&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;http://issues.apache.org/jira/browse/HIVE-1096&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/browse/HIVE-1096&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs (updated)&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  trunk/common/src/java/org/apache/hadoop/hive/conf/HiveConf.java 955109 &lt;br/&gt;
  trunk/conf/hive-default.xml 955109 &lt;br/&gt;
  trunk/ql/src/java/org/apache/hadoop/hive/ql/Driver.java 955109 &lt;br/&gt;
  trunk/ql/src/java/org/apache/hadoop/hive/ql/parse/VariableSubstitution.java PRE-CREATION &lt;br/&gt;
  trunk/ql/src/java/org/apache/hadoop/hive/ql/processors/AddResourceProcessor.java 955109 &lt;br/&gt;
  trunk/ql/src/java/org/apache/hadoop/hive/ql/processors/DeleteResourceProcessor.java 955109 &lt;br/&gt;
  trunk/ql/src/java/org/apache/hadoop/hive/ql/processors/DfsProcessor.java 955109 &lt;br/&gt;
  trunk/ql/src/java/org/apache/hadoop/hive/ql/processors/SetProcessor.java 955109 &lt;br/&gt;
  trunk/ql/src/test/queries/clientpositive/set_processor_namespaces.q PRE-CREATION &lt;br/&gt;
  trunk/ql/src/test/results/clientpositive/set_processor_namespaces.q.out PRE-CREATION &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;http://review.hbase.org/r/229/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/229/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Edward&lt;/p&gt;

</comment>
                            <comment id="12892977" author="cwsteinbach" created="Tue, 27 Jul 2010 23:05:35 +0000"  >&lt;p&gt;Notes from a design discussion on ##hive:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Variables, configuration properties, system properties and environment variables need to exist in separate namespaces.&lt;/li&gt;
	&lt;li&gt;Variables should not be included in the hiveconf. They should only be available/visible to the query pre-processor. In particular we do not want variables to get passed over to the cluster.&lt;/li&gt;
	&lt;li&gt;Add a &apos;-hivevar&apos; switch to the CLI for setting variables.&lt;/li&gt;
	&lt;li&gt;Add a &quot;var x=y&quot; CommandProcessor for setting variables.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Here&apos;s an example of what we want:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;var&lt;/span&gt; a=&lt;span class=&quot;code-quote&quot;&gt;&quot;I am a variable&quot;&lt;/span&gt;;                 -- ${a} == &lt;span class=&quot;code-quote&quot;&gt;&quot;I am a variable&quot;&lt;/span&gt;
set a=&lt;span class=&quot;code-quote&quot;&gt;&quot;I am a configuration property&quot;&lt;/span&gt;;   -- ${hiveconf:a} == &lt;span class=&quot;code-quote&quot;&gt;&quot;I am a configuration property&quot;&lt;/span&gt;
set prop1 = ${a};                        -- ${hiveconf:prop1} == &lt;span class=&quot;code-quote&quot;&gt;&quot;I am a variable&quot;&lt;/span&gt;
set var1 = ${hiveconf:a};                -- ${var1} == &lt;span class=&quot;code-quote&quot;&gt;&quot;I am a configuration property&quot;&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
</comment>
                            <comment id="12893022" author="cwsteinbach" created="Wed, 28 Jul 2010 01:11:17 +0000"  >&lt;p&gt;The reviewboard jiraposter is temporarily down so I&apos;m posting this by hand. The original comments and context are here: &lt;a href=&quot;https://review.cloudera.org/r/229/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://review.cloudera.org/r/229/&lt;/a&gt;&lt;/p&gt;


&lt;ul&gt;
	&lt;li&gt;trunk/conf/hive-default.xml:&lt;br/&gt;
Spelling: substituation&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;trunk/ql/src/java/org/apache/hadoop/hive/ql/parse/VariableSubstitution.java:&lt;br/&gt;
Make these variables private?&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;trunk/ql/src/java/org/apache/hadoop/hive/ql/parse/VariableSubstitution.java:&lt;br/&gt;
This should be static. No need to instantiate a VariableSubstitution object.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;trunk/ql/src/java/org/apache/hadoop/hive/ql/processors/AddResourceProcessor.java:&lt;br/&gt;
Since we want to do substitution for all commands it would probably make sense to do the substitution in CommandProcessorFactory.get() and make CommandProcessor an abstract class with the following implementation:&lt;/li&gt;
&lt;/ul&gt;


&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;abstract&lt;/span&gt; class {
  &lt;span class=&quot;code-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; command;

  CommandProcessor(&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; command) {
    &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.command = command;
  }

  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;abstract&lt;/span&gt; CommandProcessorResponse run();

  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; getCommand() {
    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; command;
  }
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In other words, CommandProcessorFactory would return a CommandProcessor object that has been initialized with a substituted copy of the command.&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;trunk/ql/src/java/org/apache/hadoop/hive/ql/processors/SetProcessor.java:&lt;br/&gt;
Replace these string literals with constants, e.g:&lt;/li&gt;
&lt;/ul&gt;


&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; ENV_PREFIX = &lt;span class=&quot;code-quote&quot;&gt;&quot;env:&quot;&lt;/span&gt;;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; SYSTEM_PREFIX = &lt;span class=&quot;code-quote&quot;&gt;&quot;system:&quot;&lt;/span&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; HIVECONF_PREFIX = &lt;span class=&quot;code-quote&quot;&gt;&quot;hiveconf:&quot;&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;


&lt;ul&gt;
	&lt;li&gt;trunk/ql/src/java/org/apache/hadoop/hive/ql/processors/SetProcessor.java:&lt;br/&gt;
String propName = varname.substring(SYSTEM_PREFIX.length());&lt;/li&gt;
&lt;/ul&gt;



&lt;ul&gt;
	&lt;li&gt;trunk/ql/src/java/org/apache/hadoop/hive/ql/processors/SetProcessor.java:&lt;br/&gt;
Can we remove this special case for &quot;silent&quot;? In SessionState this actually maps to &quot;hive.session.silent&quot; and I don&apos;t see any test cases that cover this case, i.e. that call &quot;set silent&quot; or &quot;set silent=x&quot;. It also seems that this introduces in inconsistency since &quot;set silent&quot; will show the value of &quot;hive.session.silent&quot;, but the output of &quot;set&quot; will not list a value for the property &quot;silent&quot;.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Anyone know if there is any older code that depends on this behavior?&lt;/p&gt;</comment>
                            <comment id="12902215" author="cwsteinbach" created="Wed, 25 Aug 2010 00:39:09 +0000"  >&lt;p&gt;@Ed: Do you have time to work on this again? If not I&apos;d like to pick it up.&lt;/p&gt;</comment>
                            <comment id="12935218" author="appodictic" created="Wed, 24 Nov 2010 06:32:27 +0000"  >&lt;ul&gt;
	&lt;li&gt;trunk/conf/hive-default.xml:&lt;br/&gt;
      Spelling: substituation&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Fixed&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;trunk/ql/src/java/org/apache/hadoop/hive/ql/parse/VariableSubstitution.java:&lt;br/&gt;
      Make these variables private?&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Private variables are what got us into the mess with hadoop. I am not going to repeat the problem.&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;trunk/ql/src/java/org/apache/hadoop/hive/ql/processors/AddResourceProcessor.java:&lt;br/&gt;
      Since we want to do substitution for all commands it would probably make sense to do the substitution in CommandProcessorFactory.get() and make CommandProcessor an abstract class with the following implementation:&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;...&lt;/p&gt;

&lt;p&gt;In other words, CommandProcessorFactory would return a CommandProcessor object that has been initialized with a substituted copy of the command.&lt;/p&gt;

&lt;p&gt;No. No more re factoring. It is working the way it is. Using factories going to be major. I&apos;m tired. It does not prove anything since this entire process is not very clever anyway. Currently it is slightly baked, but I believe that better then being over designed.&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;trunk/ql/src/java/org/apache/hadoop/hive/ql/processors/SetProcessor.java:&lt;br/&gt;
      Replace these string literals with constants, e.g:&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;public static final String ENV_PREFIX = &quot;env:&quot;;&lt;br/&gt;
public static final String SYSTEM_PREFIX = &quot;system:&quot;&lt;br/&gt;
public static final String HIVECONF_PREFIX = &quot;hiveconf:&quot;&lt;/p&gt;

&lt;p&gt;Fixed&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;trunk/ql/src/java/org/apache/hadoop/hive/ql/processors/SetProcessor.java:&lt;br/&gt;
      String propName = varname.substring(SYSTEM_PREFIX.length());&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Fixed&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;trunk/ql/src/java/org/apache/hadoop/hive/ql/processors/SetProcessor.java:&lt;br/&gt;
      Can we remove this special case for &quot;silent&quot;? In SessionState this actually maps to &quot;hive.session.silent&quot; and I don&apos;t see any test cases that cover this case, i.e. that call &quot;set silent&quot; or &quot;set silent=x&quot;. It also seems that this introduces in inconsistency since &quot;set silent&quot; will show the value of &quot;hive.session.silent&quot;, but the output of &quot;set&quot; will not list a value for the property &quot;silent&quot;.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Anyone know if there is any older code that depends on this behavior?&lt;/p&gt;

&lt;p&gt;Do not really know. do not really care &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; Out of scope. It is there I am leaving it.&lt;/p&gt;

&lt;p&gt;As for the VAR. Turns out supporting this is not very easy. Adding Options Parsing to the CLI works, however the session state gives you no where to store &quot;variables&quot; except in the hive conf. SetProcessor works with SessionState not CLI SessionState. Again big re factoring is needed.  &lt;/p&gt;

&lt;p&gt;What I did do is move remove support for set y=$&lt;/p&gt;
{x}. This patch only adds set y=${hiveconf:x}. Thus if someone cares to add &quot;VAR X&quot; or ${x}
&lt;p&gt; or determine how to change the CLI to add this other map that can be shared across the session state this patch is not in the way.&lt;/p&gt;

&lt;p&gt;Thus substitution only works for $&lt;/p&gt;
{hiveconf:x}
&lt;p&gt; $&lt;/p&gt;
{system:x}
&lt;p&gt; and $&lt;/p&gt;
{env:x}
&lt;p&gt;. implementing $&lt;/p&gt;
{x}
&lt;p&gt; and var can be done in a separate issue.&lt;/p&gt;</comment>
                            <comment id="12935353" author="appodictic" created="Wed, 24 Nov 2010 15:18:28 +0000"  >&lt;p&gt;Adds xdocs.&lt;/p&gt;</comment>
                            <comment id="12935354" author="appodictic" created="Wed, 24 Nov 2010 15:19:30 +0000"  >&lt;p&gt;Were two 15 patches. I bumped the number to 20 to clear any confusion.&lt;/p&gt;</comment>
                            <comment id="12969057" author="namit" created="Tue, 7 Dec 2010 22:43:46 +0000"  >&lt;p&gt;+1&lt;/p&gt;
</comment>
                            <comment id="12969058" author="cwsteinbach" created="Tue, 7 Dec 2010 22:49:03 +0000"  >&lt;p&gt;+1&lt;/p&gt;

&lt;p&gt;Namit, I can handle testing and committing this if you would like.&lt;/p&gt;</comment>
                            <comment id="12969089" author="namit" created="Wed, 8 Dec 2010 00:13:12 +0000"  >&lt;p&gt;sure, that would be very useful&lt;/p&gt;

&lt;p&gt;Let me know if you run into any issues &lt;/p&gt;</comment>
                            <comment id="12969556" author="namit" created="Wed, 8 Dec 2010 23:27:15 +0000"  >&lt;p&gt;Committed. Thanks Edward&lt;/p&gt;</comment>
                            <comment id="12969558" author="namit" created="Wed, 8 Dec 2010 23:27:49 +0000"  >&lt;p&gt;@Carl, I missed the last comment - I saw that tests completed fine, and just committed it.&lt;br/&gt;
Sorry about that&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310000">
                    <name>Duplicate</name>
                                                                <inwardlinks description="is duplicated by">
                                        <issuelink>
            <issuekey id="12472731">HIVE-1604</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12445797">HIVE-1063</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12500130">HIVE-2020</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12500134">HIVE-2021</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="12310051">
                    <name>Supercedes</name>
                                            <outwardlinks description="supercedes">
                                        <issuelink>
            <issuekey id="12445797">HIVE-1063</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12436156" name="1096-9.diff" size="9801" author="appodictic" created="Thu, 18 Feb 2010 01:15:50 +0000"/>
                            <attachment id="12447842" name="hive-1096-10-patch.txt" size="12216" author="appodictic" created="Wed, 23 Jun 2010 14:59:18 +0000"/>
                            <attachment id="12447917" name="hive-1096-11-patch.txt" size="12306" author="appodictic" created="Thu, 24 Jun 2010 02:49:57 +0000"/>
                            <attachment id="12449054" name="hive-1096-12.patch.txt" size="15856" author="appodictic" created="Fri, 9 Jul 2010 03:54:20 +0000"/>
                            <attachment id="12460369" name="hive-1096-15.patch.txt" size="22305" author="appodictic" created="Wed, 24 Nov 2010 15:18:28 +0000"/>
                            <attachment id="12460336" name="hive-1096-15.patch.txt" size="17626" author="appodictic" created="Wed, 24 Nov 2010 06:18:17 +0000"/>
                            <attachment id="12434364" name="hive-1096-2.diff" size="4799" author="appodictic" created="Mon, 1 Feb 2010 04:27:04 +0000"/>
                            <attachment id="12460370" name="hive-1096-20.patch.txt" size="22305" author="appodictic" created="Wed, 24 Nov 2010 15:19:29 +0000"/>
                            <attachment id="12434442" name="hive-1096-7.diff" size="5746" author="appodictic" created="Mon, 1 Feb 2010 22:20:41 +0000"/>
                            <attachment id="12434851" name="hive-1096-8.diff" size="10090" author="appodictic" created="Thu, 4 Feb 2010 18:48:03 +0000"/>
                            <attachment id="12431498" name="hive-1096.diff" size="4099" author="appodictic" created="Wed, 27 Jan 2010 03:10:42 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>11.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 25 Jan 2010 19:19:15 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>73107</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            6 years, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0lddb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>122816</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>