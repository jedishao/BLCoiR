<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sat Dec 03 22:59:13 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HIVE-5068/HIVE-5068.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HIVE-5068] Some queries fail due to XMLEncoder error on JDK7</title>
                <link>https://issues.apache.org/jira/browse/HIVE-5068</link>
                <project id="12310843" key="HIVE">Hive</project>
                    <description>&lt;p&gt;Looks like something snuck in that breaks the JDK 7 build:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;Caused by: java.lang.Exception: XMLEncoder: discarding statement ArrayList.add(ASTNode);
        ... 106 more
Caused by: java.lang.RuntimeException: Cannot serialize object
        at org.apache.hadoop.hive.ql.exec.Utilities$1.exceptionThrown(Utilities.java:598)
        at java.beans.DefaultPersistenceDelegate.initBean(DefaultPersistenceDelegate.java:238)
        at java.beans.DefaultPersistenceDelegate.initialize(DefaultPersistenceDelegate.java:400)
        at java.beans.PersistenceDelegate.writeObject(PersistenceDelegate.java:118)
        at java.beans.Encoder.writeObject(Encoder.java:74)
        at java.beans.XMLEncoder.writeObject(XMLEncoder.java:327)
        at java.beans.Encoder.writeExpression(Encoder.java:330)
        at java.beans.XMLEncoder.writeExpression(XMLEncoder.java:454)
        at java.beans.PersistenceDelegate.writeObject(PersistenceDelegate.java:115)
        at java.beans.Encoder.writeObject(Encoder.java:74)
        at java.beans.XMLEncoder.writeObject(XMLEncoder.java:327)
        at java.beans.Encoder.writeObject1(Encoder.java:258)
        at java.beans.Encoder.cloneStatement(Encoder.java:271)
        at java.beans.Encoder.writeStatement(Encoder.java:301)
        at java.beans.XMLEncoder.writeStatement(XMLEncoder.java:400)
        ... 105 more
Caused by: java.lang.RuntimeException: Cannot serialize object
        at org.apache.hadoop.hive.ql.exec.Utilities$1.exceptionThrown(Utilities.java:598)
        at java.beans.Encoder.getValue(Encoder.java:108)
        at java.beans.Encoder.get(Encoder.java:252)
        at java.beans.PersistenceDelegate.writeObject(PersistenceDelegate.java:112)
        at java.beans.Encoder.writeObject(Encoder.java:74)
        at java.beans.XMLEncoder.writeObject(XMLEncoder.java:327)
        at java.beans.Encoder.writeExpression(Encoder.java:330)
        at java.beans.XMLEncoder.writeExpression(XMLEncoder.java:454)
        at java.beans.PersistenceDelegate.writeObject(PersistenceDelegate.java:115)
        at java.beans.Encoder.writeObject(Encoder.java:74)
        at java.beans.XMLEncoder.writeObject(XMLEncoder.java:327)
        at java.beans.Encoder.writeExpression(Encoder.java:330)
        at java.beans.XMLEncoder.writeExpression(XMLEncoder.java:454)
        at java.beans.DefaultPersistenceDelegate.initBean(DefaultPersistenceDelegate.java:232)
        ... 118 more
Caused by: java.lang.InstantiationException: org.antlr.runtime.CommonToken
        at java.lang.Class.newInstance(Class.java:359)
        at sun.reflect.GeneratedMethodAccessor32.invoke(Unknown Source)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
        at java.lang.reflect.Method.invoke(Method.java:606)
        at sun.reflect.misc.Trampoline.invoke(MethodUtil.java:75)
        at sun.reflect.GeneratedMethodAccessor29.invoke(Unknown Source)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
        at java.lang.reflect.Method.invoke(Method.java:606)
        at sun.reflect.misc.MethodUtil.invoke(MethodUtil.java:279)
        at java.beans.Statement.invokeInternal(Statement.java:292)
        at java.beans.Statement.access$000(Statement.java:58)
        at java.beans.Statement$2.run(Statement.java:185)
        at java.security.AccessController.doPrivileged(Native Method)
        at java.beans.Statement.invoke(Statement.java:182)
        at java.beans.Expression.getValue(Expression.java:153)
        at java.beans.Encoder.getValue(Encoder.java:105)
        ... 130 more
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;java.lang.RuntimeException: Cannot serialize object
        at org.apache.hadoop.hive.ql.exec.Utilities$1.exceptionThrown(Utilities.java:598)
        at java.beans.XMLEncoder.writeStatement(XMLEncoder.java:426)
        at java.beans.XMLEncoder.writeObject(XMLEncoder.java:330)
        at org.apache.hadoop.hive.ql.exec.Utilities.serializeObject(Utilities.java:611)
        at org.apache.hadoop.hive.ql.plan.MapredWork.toXML(MapredWork.java:88)
        at org.apache.hadoop.hive.ql.optimizer.physical.CommonJoinTaskDispatcher.processCurrentTask(CommonJoinTaskDispatcher.java:505)
        at org.apache.hadoop.hive.ql.optimizer.physical.AbstractJoinTaskDispatcher.dispatch(AbstractJoinTaskDispatcher.java:182)
        at org.apache.hadoop.hive.ql.lib.TaskGraphWalker.dispatch(TaskGraphWalker.java:111)
        at org.apache.hadoop.hive.ql.lib.TaskGraphWalker.walk(TaskGraphWalker.java:194)
        at org.apache.hadoop.hive.ql.lib.TaskGraphWalker.startWalking(TaskGraphWalker.java:139)
        at org.apache.hadoop.hive.ql.optimizer.physical.CommonJoinResolver.resolve(CommonJoinResolver.java:79)
        at org.apache.hadoop.hive.ql.optimizer.physical.PhysicalOptimizer.optimize(PhysicalOptimizer.java:90)
        at org.apache.hadoop.hive.ql.parse.MapReduceCompiler.compile(MapReduceCompiler.java:292)
        at org.apache.hadoop.hive.ql.parse.SemanticAnalyzer.analyzeInternal(SemanticAnalyzer.java:8333)
        at org.apache.hadoop.hive.ql.parse.BaseSemanticAnalyzer.analyze(BaseSemanticAnalyzer.java:278)
        at org.apache.hadoop.hive.ql.Driver.compile(Driver.java:437)
        at org.apache.hadoop.hive.ql.Driver.compile(Driver.java:341)
        at org.apache.hadoop.hive.ql.Driver.runInternal(Driver.java:973)
        at org.apache.hadoop.hive.ql.Driver.run(Driver.java:885)
        at org.apache.hadoop.hive.cli.CliDriver.processLocalCmd(CliDriver.java:259)
        at org.apache.hadoop.hive.cli.CliDriver.processCmd(CliDriver.java:216)
        at org.apache.hadoop.hive.cli.CliDriver.processLine(CliDriver.java:413)
        at org.apache.hadoop.hive.cli.CliDriver.processLine(CliDriver.java:348)
        at org.apache.hadoop.hive.ql.QTestUtil.executeClient(QTestUtil.java:790)
        at org.apache.hadoop.hive.cli.TestCliDriver.runTest(TestCliDriver.java:124)
        at org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_auto_join25(TestCliDriver.java:108)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
        at java.lang.reflect.Method.invoke(Method.java:606)
        at junit.framework.TestCase.runTest(TestCase.java:154)
        at junit.framework.TestCase.runBare(TestCase.java:127)
        at junit.framework.TestResult$1.protect(TestResult.java:106)
        at junit.framework.TestResult.runProtected(TestResult.java:124)
        at junit.framework.TestResult.run(TestResult.java:109)
        at junit.framework.TestCase.run(TestCase.java:118)
        at junit.framework.TestSuite.runTest(TestSuite.java:208)
        at junit.framework.TestSuite.run(TestSuite.java:203)
        at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)
        at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:1060)
        at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:911)
Caused by: java.lang.Exception: XMLEncoder: discarding statement XMLEncoder.writeObject(MapredWork);
        ... 40 more
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
</description>
                <environment></environment>
        <key id="12663281">HIVE-5068</key>
            <summary>Some queries fail due to XMLEncoder error on JDK7</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="12648611">HIVE-4583</parent>
                                    <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="3">Duplicate</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="brocknoland">Brock Noland</reporter>
                        <labels>
                    </labels>
                <created>Mon, 12 Aug 2013 21:01:11 +0000</created>
                <updated>Tue, 10 Sep 2013 22:29:55 +0000</updated>
                            <resolved>Tue, 10 Sep 2013 20:28:56 +0000</resolved>
                                                                        <due></due>
                            <votes>0</votes>
                                    <watches>4</watches>
                                                                <comments>
                            <comment id="13738506" author="xuefuz" created="Tue, 13 Aug 2013 17:10:23 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=brocknoland&quot; class=&quot;user-hover&quot; rel=&quot;brocknoland&quot;&gt;Brock Noland&lt;/a&gt; Which tests (queries) are generating these errors?&lt;/p&gt;</comment>
                            <comment id="13738543" author="brocknoland" created="Tue, 13 Aug 2013 17:42:36 +0000"  >&lt;p&gt;The example I am workign with is auto_join25.q&lt;/p&gt;</comment>
                            <comment id="13738861" author="brocknoland" created="Tue, 13 Aug 2013 21:35:21 +0000"  >&lt;p&gt;To reproduce, I created this simply program copying ASTNode, ASTNodeOrigin, and Node into a directory:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;[brock@bigboy antlr]$ cat src/Test.java 
import java.io.*;
import java.beans.*;
import org.antlr.runtime.CommonToken;

public class Test {
  public static void main(String[] args ) throws Exception {
    ByteArrayOutputStream out = new ByteArrayOutputStream();
    XMLEncoder e = new XMLEncoder(out) {
    };
    e.setExceptionListener(new ExceptionListener() {
      public void exceptionThrown(Exception e) {
        if(e instanceof RuntimeException) {
          throw (RuntimeException)e;
        }
        throw new RuntimeException(e);
      }
    });
    CommonToken token = new CommonToken(1);
    e.writeObject(new ASTNode(token));
    e.close();
    System.out.println(out);
  }
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And it works with java6:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;[brock@bigboy antlr]$ /usr/java/jdk1.6.0_34/bin/javac -classpath &quot;lib/*&quot; -d classes/ src/*
[brock@bigboy antlr]$ /usr/java/jdk1.6.0_34/bin/java -classpath &quot;classes/:lib/*&quot; Test
&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt; 
&amp;lt;java version=&quot;1.6.0_34&quot; class=&quot;java.beans.XMLDecoder&quot;&amp;gt; 
 &amp;lt;object class=&quot;ASTNode&quot;/&amp;gt; 
&amp;lt;/java&amp;gt; 
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;not with 7&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;[brock@bigboy antlr]$ rm -rf classes/; mkdir classes/
[brock@bigboy antlr]$ /usr/java/jdk1.7.0_25/bin/javac -classpath &quot;lib/*&quot; -d classes/ src/*
[brock@bigboy antlr]$ /usr/java/jdk1.7.0_25/bin/java -classpath &quot;classes/:lib/*&quot; Test
Exception in thread &quot;main&quot; java.lang.RuntimeException: java.lang.Exception: XMLEncoder: discarding statement Test$1.writeObject(ASTNode);
	at Test$2.exceptionThrown(Test.java:15)
	at java.beans.XMLEncoder.writeStatement(XMLEncoder.java:426)
	at java.beans.XMLEncoder.writeObject(XMLEncoder.java:330)
	at Test.main(Test.java:19)
Caused by: java.lang.Exception: XMLEncoder: discarding statement Test$1.writeObject(ASTNode);
	... 3 more
Caused by: java.lang.RuntimeException: java.lang.InstantiationException: org.antlr.runtime.CommonToken
	at Test$2.exceptionThrown(Test.java:15)
	at java.beans.Encoder.getValue(Encoder.java:108)
	at java.beans.Encoder.get(Encoder.java:252)
	at java.beans.PersistenceDelegate.writeObject(PersistenceDelegate.java:112)
	at java.beans.Encoder.writeObject(Encoder.java:74)
	at java.beans.XMLEncoder.writeObject(XMLEncoder.java:327)
	at java.beans.Encoder.writeExpression(Encoder.java:330)
	at java.beans.XMLEncoder.writeExpression(XMLEncoder.java:454)
	at java.beans.PersistenceDelegate.writeObject(PersistenceDelegate.java:115)
	at java.beans.Encoder.writeObject(Encoder.java:74)
	at java.beans.XMLEncoder.writeObject(XMLEncoder.java:327)
	at java.beans.Encoder.writeExpression(Encoder.java:330)
	at java.beans.XMLEncoder.writeExpression(XMLEncoder.java:454)
	at java.beans.DefaultPersistenceDelegate.initBean(DefaultPersistenceDelegate.java:232)
	at java.beans.DefaultPersistenceDelegate.initialize(DefaultPersistenceDelegate.java:400)
	at java.beans.PersistenceDelegate.writeObject(PersistenceDelegate.java:118)
	at java.beans.Encoder.writeObject(Encoder.java:74)
	at java.beans.XMLEncoder.writeObject(XMLEncoder.java:327)
	at java.beans.Encoder.writeExpression(Encoder.java:330)
	at java.beans.XMLEncoder.writeExpression(XMLEncoder.java:454)
	at java.beans.PersistenceDelegate.writeObject(PersistenceDelegate.java:115)
	at java.beans.Encoder.writeObject(Encoder.java:74)
	at java.beans.XMLEncoder.writeObject(XMLEncoder.java:327)
	at java.beans.Encoder.writeObject1(Encoder.java:258)
	at java.beans.Encoder.cloneStatement(Encoder.java:271)
	at java.beans.Encoder.writeStatement(Encoder.java:301)
	at java.beans.XMLEncoder.writeStatement(XMLEncoder.java:400)
	... 2 more
Caused by: java.lang.InstantiationException: org.antlr.runtime.CommonToken
	at java.lang.Class.newInstance(Class.java:359)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at sun.reflect.misc.Trampoline.invoke(MethodUtil.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at sun.reflect.misc.MethodUtil.invoke(MethodUtil.java:279)
	at java.beans.Statement.invokeInternal(Statement.java:292)
	at java.beans.Statement.access$000(Statement.java:58)
	at java.beans.Statement$2.run(Statement.java:185)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.beans.Statement.invoke(Statement.java:182)
	at java.beans.Expression.getValue(Expression.java:153)
	at java.beans.Encoder.getValue(Encoder.java:105)
	... 27 more
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13738951" author="xuefuz" created="Tue, 13 Aug 2013 22:39:35 +0000"  >&lt;p&gt;It seems that XMLEncoder (in JDK7) uses reflection to create CommonToken instances during the serialization process. The exception is thrown probably because of no default Constructor defined in CommonToken.&lt;/p&gt;

&lt;p&gt;This is probably another instance to demonstrate we need to stay away from XMLEncoder. We should have total control what and how we serialize, rather than putting our fate at the mercy of XMLEncoder.&lt;/p&gt;</comment>
                            <comment id="13738961" author="brocknoland" created="Tue, 13 Aug 2013 22:46:09 +0000"  >&lt;p&gt;Yeah agreed that appears to be the issue. I got around that using a persistence delegate and then hit the same issue on another object. The current issue is when we are using serialization to clone the query plan so there is no reason we need to use xml encoder. Tomorrow I will try plain old java serialization.&lt;/p&gt;</comment>
                            <comment id="13739028" author="ashutoshc" created="Tue, 13 Aug 2013 23:41:44 +0000"  >&lt;p&gt;On &lt;a href=&quot;https://issues.apache.org/jira/browse/HIVE-1511&quot; title=&quot;Hive plan serialization is slow&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HIVE-1511&quot;&gt;&lt;del&gt;HIVE-1511&lt;/del&gt;&lt;/a&gt; there is a patch which uses Kryo for serialization. I think we should try to get that in and than not worry about chasing and fixing xml serialization.&lt;/p&gt;</comment>
                            <comment id="13739098" author="brocknoland" created="Wed, 14 Aug 2013 00:55:43 +0000"  >&lt;p&gt;Yeah ultimately that is where this should go. I think I might have a few line fix for this which I&apos;ll verify tomorrow. If so then the interim fix may make sense until that patch is ready to commit.&lt;/p&gt;</comment>
                            <comment id="13739765" author="brocknoland" created="Wed, 14 Aug 2013 15:22:29 +0000"  >&lt;p&gt;I wrote a quick and simple change to use plain old java serialization and hit the error below. My guess is we&apos;ll have to mark some more stuff transient to do this.&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;Caused by: java.io.NotSerializableException: org.apache.hadoop.hive.ql.udf.generic.GenericUDFOPEqual
  at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1181)
  at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1541)
  at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1506)
  at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1429)
  at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1175)
  at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:347)
  at java.util.ArrayList.writeObject(ArrayList.java:710)
  at sun.reflect.GeneratedMethodAccessor29.invoke(Unknown Source)
  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
  at java.lang.reflect.Method.invoke(Method.java:606)
  at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:988)
  at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1493)
  at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1429)
  at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1175)
  at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1541)
  at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1506)
  at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1429)
  at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1175)
  at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:347)
  at java.util.ArrayList.writeObject(ArrayList.java:710)
  at sun.reflect.GeneratedMethodAccessor29.invoke(Unknown Source)
  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
  at java.lang.reflect.Method.invoke(Method.java:606)
  at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:988)
  at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1493)
  at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1429)
  at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1175)
  at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1541)
  at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1506)
  at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1429)
  at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1175)
  at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1541)
  at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1506)
  at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1429)
  at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1175)
  at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1541)
  at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1506)
  at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1429)
  at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1175)
  at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:347)
  at java.util.HashMap.writeObject(HashMap.java:1099)
  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13763256" author="xuefuz" created="Tue, 10 Sep 2013 17:18:29 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=brocknoland&quot; class=&quot;user-hover&quot; rel=&quot;brocknoland&quot;&gt;Brock Noland&lt;/a&gt; Are you still working on this, given that &lt;a href=&quot;https://issues.apache.org/jira/browse/HIVE-1511&quot; title=&quot;Hive plan serialization is slow&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HIVE-1511&quot;&gt;&lt;del&gt;HIVE-1511&lt;/del&gt;&lt;/a&gt; is resolved?&lt;/p&gt;</comment>
                            <comment id="13763264" author="brocknoland" created="Tue, 10 Sep 2013 17:22:21 +0000"  >&lt;p&gt;Yes. Post &lt;a href=&quot;https://issues.apache.org/jira/browse/HIVE-1511&quot; title=&quot;Hive plan serialization is slow&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HIVE-1511&quot;&gt;&lt;del&gt;HIVE-1511&lt;/del&gt;&lt;/a&gt; we still use xml encoder clone the query plan which doesn&apos;t work with Java 7.&lt;/p&gt;</comment>
                            <comment id="13763466" author="brocknoland" created="Tue, 10 Sep 2013 20:28:56 +0000"  >&lt;p&gt;Since this JIRA is hard to follow, I am taking this issue forward in &lt;a href=&quot;https://issues.apache.org/jira/browse/HIVE-5263&quot; title=&quot;Query Plan  cloning time could be improved by using Kryo&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HIVE-5263&quot;&gt;&lt;del&gt;HIVE-5263&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="13763573" author="xuefuz" created="Tue, 10 Sep 2013 21:55:12 +0000"  >&lt;p&gt;I think I&apos;d like a little clarification here. The issue here is that some tests fail with JDK7. Looking at &lt;a href=&quot;https://issues.apache.org/jira/browse/HIVE-5263&quot; title=&quot;Query Plan  cloning time could be improved by using Kryo&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HIVE-5263&quot;&gt;&lt;del&gt;HIVE-5263&lt;/del&gt;&lt;/a&gt;, I&apos;m not sure if that will solve this issue.&lt;/p&gt;

&lt;p&gt;Basically, I&apos;m trying to figure out when we could put a closure on the parent JIRA (&lt;a href=&quot;https://issues.apache.org/jira/browse/HIVE-4583&quot; title=&quot;Make Hive compile and run with JDK7&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HIVE-4583&quot;&gt;&lt;del&gt;HIVE-4583&lt;/del&gt;&lt;/a&gt;), which now has all the dependent and child JIRA resolved except this one, which is marked as dupe of &lt;a href=&quot;https://issues.apache.org/jira/browse/HIVE-5263&quot; title=&quot;Query Plan  cloning time could be improved by using Kryo&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HIVE-5263&quot;&gt;&lt;del&gt;HIVE-5263&lt;/del&gt;&lt;/a&gt;. I&apos;d like to know if we can surely to say that JDK7 is supported for Hive when &lt;a href=&quot;https://issues.apache.org/jira/browse/HIVE-5263&quot; title=&quot;Query Plan  cloning time could be improved by using Kryo&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HIVE-5263&quot;&gt;&lt;del&gt;HIVE-5263&lt;/del&gt;&lt;/a&gt; is closed. Thanks.&lt;/p&gt;</comment>
                            <comment id="13763577" author="brocknoland" created="Tue, 10 Sep 2013 22:00:02 +0000"  >&lt;p&gt;Hi,&lt;/p&gt;

&lt;p&gt;The issue at present is that with Java 7 many tests fail such as join29.q (and about 50 more). This is a regression over your previous work.  &lt;a href=&quot;https://issues.apache.org/jira/browse/HIVE-5263&quot; title=&quot;Query Plan  cloning time could be improved by using Kryo&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HIVE-5263&quot;&gt;&lt;del&gt;HIVE-5263&lt;/del&gt;&lt;/a&gt; fixes these failures for me on Java7.&lt;/p&gt;</comment>
                            <comment id="13763630" author="xuefuz" created="Tue, 10 Sep 2013 22:29:55 +0000"  >&lt;p&gt;Great! Thanks for the clarification, Brock. I will put &lt;a href=&quot;https://issues.apache.org/jira/browse/HIVE-4583&quot; title=&quot;Make Hive compile and run with JDK7&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HIVE-4583&quot;&gt;&lt;del&gt;HIVE-4583&lt;/del&gt;&lt;/a&gt; dependent on &lt;a href=&quot;https://issues.apache.org/jira/browse/HIVE-5263&quot; title=&quot;Query Plan  cloning time could be improved by using Kryo&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HIVE-5263&quot;&gt;&lt;del&gt;HIVE-5263&lt;/del&gt;&lt;/a&gt;. Once &lt;a href=&quot;https://issues.apache.org/jira/browse/HIVE-5263&quot; title=&quot;Query Plan  cloning time could be improved by using Kryo&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HIVE-5263&quot;&gt;&lt;del&gt;HIVE-5263&lt;/del&gt;&lt;/a&gt; closes, I will close &lt;a href=&quot;https://issues.apache.org/jira/browse/HIVE-4583&quot; title=&quot;Make Hive compile and run with JDK7&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HIVE-4583&quot;&gt;&lt;del&gt;HIVE-4583&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310051">
                    <name>Supercedes</name>
                                                                <inwardlinks description="is superceded by">
                                        <issuelink>
            <issuekey id="12667916">HIVE-5263</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 13 Aug 2013 17:10:23 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>343282</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            3 years, 12 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1n78n:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>343586</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>