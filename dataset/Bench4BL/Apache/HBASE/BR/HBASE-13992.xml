<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sat Dec 03 19:38:51 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-13992/HBASE-13992.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-13992] Integrate SparkOnHBase into HBase</title>
                <link>https://issues.apache.org/jira/browse/HBASE-13992</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;This Jira is to ask if SparkOnHBase can find a home in side HBase core.&lt;/p&gt;

&lt;p&gt;Here is the github: &lt;br/&gt;
&lt;a href=&quot;https://github.com/cloudera-labs/SparkOnHBase&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/cloudera-labs/SparkOnHBase&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I am the core author of this project and the license is Apache 2.0&lt;/p&gt;

&lt;p&gt;A blog explaining this project is here&lt;br/&gt;
&lt;a href=&quot;http://blog.cloudera.com/blog/2014/12/new-in-cloudera-labs-sparkonhbase/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://blog.cloudera.com/blog/2014/12/new-in-cloudera-labs-sparkonhbase/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A spark Streaming example is here&lt;br/&gt;
&lt;a href=&quot;http://blog.cloudera.com/blog/2014/11/how-to-do-near-real-time-sessionization-with-spark-streaming-and-apache-hadoop/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://blog.cloudera.com/blog/2014/11/how-to-do-near-real-time-sessionization-with-spark-streaming-and-apache-hadoop/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A real customer using this in produce is blogged here&lt;br/&gt;
&lt;a href=&quot;http://blog.cloudera.com/blog/2015/03/how-edmunds-com-used-spark-streaming-to-build-a-near-real-time-dashboard/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://blog.cloudera.com/blog/2015/03/how-edmunds-com-used-spark-streaming-to-build-a-near-real-time-dashboard/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Please debate and let me know what I can do to make this happen.&lt;/p&gt;
</description>
                <environment></environment>
        <key id="12841415">HBASE-13992</key>
            <summary>Integrate SparkOnHBase into HBase</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="ted.m">Theodore michael Malaska</assignee>
                                    <reporter username="ted.m">Theodore michael Malaska</reporter>
                        <labels>
                    </labels>
                <created>Mon, 29 Jun 2015 19:02:28 +0000</created>
                <updated>Thu, 30 Jul 2015 19:44:05 +0000</updated>
                            <resolved>Tue, 28 Jul 2015 16:58:18 +0000</resolved>
                                                    <fixVersion>2.0.0</fixVersion>
                                    <component>spark</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>42</watches>
                                                                <comments>
                            <comment id="14606238" author="busbey" created="Mon, 29 Jun 2015 19:41:18 +0000"  >&lt;p&gt;sweet. Adding this in as a module (hbase-spark ?) would also give us a good push to move the mapreduce libraries out of hbase-server finally. linking &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11843&quot; title=&quot;MapReduce classes shouldn&amp;#39;t be in hbase-server&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11843&quot;&gt;HBASE-11843&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="14606260" author="ted.m" created="Mon, 29 Jun 2015 19:46:53 +0000"  >&lt;p&gt;You know Sean, if we do that we can rebuild the balk load in Spark.  That would be sooooo cool.&lt;/p&gt;

&lt;p&gt;I guess that would be a different jira, but it should be a jira.&lt;/p&gt;</comment>
                            <comment id="14606269" author="busbey" created="Mon, 29 Jun 2015 19:53:01 +0000"  >&lt;p&gt;One step at a time. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="14606289" author="eclark" created="Mon, 29 Jun 2015 20:06:28 +0000"  >&lt;p&gt;I really like the idea. Spark streaming and HBase make some great sense together.&lt;/p&gt;

&lt;p&gt;Thoughts on the code as it is currently:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Need to scrub/remove cdh and cloudera references.&lt;/li&gt;
	&lt;li&gt;Seems really messy as far as structure/layout.
	&lt;ul&gt;
		&lt;li&gt;Why javatest/ and src/test/java&lt;/li&gt;
		&lt;li&gt;Why java/ and src/main/java&lt;/li&gt;
		&lt;li&gt;Single random scala file in root dir?&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
	&lt;li&gt;Tons of ide files in here.&lt;/li&gt;
	&lt;li&gt;Everything is named example. These should all be bases ( either extendable base classes or scala traits )&lt;/li&gt;
	&lt;li&gt;Why java when most of spark is scala?&lt;/li&gt;
	&lt;li&gt;Needs some serious work on java/scala docing.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14606347" author="ted.m" created="Mon, 29 Jun 2015 20:36:47 +0000"  >&lt;p&gt;1. Yes CDH will be removed&lt;br/&gt;
2. Yes there is some clean up we can do&lt;br/&gt;
3. Yes I will take care of the ide file&lt;br/&gt;
4. Not everything is named example only the example.  I can walk you through the code through a webex later this week if you have time.&lt;br/&gt;
5. Why Java.  Well the main code is in Scala the only java is the wrapper so it will work in Java Spark and the Java examples&lt;br/&gt;
6. 100% agree&lt;/p&gt;</comment>
                            <comment id="14606505" author="apurtell" created="Mon, 29 Jun 2015 22:04:30 +0000"  >&lt;p&gt;I think this would be a good thing to have in. We can set it up as a separate Maven module so the Spark and Scala dependencies only come in there, optionally by way of a profile that isn&apos;t turned on by default but is turned on for the &quot;release&quot; profile. hbase-spark sounds good as a module name to me.&lt;/p&gt;</comment>
                            <comment id="14606550" author="ted.m" created="Mon, 29 Jun 2015 22:29:08 +0000"  >&lt;p&gt;So how should we move forward.&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Do we vote on weather this should be or are we past that?&lt;/li&gt;
	&lt;li&gt;To make the design I will need help from committers can I get assigned a Committer to give me guidance?&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Ted Malaska &lt;/p&gt;</comment>
                            <comment id="14606559" author="apurtell" created="Mon, 29 Jun 2015 22:36:15 +0000"  >&lt;p&gt;I suggest giving it a day or two for more comment to come in. If nothing changes, I&apos;d say we could proceed with the integration approach of a new Maven module, addressing Elliott&apos;s comments.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;To make the design I will need help from committers can I get assigned a Committer to give me guidance?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;We don&apos;t assign committers but maybe someone will volunteer. Otherwise I suggest writing up what questions you have or how you&apos;d like to proceed, or both, and post them here. I suspect you&apos;ll get guidance back in the responses.&lt;/p&gt;</comment>
                            <comment id="14606567" author="busbey" created="Mon, 29 Jun 2015 22:38:37 +0000"  >&lt;p&gt;It sounds like so far everyone agrees that as a feature it&apos;s a good idea. Feature additions are handled by lazy consensus; so long as someone wants to work on a feature it&apos;s up to those who oppose it to speak up to avoid moving forward.&lt;/p&gt;

&lt;p&gt;Normally the way we&apos;d proceed is you as the contributor would post a short document describing the feature: the problem, the overall approach, some light implementation details. In this case, I personally think the existing materials provide enough context to move forward.&lt;/p&gt;

&lt;p&gt;The next step after that would be for you to post a patch that adds a new module with the implementation. If you ran into trouble as you went, you&apos;d post a question either here or on dev@hbase and one or more committers would step up to help.&lt;/p&gt;

&lt;p&gt;What kind of guidance are you looking for? I&apos;m particularly interested in how our contributor guide could provide the needed groundwork for folks to work on complex features like this.&lt;/p&gt;</comment>
                            <comment id="14606575" author="ted.m" created="Mon, 29 Jun 2015 22:40:59 +0000"  >&lt;p&gt;Cool thanks Sean and Andrew.&lt;/p&gt;

&lt;p&gt;Sounds great.  I will wait a couple of days then I would love to talk with a committer or two about putting together an outline for package structure and naming conventions. &lt;/p&gt;

&lt;p&gt;After that I should be good to get a patch made.&lt;/p&gt;</comment>
                            <comment id="14609073" author="enis" created="Tue, 30 Jun 2015 21:07:26 +0000"  >&lt;p&gt;This seems fine as a module. +1 for &lt;tt&gt;hbase-spark&lt;/tt&gt; as a name. Phoenix also comes with a Spark module itself. &lt;/p&gt;</comment>
                            <comment id="14610694" author="stack" created="Wed, 1 Jul 2015 17:39:26 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=malaskat&quot; class=&quot;user-hover&quot; rel=&quot;malaskat&quot;&gt;Ted Malaska&lt;/a&gt; ping if you have questions or need a hand doing up a patch. I&apos;d be game.&lt;/p&gt;</comment>
                            <comment id="14610738" author="nkeywal" created="Wed, 1 Jul 2015 18:01:18 +0000"  >&lt;p&gt;+1 as well for me. How does it work for the binaries version, will we have to enter into the scala game, i.e. hbase-spark-2_10? What about the spark version? The spark-hadoop version?&lt;/p&gt;</comment>
                            <comment id="14621073" author="busbey" created="Thu, 9 Jul 2015 18:57:11 +0000"  >&lt;p&gt;Notes from call today where &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=apurtell&quot; class=&quot;user-hover&quot; rel=&quot;apurtell&quot;&gt;Andrew Purtell&lt;/a&gt; and I helped walk through a plan for this with &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ted.m&quot; class=&quot;user-hover&quot; rel=&quot;ted.m&quot;&gt;Theodore michael Malaska&lt;/a&gt;.&lt;/p&gt;

&lt;hr /&gt;
&lt;h3&gt;&lt;a name=&quot;OverallRoadmap&quot;&gt;&lt;/a&gt;Overall Roadmap&lt;/h3&gt;

&lt;ul&gt;
	&lt;li&gt;start with current capabilities refactored into a module with hbase packages&lt;/li&gt;
	&lt;li&gt;initial support targets Spark 1.3&lt;/li&gt;
	&lt;li&gt;later add RDD extension to expose hbase-specific functionality&lt;/li&gt;
	&lt;li&gt;later add data frame support, likely as additional module&lt;/li&gt;
	&lt;li&gt;start with master-only,  use backport patch for branch-1 post refactor and docs&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;&lt;a name=&quot;MinimumsforLandingonMaster&quot;&gt;&lt;/a&gt;Minimums for Landing on Master&lt;/h3&gt;

&lt;ul&gt;
	&lt;li&gt;use an isolated top-level module to reduce impact on rest of project, modeled after the phoenix-spark module
	&lt;ul&gt;
		&lt;li&gt;hbase-spark&lt;/li&gt;
		&lt;li&gt;should help limit reach of dependency conflicts. look to phoenix-spark for any conflict resolution.&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
	&lt;li&gt;target spark 1.3 as upstream dependency
	&lt;ul&gt;
		&lt;li&gt;already works with 1.3&lt;/li&gt;
		&lt;li&gt;1.3 seen as able to reach a large existing user base and stable&lt;/li&gt;
		&lt;li&gt;gap: data frames are missing key functionality pre-1.4.&lt;/li&gt;
		&lt;li&gt;gap: unknown spark compatibility promises, history of scala version changes may limit how many future versions this can work with.&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
	&lt;li&gt;move existing implementation classes into an hbase subpackage
	&lt;ul&gt;
		&lt;li&gt;org.apache.hadoop.hbase.spark&lt;/li&gt;
		&lt;li&gt;there is currently a workaround to access a spark-package-private set of configs, needed for pre-1.3. since 1.3 is our minimum expected version, remove this workaround.&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
	&lt;li&gt;leave examples as a part of the single module definition for first landing&lt;/li&gt;
	&lt;li&gt;leave tests, including scala tests, as unit tests on the single module for first landing&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;&lt;a name=&quot;Followonforbranch1&quot;&gt;&lt;/a&gt;Follow on for branch-1&lt;/h3&gt;

&lt;ul&gt;
	&lt;li&gt;documentation - need to add a ref guide section on using the spark bindings&lt;/li&gt;
	&lt;li&gt;examples refactoring - examples should be moved out of the primary module into something like hbase-spark-examples&lt;/li&gt;
	&lt;li&gt;tests refactoring - java tests should be categorized to match rest of project. Scala tests should be moved to an IT
&lt;hr /&gt;&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14621098" author="busbey" created="Thu, 9 Jul 2015 19:14:39 +0000"  >&lt;p&gt;I thought of another follow-on: we need to decide on and annotate the supported public API. Not sure how that or automated docs work for any Scala parts of the implementation.&lt;/p&gt;</comment>
                            <comment id="14621993" author="kostas" created="Fri, 10 Jul 2015 08:40:54 +0000"  >&lt;p&gt;Just driving by and curious about&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;gap: data frames are missing key functionality pre-1.4.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;What specific features is this referring to?&lt;/p&gt;</comment>
                            <comment id="14625498" author="ted.m" created="Mon, 13 Jul 2015 22:28:37 +0000"  >&lt;p&gt;This is the first draft.  It is ready for people to review and look at, but I intend to do another pass to clean things up.&lt;/p&gt;</comment>
                            <comment id="14625515" author="ted.m" created="Mon, 13 Jul 2015 22:43:59 +0000"  >&lt;p&gt;Oh for help for the reviews.  All the magic is in HBaseContext.&lt;/p&gt;

&lt;p&gt;Everything else is ether one of the following:&lt;br/&gt;
1. Examples&lt;br/&gt;
2. Tests&lt;br/&gt;
3. Implicit Scala Functions&lt;br/&gt;
4. Java port&lt;/p&gt;

&lt;p&gt;Also this doesn&apos;t include the following, which will come in following patches:&lt;br/&gt;
1. Validation that the code will be able to accept new HBase Kerberos tickets given through Spark-Submit in Yarn-Cluster mode.&lt;br/&gt;
2. Integration with DataFrames.  This is easy to do I just wanted to separate it out into a different jira.&lt;br/&gt;
3. Better unit testing.  I&apos;m testing every function with the HBase test cluster, but I&apos;m not the best at unit test, so on a following patch I will work with others to add more tests.&lt;br/&gt;
4. More Examples.  I would like to build on common Spark Stream use cases with HBase.&lt;br/&gt;
5. Documentation.&lt;/p&gt;</comment>
                            <comment id="14625643" author="hadoopqa" created="Tue, 14 Jul 2015 01:06:48 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12745137/HBASE-13992.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12745137/HBASE-13992.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit a3d30892b41f604ab5a62d4f612fa7c230267dfe.&lt;br/&gt;
  ATTACHMENT ID: 12745137&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 7 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.7.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javac&lt;/font&gt;.  The applied patch generated 42 javac compiler warnings (more than the master&apos;s current 20 warnings).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 4 warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 1890 checkstyle errors (more than the master&apos;s current 1873 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 release audit&lt;/font&gt;.  The applied patch generated 1 release audit warnings (more than the master&apos;s current 0 warnings).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces the following lines longer than 100:&lt;br/&gt;
    +         xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 &lt;a href=&quot;http://maven.apache.org/xsd/maven-4.0.0.xsd&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://maven.apache.org/xsd/maven-4.0.0.xsd&lt;/a&gt;&quot;&amp;gt;&lt;br/&gt;
+                            &amp;lt;argLine&amp;gt;-Xmx1536m -XX:MaxPermSize=512m -XX:ReservedCodeCacheSize=512m&amp;lt;/argLine&amp;gt;&lt;br/&gt;
+  public static class CustomFunction implements VoidFunction&amp;lt;Tuple2&amp;lt;Iterator&amp;lt;byte[]&amp;gt;, HConnection&amp;gt;&amp;gt; {&lt;br/&gt;
+              .println(&quot;JavaHBaseBulkPutExample  &lt;/p&gt;
{master}
&lt;p&gt; &lt;/p&gt;
{host}
&lt;p&gt; &lt;/p&gt;
{post}
&lt;p&gt; &lt;/p&gt;
{tableName}
&lt;p&gt; &lt;/p&gt;
{columnFamily}
&lt;p&gt;&quot;);&lt;br/&gt;
+    JavaReceiverInputDStream&amp;lt;String&amp;gt; javaDstream = jssc.socketTextStream(host, Integer.parseInt(port));&lt;br/&gt;
+  private def bulkMutation&lt;span class=&quot;error&quot;&gt;&amp;#91;T&amp;#93;&lt;/span&gt;(rdd: RDD&lt;span class=&quot;error&quot;&gt;&amp;#91;T&amp;#93;&lt;/span&gt;, tableName: TableName, f: (T) =&amp;gt; Mutation, batchSize: Integer) {&lt;br/&gt;
+  def hbaseRDD&lt;span class=&quot;error&quot;&gt;&amp;#91;U: ClassTag&amp;#93;&lt;/span&gt;(tableName: TableName, scan: Scan, f: ((ImmutableBytesWritable, Result)) =&amp;gt; U): RDD&lt;span class=&quot;error&quot;&gt;&amp;#91;U&amp;#93;&lt;/span&gt; = {&lt;br/&gt;
+    TableMapReduceUtil.initTableMapperJob(tableName, scan, classOf&lt;span class=&quot;error&quot;&gt;&amp;#91;IdentityTableMapper&amp;#93;&lt;/span&gt;, null, null, job)&lt;br/&gt;
+          list.add((CellUtil.cloneFamily(cell), CellUtil.cloneQualifier(cell), CellUtil.cloneValue(cell)))&lt;br/&gt;
+                                        configBroadcast: Broadcast[SerializableWritable&lt;span class=&quot;error&quot;&gt;&amp;#91;Configuration&amp;#93;&lt;/span&gt;],&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.rest.client.TestRemoteTable&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14762//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14762//testReport/&lt;/a&gt;&lt;br/&gt;
Release audit warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14762//artifact/patchprocess/patchReleaseAuditWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14762//artifact/patchprocess/patchReleaseAuditWarnings.txt&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14762//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14762//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14762//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14762//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Javadoc warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14762//artifact/patchprocess/patchJavadocWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14762//artifact/patchprocess/patchJavadocWarnings.txt&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14762//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14762//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14625691" author="yuzhihong@gmail.com" created="Tue, 14 Jul 2015 02:09:13 +0000"  >&lt;p&gt;Uploading onto reviewboard would make reviewing easier.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+        &amp;lt;spark.version&amp;gt;1.3.0&amp;lt;/spark.version&amp;gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Should newer Spark release, such as 1.4.0, be used ?&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+            &amp;lt;!-- &amp;lt;scope&amp;gt;test&amp;lt;/scope&amp;gt; Return--&amp;gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Uncomment the above ?&lt;br/&gt;
Please add short javadoc for the XXExample classes.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+      &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out
+              .println(&lt;span class=&quot;code-quote&quot;&gt;&quot;JavaHBaseBulkGetExample  {master} {tableName}&quot;&lt;/span&gt;);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Merge above two lines.&lt;/p&gt;

&lt;p&gt;For JavaHBaseDistributedScan:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+    results.size();
+  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Did you intend to print the result size ?&lt;/p&gt;

&lt;p&gt;For JavaHBaseMapGetPutExample, GetFunction isn&apos;t called.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+              .println(&lt;span class=&quot;code-quote&quot;&gt;&quot;JavaHBaseBulkPutExample  {master} {host} {post} {tableName} {columnFamily}&quot;&lt;/span&gt;);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;post -&amp;gt; port&lt;/p&gt;

&lt;p&gt;For HBaseContext,&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+  * serializable Configuration object
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;There&apos;re 3 parameters to HBaseContext. Above is one of them. Did you intend to provide scaladoc for all of them ?&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+  def mapPartition[T, R: ClassTag](rdd: RDD[T],
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Should the above method be called mapPartitions (to align with method of RDD) ?&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+  def streamForeachRDD[T](dstream: DStream[T],
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Should the method be called streamForeachPartition since there is foreachRDD method which accepts DStream already.&lt;/p&gt;</comment>
                            <comment id="14625702" author="ted.m" created="Tue, 14 Jul 2015 02:23:41 +0000"  >&lt;p&gt;Hey &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ted_yu&quot; class=&quot;user-hover&quot; rel=&quot;ted_yu&quot;&gt;Ted Yu&lt;/a&gt; the link for the review board is in the jira.&lt;/p&gt;

&lt;p&gt;But here it is again.  &lt;a href=&quot;https://reviews.apache.org/r/36457&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/36457&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thank you for reviewing.&lt;/p&gt;

&lt;p&gt;I will try to get a new cut out tomorrow&lt;/p&gt;</comment>
                            <comment id="14625729" author="busbey" created="Tue, 14 Jul 2015 02:47:55 +0000"  >&lt;p&gt;Some help on the feedback from QA, since our current version is lacking some of the niceties of the soon-to-be version:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;to find the javac warnings, you can either run &lt;tt&gt;mvn -DSkipTests package | tee some_log.log&lt;/tt&gt; before and after, then diff, or if you want to presume the new warnings are just in your new module do it after and search for lines starting with &quot;[WARNING]&quot;.&lt;/li&gt;
	&lt;li&gt;to find the javadoc warnings you can either run &lt;tt&gt;mvn -DskipTests javadoc:javadoc | tee some_other.log&lt;/tt&gt; before and after, then diff. or again you could just look in your module for the start of &quot;[WARNING] Javadoc Warnings&quot;&lt;/li&gt;
	&lt;li&gt;10 of the checkstyle warnings will be the too long lines. to get the rest you&apos;ll need to run &lt;tt&gt;mvn -DskipTests checkstyle:aggregate&lt;/tt&gt; and save the &lt;tt&gt;target/checkstyle-result.xml&lt;/tt&gt; files to compare before/after.&lt;/li&gt;
	&lt;li&gt;the release audit warning is the missing license header noted on the review&lt;/li&gt;
	&lt;li&gt;the TestRemoteTable failure seems unrelated.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14625743" author="yuzhihong@gmail.com" created="Tue, 14 Jul 2015 03:04:34 +0000"  >&lt;p&gt;There have been review comments on the review board while I haven&apos;t received notification.&lt;/p&gt;

&lt;p&gt;Please add hbase to Groups field.&lt;/p&gt;</comment>
                            <comment id="14625745" author="ted.m" created="Tue, 14 Jul 2015 03:06:54 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=busbey&quot; class=&quot;user-hover&quot; rel=&quot;busbey&quot;&gt;Sean Busbey&lt;/a&gt; will do, thank you and sorry for missing that on the first draft&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ted_yu&quot; class=&quot;user-hover&quot; rel=&quot;ted_yu&quot;&gt;Ted Yu&lt;/a&gt; Done.  Added HBase to the review board group&lt;/p&gt;
</comment>
                            <comment id="14627231" author="apurtell" created="Tue, 14 Jul 2015 22:56:09 +0000"  >&lt;blockquote&gt;&lt;p&gt;Should newer Spark release, such as 1.4.0, be used ?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;See &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13992?focusedCommentId=14621073&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-14621073&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-13992?focusedCommentId=14621073&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-14621073&lt;/a&gt; &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=tedyu&quot; class=&quot;user-hover&quot; rel=&quot;tedyu&quot;&gt;Ted Yu&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="14627467" author="ted.m" created="Wed, 15 Jul 2015 03:37:07 +0000"  >&lt;p&gt;Here is the latest Patch.  Like the first it isn&apos;t ready for the final patch, but it is ready for review.&lt;/p&gt;

&lt;p&gt;Please review and let me know what you see.  My goal is to have another patch by Thursday night.  Hopefully with more javadoc and more testing.&lt;/p&gt;

&lt;p&gt;Thanks again for helping me through this process.&lt;/p&gt;</comment>
                            <comment id="14628028" author="lhofhansl" created="Wed, 15 Jul 2015 13:09:01 +0000"  >&lt;p&gt;Belated +1 on having this in a &quot;hbase-spark&quot; module as part of HBase. Looking at the patch now.&lt;/p&gt;</comment>
                            <comment id="14628041" author="lhofhansl" created="Wed, 15 Jul 2015 13:19:47 +0000"  >&lt;p&gt;Also came across Spark version 1.3.0. Will SparkOnHBase currently not compile/work with 1.4.x? If not... Fine. But if it does, can we at least add an optional build against 1.4.0 (as we do with Hadoop)?&lt;/p&gt;</comment>
                            <comment id="14630126" author="ted.m" created="Thu, 16 Jul 2015 18:27:27 +0000"  >&lt;p&gt;Added javadoc for implicit methods.  Please review.&lt;/p&gt;

&lt;p&gt;Tonight I&apos;m going to add some more unit testing for the implicit methods but after that I&apos;m going to be looking to close this jira out.&lt;/p&gt;</comment>
                            <comment id="14630135" author="ted.m" created="Thu, 16 Jul 2015 18:31:07 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt; I would like to add 1.4 or 1.5 into another patch.  This patch is so large already.  My hope is to close this one out then start a couple more right off of this like:&lt;/p&gt;

&lt;p&gt;1. Newer versions of Spark&lt;br/&gt;
2. Adding DataFrame Support&lt;br/&gt;
3. Documentation&lt;br/&gt;
4. UpdateStateBy Key that will work through HBase&lt;br/&gt;
5. Bulk load to HBase&lt;br/&gt;
6. Much More&lt;/p&gt;

&lt;p&gt;Thanks&lt;/p&gt;</comment>
                            <comment id="14630630" author="apurtell" created="Fri, 17 Jul 2015 01:09:01 +0000"  >&lt;blockquote&gt;&lt;p&gt;can we at least add an optional build against 1.4.0 (as we do with Hadoop)?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The pom lets you do &lt;tt&gt;-Dspark.version=1.4.0&lt;/tt&gt; (and also scala.version and scala.binary.version). Does this work for now? &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=malaskat&quot; class=&quot;user-hover&quot; rel=&quot;malaskat&quot;&gt;Ted Malaska&lt;/a&gt; does this compile with Spark 1.4? &lt;/p&gt;</comment>
                            <comment id="14630666" author="ted.m" created="Fri, 17 Jul 2015 01:57:25 +0000"  >&lt;p&gt;Hey &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=andrew.purtell%40gmail.com&quot; class=&quot;user-hover&quot; rel=&quot;andrew.purtell@gmail.com&quot;&gt;Andrew Purtell&lt;/a&gt;, yes just tested -Dspark.version=1.4.0 and it worked fine.  I had one compile bug that I fixed.  I will send it in the next patch.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=andrew.purtell%40gmail.com&quot; class=&quot;user-hover&quot; rel=&quot;andrew.purtell@gmail.com&quot;&gt;Andrew Purtell&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=busbey&quot; class=&quot;user-hover&quot; rel=&quot;busbey&quot;&gt;Sean Busbey&lt;/a&gt; thank you vary much for your reviews today.  I know it was a lot of code and I thank you for taking the time.&lt;/p&gt;

&lt;p&gt;I will spend the next couple of days getting you a patch.  Hopefully by sunday night.&lt;/p&gt;
</comment>
                            <comment id="14631097" author="lhofhansl" created="Fri, 17 Jul 2015 09:38:22 +0000"  >&lt;blockquote&gt;&lt;p&gt;-Dspark.version=1.4.0&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;That&apos;s what I meant. Sorry I didn&apos;t say explicitly.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;thank you vary much for your reviews today&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Did these happen offline?&lt;/p&gt;</comment>
                            <comment id="14631283" author="busbey" created="Fri, 17 Jul 2015 13:00:07 +0000"  >&lt;p&gt;They were on review board&lt;/p&gt;</comment>
                            <comment id="14631344" author="lhofhansl" created="Fri, 17 Jul 2015 13:34:27 +0000"  >&lt;p&gt;Few nits:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Comments in what&apos;s happening in the Scala and JavaHBase*Examples&lt;/li&gt;
	&lt;li&gt;Might want to have a comment in *HBaseBulkDeleteExample.java explaining that it is probably better to use the built-in BulkDeleteEndpoint (which in turn we have to document better)&lt;/li&gt;
	&lt;li&gt;Comment explaining in *HBaseDistributedScan as to why this is preferred over using Spark&apos;s built-in HadoopRDD with TableInputFormat or the included HBaseRDD (it&apos;s obvious, but hey, somebody might look at the classes and wonder why).&lt;/li&gt;
	&lt;li&gt;I assume there&apos;s quite some heap needed to get the RDD resulting from a scan into a (RowKey, List[(columnFamily, columnQualifier, Value) (going by the article here). Can that be avoided if it is a problem? Or in other words, is there an easy to way to get a raw Result[] or List&amp;lt;Result&amp;gt;? ... sorry if I&apos;m missing something.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Very excited about having this in HBase proper.&lt;/p&gt;</comment>
                            <comment id="14631369" author="ted.m" created="Fri, 17 Jul 2015 13:58:07 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;I will add the comments&lt;/li&gt;
	&lt;li&gt;As for the Result you do get the results but you need to convert it to something that can go into an RDD.&lt;/li&gt;
	&lt;li&gt;As for the memory needed.  Think of it as if you are reading a file from S3 or HDFS.  It is the same thing here.&lt;/li&gt;
	&lt;li&gt;Yes I tested 1.4 with -D and it seemed to work.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;And yes I&apos;m super excited about this too, because this is only the beginning.&lt;/p&gt;

&lt;p&gt;I will work through the weekend to get all these reviews into the next patch.&lt;/p&gt;</comment>
                            <comment id="14632420" author="lhofhansl" created="Sat, 18 Jul 2015 12:51:50 +0000"  >&lt;blockquote&gt;&lt;p&gt;As for the Result you do get the results but you need to convert it to something that can go into an RDD.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The TableInputFormat will return tuples of byte[] -&amp;gt; Result, that&apos;s also what one would get when using the HadoopRDD with TableInputFormat.&lt;/p&gt;</comment>
                            <comment id="14632589" author="ted.m" created="Sat, 18 Jul 2015 19:59:48 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt; great idea I will try to add that in to the next patch which should be out tomorrow.&lt;/p&gt;

&lt;p&gt;Thanks for helping me through this&lt;/p&gt;</comment>
                            <comment id="14633036" author="ted.m" created="Mon, 20 Jul 2015 03:28:13 +0000"  >&lt;p&gt;This patch gets us much closer to the finish line.&lt;/p&gt;

&lt;p&gt;There are a bunch of review fixes, javadoc, Pom fixes, and unit tests.&lt;/p&gt;

&lt;p&gt;Please review.&lt;/p&gt;
</comment>
                            <comment id="14633537" author="lhofhansl" created="Mon, 20 Jul 2015 12:45:41 +0000"  >&lt;p&gt;super minor nit: it&apos;s bet to have an attached patch end in .txt (which I prefer) or .patch, so that browser can open it directly. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="14633547" author="lhofhansl" created="Mon, 20 Jul 2015 12:50:36 +0000"  >&lt;p&gt;From the example:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
List&amp;lt;Tuple2&amp;lt;&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[], List&amp;lt;Tuple3&amp;lt;&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[], &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[], &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[]&amp;gt;&amp;gt;&amp;gt;&amp;gt; results = javaRdd.collect();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Still does map byte[] -&amp;gt; Result, and so will be different from the HadoopRDD would do. (unless I am missing something)&lt;/p&gt;</comment>
                            <comment id="14633630" author="ted.m" created="Mon, 20 Jul 2015 13:59:58 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt; My bad.  That shouldn&apos;t be to hard to fix.  I will have that in the next patch.&lt;/p&gt;</comment>
                            <comment id="14633796" author="yuzhihong@gmail.com" created="Mon, 20 Jul 2015 16:37:01 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ted.m&quot; class=&quot;user-hover&quot; rel=&quot;ted.m&quot;&gt;Theodore michael Malaska&lt;/a&gt;:&lt;br/&gt;
The patch ending in .5 was not picked up by QA bot.&lt;br/&gt;
Name your patch with .patch or .txt extension.&lt;/p&gt;</comment>
                            <comment id="14633802" author="ted.m" created="Mon, 20 Jul 2015 16:38:23 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ted_yu&quot; class=&quot;user-hover&quot; rel=&quot;ted_yu&quot;&gt;Ted Yu&lt;/a&gt; thanks I will have a new patch hopefully tonight and I will name it with .patch at the end.&lt;/p&gt;</comment>
                            <comment id="14633977" author="ted.m" created="Mon, 20 Jul 2015 19:31:20 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt; So maybe I read your comment wrong.&lt;/p&gt;

&lt;p&gt;Patch 5 returns RDD&lt;span class=&quot;error&quot;&gt;&amp;#91;(ImmutableBytesWritable, Result)&amp;#93;&lt;/span&gt; from hbaseBulkGet&lt;/p&gt;

&lt;p&gt;What would you like it to return?  Maybe I read it wrong but doesn&apos;t TableInputFormat return (ImmutableBytesWritable, Result)?&lt;/p&gt;</comment>
                            <comment id="14633980" author="ted.m" created="Mon, 20 Jul 2015 19:32:55 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ted_yu&quot; class=&quot;user-hover&quot; rel=&quot;ted_yu&quot;&gt;Ted Yu&lt;/a&gt; I uploaded a new patch.  No code changes.  Just a new name.&lt;/p&gt;
</comment>
                            <comment id="14633981" author="lhofhansl" created="Mon, 20 Jul 2015 19:33:29 +0000"  >&lt;p&gt;No, that&apos;s right. Hmm. Why does HBaseRDD.collect() return something different? (I think that part confused me)&lt;/p&gt;</comment>
                            <comment id="14634141" author="hadoopqa" created="Mon, 20 Jul 2015 21:55:00 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12746162/HBASE-13992.5.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12746162/HBASE-13992.5.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 0f614a1c44e1887ca7177b66bb6208b6e69db7e1.&lt;br/&gt;
  ATTACHMENT ID: 12746162&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 9 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.7.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javac&lt;/font&gt;.  The applied patch generated 49 javac compiler warnings (more than the master&apos;s current 24 warnings).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 5 warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 1878 checkstyle errors (more than the master&apos;s current 1871 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 release audit&lt;/font&gt;.  The applied patch generated 1 release audit warnings (more than the master&apos;s current 0 warnings).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces the following lines longer than 100:&lt;br/&gt;
    +         xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 &lt;a href=&quot;http://maven.apache.org/xsd/maven-4.0.0.xsd&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://maven.apache.org/xsd/maven-4.0.0.xsd&lt;/a&gt;&quot;&amp;gt;&lt;br/&gt;
+            new SparkConf().setAppName(&quot;JavaHBaseStreamingBulkPutExample &quot; + tableName + &quot;:&quot; + port + &quot;:&quot; + tableName);&lt;br/&gt;
+                                        configBroadcast: Broadcast[SerializableWritable&lt;span class=&quot;error&quot;&gt;&amp;#91;Configuration&amp;#93;&lt;/span&gt;],&lt;br/&gt;
+  private def getConf(configBroadcast: Broadcast[SerializableWritable&lt;span class=&quot;error&quot;&gt;&amp;#91;Configuration&amp;#93;&lt;/span&gt;]): Configuration = {&lt;br/&gt;
+                                       configBroadcast: Broadcast[SerializableWritable&lt;span class=&quot;error&quot;&gt;&amp;#91;Configuration&amp;#93;&lt;/span&gt;],&lt;br/&gt;
+     * or security issues. For instance, an Array&lt;span class=&quot;error&quot;&gt;&amp;#91;AnyRef&amp;#93;&lt;/span&gt; can hold any type T, but may lose primitive&lt;br/&gt;
+    val sparkConf = new SparkConf().setAppName(&quot;HBaseBulkPutTimestampExample &quot; + tableName + &quot; &quot; + columnFamily)&lt;br/&gt;
+        (Bytes.toBytes(&quot;6&quot;), Array((Bytes.toBytes(columnFamily), Bytes.toBytes(&quot;1&quot;), Bytes.toBytes(&quot;1&quot;)))),&lt;br/&gt;
+        (Bytes.toBytes(&quot;7&quot;), Array((Bytes.toBytes(columnFamily), Bytes.toBytes(&quot;1&quot;), Bytes.toBytes(&quot;2&quot;)))),&lt;br/&gt;
+        (Bytes.toBytes(&quot;8&quot;), Array((Bytes.toBytes(columnFamily), Bytes.toBytes(&quot;1&quot;), Bytes.toBytes(&quot;3&quot;)))),&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;/p&gt;


&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14840//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14840//testReport/&lt;/a&gt;&lt;br/&gt;
Release audit warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14840//artifact/patchprocess/patchReleaseAuditWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14840//artifact/patchprocess/patchReleaseAuditWarnings.txt&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14840//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14840//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14840//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14840//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Javadoc warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14840//artifact/patchprocess/patchJavadocWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14840//artifact/patchprocess/patchJavadocWarnings.txt&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14840//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14840//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14634215" author="ted.m" created="Mon, 20 Jul 2015 22:51:30 +0000"  >&lt;p&gt;Fixed warnings, code styles, and one missing license.&lt;/p&gt;

&lt;p&gt;No real code changes&lt;/p&gt;

&lt;p&gt;Please Review&lt;/p&gt;</comment>
                            <comment id="14634388" author="hadoopqa" created="Tue, 21 Jul 2015 01:33:38 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12746201/HBASE-13992.6.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12746201/HBASE-13992.6.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 7ce318dd3be9df0ee1c025b4792ded0161aa2c9c.&lt;br/&gt;
  ATTACHMENT ID: 12746201&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 9 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.7.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javac&lt;/font&gt;.  The applied patch generated 44 javac compiler warnings (more than the master&apos;s current 24 warnings).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 2 warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces the following lines longer than 100:&lt;br/&gt;
    +     * or security issues. For instance, an Array&lt;span class=&quot;error&quot;&gt;&amp;#91;AnyRef&amp;#93;&lt;/span&gt; can hold any type T, but may lose primitive&lt;br/&gt;
+          putRecord._2.foreach((putValue) =&amp;gt; put.addColumn(putValue._1, putValue._2, timeStamp, putValue._3))&lt;br/&gt;
+     val sparkConf = new SparkConf().setAppName(&quot;HBaseBulkPutExample &quot; + tableName + &quot; &quot; + columnFamily)&lt;br/&gt;
+         (Bytes.toBytes(&quot;1&quot;), Array((Bytes.toBytes(columnFamily), Bytes.toBytes(&quot;1&quot;), Bytes.toBytes(&quot;1&quot;)))),&lt;br/&gt;
+         (Bytes.toBytes(&quot;2&quot;), Array((Bytes.toBytes(columnFamily), Bytes.toBytes(&quot;1&quot;), Bytes.toBytes(&quot;2&quot;)))),&lt;br/&gt;
+         (Bytes.toBytes(&quot;3&quot;), Array((Bytes.toBytes(columnFamily), Bytes.toBytes(&quot;1&quot;), Bytes.toBytes(&quot;3&quot;)))),&lt;br/&gt;
+         (Bytes.toBytes(&quot;4&quot;), Array((Bytes.toBytes(columnFamily), Bytes.toBytes(&quot;1&quot;), Bytes.toBytes(&quot;4&quot;)))),&lt;br/&gt;
+         (Bytes.toBytes(&quot;5&quot;), Array((Bytes.toBytes(columnFamily), Bytes.toBytes(&quot;1&quot;), Bytes.toBytes(&quot;5&quot;))))&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.mapreduce.TestImportTSVWithOperationAttributes&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestRowCounter&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 5 zombie test(s): 	at org.apache.phoenix.hbase.index.covered.example.EndToEndCoveredIndexingIT.testMultipleTimestampsInSingleDelete(EndToEndCoveredIndexingIT.java:428)&lt;br/&gt;
	at org.apache.phoenix.hbase.index.balancer.IndexLoadBalancerIT.testRandomAssignmentDuringIndexTableEnable(IndexLoadBalancerIT.java:265)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14845//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14845//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14845//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14845//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14845//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14845//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Javadoc warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14845//artifact/patchprocess/patchJavadocWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14845//artifact/patchprocess/patchJavadocWarnings.txt&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14845//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14845//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14634437" author="ted.m" created="Tue, 21 Jul 2015 02:37:38 +0000"  >&lt;p&gt;Just move warning and clean up&lt;/p&gt;</comment>
                            <comment id="14634491" author="hadoopqa" created="Tue, 21 Jul 2015 03:57:12 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12746246/HBASE-13992.7.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12746246/HBASE-13992.7.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 7ce318dd3be9df0ee1c025b4792ded0161aa2c9c.&lt;br/&gt;
  ATTACHMENT ID: 12746246&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 9 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.7.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javac&lt;/font&gt;.  The applied patch generated 26 javac compiler warnings (more than the master&apos;s current 24 warnings).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 2 warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;/p&gt;


&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14849//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14849//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14849//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14849//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14849//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14849//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Javadoc warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14849//artifact/patchprocess/patchJavadocWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14849//artifact/patchprocess/patchJavadocWarnings.txt&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14849//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14849//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14635591" author="apurtell" created="Tue, 21 Jul 2015 18:47:32 +0000"  >&lt;p&gt;Latest patch lgtm &lt;/p&gt;

&lt;p&gt;There is a javadoc nit:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;[INFO] Compiling 3 source files to /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build@2/hbase-spark/target/test-classes at 1437449685681
[WARNING] warning: Class org.apache.hadoop.mapred.MiniMRCluster not found - continuing with a stub.
[WARNING] one warning found
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Not quite sure what to make of that. We could bump the expected count if there&apos;s no solution.&lt;/p&gt;
</comment>
                            <comment id="14635598" author="mbertozzi" created="Tue, 21 Jul 2015 18:50:21 +0000"  >&lt;blockquote&gt;&lt;p&gt;Not quite sure what to make of that. We could bump the expected count if there&apos;s no solution.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;yeah I was looking at that too, there is no use of MiniMRCluster in the patch. so it is probably from the hadoop-common dependency or something like that.&lt;br/&gt;
I&apos;m +1 to bump the count unless &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=busbey&quot; class=&quot;user-hover&quot; rel=&quot;busbey&quot;&gt;Sean Busbey&lt;/a&gt; or someone else knows how to make that warn go away.&lt;/p&gt;</comment>
                            <comment id="14635616" author="busbey" created="Tue, 21 Jul 2015 18:59:48 +0000"  >&lt;p&gt;+1 let&apos;s get it in and fix the warning as a follow-on. Ted, would you mind filing a jira for the minimrcluster warning and assigning it to me?&lt;/p&gt;</comment>
                            <comment id="14635783" author="lhofhansl" created="Tue, 21 Jul 2015 20:43:47 +0000"  >&lt;p&gt;Sorry to harp the point... Is everybody OK that HBaseRDD.collect() returns List&amp;lt;Tuple2&amp;lt;byte[], List&amp;lt;Tuple3&amp;lt;byte[], byte[], byte[]&amp;gt;&amp;gt;&amp;gt;&amp;gt;?&lt;br/&gt;
Instead of perhaps List&amp;lt;Tuple2&amp;lt;byte[], Result&amp;gt;&amp;gt;?&lt;/p&gt;</comment>
                            <comment id="14635791" author="busbey" created="Tue, 21 Jul 2015 20:49:15 +0000"  >&lt;p&gt;I haven&apos;t done much day to day with Spark, so I don&apos;t know how inconvenient that difference is.&lt;/p&gt;

&lt;p&gt;This is only targeting master initially. How about we add fixing the return from HBaseRDD.collect to the list of gatekeeper issues for pulling it back into branch-1?&lt;/p&gt;</comment>
                            <comment id="14635813" author="ted.m" created="Tue, 21 Jul 2015 21:03:16 +0000"  >&lt;p&gt;Oh now I understand the part that Lars is referencing.  I was think of the hbase rdd functions which is like what Lars is saying but there is a distributed scan that is not the same.&lt;/p&gt;

&lt;p&gt;Can I do what sean said and fix it in anot her jira.&lt;/p&gt;

&lt;p&gt;I can make and submit the jira tomorrow.  &lt;/p&gt;</comment>
                            <comment id="14635823" author="apurtell" created="Tue, 21 Jul 2015 21:11:15 +0000"  >&lt;p&gt;I&apos;m ok with getting this in to master either with or without the adjustment for HBaseRDD.collect for further refinement before it makes its way into a release. Hoping we can get more exposure of this among Spark app developers for further feedback. I know Ted also has a bunch of incremental improvements in mind. &lt;/p&gt;</comment>
                            <comment id="14636943" author="ted.m" created="Wed, 22 Jul 2015 13:55:54 +0000"  >&lt;p&gt;So today from 3 to 6 I will have time to work on this.  So if this jira is closed by 3 I will make a new one for the HBaseRDD.collect other wise I will add an additional patch to this jira.&lt;/p&gt;

&lt;p&gt;But after that next patch please help me close this out.  I do have a number of jiras I would like to start to add additional functionality to this original patch&lt;/p&gt;</comment>
                            <comment id="14637444" author="ted.m" created="Wed, 22 Jul 2015 19:01:45 +0000"  >&lt;p&gt;Added the change lars found about HBaseRDD.collect&lt;/p&gt;

&lt;p&gt;Also added more tests around that change&lt;/p&gt;</comment>
                            <comment id="14637463" author="ted.m" created="Wed, 22 Jul 2015 19:09:56 +0000"  >&lt;p&gt;Hold on that last patch.  I have a couple more changes left.  give me 10 minutes&lt;/p&gt;</comment>
                            <comment id="14637470" author="ted.m" created="Wed, 22 Jul 2015 19:16:23 +0000"  >&lt;p&gt;Fixed the examples along with the HBaseRDD.collect change.&lt;/p&gt;

&lt;p&gt;Also fixed the line length issues I just added in patch 8&lt;/p&gt;</comment>
                            <comment id="14637720" author="hadoopqa" created="Wed, 22 Jul 2015 21:59:27 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12746620/HBASE-13992.9.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12746620/HBASE-13992.9.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 20739542fdca185eb857813bf269d6262c11b652.&lt;br/&gt;
  ATTACHMENT ID: 12746620&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 9 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.7.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javac&lt;/font&gt;.  The applied patch generated 26 javac compiler warnings (more than the master&apos;s current 24 warnings).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 2 warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;/p&gt;


&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 1 zombie test(s): 	at org.apache.camel.test.spring.CamelSpringTestSupport.doCreateApplicationContext(CamelSpringTestSupport.java:90)&lt;br/&gt;
	at org.apache.camel.test.spring.CamelSpringTestSupport.doPreSetup(CamelSpringTestSupport.java:80)&lt;br/&gt;
	at org.apache.camel.test.junit4.CamelTestSupport.setUp(CamelTestSupport.java:237)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14864//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14864//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14864//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14864//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14864//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14864//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Javadoc warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14864//artifact/patchprocess/patchJavadocWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14864//artifact/patchprocess/patchJavadocWarnings.txt&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14864//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14864//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14637730" author="hadoopqa" created="Wed, 22 Jul 2015 22:03:20 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12746611/HBASE-13992.8.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12746611/HBASE-13992.8.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 20739542fdca185eb857813bf269d6262c11b652.&lt;br/&gt;
  ATTACHMENT ID: 12746611&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 9 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.7.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javac&lt;/font&gt;.  The applied patch generated 26 javac compiler warnings (more than the master&apos;s current 24 warnings).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 2 warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 1871 checkstyle errors (more than the master&apos;s current 1870 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces the following lines longer than 100:&lt;br/&gt;
    +  private static class ScanConvertFunction implements Function&amp;lt;Tuple2&amp;lt;ImmutableBytesWritable, Result&amp;gt;, String&amp;gt; {&lt;br/&gt;
+  private void populateTableWithMockData(Configuration conf, TableName tableName) throws IOException {&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;/p&gt;


&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 5 zombie test(s): 	at org.apache.hadoop.hbase.client.TestAdmin1.testForceSplitMultiFamily(TestAdmin1.java:1021)&lt;br/&gt;
	at org.apache.hadoop.hbase.client.TestReplicaWithCluster.testChangeTable(TestReplicaWithCluster.java:224)&lt;br/&gt;
	at org.apache.hadoop.hbase.client.TestMetaWithReplicas.testShutdownHandling(TestMetaWithReplicas.java:141)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14863//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14863//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14863//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14863//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14863//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14863//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Javadoc warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14863//artifact/patchprocess/patchJavadocWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14863//artifact/patchprocess/patchJavadocWarnings.txt&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14863//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14863//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14637736" author="ted.m" created="Wed, 22 Jul 2015 22:08:28 +0000"  >&lt;p&gt;Ok patch 9 passed the build.  It has lar&apos;s hbaserdd.collect change.  Are we good for a commit?&lt;/p&gt;</comment>
                            <comment id="14637757" author="busbey" created="Wed, 22 Jul 2015 22:20:01 +0000"  >&lt;p&gt;I&apos;m good with v9. I can amend to update the number of allowed javadoc warnings as previously discussed.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt;?&lt;/p&gt;</comment>
                            <comment id="14638666" author="lhofhansl" created="Thu, 23 Jul 2015 11:36:52 +0000"  >&lt;p&gt;+1 on V9. Thanks for your patience &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ted.m&quot; class=&quot;user-hover&quot; rel=&quot;ted.m&quot;&gt;Theodore michael Malaska&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;One more idea for a future improvement: Make BulkGet return things in exactly the same format as distributed scan.&lt;br/&gt;
Would be cool, since then one could plug ways to get data (bulk get, scan with filter, InputputFormat, etc) and leave all the rest of the code identical. Can do later.&lt;/p&gt;</comment>
                            <comment id="14638800" author="ted.m" created="Thu, 23 Jul 2015 13:28:42 +0000"  >&lt;p&gt;Thanks lars.  Will do there will be a lot of jiras after this one.  Also if u have time next week or the week after I would love to brain storm about the road map.&lt;/p&gt;</comment>
                            <comment id="14639290" author="busbey" created="Thu, 23 Jul 2015 18:07:37 +0000"  >&lt;p&gt;I&apos;m trying to do a final build to make sure I&apos;ve got the patch applied correctly, and the new integration tests are failing.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
[INFO] --- scalatest-maven-plugin:1.0:test (integration-test) @ hbase-spark ---
WARNING: -c has been deprecated and will be reused &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; a different (but still very cool) purpose in ScalaTest 2.0. Please change all uses of -c to -P.
Discovery starting.
Discovery completed in 284 milliseconds.
Run starting. Expected test count is: 11
HBaseDStreamFunctionsSuite:
HBaseContextSuite:
HBaseRDDFunctionsSuite:
2015-07-23 10:50:56.702 java[97585:6403] Unable to load realm info from SCDynamicStore
*** RUN ABORTED ***
  java.util.concurrent.ExecutionException: java.io.IOException: Shutting down
  at java.util.concurrent.FutureTask.report(FutureTask.java:122)
  at java.util.concurrent.FutureTask.get(FutureTask.java:188)
  at org.scalatest.tools.ConcurrentDistributor.waitUntilDone(ConcurrentDistributor.scala:52)
  at org.scalatest.tools.Runner$.doRunRunRunDaDoRunRun(Runner.scala:2549)
  at org.scalatest.tools.Runner$$anonfun$runOptionallyWithPassFailReporter$2.apply(Runner.scala:1044)
  at org.scalatest.tools.Runner$$anonfun$runOptionallyWithPassFailReporter$2.apply(Runner.scala:1043)
  at org.scalatest.tools.Runner$.withClassLoaderAndDispatchReporter(Runner.scala:2722)
  at org.scalatest.tools.Runner$.runOptionallyWithPassFailReporter(Runner.scala:1043)
  at org.scalatest.tools.Runner$.main(Runner.scala:860)
  at org.scalatest.tools.Runner.main(Runner.scala)
  ...
  Cause: java.io.IOException: Shutting down
  at org.apache.hadoop.hbase.MiniHBaseCluster.init(MiniHBaseCluster.java:232)
  at org.apache.hadoop.hbase.MiniHBaseCluster.&amp;lt;init&amp;gt;(MiniHBaseCluster.java:94)
  at org.apache.hadoop.hbase.HBaseTestingUtility.startMiniHBaseCluster(HBaseTestingUtility.java:1040)
  at org.apache.hadoop.hbase.HBaseTestingUtility.startMiniHBaseCluster(HBaseTestingUtility.java:1006)
  at org.apache.hadoop.hbase.spark.HBaseDStreamFunctionsSuite.beforeAll(HBaseDStreamFunctionsSuite.scala:44)
  at org.scalatest.BeforeAndAfterAll$class.beforeAll(BeforeAndAfterAll.scala:187)
  at org.apache.hadoop.hbase.spark.HBaseDStreamFunctionsSuite.beforeAll(HBaseDStreamFunctionsSuite.scala:30)
  at org.scalatest.BeforeAndAfterAll$class.run(BeforeAndAfterAll.scala:253)
  at org.apache.hadoop.hbase.spark.HBaseDStreamFunctionsSuite.run(HBaseDStreamFunctionsSuite.scala:30)
  at org.scalatest.tools.SuiteRunner.run(SuiteRunner.scala:55)
  ...
  Cause: java.lang.RuntimeException: Failed construction of Master: class org.apache.hadoop.hbase.master.HMasterAddress already in use
  at org.apache.hadoop.hbase.util.JVMClusterUtil.createMasterThread(JVMClusterUtil.java:143)
  at org.apache.hadoop.hbase.LocalHBaseCluster.addMaster(LocalHBaseCluster.java:218)
  at org.apache.hadoop.hbase.LocalHBaseCluster.&amp;lt;init&amp;gt;(LocalHBaseCluster.java:154)
  at org.apache.hadoop.hbase.MiniHBaseCluster.init(MiniHBaseCluster.java:214)
  at org.apache.hadoop.hbase.MiniHBaseCluster.&amp;lt;init&amp;gt;(MiniHBaseCluster.java:94)
  at org.apache.hadoop.hbase.HBaseTestingUtility.startMiniHBaseCluster(HBaseTestingUtility.java:1040)
  at org.apache.hadoop.hbase.HBaseTestingUtility.startMiniHBaseCluster(HBaseTestingUtility.java:1006)
  at org.apache.hadoop.hbase.spark.HBaseDStreamFunctionsSuite.beforeAll(HBaseDStreamFunctionsSuite.scala:44)
  at org.scalatest.BeforeAndAfterAll$class.beforeAll(BeforeAndAfterAll.scala:187)
  at org.apache.hadoop.hbase.spark.HBaseDStreamFunctionsSuite.beforeAll(HBaseDStreamFunctionsSuite.scala:30)
  ...
  Cause: java.net.BindException: Port in use: 0.0.0.0:16010
  at org.apache.hadoop.hbase.http.HttpServer.openListeners(HttpServer.java:1013)
  at org.apache.hadoop.hbase.http.HttpServer.start(HttpServer.java:949)
  at org.apache.hadoop.hbase.http.InfoServer.start(InfoServer.java:91)
  at org.apache.hadoop.hbase.regionserver.HRegionServer.putUpWebUI(HRegionServer.java:1789)
  at org.apache.hadoop.hbase.regionserver.HRegionServer.&amp;lt;init&amp;gt;(HRegionServer.java:604)
  at org.apache.hadoop.hbase.master.HMaster.&amp;lt;init&amp;gt;(HMaster.java:363)
  at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
  at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
  at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
  at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
  ...
  Cause: java.net.BindException: Address already in use
  at sun.nio.ch.Net.bind0(Native Method)
  at sun.nio.ch.Net.bind(Net.java:444)
  at sun.nio.ch.Net.bind(Net.java:436)
  at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:214)
  at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:74)
  at org.mortbay.jetty.nio.SelectChannelConnector.open(SelectChannelConnector.java:216)
  at org.apache.hadoop.hbase.http.HttpServer.openListeners(HttpServer.java:1008)
  at org.apache.hadoop.hbase.http.HttpServer.start(HttpServer.java:949)
  at org.apache.hadoop.hbase.http.InfoServer.start(InfoServer.java:91)
  at org.apache.hadoop.hbase.regionserver.HRegionServer.putUpWebUI(HRegionServer.java:1789)
  ...
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I&apos;m running &lt;tt&gt;mvn -DskipTests install&lt;/tt&gt; at the top level and then &lt;tt&gt;mvn -Dtest=NoUnitTests clean verify&lt;/tt&gt; in the spark module.&lt;/p&gt;</comment>
                            <comment id="14639357" author="stevel@apache.org" created="Thu, 23 Jul 2015 18:52:13 +0000"  >&lt;p&gt;There&apos;s not much in the way of tests here, in particular, not much in the way of generation of failure conditions and validation of outcome&lt;/p&gt;

&lt;p&gt;Ideally, there&apos;d be one test to generate each failure condition: the exception handling including those which downgrade a failure to a log message...the test should verify that such actions are the correct response.&lt;/p&gt;

&lt;p&gt;At the very least, I&apos;d recommend&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;test against non-existent database&lt;/li&gt;
	&lt;li&gt;attempt to work with a table that doesn&apos;t exist&lt;/li&gt;
	&lt;li&gt;attempt to read a column that doesn&apos;t exist&lt;/li&gt;
&lt;/ol&gt;



&lt;p&gt;I&apos;d also make sure test teardown is robust, catching exceptions &amp;amp; downgrading to logs. That way, if something didn&apos;t get set up properly, the root cause of the failure isn&apos;t hidden by any exception generated in teardown.&lt;/p&gt;</comment>
                            <comment id="14639471" author="busbey" created="Thu, 23 Jul 2015 20:48:20 +0000"  >&lt;p&gt;I agree that test handling around failures will be necessary for this to be robust and usable for downstream folks.&lt;/p&gt;

&lt;p&gt;Steve, do you think we need those tests in place to land on master? Would you be fine with making those additions part of the gate for getting this backported to branch-1? The expectation is that backporting to branch-1 will mark when users end up interacting with this code. Similar to needing failure handling we&apos;ll definitely need to have user-facing docs before that happens, but those docs are part of the follow on work after this first jira.&lt;/p&gt;

&lt;p&gt;I think right now the expectation is that master won&apos;t have a release before the end of the year and these changes in branch-1 would correspond to 1.3. Given that we&apos;re trying to get 1.2 out now, that would give us at least  3-4 months for the follow on tickets.&lt;/p&gt;</comment>
                            <comment id="14639526" author="lhofhansl" created="Thu, 23 Jul 2015 21:22:32 +0000"  >&lt;p&gt;Would like to meet up. Out of the country on vacation until August 11th, though.&lt;/p&gt;

&lt;p&gt;Re: Tests. I think we can commit this, and file a sub jira to add tests. (On the other hand, why rush? If more tests are requested, why not add them now before commit?) I&apos;m fine either way.&lt;/p&gt;</comment>
                            <comment id="14639587" author="ted.m" created="Thu, 23 Jul 2015 21:59:23 +0000"  >&lt;p&gt;I can add in those tests today or tomorrow.  There if nothing special about the Spark integration it just gives a connection to the executors.  So in these cases we will just see a normal HBase exception like if you did without spark.&lt;/p&gt;

&lt;p&gt;test against non-existent database&lt;br/&gt;
attempt to work with a table that doesn&apos;t exist&lt;br/&gt;
attempt to read a column that doesn&apos;t exist&lt;/p&gt;</comment>
                            <comment id="14639697" author="stevel@apache.org" created="Fri, 24 Jul 2015 00:04:39 +0000"  >&lt;p&gt;Were a project I was a committer on, I&apos;d be mandating the failure tests, as they are the tests most likely to break things. As I&apos;m not an HBase committer, I will leave the opinions to others. At the very least, there needs to be a followup JIRA for the extra tests.&lt;/p&gt;

&lt;p&gt;As ted notes, they should just throw the standard exceptions.&lt;/p&gt;</comment>
                            <comment id="14639709" author="busbey" created="Fri, 24 Jul 2015 00:14:51 +0000"  >&lt;blockquote&gt;
&lt;p&gt;Were a project I was a committer on, I&apos;d be mandating the failure tests, as they are the tests most likely to break things. As I&apos;m not an HBase committer, I will leave the opinions to others. At the very least, there needs to be a followup JIRA for the extra tests.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;HBase works by consensus across our community, not just consensus from those who have been flagged as more established in the project.&lt;/p&gt;

&lt;p&gt;Ted, let me know if you run into any trouble getting these set up or if you want a hand off on adding them.&lt;/p&gt;</comment>
                            <comment id="14639734" author="ted.m" created="Fri, 24 Jul 2015 00:31:11 +0000"  >&lt;p&gt;Hey Steve, no worries.  You r right those tests are important and I will try to get a patch in the next couple of hours.&lt;/p&gt;

&lt;p&gt;But just note this is not a perfect patch.  After this there is about 4 to 6 more patches to make this really great.  Once this patch is in more people can help and we can multi thread our development effort.&lt;/p&gt;</comment>
                            <comment id="14639834" author="ted.m" created="Fri, 24 Jul 2015 02:41:36 +0000"  >&lt;p&gt;Fixed scala tests so that the HBase test cluster doesn&apos;t blow up.&lt;/p&gt;

&lt;p&gt;Also added in failure tests for bad column and bad table.&lt;/p&gt;</comment>
                            <comment id="14639984" author="hadoopqa" created="Fri, 24 Jul 2015 06:02:57 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12746933/HBASE-13992.10.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12746933/HBASE-13992.10.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit dad4cad30e5b0c69694ee90908ad8e74c592d821.&lt;br/&gt;
  ATTACHMENT ID: 12746933&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 9 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.7.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javac&lt;/font&gt;.  The applied patch generated 26 javac compiler warnings (more than the master&apos;s current 24 warnings).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 2 warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;/p&gt;


&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 3 zombie test(s): 	at org.apache.hadoop.hbase.security.visibility.TestVisibilityLabelsWithDeletes.testDeleteFamilyLatestTimeStampWithMulipleVersionsWithoutCellVisibilityInPuts(TestVisibilityLabelsWithDeletes.java:1511)&lt;br/&gt;
	at org.apache.hadoop.hbase.coprocessor.TestOpenTableInCoprocessor.testCoprocessorCanCreateConnectionToRemoteTableWithCustomPool(TestOpenTableInCoprocessor.java:145)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14876//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14876//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14876//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14876//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14876//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14876//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Javadoc warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14876//artifact/patchprocess/patchJavadocWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14876//artifact/patchprocess/patchJavadocWarnings.txt&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14876//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14876//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14641228" author="busbey" created="Fri, 24 Jul 2015 23:23:56 +0000"  >&lt;p&gt;v10 passes for me locally now.&lt;/p&gt;

&lt;p&gt;It looks like both of the failure cases are checking for SparkException. Could we check directly for TableNotFoundException and NoSuchColumnFamilyException?&lt;/p&gt;</comment>
                            <comment id="14641384" author="ted.m" created="Sat, 25 Jul 2015 04:11:18 +0000"  >&lt;p&gt;Fixed the failure tests to be more pointed.&lt;/p&gt;

&lt;p&gt;The bad column now checks for a null cell&lt;br/&gt;
The bad table looks for a HBase client exception and not a SparkException&lt;/p&gt;
</comment>
                            <comment id="14641429" author="hadoopqa" created="Sat, 25 Jul 2015 06:49:25 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12747159/HBASE-13992.11.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12747159/HBASE-13992.11.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit dad4cad30e5b0c69694ee90908ad8e74c592d821.&lt;br/&gt;
  ATTACHMENT ID: 12747159&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 9 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.7.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javac&lt;/font&gt;.  The applied patch generated 26 javac compiler warnings (more than the master&apos;s current 24 warnings).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 2 warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;/p&gt;


&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 5 zombie test(s): 	at org.apache.hadoop.hbase.snapshot.TestMobExportSnapshot.testExportFileSystemState(TestMobExportSnapshot.java:285)&lt;br/&gt;
	at org.apache.hadoop.hbase.snapshot.TestMobExportSnapshot.testExportFileSystemState(TestMobExportSnapshot.java:259)&lt;br/&gt;
	at org.apache.hadoop.hbase.snapshot.TestMobExportSnapshot.testExportWithTargetName(TestMobExportSnapshot.java:217)&lt;br/&gt;
	at org.apache.hadoop.hbase.snapshot.TestExportSnapshot.testExportFileSystemState(TestExportSnapshot.java:288)&lt;br/&gt;
	at org.apache.hadoop.hbase.snapshot.TestExportSnapshot.testExportFileSystemState(TestExportSnapshot.java:262)&lt;br/&gt;
	at org.apache.hadoop.hbase.snapshot.TestExportSnapshot.testEmptyExportFileSystemState(TestExportSnapshot.java:206)&lt;br/&gt;
	at org.apache.hadoop.hbase.snapshot.TestExportSnapshot.testExportFileSystemState(TestExportSnapshot.java:288)&lt;br/&gt;
	at org.apache.hadoop.hbase.snapshot.TestExportSnapshot.testExportFileSystemState(TestExportSnapshot.java:262)&lt;br/&gt;
	at org.apache.hadoop.hbase.snapshot.TestExportSnapshot.testSnapshotWithRefsExportFileSystemState(TestExportSnapshot.java:256)&lt;br/&gt;
	at org.apache.hadoop.hbase.snapshot.TestExportSnapshot.testSnapshotWithRefsExportFileSystemState(TestExportSnapshot.java:236)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14891//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14891//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14891//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14891//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14891//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14891//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Javadoc warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14891//artifact/patchprocess/patchJavadocWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14891//artifact/patchprocess/patchJavadocWarnings.txt&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14891//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14891//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14643163" author="busbey" created="Mon, 27 Jul 2015 18:25:59 +0000"  >&lt;p&gt;all those zombie tests look unrelated and they pass locally.&lt;/p&gt;

&lt;p&gt;How do the additions look, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stevel%40apache.org&quot; class=&quot;user-hover&quot; rel=&quot;stevel@apache.org&quot;&gt;Steve Loughran&lt;/a&gt;?&lt;/p&gt;</comment>
                            <comment id="14643213" author="ted.m" created="Mon, 27 Jul 2015 18:50:26 +0000"  >&lt;p&gt;Thanks Sean.  Let me know if there r any more changes needed for this patch.  &lt;/p&gt;

&lt;p&gt;Also if this meets the min required to go in it will allow me to multi thread.&lt;/p&gt;

&lt;p&gt;I would like to have three thirds of development:&lt;br/&gt;
1. More testing&lt;br/&gt;
2. Dataframes&lt;br/&gt;
3. Bulk load&lt;/p&gt;
</comment>
                            <comment id="14643322" author="stevel@apache.org" created="Mon, 27 Jul 2015 20:23:27 +0000"  >&lt;p&gt;New tests look good.&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;its probably best to put artifact versions in the root pom.xml, not the spark one, for one single place for dependencies ... this will matter if &amp;gt;1 scala module goes in.&lt;/li&gt;
&lt;/ol&gt;


&lt;ol&gt;
	&lt;li&gt;{{HBaseDStreamFunctionsSuite.scala }} has the wrong assumption.
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
{{&lt;span class=&quot;code-keyword&quot;&gt;assert&lt;/span&gt;(foo5.equals(&lt;span class=&quot;code-quote&quot;&gt;&quot;bar&quot;&lt;/span&gt;), foo4 + &lt;span class=&quot;code-quote&quot;&gt;&quot;!=bar&quot;&lt;/span&gt;)}}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;Scalatest lets you use assertResult instead, for an auto-generated message&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
assertResult(&lt;span class=&quot;code-quote&quot;&gt;&quot;bar&quot;&lt;/span&gt;) { foo5 } 
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And you can use &lt;tt&gt;==&lt;/tt&gt; for a slightly less informative error message, but one which still includes the values on either side&lt;/p&gt;

</comment>
                            <comment id="14643354" author="busbey" created="Mon, 27 Jul 2015 20:48:58 +0000"  >&lt;blockquote&gt;
&lt;p&gt;its probably best to put artifact versions in the root pom.xml, not the spark one, for one single place for dependencies ... this will matter if &amp;gt;1 scala module goes in.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;We&apos;ve had a couple of folks (myself, Andrew) request all spark and scala related bits be isolated to this module specifically because we don&apos;t have any other scala modules yet and we want to minimize the reach of those dependencies until we do. A top-level Scala version would require us to make a determination now about handling Scala version incompatibilities, e.g. with different module layouts.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;tt&gt;HBaseDStreamFunctionsSuite.scala&lt;/tt&gt; has the wrong assumption.&lt;br/&gt;
&lt;tt&gt;assert(foo5.equals(&quot;bar&quot;), foo4 + &quot;!=bar&quot;)&lt;/tt&gt;&lt;br/&gt;
Scalatest lets you use assertResult instead, for an auto-generated message&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;assertResult(&lt;span class=&quot;code-quote&quot;&gt;&quot;bar&quot;&lt;/span&gt;) { foo5 } &lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;And you can use == for a slightly less informative error message, but one which still includes the values on either side&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;sounds like a reasonable fixup.&lt;/p&gt;</comment>
                            <comment id="14643365" author="ted.m" created="Mon, 27 Jul 2015 20:52:48 +0000"  >&lt;p&gt;Ok I will make the two code changes and get a patch to use guys soon.&lt;/p&gt;

&lt;p&gt;Thanks for the review&lt;/p&gt;</comment>
                            <comment id="14643415" author="ted.m" created="Mon, 27 Jul 2015 21:16:58 +0000"  >&lt;p&gt;Fixed assert as per the review of &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=steve_l&quot; class=&quot;user-hover&quot; rel=&quot;steve_l&quot;&gt;Steve Loughran&lt;/a&gt; &lt;/p&gt;
</comment>
                            <comment id="14643715" author="hadoopqa" created="Tue, 28 Jul 2015 01:09:35 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12747422/HBASE-13992.12.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12747422/HBASE-13992.12.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 1566ec5fdc751897b2e931b2b0920c6d503c85ce.&lt;br/&gt;
  ATTACHMENT ID: 12747422&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 9 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.7.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javac&lt;/font&gt;.  The applied patch generated 26 javac compiler warnings (more than the master&apos;s current 24 warnings).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 2 warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;/p&gt;


&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 5 zombie test(s): 	at org.apache.hadoop.hbase.mapreduce.TestTableInputFormatScanBase.testScan(TestTableInputFormatScanBase.java:244)&lt;br/&gt;
	at org.apache.hadoop.hbase.mapreduce.TestTableInputFormatScan2.testScanYYYToEmpty(TestTableInputFormatScan2.java:96)&lt;br/&gt;
	at org.apache.hadoop.hbase.mapreduce.TestCellCounter.testCellCounterStartTimeRange(TestCellCounter.java:137)&lt;br/&gt;
	at org.apache.hadoop.hbase.mapreduce.TestImportExport.testWithFilter(TestImportExport.java:447)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14901//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14901//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14901//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14901//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14901//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14901//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Javadoc warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14901//artifact/patchprocess/patchJavadocWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14901//artifact/patchprocess/patchJavadocWarnings.txt&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14901//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14901//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14644461" author="busbey" created="Tue, 28 Jul 2015 14:43:23 +0000"  >&lt;p&gt;Looks good to me. As previously agreed I&apos;ll amend to up the javadoc warn count.&lt;/p&gt;

&lt;p&gt;Things fine by you &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stevel%40apache.org&quot; class=&quot;user-hover&quot; rel=&quot;stevel@apache.org&quot;&gt;Steve Loughran&lt;/a&gt;?&lt;/p&gt;</comment>
                            <comment id="14644580" author="stevel@apache.org" created="Tue, 28 Jul 2015 16:04:14 +0000"  >&lt;p&gt;LGTM : I only worry about testability, and that&apos;s a good start. More tests will no doubt come over time ... something in Bigtop would be good for the integration&lt;/p&gt;</comment>
                            <comment id="14644642" author="busbey" created="Tue, 28 Jul 2015 16:58:18 +0000"  >&lt;p&gt;pushed to master. Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ted.m&quot; class=&quot;user-hover&quot; rel=&quot;ted.m&quot;&gt;Theodore michael Malaska&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;I&apos;ve included a brief release note. If folks think there&apos;s something it needs added let me know.&lt;/p&gt;</comment>
                            <comment id="14644907" author="apurtell" created="Tue, 28 Jul 2015 19:37:51 +0000"  >&lt;p&gt;I agree with &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=steve_l&quot; class=&quot;user-hover&quot; rel=&quot;steve_l&quot;&gt;Steve Loughran&lt;/a&gt; we should have more tests. Let&apos;s follow up on another issue before this gets into a release. &lt;/p&gt;</comment>
                            <comment id="14644910" author="apurtell" created="Tue, 28 Jul 2015 19:39:11 +0000"  >&lt;p&gt;Thanks so much for the contribution Ted M, this is a great start! &lt;/p&gt;</comment>
                            <comment id="14644914" author="busbey" created="Tue, 28 Jul 2015 19:42:23 +0000"  >&lt;p&gt;If folks have a target, e.g. some coverage %, I&apos;m happy to add another jira to the list of gates for &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14160&quot; title=&quot;backport hbase-spark module to branch-1&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14160&quot;&gt;HBASE-14160&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="14644975" author="apurtell" created="Tue, 28 Jul 2015 20:10:47 +0000"  >&lt;p&gt;Not opposed to a coverage target but I don&apos;t think we need one, at least not outside of a larger effort to up coverage everywhere. I think Steve&apos;s suggestion to have tests covering the likely runtime failure scenarios would be a good start.&lt;/p&gt;</comment>
                            <comment id="14645127" author="hudson" created="Tue, 28 Jul 2015 22:21:39 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-TRUNK #6683 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/6683/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/6683/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13992&quot; title=&quot;Integrate SparkOnHBase into HBase&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13992&quot;&gt;&lt;del&gt;HBASE-13992&lt;/del&gt;&lt;/a&gt; Integrate SparkOnHBase into HBase (busbey: rev 30f7d127c3974cff9e3058e13d7c50805ee4482f)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-spark/src/test/scala/org/apache/hadoop/hbase/spark/HBaseContextSuite.scala&lt;/li&gt;
	&lt;li&gt;hbase-spark/src/main/java/org/apache/hadoop/hbase/spark/example/hbasecontext/JavaHBaseBulkGetExample.java&lt;/li&gt;
	&lt;li&gt;hbase-spark/src/main/scala/org/apache/hadoop/hbase/spark/example/hbasecontext/HBaseDistributedScanExample.scala&lt;/li&gt;
	&lt;li&gt;hbase-spark/src/main/scala/org/apache/hadoop/hbase/spark/HBaseContext.scala&lt;/li&gt;
	&lt;li&gt;hbase-spark/src/main/scala/org/apache/hadoop/hbase/spark/example/rdd/HBaseMapPartitionExample.scala&lt;/li&gt;
	&lt;li&gt;hbase-spark/src/main/scala/org/apache/hadoop/hbase/spark/example/hbasecontext/HBaseStreamingBulkPutExample.scala&lt;/li&gt;
	&lt;li&gt;hbase-spark/src/main/scala/org/apache/hadoop/hbase/spark/example/hbasecontext/HBaseBulkPutExample.scala&lt;/li&gt;
	&lt;li&gt;hbase-spark/src/main/scala/org/apache/hadoop/hbase/spark/JavaHBaseContext.scala&lt;/li&gt;
	&lt;li&gt;dev-support/test-patch.properties&lt;/li&gt;
	&lt;li&gt;hbase-spark/src/test/scala/org/apache/hadoop/hbase/spark/HBaseRDDFunctionsSuite.scala&lt;/li&gt;
	&lt;li&gt;hbase-spark/src/main/scala/org/apache/hadoop/hbase/spark/example/hbasecontext/HBaseBulkGetExample.scala&lt;/li&gt;
	&lt;li&gt;hbase-spark/src/main/scala/org/apache/hadoop/hbase/spark/HBaseRDDFunctions.scala&lt;/li&gt;
	&lt;li&gt;hbase-spark/src/main/scala/org/apache/hadoop/hbase/spark/example/hbasecontext/HBaseBulkDeleteExample.scala&lt;/li&gt;
	&lt;li&gt;hbase-spark/src/main/scala/org/apache/hadoop/hbase/spark/example/rdd/HBaseBulkGetExample.scala&lt;/li&gt;
	&lt;li&gt;hbase-spark/src/main/scala/org/apache/hadoop/hbase/spark/HBaseDStreamFunctions.scala&lt;/li&gt;
	&lt;li&gt;hbase-spark/src/main/java/org/apache/hadoop/hbase/spark/example/hbasecontext/JavaHBaseBulkDeleteExample.java&lt;/li&gt;
	&lt;li&gt;hbase-spark/src/main/scala/org/apache/hadoop/hbase/spark/example/rdd/HBaseForeachPartitionExample.scala&lt;/li&gt;
	&lt;li&gt;hbase-spark/src/main/java/org/apache/hadoop/hbase/spark/example/hbasecontext/JavaHBaseDistributedScan.java&lt;/li&gt;
	&lt;li&gt;hbase-spark/src/main/scala/org/apache/hadoop/hbase/spark/example/hbasecontext/HBaseBulkPutTimestampExample.scala&lt;/li&gt;
	&lt;li&gt;hbase-spark/src/main/java/org/apache/hadoop/hbase/spark/example/hbasecontext/JavaHBaseBulkPutExample.java&lt;/li&gt;
	&lt;li&gt;hbase-spark/src/main/scala/org/apache/hadoop/hbase/spark/example/rdd/HBaseBulkPutExample.scala&lt;/li&gt;
	&lt;li&gt;hbase-spark/src/test/java/org/apache/hadoop/hbase/spark/JavaHBaseContextSuite.java&lt;/li&gt;
	&lt;li&gt;hbase-spark/src/test/scala/org/apache/hadoop/hbase/spark/HBaseDStreamFunctionsSuite.scala&lt;/li&gt;
	&lt;li&gt;hbase-spark/src/main/java/org/apache/hadoop/hbase/spark/example/hbasecontext/JavaHBaseMapGetPutExample.java&lt;/li&gt;
	&lt;li&gt;hbase-spark/src/main/scala/org/apache/hadoop/hbase/spark/example/hbasecontext/HBaseBulkPutExampleFromFile.scala&lt;/li&gt;
	&lt;li&gt;hbase-spark/pom.xml&lt;/li&gt;
	&lt;li&gt;pom.xml&lt;/li&gt;
	&lt;li&gt;hbase-spark/src/main/java/org/apache/hadoop/hbase/spark/example/hbasecontext/JavaHBaseStreamingBulkPutExample.java&lt;/li&gt;
	&lt;li&gt;hbase-spark/src/main/scala/org/apache/hadoop/hbase/spark/example/rdd/HBaseBulkDeleteExample.scala&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14648002" author="lhofhansl" created="Thu, 30 Jul 2015 17:33:31 +0000"  >&lt;p&gt;While I am not opposed to coverage targets, we do not have those for anything else. I&apos;d like to leave this to the good judgement of the committer/contributor.&lt;/p&gt;</comment>
                            <comment id="14648186" author="stevel@apache.org" created="Thu, 30 Jul 2015 19:44:05 +0000"  >&lt;p&gt;Coverage is an odd metric anyway, because as well as code there&apos;s state coverage : ipv6, windows, timezone=GMT0, locale=turkish, which can break things even in code which nominally had 100%. Having tests which generate failure conditions (done here) with test setups that explore the configuration space are about the best you can get.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310000">
                    <name>Duplicate</name>
                                            <outwardlinks description="duplicates">
                                        <issuelink>
            <issuekey id="12726190">HBASE-11482</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12726777">SPARK-2447</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12737222">HBASE-11843</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10001">
                    <name>dependent</name>
                                                                <inwardlinks description="is depended upon by">
                                        <issuelink>
            <issuekey id="12849672">HBASE-14160</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12848425">HBASE-14149</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12848428">HBASE-14150</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12849669">HBASE-14158</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12849670">HBASE-14159</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12746933" name="HBASE-13992.10.patch" size="179923" author="ted.m" created="Fri, 24 Jul 2015 02:41:36 +0000"/>
                            <attachment id="12747159" name="HBASE-13992.11.patch" size="180417" author="ted.m" created="Sat, 25 Jul 2015 04:11:18 +0000"/>
                            <attachment id="12747422" name="HBASE-13992.12.patch" size="179987" author="ted.m" created="Mon, 27 Jul 2015 21:16:58 +0000"/>
                            <attachment id="12746162" name="HBASE-13992.5.patch" size="171346" author="ted.m" created="Mon, 20 Jul 2015 19:32:09 +0000"/>
                            <attachment id="12746201" name="HBASE-13992.6.patch" size="172380" author="ted.m" created="Mon, 20 Jul 2015 22:51:30 +0000"/>
                            <attachment id="12746246" name="HBASE-13992.7.patch" size="172985" author="ted.m" created="Tue, 21 Jul 2015 02:37:38 +0000"/>
                            <attachment id="12746611" name="HBASE-13992.8.patch" size="176107" author="ted.m" created="Wed, 22 Jul 2015 19:01:45 +0000"/>
                            <attachment id="12746620" name="HBASE-13992.9.patch" size="176575" author="ted.m" created="Wed, 22 Jul 2015 19:16:23 +0000"/>
                            <attachment id="12745137" name="HBASE-13992.patch" size="144578" author="ted.m" created="Mon, 13 Jul 2015 22:28:37 +0000"/>
                            <attachment id="12745381" name="HBASE-13992.patch.3" size="133243" author="ted.m" created="Wed, 15 Jul 2015 03:37:07 +0000"/>
                            <attachment id="12745663" name="HBASE-13992.patch.4" size="140585" author="ted.m" created="Thu, 16 Jul 2015 18:27:27 +0000"/>
                            <attachment id="12746041" name="HBASE-13992.patch.5" size="171346" author="ted.m" created="Mon, 20 Jul 2015 03:28:13 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>12.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 29 Jun 2015 19:41:18 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 18 weeks, 1 day ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2gn13:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>This release includes initial support for running Spark against HBase with a richer feature set than was previously possible with MapReduce bindings:&lt;br/&gt;
&lt;br/&gt;
* Support for Spark and Spark Streaming against Spark 1.3&lt;br/&gt;
* RDD/DStream formation from scan operations&lt;br/&gt;
* convenience methods for interacting with HBase from an HBase backed RDD / DStream instance&lt;br/&gt;
* examples in both the Spark Java API and Spark Scala API&lt;br/&gt;
* support for running against a secure HBase cluster</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>