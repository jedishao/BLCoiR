<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Thu Dec 01 21:41:19 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-14054/HBASE-14054.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-14054] Acknowledged writes may get lost if regionserver clock is set backwards</title>
                <link>https://issues.apache.org/jira/browse/HBASE-14054</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;We experience a small amount of lost acknowledged writes in production on July 1st (~700 identified so far).&lt;/p&gt;

&lt;p&gt;What happened was that we had NTP turned off since June 29th to prevent issues due to the leap second on June 30th. NTP was turned back on July 1st.&lt;/p&gt;

&lt;p&gt;The next day, we noticed we were missing writes to a few of our higher throughput aggregation tables.&lt;/p&gt;

&lt;p&gt;We found that this is caused by HBase taking the current time using System.currentTimeMillis, which may be set backwards by NTP, and using this without any checks to populate the timestamp of rows for which the client didn&apos;t supply a timestamp.&lt;/p&gt;

&lt;p&gt;Our application uses a read-modify-write pattern using get+checkAndPut to perform aggregation as follows:&lt;/p&gt;

&lt;p&gt;1. read version 1&lt;br/&gt;
2. mutate&lt;br/&gt;
3. write version 2&lt;br/&gt;
4. read version 2&lt;br/&gt;
5. mutate&lt;br/&gt;
6. write version 3&lt;/p&gt;

&lt;p&gt;The application retries the full read-modify-write if the checkAndPut fails.&lt;/p&gt;

&lt;p&gt;What must have happened on July 1st, after we started NTP back up, was this (timestamps added):&lt;/p&gt;

&lt;p&gt;1. read version 1 (timestamp 10)&lt;br/&gt;
2. mutate&lt;br/&gt;
3. write version 2 (HBase-assigned timestamp 11)&lt;br/&gt;
4. read version 2 (timestamp 11)&lt;br/&gt;
5. mutate&lt;br/&gt;
6. write version 3 (HBase-assigned timestamp 10)&lt;/p&gt;

&lt;p&gt;Hence, the last write was eclipsed by the first write, and hence, an acknowledged write was lost.&lt;/p&gt;

&lt;p&gt;While this seems to match documented behavior (paraphrasing: &quot;if timestamp is not specified HBase will assign a timestamp using System.currentTimeMillis&quot; &quot;the row with the highest timestamp will be returned by get&quot;), I think it is very unintuitive and needs at least a big warning in the documentation, along the lines of &quot;Acknowledged writes may not be visible unless the timestamp is explicitly specified and equal to or larger than the highest timestamp for that row&quot;.&lt;/p&gt;

&lt;p&gt;I would also like to use this ticket to start a discussion on if we can make the behavior better:&lt;/p&gt;

&lt;p&gt;Could HBase assign a timestamp of &lt;tt&gt;max(max timestamp for the row, System.currentTimeMillis())&lt;/tt&gt; in the checkAndPut write path, instead of blindly taking &lt;tt&gt;System.currentTimeMillis()&lt;/tt&gt;, similar to what has been done in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-12449&quot; title=&quot;Use the max timestamp of current or old cell&amp;#39;s timestamp in HRegion.append()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-12449&quot;&gt;&lt;del&gt;HBASE-12449&lt;/del&gt;&lt;/a&gt; for increment and append?&lt;/p&gt;

&lt;p&gt;Thoughts?&lt;/p&gt;</description>
                <environment>&lt;p&gt;Linux&lt;/p&gt;</environment>
        <key id="12844013">HBASE-14054</key>
            <summary>Acknowledged writes may get lost if regionserver clock is set backwards</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="enis">Enis Soztutar</assignee>
                                    <reporter username="Tobi">Tobi Vollebregt</reporter>
                        <labels>
                    </labels>
                <created>Fri, 10 Jul 2015 00:09:21 +0000</created>
                <updated>Wed, 23 Sep 2015 00:10:28 +0000</updated>
                            <resolved>Thu, 13 Aug 2015 09:06:40 +0000</resolved>
                                    <version>0.98.6</version>
                                    <fixVersion>2.0.0</fixVersion>
                    <fixVersion>0.98.14</fixVersion>
                    <fixVersion>1.0.2</fixVersion>
                    <fixVersion>1.2.0</fixVersion>
                    <fixVersion>1.1.2</fixVersion>
                    <fixVersion>1.3.0</fixVersion>
                                    <component>regionserver</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>14</watches>
                                                                <comments>
                            <comment id="14621563" author="enis" created="Fri, 10 Jul 2015 01:20:12 +0000"  >&lt;blockquote&gt;&lt;p&gt;Could HBase assign a timestamp of max(max timestamp for the row, System.currentTimeMillis()) in the checkAndPut write path, instead of blindly taking System.currentTimeMillis(), similar to what has been done in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-12449&quot; title=&quot;Use the max timestamp of current or old cell&amp;#39;s timestamp in HRegion.append()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-12449&quot;&gt;&lt;del&gt;HBASE-12449&lt;/del&gt;&lt;/a&gt; for increment and append?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;It makes sense. If you are doing checkAndPut(), the write should ensure that the ts is &amp;gt; than the ts that is read. Increment and Append are very similar to checkAndPut() in semantics. I think we can do this easily as a short term solution. &lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;I would also like to use this ticket to start a discussion on if we can make the behavior better&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yes, we can! &lt;br/&gt;
Logical hybrid clocks should be used for timestamping in HBase from the server side, ensuring also that both physical and logical components does not go back in time even across leap seconds, restarts and region moves. This has already been discussed to some extend, but we need to do the work. &lt;/p&gt;</comment>
                            <comment id="14622681" author="stack" created="Fri, 10 Jul 2015 18:08:28 +0000"  >&lt;p&gt;bq ...does not go back in time even across leap seconds, restarts and region moves&lt;/p&gt;

&lt;p&gt;If timestamp is to be put up on a new basis, we should do &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8927&quot; title=&quot;Use nano time instead of mili time everywhere&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-8927&quot;&gt;HBASE-8927&lt;/a&gt;, the micro/nano revamp, at same time.&lt;/p&gt;</comment>
                            <comment id="14623531" author="tobi" created="Sat, 11 Jul 2015 19:19:08 +0000"  >&lt;p&gt;Thinking about it more I think the most intuitive behavior would be if for all writes, HBase takes the &lt;tt&gt;max(last timestamp written for the row, System.currentTimeMillis())&lt;/tt&gt; unless the timestamp is explicitly specified by the client. That seems the only way to guarantee monotonic writes for regular Puts too, not just checkAndPut, i.e. if you&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;put X to row A&lt;/li&gt;
	&lt;li&gt;put Y to row A&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I expect that it is guaranteed that the write of Y &quot;wins&quot;.&lt;/p&gt;

&lt;p&gt;Currently, writes are only monotonic if the clock on the region server is monotonic. If it isn&apos;t, then even if these two writes are done sequentially from the same thread, there&apos;s a small chance that the first write wins, which seems counterintuitive.&lt;/p&gt;

&lt;p&gt;I&apos;m intentionally saying &lt;tt&gt;max(last timestamp written for the row, ...)&lt;/tt&gt;, because I imagine that checking &lt;b&gt;all&lt;/b&gt; timestamps for a row may be prohibitively expensive. And checking the last one written is sufficient to guarantee monotonic writes if the client is consistently specifies or does not specify timestamps.&lt;/p&gt;

&lt;p&gt;If the client isn&apos;t consistent you there may still be invisible writes:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;put X to row A at timestamp far in the future, specified by client&lt;/li&gt;
	&lt;li&gt;put Y to row A at current time, specified by client&lt;/li&gt;
	&lt;li&gt;put Z to row A at current time assigned by HBase&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Write Y and Z will be eclipsed by write X. I think that is acceptable given the API and the warnings in the documentation about assigning timestamps manually.&lt;/p&gt;</comment>
                            <comment id="14623547" author="stack" created="Sat, 11 Jul 2015 19:49:00 +0000"  >&lt;p&gt;Just to add to the list, what to do if currentTimeMillis is way in advance of actual clock time &amp;#8211; what if it is a day ahead when we come up?&lt;/p&gt;</comment>
                            <comment id="14623553" author="tobi" created="Sat, 11 Jul 2015 19:55:10 +0000"  >&lt;p&gt;By always taking the max HBase could still guarantee monotonic writes, even if later the clock gets set backward to the physical time, because it breaks ties when timestamps are equal by taking the last written row. (Right?)&lt;/p&gt;

&lt;p&gt;And even if I&apos;m wrong about the tie breaking, we could always take &lt;tt&gt;max(last timestamp written + 1, System.currentTimeMillis())&lt;/tt&gt;.&lt;/p&gt;

&lt;p&gt;I suppose it would still mess up TTL calculations and things like that, but that will be messed up either way if time is a day off. At least if HBase takes the max time when the client doesn&apos;t specify a timestamp, it won&apos;t appear to lose a day worth of writes when that clock that is a day ahead finally gets set back to the correct time.&lt;/p&gt;</comment>
                            <comment id="14623586" author="davelatham" created="Sat, 11 Jul 2015 21:46:59 +0000"  >&lt;p&gt;Even taking the most recent timestamp for each row would be expensive.  I could imagine each region or region server using an artificial internal clock that never goes backward.  It compares to the system clock and if it sees it jump backward, then it freezes or slows the artificial clock time until the system time catches up to it.  If each region has a clock attached to it, then the clock could persist between region moves.  Perhaps this is what Enis meant by a logical hybrid clock?  Enis, can you point to the previous discussions?  &lt;/p&gt;</comment>
                            <comment id="14625392" author="apurtell" created="Mon, 13 Jul 2015 21:33:12 +0000"  >&lt;p&gt;I also read the HLC paper with interest and agree it is one technique that could be explored for avoiding some time skew issues. One nice thing about it is its timestamps can stand in for the system clock without any changes like &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8927&quot; title=&quot;Use nano time instead of mili time everywhere&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-8927&quot;&gt;HBASE-8927&lt;/a&gt; (although that&apos;s not an argument not to do that, perhaps before or after, anyway, they are orthogonal).&lt;/p&gt;

&lt;p&gt;Here is the HLC paper: &lt;a href=&quot;http://www.cse.buffalo.edu/tech-reports/2014-04.pdf&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.cse.buffalo.edu/tech-reports/2014-04.pdf&lt;/a&gt; and a companion blog post: &lt;a href=&quot;http://muratbuffalo.blogspot.com/2014/07/hybrid-logical-clocks.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://muratbuffalo.blogspot.com/2014/07/hybrid-logical-clocks.html&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="14625699" author="enis" created="Tue, 14 Jul 2015 02:18:43 +0000"  >&lt;p&gt;Thanks Andrew for the paper link. I was working on a design doc for HLC for HBase proposal. I&apos;ll put it up shortly. &lt;/p&gt;</comment>
                            <comment id="14625706" author="enis" created="Tue, 14 Jul 2015 02:26:01 +0000"  >&lt;p&gt;See &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14070&quot; title=&quot;Hybrid Logical Clocks for HBase&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14070&quot;&gt;HBASE-14070&lt;/a&gt;. &lt;/p&gt;</comment>
                            <comment id="14693776" author="enis" created="Wed, 12 Aug 2015 16:34:18 +0000"  >&lt;p&gt;While work for &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14070&quot; title=&quot;Hybrid Logical Clocks for HBase&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14070&quot;&gt;HBASE-14070&lt;/a&gt; is going on, this is still important to fix. Even with 14070, existing tables will be affected by this. &lt;/p&gt;

&lt;p&gt;Attached v1 patch should do the trick. In checkAndMutate() we set the timestamps after we obtain the row lock and do the Get. &lt;/p&gt;</comment>
                            <comment id="14693862" author="apurtell" created="Wed, 12 Aug 2015 17:13:25 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-comment&quot;&gt;// We have acquired the row lock already. If the system clock is NOT monotonically
&lt;/span&gt;&lt;span class=&quot;code-comment&quot;&gt;// non-decreasing (see HBASE-14070) we should make sure that the mutation has a
&lt;/span&gt;&lt;span class=&quot;code-comment&quot;&gt;// larger timestamp than what was observed via Get. doBatchMutate already does &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;, but
&lt;/span&gt;&lt;span class=&quot;code-comment&quot;&gt;// there is no way to pass the cellTs. See HBASE-14054.&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Agree we can use a workaround for checkAndX ahead of &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14070&quot; title=&quot;Hybrid Logical Clocks for HBase&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14070&quot;&gt;HBASE-14070&lt;/a&gt;.  Nice tests.&lt;/p&gt;

&lt;p&gt;+1&lt;/p&gt;

</comment>
                            <comment id="14694051" author="hadoopqa" created="Wed, 12 Aug 2015 19:31:02 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12750112/hbase-14054_v1.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12750112/hbase-14054_v1.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 72a48a1333f6c01c46cd244439198ccce3f941ac.&lt;br/&gt;
  ATTACHMENT ID: 12750112&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.7.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 site&lt;/font&gt;.  The patch appears to cause mvn post-site goal to fail.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.util.TestProcessBasedCluster&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestImportExport&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15070//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15070//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15070//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15070//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15070//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15070//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15070//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15070//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14694921" author="enis" created="Thu, 13 Aug 2015 09:06:40 +0000"  >&lt;p&gt;I&apos;ve committed this to 0.98+. Thanks Tobi for reporting, and Andrew for review. &lt;/p&gt;</comment>
                            <comment id="14694922" author="enis" created="Thu, 13 Aug 2015 09:07:51 +0000"  >&lt;p&gt;BTW, test failures are not related. TestImportExport takes ~5 min on my laptop, something to look at. &lt;/p&gt;</comment>
                            <comment id="14695008" author="hudson" created="Thu, 13 Aug 2015 10:04:39 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-1.3-IT #88 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-1.3-IT/88/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-1.3-IT/88/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14054&quot; title=&quot;Acknowledged writes may get lost if regionserver clock is set backwards&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14054&quot;&gt;&lt;del&gt;HBASE-14054&lt;/del&gt;&lt;/a&gt; Acknowledged writes may get lost if regionserver clock is set backwards (enis: rev a0086e97ad1966c2c59fde832ed60dbab9ca9e43)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegion.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14695024" author="hudson" created="Thu, 13 Aug 2015 10:19:24 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-1.0 #1014 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-1.0/1014/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-1.0/1014/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14054&quot; title=&quot;Acknowledged writes may get lost if regionserver clock is set backwards&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14054&quot;&gt;&lt;del&gt;HBASE-14054&lt;/del&gt;&lt;/a&gt; Acknowledged writes may get lost if regionserver clock is set backwards (enis: rev 50a557193b9a9634891d19174c27e1cd34ff9e6c)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegion.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14695046" author="hudson" created="Thu, 13 Aug 2015 10:43:31 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-TRUNK #6724 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/6724/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/6724/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14054&quot; title=&quot;Acknowledged writes may get lost if regionserver clock is set backwards&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14054&quot;&gt;&lt;del&gt;HBASE-14054&lt;/del&gt;&lt;/a&gt; Acknowledged writes may get lost if regionserver clock is set backwards (enis: rev d1262331eb0481ecc128ce78590ca4ff992f94e7)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegion.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14695095" author="hudson" created="Thu, 13 Aug 2015 11:46:05 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-0.98 #1080 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.98/1080/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.98/1080/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14054&quot; title=&quot;Acknowledged writes may get lost if regionserver clock is set backwards&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14054&quot;&gt;&lt;del&gt;HBASE-14054&lt;/del&gt;&lt;/a&gt; Acknowledged writes may get lost if regionserver clock is set backwards (enis: rev a3914d66c3b9e84f624a1c8718ccd69fb27fe311)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegion.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14695100" author="hudson" created="Thu, 13 Aug 2015 11:50:15 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-1.1 #612 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-1.1/612/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-1.1/612/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14054&quot; title=&quot;Acknowledged writes may get lost if regionserver clock is set backwards&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14054&quot;&gt;&lt;del&gt;HBASE-14054&lt;/del&gt;&lt;/a&gt; Acknowledged writes may get lost if regionserver clock is set backwards (enis: rev fb30bf68bf31c73117b278aa512fad0eb4c5c79e)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegion.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14695130" author="hudson" created="Thu, 13 Aug 2015 12:07:47 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-1.2 #107 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-1.2/107/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-1.2/107/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14054&quot; title=&quot;Acknowledged writes may get lost if regionserver clock is set backwards&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14054&quot;&gt;&lt;del&gt;HBASE-14054&lt;/del&gt;&lt;/a&gt; Acknowledged writes may get lost if regionserver clock is set backwards (enis: rev 59c731b24549e846e1905c43bd3e5adf121638cf)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegion.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14695226" author="hudson" created="Thu, 13 Aug 2015 13:36:46 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-1.3 #107 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-1.3/107/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-1.3/107/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14054&quot; title=&quot;Acknowledged writes may get lost if regionserver clock is set backwards&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14054&quot;&gt;&lt;del&gt;HBASE-14054&lt;/del&gt;&lt;/a&gt; Acknowledged writes may get lost if regionserver clock is set backwards (enis: rev a0086e97ad1966c2c59fde832ed60dbab9ca9e43)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegion.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14695370" author="hudson" created="Thu, 13 Aug 2015 15:34:24 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-1.2-IT #89 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-1.2-IT/89/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-1.2-IT/89/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14054&quot; title=&quot;Acknowledged writes may get lost if regionserver clock is set backwards&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14054&quot;&gt;&lt;del&gt;HBASE-14054&lt;/del&gt;&lt;/a&gt; Acknowledged writes may get lost if regionserver clock is set backwards (enis: rev 59c731b24549e846e1905c43bd3e5adf121638cf)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegion.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14695447" author="hudson" created="Thu, 13 Aug 2015 16:10:05 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-0.98-on-Hadoop-1.1 #1033 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.98-on-Hadoop-1.1/1033/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.98-on-Hadoop-1.1/1033/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14054&quot; title=&quot;Acknowledged writes may get lost if regionserver clock is set backwards&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14054&quot;&gt;&lt;del&gt;HBASE-14054&lt;/del&gt;&lt;/a&gt; Acknowledged writes may get lost if regionserver clock is set backwards (enis: rev a3914d66c3b9e84f624a1c8718ccd69fb27fe311)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegion.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14724295" author="enis" created="Mon, 31 Aug 2015 22:39:52 +0000"  >&lt;p&gt;Closing this issue after 1.0.2 release.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12844853">HBASE-14070</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12750112" name="hbase-14054_v1.patch" size="10557" author="enis" created="Wed, 12 Aug 2015 16:34:18 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 10 Jul 2015 01:20:12 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 13 weeks, 2 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2h2sf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>In {{checkAndPut}} write path use max(max timestamp for the row, System.currentTimeMillis()) in the, instead of blindly taking System.currentTimeMillis() to ensure that checkAndPut() cannot do writes which is already eclipsed. This is similar to what has been done in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-12449&quot; title=&quot;Use the max timestamp of current or old cell&amp;#39;s timestamp in HRegion.append()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-12449&quot;&gt;&lt;strike&gt;HBASE-12449&lt;/strike&gt;&lt;/a&gt; for increment and append. </customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>