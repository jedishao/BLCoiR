<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 02 18:54:43 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-1045/HBASE-1045.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-1045] Hangup by regionserver causes write to fail</title>
                <link>https://issues.apache.org/jira/browse/HBASE-1045</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Root cause is OOME on the region server. Nonetheless a hangup during IPC causes the client to fail the write, currently causing data loss. Should the application catch and retry? Or should the client libraries try harder?&lt;/p&gt;

&lt;p&gt;Dec 4, 2008 5:25:30 PM com.powerset.heritrix.writer.HBaseWriterProcessor innerProcessResult&lt;br/&gt;
SEVERE: Failed write of Record: &lt;a href=&quot;http://www.publicrecordslocal.com/georgia.htm&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.publicrecordslocal.com/georgia.htm&lt;/a&gt; (in thread &apos;ToeThread #9: &lt;a href=&quot;http://www.publicrecordslocal.com/georgia.htm&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.publicrecordslocal.com/georgia.htm&lt;/a&gt;&apos;; in processor &apos;Archiver&apos;)&lt;br/&gt;
java.io.IOException: java.io.IOException: Call to /10.30.94.38:60020 failed on local exception: Connection refused&lt;br/&gt;
	at com.powerset.heritrix.writer.HBaseWriter.write(Unknown Source)&lt;br/&gt;
	at com.powerset.heritrix.writer.HBaseWriterProcessor.write(Unknown Source)&lt;br/&gt;
	at com.powerset.heritrix.writer.HBaseWriterProcessor.innerProcessResult(Unknown Source)&lt;br/&gt;
	at org.archive.modules.Processor.process(Processor.java:123)&lt;br/&gt;
	at org.archive.crawler.framework.ToeThread.processCrawlUri(ToeThread.java:310)&lt;br/&gt;
	at org.archive.crawler.framework.ToeThread.run(ToeThread.java:157)&lt;br/&gt;
Caused by: java.io.IOException: Call to /10.30.94.38:60020 failed on local exception: Connection refused&lt;br/&gt;
	at org.apache.hadoop.ipc.Client.call(Client.java:699)&lt;br/&gt;
	at org.apache.hadoop.hbase.ipc.HbaseRPC$Invoker.invoke(HbaseRPC.java:323)&lt;br/&gt;
	at $Proxy12.batchUpdates(Unknown Source)&lt;br/&gt;
	at org.apache.hadoop.hbase.client.HConnectionManager$TableServers$2.call(HConnectionManager.java:919)&lt;br/&gt;
	at org.apache.hadoop.hbase.client.HConnectionManager$TableServers$2.call(HConnectionManager.java:917)&lt;br/&gt;
	at org.apache.hadoop.hbase.client.HConnectionManager$TableServers.getRegionServerForWithoutRetries(HConnectionManager.java:875)&lt;br/&gt;
	at org.apache.hadoop.hbase.client.HConnectionManager$TableServers.processBatchOfRows(HConnectionManager.java:916)&lt;br/&gt;
	at org.apache.hadoop.hbase.client.HTable.flushCommits(HTable.java:1267)&lt;br/&gt;
	at org.apache.hadoop.hbase.client.HTable.commit(HTable.java:1238)&lt;br/&gt;
	at org.apache.hadoop.hbase.client.HTable.commit(HTable.java:1218)&lt;br/&gt;
	at net.iridiant.content.Content.storeURLInfo(Unknown Source)&lt;br/&gt;
	... 6 more&lt;br/&gt;
Caused by: java.net.ConnectException: Connection refused&lt;br/&gt;
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)&lt;br/&gt;
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:574)&lt;br/&gt;
	at sun.nio.ch.SocketAdaptor.connect(SocketAdaptor.java:100)&lt;br/&gt;
	at org.apache.hadoop.ipc.Client$Connection.setupIOstreams(Client.java:299)&lt;br/&gt;
	at org.apache.hadoop.ipc.Client$Connection.access$1700(Client.java:176)&lt;br/&gt;
	at org.apache.hadoop.ipc.Client.getConnection(Client.java:772)&lt;br/&gt;
	at org.apache.hadoop.ipc.Client.call(Client.java:685)&lt;br/&gt;
	... 16 more&lt;/p&gt;</description>
                <environment></environment>
        <key id="12409991">HBASE-1045</key>
            <summary>Hangup by regionserver causes write to fail</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="jdcryans">Jean-Daniel Cryans</assignee>
                                    <reporter username="apurtell">Andrew Purtell</reporter>
                        <labels>
                    </labels>
                <created>Thu, 4 Dec 2008 18:44:53 +0000</created>
                <updated>Sun, 13 Sep 2009 22:26:34 +0000</updated>
                            <resolved>Mon, 22 Dec 2008 21:55:37 +0000</resolved>
                                                    <fixVersion>0.19.0</fixVersion>
                                    <component>Client</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12653416" author="stack" created="Thu, 4 Dec 2008 19:13:34 +0000"  >&lt;p&gt;Did the client not retry?  If not, it should treat these errors as any other.&lt;/p&gt;

&lt;p&gt;Will always be case where client fails even after N retries but thats a given here, right?  Or would you suggest client should just try forever?&lt;/p&gt;</comment>
                            <comment id="12653434" author="apurtell" created="Thu, 4 Dec 2008 19:46:55 +0000"  >&lt;p&gt;It does not look like the client retried, otherwise the top level exception would be a RetriesExceededException, correct?&lt;/p&gt;
</comment>
                            <comment id="12653581" author="apurtell" created="Fri, 5 Dec 2008 01:26:05 +0000"  >&lt;p&gt;Had a hbase-writer go back to the same zombie regionserver 229 times. All 229 writes failed. Another one for 418, another for 122, another for 367.&lt;/p&gt;</comment>
                            <comment id="12653587" author="apurtell" created="Fri, 5 Dec 2008 01:39:11 +0000"  >&lt;p&gt;Based on the regionserver log in question it looks like the shutdown thread completed quickly after OOME (in server select in IPC). So for some reason the region was not reassigned in a timely manner. Clients kept finding the old region information in meta and went to the server but there was no listener on the socket, hence:&lt;/p&gt;

&lt;p&gt;SEVERE: Failed write of Record .... java.io.IOException: Call to 10.30.94.37:60020 failed on local exception: Connection refused. &lt;/p&gt;

&lt;p&gt;I did not have our service recovery framework running. Otherwise another region server would have been launched and would have thrown NSREs (eventually). &lt;/p&gt;</comment>
                            <comment id="12654298" author="apurtell" created="Mon, 8 Dec 2008 04:16:15 +0000"  >&lt;p&gt;Socket or EOF exceptions, along with NSRE, or WRE, while talking to a region server can trigger the client to ask the master to engage reassignment/recovery protocols for the affected regions, so I think this issue is part of &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1038&quot; title=&quot;Master should accept client feedback about inconsistencies in META&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-1038&quot;&gt;&lt;del&gt;HBASE-1038&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="12658198" author="jdcryans" created="Fri, 19 Dec 2008 21:57:03 +0000"  >&lt;p&gt;Currently the way the retries are handled with the batched updates is that it will get retried infinitely with 1 second between each call to a HRS. This hack is there until we can refactor the handling of getting/updating batches of rows, What happened to Andrew is that he got an IOE after 100 and 200+ NSRE which are always retried until an IOE was thrown which, currently, is not catch.&lt;/p&gt;

&lt;p&gt;What we could do to get the situation better :&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Add a max number of retries and use the exponential backoff. This would worsen the hack by duplicating the HCM stuff in HTable but we will refactor it for 0.20.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Catch the IOE now that it won&apos;t get retried forever.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;If we are committing a batch of rows, we should do the retries with only 1 row so that we don&apos;t OOME region servers.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;This way, a single row commit would at least know what failed. &lt;/p&gt;

&lt;p&gt;And a nice to have to be to inform HMaster that something is wrong with a HRS.&lt;/p&gt;</comment>
                            <comment id="12658205" author="stack" created="Fri, 19 Dec 2008 22:21:20 +0000"  >&lt;p&gt;(Following on from chat w/ J-D up on IRC)&lt;/p&gt;

&lt;p&gt;I do not see the infinite retries J-D.  I see this:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
          &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; BatchUpdate[] updates = tempUpdates.toArray(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; BatchUpdate[0]);
          &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; index = getRegionServerForWithoutRetries(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ServerCallable&amp;lt;&lt;span class=&quot;code-object&quot;&gt;Integer&lt;/span&gt;&amp;gt;(
              &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;, tableName, batchUpdate.getRow()) {
            &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;Integer&lt;/span&gt; call() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
              &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; i = server.batchUpdates(location.getRegionInfo()
                  .getRegionName(), updates);
              &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; i;
            }
          });
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;... around line #912 of HCM.  If exception thrown, it comes all the ways out.&lt;/p&gt;

&lt;p&gt;Could we do your #3 above and change getRegionServerForWithoutRetries somehow to something that retries &amp;#8211; IOEs included &amp;#8211; but that if it fails retrying, that it fails on the batch; it does not move on to the next BatchUpdate?&lt;/p&gt;</comment>
                            <comment id="12658225" author="jdcryans" created="Sat, 20 Dec 2008 00:00:16 +0000"  >&lt;p&gt;Stack,&lt;/p&gt;

&lt;p&gt;Maybe I wasn&apos;t clear in what I said but the IOE are thrown all the way, it&apos;s the NSRE that&apos;s retried infinitely.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Could we do your #3 above and change getRegionServerForWithoutRetries somehow to something that retries - IOEs included - but that if it fails retrying, that it fails on the batch; it does not move on to the next BatchUpdate?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Thinking about it, it&apos;s the fact the I wanted to retry the whole bunch of rows that had me doing my little hack. Retrying only 1 row will be slower in certain occasions but less prone to OOME&apos;s.&lt;/p&gt;

&lt;p&gt;I will work on that this w/e.&lt;/p&gt;</comment>
                            <comment id="12658305" author="jdcryans" created="Sat, 20 Dec 2008 17:54:00 +0000"  >&lt;p&gt;Oh for some weird reason I was looking at an old version of flushCommits so #1 is already implemented in HCM.processBatchOfRows&lt;/p&gt;</comment>
                            <comment id="12658307" author="stack" created="Sat, 20 Dec 2008 18:19:15 +0000"  >&lt;p&gt;Are you going to add retry of IOEs J-D?&lt;/p&gt;</comment>
                            <comment id="12658311" author="jdcryans" created="Sat, 20 Dec 2008 18:52:10 +0000"  >&lt;p&gt;Patch adds the retry of only 1 row when IOE or NSRE and makes the getRegionServerForWithoutRetries eat the IOE instead of throwing it like it did for Andrew.&lt;/p&gt;

&lt;p&gt;Here is what is now happening when a region splits during PE with some custom debug:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
...
08/12/20 13:42:39 DEBUG client.HConnectionManager$TableServers: Commit 10478 rows starting at 0000513422
08/12/20 13:42:47 DEBUG client.HConnectionManager$TableServers: Index returned is 1946
08/12/20 13:42:47 DEBUG client.HConnectionManager$TableServers: Reloading table servers because region server didn&apos;t accept updates; tries=0 of max=10, waiting=2000ms
08/12/20 13:42:49 DEBUG client.HConnectionManager$TableServers: Removed TestTable,,1229798498529 from cache because of 0000515368
08/12/20 13:42:49 DEBUG client.HConnectionManager$TableServers: Commit 1 rows starting at 0000515368
08/12/20 13:42:49 DEBUG client.HConnectionManager$TableServers: Index returned is 0
08/12/20 13:42:49 DEBUG client.HConnectionManager$TableServers: Reloading table servers because region server didn&apos;t accept updates; tries=1 of max=10, waiting=2000ms
08/12/20 13:42:51 DEBUG client.HConnectionManager$TableServers: Removed TestTable,,1229798498529 from cache because of 0000515368
08/12/20 13:42:51 DEBUG client.HConnectionManager$TableServers: Attempt 0 of 10 failed with &amp;lt;org.apache.hadoop.hbase.client.NoServerForRegionException: No server address listed in .META. &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; region TestTable,0000085888,1229798566468&amp;gt;. Retrying after sleep of 2000
08/12/20 13:42:51 DEBUG client.HConnectionManager$TableServers: Removed .META.,,1 from cache because of TestTable,0000515368,99999999999999
08/12/20 13:42:51 DEBUG client.HConnectionManager$TableServers: Found ROOT REGION =&amp;gt; {NAME =&amp;gt; &apos;-ROOT-,,0&apos;, STARTKEY =&amp;gt; &apos;&apos;, ENDKEY =&amp;gt; &apos;&apos;, ENCODED =&amp;gt; 70236052, TABLE =&amp;gt; {{NAME =&amp;gt; &apos;-ROOT-&apos;, IS_ROOT =&amp;gt; &apos;&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;&apos;, IS_META =&amp;gt; &apos;&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;&apos;, FAMILIES =&amp;gt; [{NAME =&amp;gt; &apos;info&apos;, BLOOMFILTER =&amp;gt; &apos;&lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;&apos;, COMPRESSION =&amp;gt; &apos;NONE&apos;, VERSIONS =&amp;gt; &apos;10&apos;, LENGTH =&amp;gt; &apos;2147483647&apos;, TTL =&amp;gt; &apos;-1&apos;, IN_MEMORY =&amp;gt; &apos;&lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;&apos;, BLOCKCACHE =&amp;gt; &apos;&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;&apos;}], INDEXES =&amp;gt; []}}
08/12/20 13:42:53 DEBUG client.HConnectionManager$TableServers: Commit 1 rows starting at 0000515368
08/12/20 13:42:53 DEBUG client.HConnectionManager$TableServers: Index returned is -1
08/12/20 13:42:53 DEBUG client.HConnectionManager$TableServers: Commit 8531 rows starting at 0000515369
08/12/20 13:42:53 DEBUG client.HConnectionManager$TableServers: Index returned is -1
...
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="12658330" author="stack" created="Sat, 20 Dec 2008 22:55:15 +0000"  >&lt;p&gt;Looks good to me J-D.&lt;/p&gt;

&lt;p&gt;Andrew, to answer your original question, yes, its possible for client to fail.   W/ J-Ds patch, we&apos;ll retry all types of exceptions but will give up if we continue to fail after N attempts.&lt;/p&gt;

&lt;p&gt;Is the J-D patch enough to close this issue?&lt;/p&gt;</comment>
                            <comment id="12658397" author="apurtell" created="Sun, 21 Dec 2008 16:47:08 +0000"  >&lt;p&gt;+1&lt;/p&gt;

&lt;p&gt;Thanks!&lt;/p&gt;</comment>
                            <comment id="12658400" author="jdcryans" created="Sun, 21 Dec 2008 17:09:22 +0000"  >&lt;p&gt;Committed to trunk.&lt;/p&gt;</comment>
                            <comment id="12658416" author="apurtell" created="Sun, 21 Dec 2008 20:23:34 +0000"  >&lt;p&gt;Dec 21, 2008 7:28:07 PM com.powerset.heritrix.writer.HBaseWriterProcessor innerProcessResult&lt;br/&gt;
SEVERE: Failed write of Record: dns:www.mp3.com (in thread &apos;ToeThread #3: dns:www.mp3.com&apos;; in processor &apos;Archiver&apos;)&lt;br/&gt;
java.io.IOException: java.lang.NullPointerException&lt;br/&gt;
        at com.powerset.heritrix.writer.HBaseWriter.write(Unknown Source)&lt;br/&gt;
        at com.powerset.heritrix.writer.HBaseWriterProcessor.write(Unknown Source)&lt;br/&gt;
        at com.powerset.heritrix.writer.HBaseWriterProcessor.innerProcessResult(Unknown Source)&lt;br/&gt;
        at org.archive.modules.Processor.process(Processor.java:123)&lt;br/&gt;
        at org.archive.crawler.framework.ToeThread.processCrawlUri(ToeThread.java:310)&lt;br/&gt;
        at org.archive.crawler.framework.ToeThread.run(ToeThread.java:157)&lt;br/&gt;
Caused by: java.lang.NullPointerException&lt;br/&gt;
        at org.apache.hadoop.hbase.client.HConnectionManager$TableServers.processBatchOfRows(HConnectionManager.java:911)&lt;br/&gt;
        at org.apache.hadoop.hbase.client.HTable.flushCommits(HTable.java:1267)&lt;br/&gt;
        at org.apache.hadoop.hbase.client.HTable.commit(HTable.java:1238)&lt;br/&gt;
        at org.apache.hadoop.hbase.client.HTable.commit(HTable.java:1218)&lt;br/&gt;
        at net.iridiant.content.Content.store(Unknown Source)&lt;br/&gt;
        at net.iridiant.content.Content.store(Unknown Source)&lt;br/&gt;
        ... 6 more&lt;/p&gt;</comment>
                            <comment id="12658429" author="jdcryans" created="Sun, 21 Dec 2008 23:53:42 +0000"  >&lt;p&gt;Mmm, that seems very strange. Line 911 is :&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; index = getRegionServerForWithoutRetries(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ServerCallable&amp;lt;&lt;span class=&quot;code-object&quot;&gt;Integer&lt;/span&gt;&amp;gt;(
              &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;, tableName, batchUpdate.getRow()) {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Which would mean that the batchUpdate was null, but we already do that check in HTable! And it would have failed some lines before.&lt;/p&gt;

&lt;p&gt;Andrew, I will need more info like if it was using the batching feature for updates, and also I would need that trace with DEBUG if possible.&lt;br/&gt;
I tried recreating the problem here with PE and auto-commit enabled but it passed (sadly).&lt;/p&gt;

&lt;p&gt;Thx.&lt;/p&gt;</comment>
                            <comment id="12658434" author="apurtell" created="Mon, 22 Dec 2008 02:39:23 +0000"  >&lt;p&gt;Sorry, I&apos;m running the 0.19 on 0.18 branch. Can&apos;t run plain trunk on my cluster. Line 911 is:&lt;/p&gt;

&lt;p&gt;        if (!isLastRow) &lt;/p&gt;
{
            region = getRegionLocation(tableName, list.get(i+1).getRow, false)
                .getRegionInfo().getRegionName();
        }
&lt;p&gt;&amp;gt;&amp;gt;&amp;gt; if (!Bytes.equals(currentRegion, region) || isLastRow) {&lt;br/&gt;
            final BatchUpdate[] updates = tempUpdates.toArray(new BatchUpdate&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt;);&lt;/p&gt;

&lt;p&gt;At the time some regions of the table were offline. I had to manually null out info:server in META to get them open. &lt;/p&gt;</comment>
                            <comment id="12658443" author="jdcryans" created="Mon, 22 Dec 2008 03:49:15 +0000"  >&lt;p&gt;So in your case the region returned by getRegionLocation would have been null, am I reading this right? Is it even possible?&lt;/p&gt;

&lt;p&gt;Also do you want me to port my patch to your branch?&lt;/p&gt;</comment>
                            <comment id="12658679" author="apurtell" created="Mon, 22 Dec 2008 21:55:36 +0000"  >&lt;p&gt;NPE addressed elsewhere. No need to port. Thanks J-D.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12409606">HBASE-1040</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12409476">HBASE-1038</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12396546" name="hbase-1045-1.patch" size="2557" author="jdcryans" created="Sat, 20 Dec 2008 18:52:10 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 4 Dec 2008 19:13:34 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>25540</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            7 years, 50 weeks, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0hazr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>99043</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>