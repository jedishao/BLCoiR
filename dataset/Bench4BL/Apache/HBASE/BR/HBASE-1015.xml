<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sat Dec 03 16:43:54 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-1015/HBASE-1015.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-1015] HBase Native Client Library</title>
                <link>https://issues.apache.org/jira/browse/HBASE-1015</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;If via &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-794&quot; title=&quot;Language neutral IPC as a first class component of HBase architecture&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-794&quot;&gt;&lt;del&gt;HBASE-794&lt;/del&gt;&lt;/a&gt; first class support for talking via Thrift directly to HMaster and HRS is available, then pure C and C++ client libraries are possible. &lt;/p&gt;

&lt;p&gt;The C client library would wrap a Thrift core. &lt;/p&gt;

&lt;p&gt;The C++ client library can provide a class hierarchy quite close to o.a.h.h.client and, ideally, identical semantics. It  should be just a wrapper around the C API, for economy.&lt;/p&gt;

&lt;p&gt;Internally to my employer there is a lot of resistance to HBase because many dev teams have a strong C/C++ bias. The real issue however is really client side integration, not a fundamental objection. (What runs server side and how it is managed is a secondary consideration.)&lt;/p&gt;</description>
                <environment></environment>
        <key id="12409017">HBASE-1015</key>
            <summary>HBase Native Client Library</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="3">Duplicate</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="apurtell">Andrew Purtell</reporter>
                        <labels>
                    </labels>
                <created>Fri, 21 Nov 2008 20:04:16 +0000</created>
                <updated>Sat, 26 Mar 2016 03:16:05 +0000</updated>
                            <resolved>Sat, 26 Mar 2016 03:16:05 +0000</resolved>
                                    <version>0.20.6</version>
                    <version>1.0.0</version>
                                                    <component>Client</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>42</watches>
                                                                                                            <comments>
                            <comment id="12649782" author="apurtell" created="Fri, 21 Nov 2008 20:07:34 +0000"  >&lt;p&gt;Understood that there&apos;s no reason a C/C++ shop can&apos;t use Thrift directly, but rightly or wrongly the &quot;extra work&quot; is objectionable. &lt;/p&gt;</comment>
                            <comment id="12650773" author="apurtell" created="Tue, 25 Nov 2008 22:34:14 +0000"  >&lt;p&gt;Could also look at Google&apos;s &quot;protocol buffers&quot; for a native binary protocol: &lt;a href=&quot;http://code.google.com/p/protobuf/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://code.google.com/p/protobuf/&lt;/a&gt;&lt;br/&gt;
&lt;a href=&quot;http://code.google.com/p/protobuf-rpc/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://code.google.com/p/protobuf-rpc/&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12654893" author="streamy" created="Tue, 9 Dec 2008 18:55:03 +0000"  >&lt;p&gt;Mentioned by Wes Chow on the list:  &lt;a href=&quot;http://svn.osafoundation.org/pylucene/trunk/jcc/jcc/README&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.osafoundation.org/pylucene/trunk/jcc/jcc/README&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12657469" author="bryanduxbury" created="Wed, 17 Dec 2008 18:25:05 +0000"  >&lt;p&gt;Thrift RPC has come a long way - there&apos;s a much better server available, and I&apos;m working on a much more compact protocol (&lt;a href=&quot;https://issues.apache.org/jira/browse/THRIFT-110&quot; title=&quot;A more compact format &quot; class=&quot;issue-link&quot; data-issue-key=&quot;THRIFT-110&quot;&gt;&lt;del&gt;THRIFT-110&lt;/del&gt;&lt;/a&gt;) that would keep wire size down. It might be a mature enough project for you guys to take a look.&lt;/p&gt;</comment>
                            <comment id="12658032" author="udanax" created="Fri, 19 Dec 2008 07:50:42 +0000"  >&lt;p&gt;+1&lt;/p&gt;</comment>
                            <comment id="12662550" author="apurtell" created="Fri, 9 Jan 2009 22:52:42 +0000"  >&lt;p&gt;First step: See if compiling o.a.h.h.client and all supporting classes with gcj into a SO is viable.&lt;/p&gt;</comment>
                            <comment id="12665191" author="stack" created="Mon, 19 Jan 2009 18:55:03 +0000"  >&lt;p&gt;Just by way of FYI, here is how the C++ interface to HDFS is done: &quot;HDFS provides a C++ library called libhdfs that mirrors the Java interface. In fact, it works using the Java Native Interface (JNI) to call a Java HDFS client. Hadoop comes with pre-built libhdfs binaries for 32-bit Linux, but for other platforms you will need to build them yourself using the instructions at &lt;a href=&quot;http://wiki.apache.org/hadoop/LibHDFS&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://wiki.apache.org/hadoop/LibHDFS&lt;/a&gt;.&quot; &lt;/p&gt;</comment>
                            <comment id="12669066" author="apurtell" created="Fri, 30 Jan 2009 22:48:19 +0000"  >&lt;p&gt;After discussion at the LA Hackathon, it is resolved that a fat C based client API and a fat Java based one would be co-supported. Initially the C client would be marked experimental, until the frequency of changes to the Java client  API drops to a maintenance level only. &lt;/p&gt;</comment>
                            <comment id="12695265" author="stack" created="Fri, 3 Apr 2009 06:40:54 +0000"  >&lt;p&gt;Andrew, here&apos;s another serialization package in case you hadn&apos;t seen the post from Doug:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
I propose we add a &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Hadoop subproject &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; Avro, a serialization system.  My ambition is &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; Avro to replace both Hadoop&apos;s RPC and to be used &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; most Hadoop data files, e.g., by Pig, Hive, etc.

Initial committers would be Sharad Agarwal and me, both existing Hadoop committers.  We are the sole authors of &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; software to date.

The code is currently at:

http:&lt;span class=&quot;code-comment&quot;&gt;//people.apache.org/~cutting/avro.git/
&lt;/span&gt;
To learn more:

git clone http:&lt;span class=&quot;code-comment&quot;&gt;//people.apache.org/~cutting/avro.git/ avro
&lt;/span&gt;cat avro/README.txt
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="12695293" author="apurtell" created="Fri, 3 Apr 2009 08:36:24 +0000"  >&lt;p&gt;Thanks Stack. I didn&apos;t see the post. Presume it came across core-dev@, which is too high volume for me to follow. &lt;/p&gt;</comment>
                            <comment id="12703723" author="stack" created="Tue, 28 Apr 2009 16:51:56 +0000"  >&lt;p&gt;Shall we move these out of 0.20.0 Andrew?  You think they&apos;ll be done in next week or two?&lt;/p&gt;</comment>
                            <comment id="12703909" author="apurtell" created="Wed, 29 Apr 2009 00:29:04 +0000"  >&lt;p&gt;This is already moved to 0.21. ?&lt;/p&gt;</comment>
                            <comment id="12703969" author="posix4e" created="Wed, 29 Apr 2009 02:45:57 +0000"  >&lt;p&gt;I am not exactly sure I understand this issue. We had similar worries as our shop is &amp;lt;bold&amp;gt;very&amp;lt;/bold&amp;gt; c++ biased, and we went with the thrift client. We now solely write c++ based code and tbh hitting a thrift server local to the data is faster than falling back to the rpc mechanism anyway. Would it be enough to write an efficient c++ based thrift server? I would love to see thrift api be the focus of api development as their are still numerous features which haven&apos;t been moved out of the java api. Anyway, just my two cents, I will totally help out with any c++ api.&lt;/p&gt;</comment>
                            <comment id="12722243" author="apurtell" created="Sat, 20 Jun 2009 19:00:57 +0000"  >&lt;p&gt;Unassigning this issue. This will be a big deal for 0.21 and a group effort.&lt;/p&gt;</comment>
                            <comment id="12777044" author="apurtell" created="Thu, 12 Nov 2009 16:29:34 +0000"  >&lt;p&gt;Hosting the region assignment table in ZK will simplify the implementation of a C/C++ client. We can use the ZK C API to look up region locations independent of the master so would only have to talk with regionservers. Can start then as an async RPC engine mediating client requests to region servers and not much more (low level C API). Incrementally add smarts from there (higher level C++ API). &lt;/p&gt;</comment>
                            <comment id="12780007" author="apurtell" created="Thu, 19 Nov 2009 14:40:39 +0000"  >&lt;p&gt;Push to 0.22 timeframe and look at the state of Avro&apos;s C/C++ bindings then. &lt;/p&gt;</comment>
                            <comment id="12833054" author="lars_francke" created="Fri, 12 Feb 2010 16:25:21 +0000"  >&lt;p&gt;I have looked into Avro quite a bit the last weeks so I was thinking that I could probably easily provide an Avro interface alongside the Thrift interface.&lt;/p&gt;

&lt;p&gt;What I don&apos;t quite understand how this issue fits in all that. Thrift and Avro can be used with C/C++ but after reading this I have the feeling you mean something else than just a Thrift-like client interface. If those turn out to be separate things I&apos;ll open a new issue and discuss it there further.&lt;/p&gt;</comment>
                            <comment id="12833077" author="apurtell" created="Fri, 12 Feb 2010 17:22:32 +0000"  >&lt;p&gt;The intent of this issue is to build a fat client in C, wrap in C+&lt;ins&gt;, and have it talk directly to the master and regionservers without any gateway/connector process as intermediary. The C&lt;/ins&gt;+ wrapper would have similar class structure and API as o.a.h.h.client. No need for any Java except on the servers. No intermediary to be a potential bottleneck.&lt;/p&gt;

&lt;p&gt;The notion has a reasonable argument but it&apos;s a lot of work. The rationale for taking it on has become less convincing over time as the Thrift and REST connectors have been satisfying enough for users. There was a fair amount of interest in the 0.19 days but that has waned as far as I can see. &lt;/p&gt;
</comment>
                            <comment id="12914862" author="stack" created="Sat, 25 Sep 2010 19:12:56 +0000"  >&lt;p&gt;@skyhyc Did you put a patch up?  I don&apos;t see it.&lt;/p&gt;</comment>
                            <comment id="12915226" author="skyhyc" created="Mon, 27 Sep 2010 07:55:25 +0000"  >&lt;p&gt;How to use C++ with Hbase?Anybody who would like to give a example?&lt;/p&gt;</comment>
                            <comment id="12915522" author="stack" created="Mon, 27 Sep 2010 22:32:37 +0000"  >&lt;p&gt;@skyhyc Have you tried thrift?&lt;/p&gt;</comment>
                            <comment id="12915671" author="skyhyc" created="Tue, 28 Sep 2010 08:28:02 +0000"  >&lt;p&gt;No, I just know Hbase provide API for Thrift, but don&apos;t know how to use it.&lt;/p&gt;</comment>
                            <comment id="12916599" author="manyu_aditya" created="Thu, 30 Sep 2010 18:46:39 +0000"  >&lt;p&gt;I just started using Thrift and HBase. Now this seems like a typical question but  can&apos;t seem to find an answer. Our &quot;number-crunching&quot; code is all C++. I am planning on using thrift to load data from HBase&lt;br/&gt;
into the client. The problem is that we&apos;re talking about a LOT of data. In a typical scenario I spawn 100 processes and each loads up about 10GB of data ~ 1TB. So I&apos;m not sure if thrift will be fast enough. For management tasks we&apos;re going to write everything in Java so that is not a problem. The question then is is it better to write custom wrappers in JNI and bypass thrift completely? Purely for performance considerations. &lt;/p&gt;

&lt;p&gt;Also, what seems like the timeline for the C client since like libhdfs my guess is HBase will provide c++ wrappers using JNI from what the discussion here looks like.&lt;/p&gt;

&lt;p&gt;If thrift is the way to go then we are looking at creating a tool that takes an ODBC data source and loads all the data from one table to an HBase table. Again this will be in C+&lt;ins&gt;. Only if we find that the overhead of thrift is too much will we shift to java but that would mean double work writing clients for java and c&lt;/ins&gt;+. Anyway, we could provide this code for the community.&lt;/p&gt;</comment>
                            <comment id="12919130" author="skyhyc" created="Fri, 8 Oct 2010 01:23:54 +0000"  >&lt;p&gt;Up!!!&lt;/p&gt;</comment>
                            <comment id="13047688" author="stack" created="Fri, 10 Jun 2011 22:58:20 +0000"  >&lt;p&gt;Moving out of 0.92.  Move it back in if you think differently.&lt;/p&gt;</comment>
                            <comment id="13047702" author="stack" created="Fri, 10 Jun 2011 22:58:23 +0000"  >&lt;p&gt;Moving out of 0.92.  Move it back in if you think differently.&lt;/p&gt;</comment>
                            <comment id="13424432" author="mikhail" created="Sat, 28 Jul 2012 21:23:20 +0000"  >&lt;p&gt;I think this is now resolved. Here is the C++ HBase client written by Chip Turner at Facebook:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/facebook/native-cpp-hbase-client&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/facebook/native-cpp-hbase-client&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13424436" author="stack" created="Sat, 28 Jul 2012 21:48:16 +0000"  >&lt;p&gt;Mikhail I think this worth an announcement out on the user mailing list?  Its great stuff.  If you don&apos;t want to do it, I will (better if you do it).  I added note to refguide and pushed it out.&lt;/p&gt;</comment>
                            <comment id="13424439" author="mikhail" created="Sat, 28 Jul 2012 21:52:59 +0000"  >&lt;p&gt;Actually Chip should probably announce this feature himself. I will ask him about it.&lt;/p&gt;</comment>
                            <comment id="13424440" author="stack" created="Sat, 28 Jul 2012 21:55:44 +0000"  >&lt;p&gt;@Mikhail That&apos;d be best for sure.&lt;/p&gt;</comment>
                            <comment id="13424443" author="apurtell" created="Sat, 28 Jul 2012 22:19:25 +0000"  >&lt;p&gt;I&apos;d be delighted to resolve this issue (excellent!) but just to be sure: Do we want to hold it open as a vehicle for moving the native-cpp-hbase-client code into the HBase tree proper, or no? If the latter, let&apos;s resolve.&lt;/p&gt;</comment>
                            <comment id="13424447" author="apurtell" created="Sat, 28 Jul 2012 22:28:08 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mikhail&quot; class=&quot;user-hover&quot; rel=&quot;mikhail&quot;&gt;Mikhail Bautin&lt;/a&gt; Perhaps someone more versed in Thrift and its C++ language support in particular could say, but can we plug in Thrift&apos;s TSasl&lt;/p&gt;
{Client,Server}
&lt;p&gt;Transport here for authenticated opens and optional wire encryption?&lt;/p&gt;</comment>
                            <comment id="13424488" author="tlipcon" created="Sun, 29 Jul 2012 05:02:39 +0000"  >&lt;p&gt;Hey Andrew. Someone here at Cloudera is working on SASL support for the Thrift C++ bindings, I believe &amp;#8211; at least the client side &amp;#8211; which should be compatible with the Java server. Hopefully we&apos;ll post it to &lt;a href=&quot;https://issues.apache.org/jira/browse/THRIFT-1620&quot; title=&quot;SASL support for C++ &quot; class=&quot;issue-link&quot; data-issue-key=&quot;THRIFT-1620&quot;&gt;THRIFT-1620&lt;/a&gt; in the coming weeks.&lt;/p&gt;</comment>
                            <comment id="13555600" author="ndimiduk" created="Wed, 16 Jan 2013 23:26:18 +0000"  >&lt;p&gt;What&apos;s happened with this ticket? I don&apos;t think the thrift core makes sense anymore, considering protobuf. I think an HBase client library implemented in C is a mandatory feature for a database approaching 1.0 release.&lt;/p&gt;</comment>
                            <comment id="13556412" author="apurtell" created="Thu, 17 Jan 2013 17:53:27 +0000"  >&lt;blockquote&gt;&lt;p&gt;I don&apos;t think the thrift core makes sense anymore, considering protobuf. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I would agree. The embedded thrift servers in the regionservers were an experiment at FB that they&apos;ve backed away from. &lt;a href=&quot;https://issues.apache.org/jira/browse/THRIFT-1620&quot; title=&quot;SASL support for C++ &quot; class=&quot;issue-link&quot; data-issue-key=&quot;THRIFT-1620&quot;&gt;THRIFT-1620&lt;/a&gt; is open with no implementation available.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;I think an HBase client library implemented in C is a mandatory feature for a database approaching 1.0 release.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The PB work is not finished.&lt;/p&gt;

&lt;p&gt;The scope of building a C client is not just the transport, it&apos;s also duplicating or replacing all of the functionality of the fat Java client.&lt;/p&gt;

&lt;p&gt;Various discussions about &quot;native client&quot; usually end with the notion of a Grand Unified Client Project: lighter weight async client, perhaps asynchbase itself or in the mold of it, talking PB to the cluster, with a sync API layered on top. It might be straightforward to build a C++ analogue to asynchbase with std::async (don&apos;t know enough about C++11 to say for sure). That does not provide an answer for C folks though.&lt;/p&gt;</comment>
                            <comment id="13556423" author="ndimiduk" created="Thu, 17 Jan 2013 18:09:28 +0000"  >&lt;blockquote&gt;&lt;p&gt;The scope of building a C client is not just the transport, it&apos;s also duplicating or replacing all of the functionality of the fat Java client.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Agreed; I mean the construction of a fully-featured client implementation available via C, not just transport. I&apos;ve been out of C/C++ for a number of years, I&apos;m entirely ignorant on C+&lt;ins&gt;11 so I cannot comment on implementation details. I do know that it&apos;s fairly common-place to wrap a C&lt;/ins&gt;+ library with C bindings, so that decision can be left up to the implementor.&lt;/p&gt;</comment>
                            <comment id="13556426" author="apurtell" created="Thu, 17 Jan 2013 18:13:03 +0000"  >&lt;p&gt;I will throw out there that libhdfs &quot;cheats&quot; by linking to libjvm.so and pulling in the HDFS client bytecode as engine. I presume we don&apos;t want this, but it would be a half measure that stands in for something comprehensive.&lt;/p&gt;</comment>
                            <comment id="13556446" author="ndimiduk" created="Thu, 17 Jan 2013 18:32:55 +0000"  >&lt;p&gt;My previous experience with JNI makes me cringe at this prospect. Perhaps a painful baby-step, this would be a baby-step non the less.&lt;/p&gt;</comment>
                            <comment id="13867787" author="clehene" created="Fri, 10 Jan 2014 13:36:17 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-9977&quot; title=&quot;Define C interface of HBase Client Asynchronous APIs&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-9977&quot;&gt;&lt;del&gt;HBASE-9977&lt;/del&gt;&lt;/a&gt; suggests a C++ async client and C sync/async wrappers. &lt;br/&gt;
Given that HBase talks protobuf natively. Is a native wrapper around Thrift still a goal?&lt;/p&gt;</comment>
                            <comment id="13868382" author="tdunning" created="Fri, 10 Jan 2014 22:09:54 +0000"  >&lt;p&gt;Another way to put this is that if nobody cares enough to even put up a patch after 5 years is this issue simply moot?&lt;/p&gt;

&lt;p&gt;Shouldn&apos;t reality be recognized?  Shouldn&apos;t this be closed as WONT_FIX?&lt;/p&gt;</comment>
                            <comment id="13868410" author="apurtell" created="Fri, 10 Jan 2014 22:30:38 +0000"  >&lt;blockquote&gt;&lt;p&gt;Another way to put this is that if nobody cares enough to even put up a patch after 5 years is this issue simply moot?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This issue has been superseded by the use of protobuf in RPCs instead of Thrift and the commit of the start of a C/C++ client library, see &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-9977&quot; title=&quot;Define C interface of HBase Client Asynchronous APIs&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-9977&quot;&gt;&lt;del&gt;HBASE-9977&lt;/del&gt;&lt;/a&gt;. Closing this issue in lieu of something else is fine, but WONTFIX is the incorrect resolution.&lt;/p&gt;</comment>
                            <comment id="14066949" author="adityakishore" created="Fri, 18 Jul 2014 22:00:54 +0000"  >&lt;p&gt;Attaching a combined patch squashed from all sub-tasks.&lt;/p&gt;</comment>
                            <comment id="14066955" author="adityakishore" created="Fri, 18 Jul 2014 22:03:00 +0000"  >&lt;p&gt;This patch is targeted for HBase master branch and has been rebased on git commit id 209dd6dcfeb249060df091d651fc2d579aa729b5&lt;/p&gt;</comment>
                            <comment id="14066965" author="hadoopqa" created="Fri, 18 Jul 2014 22:13:31 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12656586/HBASE-1015-HBase-native-client.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12656586/HBASE-1015-HBase-native-client.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;br/&gt;
  ATTACHMENT ID: 12656586&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 99 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 patch&lt;/font&gt;.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10120//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10120//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14067037" author="adityakishore" created="Fri, 18 Jul 2014 22:49:27 +0000"  >&lt;p&gt;Apparently, the build process does not like the git mailbox format patch!&lt;/p&gt;

&lt;p&gt;Attaching the old-style version.&lt;/p&gt;</comment>
                            <comment id="14067252" author="hadoopqa" created="Sat, 19 Jul 2014 00:15:00 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12656601/HBASE-1015-HBase-native-client.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12656601/HBASE-1015-HBase-native-client.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;br/&gt;
  ATTACHMENT ID: 12656601&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 57 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 1 warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces the following lines longer than 100:&lt;br/&gt;
    +LIBHBASE_OPTS=&quot;$&lt;/p&gt;
{LIBHBASE_OPTS} -Dlibhbase.log.dir=${LIBHBASE_HOME}/logs -Dlibhbase.log.name=perftest-java.log -Dlibhbase.log.level=info -Dlibhbase.logger=RFA&quot;&lt;br/&gt;
+LIBHBASE_OPTS=&quot;${LIBHBASE_OPTS}
&lt;p&gt; -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp/ -XX:+UseConcMarkSweepGC -XX:+UseParNewGC&quot;&lt;br/&gt;
+    libjvmLibraryString = &quot;/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Libraries/libserver.dylib&quot;&lt;br/&gt;
+    logger.info(&quot;Using $&lt;/p&gt;
{libjvmLibraryString}
&lt;p&gt; and include directories $&lt;/p&gt;
{javaHomeInclude}
&lt;p&gt; and $&lt;/p&gt;
{javaHomeIncludeOs}
&lt;p&gt;&quot;)&lt;br/&gt;
+# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.&lt;br/&gt;
+    which java &amp;gt;/dev/null 2&amp;gt;&amp;amp;1 || die &quot;ERROR: JAVA_HOME is not set and no &apos;java&apos; command could be found in your PATH.&lt;br/&gt;
+        CHECK2=`echo &quot;$arg&quot;|egrep &lt;del&gt;c &quot;^&lt;/del&gt;&quot;`                                 ### Determine if an option&lt;br/&gt;
+        (9) set &amp;#8211; &quot;$args0&quot; &quot;$args1&quot; &quot;$args2&quot; &quot;$args3&quot; &quot;$args4&quot; &quot;$args5&quot; &quot;$args6&quot; &quot;$args7&quot; &quot;$args8&quot; ;;&lt;br/&gt;
+# Split up the JVM_OPTS And GRADLE_OPTS values into an array, following the shell quoting and substitution rules&lt;br/&gt;
+@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.TestRegionRebalancing&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10121//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10121//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10121//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10121//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10121//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10121//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10121//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10121//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10121//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10121//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10121//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10121//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10121//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10121//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10121//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10121//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10121//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10121//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10121//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10121//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10121//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10121//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14067260" author="adityakishore" created="Sat, 19 Jul 2014 00:18:24 +0000"  >&lt;p&gt;The test failure is definitely unrelated to this patch. I&apos;ll look at the javadoc and line length warnings.&lt;/p&gt;</comment>
                            <comment id="15065980" author="busbey" created="Mon, 21 Dec 2015 01:47:04 +0000"  >&lt;p&gt;is this effort still ongoing?&lt;/p&gt;

&lt;p&gt;is the patch here, or the github pull request ( &lt;a href=&quot;https://github.com/apache/hbase/pull/1&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/hbase/pull/1&lt;/a&gt; ) the latest version?&lt;/p&gt;

&lt;p&gt;/cc &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=eclark&quot; class=&quot;user-hover&quot; rel=&quot;eclark&quot;&gt;Elliott Clark&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="15066753" author="eclark" created="Mon, 21 Dec 2015 17:33:29 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14850&quot; title=&quot;C++ client implementation&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14850&quot;&gt;HBASE-14850&lt;/a&gt; should subsume this jira.  Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=busbey&quot; class=&quot;user-hover&quot; rel=&quot;busbey&quot;&gt;Sean Busbey&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="15067179" author="mantonov" created="Mon, 21 Dec 2015 22:36:30 +0000"  >&lt;p&gt;(So this one and all its subtasks shall be closed?&lt;br/&gt;
)&lt;/p&gt;</comment>
                            <comment id="15067183" author="eclark" created="Mon, 21 Dec 2015 22:40:59 +0000"  >&lt;p&gt;I would think so yeah. We&apos;re moving to a newer build system, more c++ before the C layer.&lt;br/&gt;
Moving to wangle/folly vs a C library for networking. &lt;br/&gt;
etc.&lt;/p&gt;

&lt;p&gt;So anything here is pretty out of date with the current plan.&lt;/p&gt;</comment>
                            <comment id="15203717" author="busbey" created="Mon, 21 Mar 2016 05:04:39 +0000"  >&lt;p&gt;last call for concerns with me closing this issue out as obviated by the work in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14850&quot; title=&quot;C++ client implementation&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14850&quot;&gt;HBASE-14850&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="15203724" author="hadoopqa" created="Mon, 21 Mar 2016 05:07:25 +0000"  >&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/error.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; &lt;b&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;&lt;/b&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;&lt;br class=&quot;atl-forced-newline&quot; /&gt;
&lt;br class=&quot;atl-forced-newline&quot; /&gt;&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Vote &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Subsystem &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Runtime &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Comment &lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt;-1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; patch &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; 0m 4s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1015&quot; title=&quot;HBase Native Client Library&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-1015&quot;&gt;&lt;del&gt;HBASE-1015&lt;/del&gt;&lt;/a&gt; does not apply to master. Rebase required? Wrong Branch? See &lt;a href=&quot;https://yetus.apache.org/documentation/0.2.0/precommit-patchnames&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://yetus.apache.org/documentation/0.2.0/precommit-patchnames&lt;/a&gt; for help. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;&lt;br class=&quot;atl-forced-newline&quot; /&gt;
&lt;br class=&quot;atl-forced-newline&quot; /&gt;&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Subsystem &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Report/Notes &lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; JIRA Patch URL &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://issues.apache.org/jira/secure/attachment/12656601/HBASE-1015-HBase-native-client.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/secure/attachment/12656601/HBASE-1015-HBase-native-client.patch&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; JIRA Issue &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1015&quot; title=&quot;HBase Native Client Library&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-1015&quot;&gt;&lt;del&gt;HBASE-1015&lt;/del&gt;&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Console output &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1098/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1098/console&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Powered by &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Apache Yetus 0.2.0   &lt;a href=&quot;http://yetus.apache.org&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://yetus.apache.org&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;



&lt;p&gt;This message was automatically generated.&lt;/p&gt;
</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10032">
                    <name>Blocker</name>
                                                                <inwardlinks description="is blocked by">
                                        <issuelink>
            <issuekey id="12416456">HBASE-1249</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12404084">HBASE-880</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="12310000">
                    <name>Duplicate</name>
                                            <outwardlinks description="duplicates">
                                        <issuelink>
            <issuekey id="12914633">HBASE-14850</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12446756">HBASE-2170</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10001">
                    <name>dependent</name>
                                            <outwardlinks description="depends upon">
                                        <issuelink>
            <issuekey id="12401641">HBASE-794</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12434794">HBASE-1816</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12656601" name="HBASE-1015-HBase-native-client.patch" size="573097" author="adityakishore" created="Fri, 18 Jul 2014 22:49:27 +0000"/>
                            <attachment id="12656586" name="HBASE-1015-HBase-native-client.patch" size="654187" author="adityakishore" created="Fri, 18 Jul 2014 22:00:54 +0000"/>
                    </attachments>
                <subtasks>
                            <subtask id="12675558">HBASE-9835</subtask>
                            <subtask id="12679461">HBASE-9977</subtask>
                            <subtask id="12687265">HBASE-10276</subtask>
                            <subtask id="12684814">HBASE-10168</subtask>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 9 Dec 2008 18:55:03 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>31950</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10342"><![CDATA[Incompatible change]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            36 weeks, 5 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0hatr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>99016</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>