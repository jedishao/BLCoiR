<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 02 20:28:43 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-315/HBASE-315.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-315] [hbase] delete</title>
                <link>https://issues.apache.org/jira/browse/HBASE-315</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Delete is incomplete in hbase.  Whats there is inconsistent.  Deleted records currently persist and are never cleaned up.  This issue is about making delete behavior coherent across gets, scans and compaction.&lt;/p&gt;

&lt;p&gt;Below is from a bit of back and forth between Jim and myself where Jim takes a stab at outlining a model for delete taking inspiration from how Digital&apos;s versioned file system used work:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;Let&apos;s say you have 5 versions with timestamps T1, T2, ..., T5 where
timestamps are increasing from T1 to T5 (so T5 is the newest).

Before any deletes occur, &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; you don&apos;t specify a timestamp and request N
versions, you should get T5 first, then T4, T3, ... until you have
reached N or you run out of versions.

Now add deletes:

(In the following, timestamp refers to the timestamp associated with
the delete operation)

1. If no timestamp is specified we are deleting the latest version.
   If a get or scanner specifies that it wants N versions, then it 
   should get T4, T3, ..., until we have N versions or we run out of
   older versions. After compaction, the deletion record and T5 should
   be elided from the HStore.

2. If a timestamp is specified and it exactly matches a version (say
   T4) and a get or scanner requests N versions, then the client
   receives T5, T3, T2, ... until we satisfy N or run out of versions.
   After a compaction, the deletion record and T4 should be elided
   from the HStore.

3. If a timestamp is specified and does not exactly match a version,
   it means delete every version older than &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; timestamp. If the
   timestamp is greater than T5 all versions are considered to be
   deleted and a get or a scanner will &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; no results even &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; 
   the get or scanner specify an older time. This is consistent
   with the concept of delete all versions older than timestamp.
   After a compaction, the delete record and all the values should
   be elided.

   If the specified timestamp falls between two older versions (say
   T4 and T3) then T3, T2 and T1 are considered to be deleted (again
   &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; is all versions older than timestamp). A get or scanner
   that specifies no time but requests N versions can only get T5
   and T4. A get or scanner that requests a time of T3 or earlier
   will get no results because those versions are deleted. After
   a compaction, the deletion record and the deleted versions
   are elided from the HStore.
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</description>
                <environment></environment>
        <key id="12376879">HBASE-315</key>
            <summary>[hbase] delete</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="stack">stack</reporter>
                        <labels>
                    </labels>
                <created>Sat, 25 Aug 2007 19:30:30 +0000</created>
                <updated>Thu, 17 Feb 2011 14:39:13 +0000</updated>
                            <resolved>Mon, 10 Sep 2007 17:03:04 +0000</resolved>
                                                                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12525481" author="stack" created="Thu, 6 Sep 2007 17:51:14 +0000"  >&lt;p&gt;After study, 1. and 2. in the above are straight-forward.  3. as described, as a means of deleting all behind a particular timestamp is expensive.  Here&apos;s why:&lt;/p&gt;

&lt;p&gt;On every get, I need to check the future.  That is, I need to read rows in front of the currently specified row/column/timestamp combination to look see if there is a delete record with the same row/column but a timestamp ahead of the stipulated one.  If one is found, then matching records should not be returned because they have been &apos;deleted&apos;.&lt;/p&gt;

&lt;p&gt;Instead, lets build the delete-all-versions-behind-a-specified-timestamp using the basic delete mechanism, the facility whereby a cell is X-d out by the presence of a delete cell of the exact same row/column/timestamp appearing ahead of the non-null cell.  The API currently has a delete that takes a column name and on commit you specify the timestamp.  This deletes a single cell value.  To facilitate bulk delete operations, to the API we&apos;ll add a deleteAll.  Internally, this will find all cells that match the row/column specified and delete all cells of equal-to or older timestamps.&lt;/p&gt;

&lt;p&gt;Later folks might want to do things like only delete the X oldest revisions or only delete all of exactly the same timestamp but I&apos;ll wait until its asked for before attempting an implementation.&lt;/p&gt;


</comment>
                            <comment id="12525790" author="stack" created="Fri, 7 Sep 2007 17:54:16 +0000"  >&lt;p&gt;Patch of work so far.  Still have clean up of delete records on compaction to do.&lt;/p&gt;</comment>
                            <comment id="12525900" author="stack" created="Sat, 8 Sep 2007 09:36:55 +0000"  >&lt;p&gt;Here&apos;s a patch to finish the delete work.  TestScanner2 is not passing.  Need to investigate...&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
HADOOP-1784 delete
Fix scanners and gets so they work properly in presence of deletes.
Added a deleteAll to remove all cells equal to or older than passed
timestamp.  Fixed compaction so deleted cells &lt;span class=&quot;code-keyword&quot;&gt;do&lt;/span&gt; not make it into
compacted output.

M  src/contrib/hbase/src/test/org/apache/hadoop/hbase/HBaseTestCase.java
    (Loader): Renamed &apos;Loader&apos; Interface as &apos;Incommon&apos; because now does
    more than &apos;loading&apos;.  Added getters, delete, deleteAll and scanners
    and amended implementations &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; HTable and HRegion.
    (createTableDescriptor): Add override so can specifice column versions.
    (FlushCache): Added an &lt;span class=&quot;code-keyword&quot;&gt;interface&lt;/span&gt; that can be implemented by things
    that flush their cache (e.g. HRegion and HTable).
M  src/contrib/hbase/src/test/org/apache/hadoop/hbase/MiniHBaseCluster.java
    (flushcache): Added.
M  src/contrib/hbase/src/test/org/apache/hadoop/hbase/TestTimestamp.java
    (testDelete, testTimestampScanning): Refactored so tests could be
    run from client side inside testTimestamps.
    (doTestDelete, assertOnlyLatest, assertVersions, 
      doTestTimestampScanning, assertScanContentTimestamp, put,
      delete): Added.
M  src/contrib/hbase/src/test/org/apache/hadoop/hbase/MultiRegionTable.java
    Renamed Loader &lt;span class=&quot;code-keyword&quot;&gt;interface&lt;/span&gt; as Incommon.
M  src/contrib/hbase/src/test/org/apache/hadoop/hbase/TestCompaction.java
    Add assertions that on compaction deleted rows are dropped and that
    versions &amp;gt; than column maximum versions are also dropped.
    (setUp, tearDown): Added.
M  src/contrib/hbase/src/java/org/apache/hadoop/hbase/HStore.java
    (getFilesToCompact): Changed so list returned newest to oldest.
    Was doing oldest to newest.
    (compact): Keep running list per row of whats been deleted. Used checking
    later encountered cells.  If key matches deleted cell seen earlier, the
    later cell is not added to compacted output.
    (isDeleted): Added.  Used &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; getting and scanning store files
    in &lt;span class=&quot;code-keyword&quot;&gt;case&lt;/span&gt; there is a delete of a specific cell over in memcache.
    (get): Keep running list per row of whats been deleted. Used checking
    later encountered cells.  If later key matches a deleted cell, the cell
    is not returned.  Also, consult memcache.  Memcache could have a delete
    &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; the record-to-&lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt;.
    (hasEnoughVersions, getKeys): Added.
M  src/contrib/hbase/src/java/org/apache/hadoop/hbase/HRegionServer.java
    (deleteAll): Added.
M src/contrib/hbase/src/java/org/apache/hadoop/hbase/HScannerInterface.java
    javadoc.  Changed next param TreeMap to SortedMap so could have
    HInternalScannerInterface inherit from &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; base..
M  src/contrib/hbase/src/java/org/apache/hadoop/hbase/HConstants.java
   (EMPTY_TEXT): Added.
M  src/contrib/hbase/src/java/org/apache/hadoop/hbase/HTable.java
    javadoc.
    (deleteAll): Added.
M  src/contrib/hbase/src/java/org/apache/hadoop/hbase/HMemcache.java
    (getKeys, isDeleted): Added.
M  src/contrib/hbase/src/java/org/apache/hadoop/hbase/HRegionInterface.java
    (deleteAll): Added.
M  src/contrib/hbase/src/java/org/apache/hadoop/hbase/HInternalScannerInterface.java
    Made it inherit from HScannerInterface.
M  src/contrib/hbase/src/java/org/apache/hadoop/hbase/HAbstractScanner.java
    (next): Changed param from TreeMap to SortedMap.
M  src/contrib/hbase/src/java/org/apache/hadoop/hbase/io/ImmutableBytesWritable.java
    (equals): Allow passing &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt; [].
M  src/contrib/hbase/src/java/org/apache/hadoop/hbase/io/BatchOperation.java
    Redid batch operations as enums.
M  src/contrib/hbase/src/java/org/apache/hadoop/hbase/io/BatchUpdate.java
    javadoc.
M  src/contrib/hbase/src/java/org/apache/hadoop/hbase/HRegion.java
   (get): Fix count of versions across memcache and stores.  We were not
   doing version count properly.  Also fix so properly ordered.
   (next): Changed param from TreeMap to SortedMap.  Keep running list of
   deleted cells used looking at later versions.
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="12526012" author="stack" created="Sun, 9 Sep 2007 17:01:32 +0000"  >&lt;p&gt;Failing TestScanner2 was because after rework, a row of all deleted values would stop the scanner (I heart unit tests).  This patch version 3 includes fix.  Below is an updated commit message.  Includes note of new fix and edits of previous message.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
HADOOP-1784 delete
Fix scanners and gets so they work properly in presence of deletes.
Added a deleteAll to remove all cells equal to or older than passed
timestamp.  Fixed compaction so deleted cells &lt;span class=&quot;code-keyword&quot;&gt;do&lt;/span&gt; not make it out into
compacted output.  Ensure also that versions &amp;gt; column max are dropped
compacting.

M  src/contrib/hbase/src/test/org/apache/hadoop/hbase/HBaseTestCase.java
    (Loader): Renamed &apos;Loader&apos; Interface as &apos;Incommon&apos; -- as in the
    methods HTable and HRegion have in common -- because now does
    more than &apos;loading&apos;.  Added getters, delete, deleteAll and scanners
    and amended the implementations of Incommon particular &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; HTable
    and HRegion.
    (createTableDescriptor): Add override so can specify column versions.
    (FlushCache): Added an &lt;span class=&quot;code-keyword&quot;&gt;interface&lt;/span&gt; that can be implemented by things
    that flush their cache (e.g. HRegion and HTable).
M  src/contrib/hbase/src/test/org/apache/hadoop/hbase/MiniHBaseCluster.java
    (flushcache): Added. Flushes all regionserver regions.
M  src/contrib/hbase/src/test/org/apache/hadoop/hbase/TestTimestamp.java
    (testDelete, testTimestampScanning): Refactored so local tests that
    against an HRegion could be run -- via the Incommon &lt;span class=&quot;code-keyword&quot;&gt;interface&lt;/span&gt;
    -- from the client side with HTable inside testTimestamps.
    (doTestDelete, assertOnlyLatest, assertVersions, 
      doTestTimestampScanning, assertScanContentTimestamp, put,
      delete): Added.
M  src/contrib/hbase/src/test/org/apache/hadoop/hbase/MultiRegionTable.java
    Renamed Loader &lt;span class=&quot;code-keyword&quot;&gt;interface&lt;/span&gt; as Incommon.
M  src/contrib/hbase/src/test/org/apache/hadoop/hbase/TestCompaction.java
    Add assertions that on compaction deleted rows are dropped and that
    versions &amp;gt; than column maximum versions are also dropped.
    (setUp, tearDown): Added.
M  src/contrib/hbase/src/java/org/apache/hadoop/hbase/HStore.java
    javadoc edits
    (getFilesToCompact): Changed so list of tiles is ordered from newest to
    oldest.  Was doing oldest to newest.
    (compact): Keep running list per row of whats been deleted. Used checking
    later encountered cells.  If key matches deleted cell seen earlier, the
    later cell is not added to compacted output.
    (isDeleted): Added.  Checks running list of deletes found locally but
    also consults memcache in &lt;span class=&quot;code-keyword&quot;&gt;case&lt;/span&gt; it has deletes &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; current cell (and
    therefore we should not &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; version of the cell).
    (get): Keep running list per row of whats been deleted. Used checking
    later encountered cells.
    (hasEnoughVersions, getKeys): Added.
M  src/contrib/hbase/src/java/org/apache/hadoop/hbase/HRegionServer.java
    (batchUpdate): If passed timestamp &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; LATEST_TIMESTAMP, then all
    puts get the server&apos;s current timestamp.  Deletes get special handling.
    We fetch the &apos;latest&apos; cell of same row and column and using ITS
    timestamp, we write a delete record.  Otherwise, works as previous.
    (deleteAll): Added.
M src/contrib/hbase/src/java/org/apache/hadoop/hbase/HScannerInterface.java
    javadoc.  Changed next method param from TreeMap to more &lt;span class=&quot;code-keyword&quot;&gt;generic&lt;/span&gt; SortedMap
    so could have HInternalScannerInterface extend &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; Interface.
    A minor inconvenience is that the Close in &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; base &lt;span class=&quot;code-keyword&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt;
    IOException whereas HInternalScannerInterface does not (had to add
    &apos;useless&apos; &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt;/&lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; in two close locations).  Fix..
M  src/contrib/hbase/src/java/org/apache/hadoop/hbase/HConstants.java
   (EMPTY_TEXT, ALL_VERSIONS, LATEST_TIMESTAMP): Added.
M  src/contrib/hbase/src/java/org/apache/hadoop/hbase/HTable.java
    javadoc edit.
    (deleteAll): Added.
M  src/contrib/hbase/src/java/org/apache/hadoop/hbase/HMemcache.java
    Removed a few superfluous List allocations.
    (getKeys, isDeleted): Added.  isDeleted is called when looking at
    store cells to see &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; memcache has a delete to X them out.
M  src/contrib/hbase/src/java/org/apache/hadoop/hbase/HRegionInterface.java
    javadoc edit.
    (deleteAll): Added.
M  src/contrib/hbase/src/java/org/apache/hadoop/hbase/HInternalScannerInterface.java
    Made it inherit from HScannerInterface.  Remove next and close (They
    are inherited).
M  src/contrib/hbase/src/java/org/apache/hadoop/hbase/HAbstractScanner.java
    (next): Changed param from TreeMap to SortedMap.
M  src/contrib/hbase/src/java/org/apache/hadoop/hbase/io/ImmutableBytesWritable.java
    (equals): Works &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; passed bytes too.
M  src/contrib/hbase/src/java/org/apache/hadoop/hbase/io/BatchOperation.java
    Redid batch operations as enums. Made constructors cascade.
M  src/contrib/hbase/src/java/org/apache/hadoop/hbase/io/BatchUpdate.java
    javadoc edit and fixed eclipse complaints about param names being same
    as data member names..
M  src/contrib/hbase/src/java/org/apache/hadoop/hbase/HRegion.java
   (get): Fix count of versions across memcache and stores.  We were not
   doing version aggregating counts properly.  Also fix so properly ordered.
   (deleteAll, update, getKeys, deleteMultiple): Added.
   (next): Changed param from TreeMap to SortedMap.  Keep running list of
   deleted cells used looking at later versions.  If a cell is &apos;deleted&apos;,
   set the &apos;filtered&apos; flag to &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; scan would not go past the &apos;deleted&apos;
   row.  If no results found, &lt;span class=&quot;code-keyword&quot;&gt;do&lt;/span&gt; not &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt; (that there are more 
   possible values).  Made the test of chosenTimestamp &amp;gt;= rather than just
   &amp;gt; when checking to see &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; more (0 may be a legit timestamp).
   (commit): Added a commit override used in unit tests emulating
   batchUpdate operation in HRegionServer.
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt; </comment>
                            <comment id="12526013" author="stack" created="Sun, 9 Sep 2007 17:02:00 +0000"  >&lt;p&gt;Passes all tests locally.  Try Hudson.&lt;/p&gt;</comment>
                            <comment id="12526045" author="hadoopqa" created="Mon, 10 Sep 2007 03:12:05 +0000"  >&lt;p&gt;-1, build or testing failed&lt;/p&gt;

&lt;p&gt;2 attempts failed to build and test the latest attachment &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12365426/delete3.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12365426/delete3.patch&lt;/a&gt; against trunk revision r573777.&lt;/p&gt;

&lt;p&gt;Test results:   &lt;a href=&quot;http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/721/testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/721/testReport/&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/721/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/721/console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Please note that this message is automatically generated and may represent a problem with the automation system and not the patch.&lt;/p&gt;</comment>
                            <comment id="12526050" author="stack" created="Mon, 10 Sep 2007 04:53:50 +0000"  >&lt;p&gt;I suppose its possible that compaction could start after the cacheflush thread finishes (Doesn&apos;t on my old single-processor linux box).&lt;/p&gt;</comment>
                            <comment id="12526051" author="stack" created="Mon, 10 Sep 2007 04:55:20 +0000"  >&lt;p&gt;Print out value passed assertion and change assertion to allow that may 3 or 4 versions of cell instead of just asserting that there are 4 in testCompaction.&lt;/p&gt;</comment>
                            <comment id="12526052" author="stack" created="Mon, 10 Sep 2007 04:56:38 +0000"  >&lt;p&gt;Retry against hudson&lt;/p&gt;</comment>
                            <comment id="12526070" author="hadoopqa" created="Mon, 10 Sep 2007 06:53:29 +0000"  >&lt;p&gt;+1&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12365442/delete4.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12365442/delete4.patch&lt;/a&gt; applied and successfully tested against trunk revision r573777.&lt;/p&gt;

&lt;p&gt;Test results:   &lt;a href=&quot;http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/722/testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/722/testReport/&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/722/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/722/console&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12526189" author="stack" created="Mon, 10 Sep 2007 17:03:04 +0000"  >&lt;p&gt;Committed v4.  Resolving the issue.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10032">
                    <name>Blocker</name>
                                            <outwardlinks description="blocks">
                                        <issuelink>
            <issuekey id="12372715">HBASE-309</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12498893">HBASE-3543</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12365365" name="delete1.patch" size="65426" author="stack" created="Fri, 7 Sep 2007 17:54:16 +0000"/>
                            <attachment id="12365393" name="delete2.patch" size="86058" author="stack" created="Sat, 8 Sep 2007 09:36:55 +0000"/>
                            <attachment id="12365426" name="delete3.patch" size="100123" author="stack" created="Sun, 9 Sep 2007 17:01:32 +0000"/>
                            <attachment id="12365442" name="delete4.patch" size="101519" author="stack" created="Mon, 10 Sep 2007 04:55:20 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 10 Sep 2007 03:12:05 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>25099</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            9 years, 13 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0h6jb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>98321</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>