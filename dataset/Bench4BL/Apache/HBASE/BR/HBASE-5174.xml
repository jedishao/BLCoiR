<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sat Dec 03 15:56:32 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-5174/HBASE-5174.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-5174] Coalesce aborted tasks in the TaskMonitor</title>
                <link>https://issues.apache.org/jira/browse/HBASE-5174</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Some tasks can get repeatedly canceled like flushing when splitting is going on, in the logs it looks like this:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;2012-01-10 19:28:29,164 INFO org.apache.hadoop.hbase.regionserver.MemStoreFlusher: Flush of region test1,,1326223218996.3eea0d89af7b851c3a9b4246389a4f2c. due to global heap pressure
2012-01-10 19:28:29,164 DEBUG org.apache.hadoop.hbase.regionserver.HRegion: NOT flushing memstore for region test1,,1326223218996.3eea0d89af7b851c3a9b4246389a4f2c., flushing=false, writesEnabled=false
2012-01-10 19:28:29,164 DEBUG org.apache.hadoop.hbase.regionserver.MemStoreFlusher: Flush thread woke up because memory above low water=1.6g
2012-01-10 19:28:29,164 INFO org.apache.hadoop.hbase.regionserver.MemStoreFlusher: Flush of region test1,,1326223218996.3eea0d89af7b851c3a9b4246389a4f2c. due to global heap pressure
2012-01-10 19:28:29,164 DEBUG org.apache.hadoop.hbase.regionserver.HRegion: NOT flushing memstore for region test1,,1326223218996.3eea0d89af7b851c3a9b4246389a4f2c., flushing=false, writesEnabled=false
2012-01-10 19:28:29,164 DEBUG org.apache.hadoop.hbase.regionserver.MemStoreFlusher: Flush thread woke up because memory above low water=1.6g
2012-01-10 19:28:29,164 INFO org.apache.hadoop.hbase.regionserver.MemStoreFlusher: Flush of region test1,,1326223218996.3eea0d89af7b851c3a9b4246389a4f2c. due to global heap pressure
2012-01-10 19:28:29,164 DEBUG org.apache.hadoop.hbase.regionserver.HRegion: NOT flushing memstore for region test1,,1326223218996.3eea0d89af7b851c3a9b4246389a4f2c., flushing=false, writesEnabled=false
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;But in the TaskMonitor UI you&apos;ll get MAX_TASKS (1000) displayed on top of the regions. Basically 1000x:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;Tue Jan 10 19:28:29 UTC 2012	Flushing test1,,1326223218996.3eea0d89af7b851c3a9b4246389a4f2c.	ABORTED (since 31sec ago)	Not flushing since writes not enabled (since 31sec ago)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;It&apos;s ugly and I&apos;m sure some users will freak out seeing this, plus you have to scroll down all the way to see your regions. Coalescing consecutive aborted tasks seems like a good solution.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12537952">HBASE-5174</key>
            <summary>Coalesce aborted tasks in the TaskMonitor</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="3">Duplicate</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="jdcryans">Jean-Daniel Cryans</reporter>
                        <labels>
                    </labels>
                <created>Tue, 10 Jan 2012 19:33:59 +0000</created>
                <updated>Tue, 7 May 2013 22:36:00 +0000</updated>
                            <resolved>Tue, 7 May 2013 22:36:00 +0000</resolved>
                                    <version>0.92.0</version>
                                    <fixVersion>0.92.3</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                                                            <comments>
                            <comment id="13183653" author="zhihyu@ebaysf.com" created="Tue, 10 Jan 2012 22:39:19 +0000"  >&lt;p&gt;I think this issue is similar to &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5136&quot; title=&quot;Redundant MonitoredTask instances in case of distributed log splitting retry&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5136&quot;&gt;&lt;del&gt;HBASE-5136&lt;/del&gt;&lt;/a&gt; in that TaskMonitor.get().createStatus() is called imprudently.&lt;br/&gt;
We can store MonitoredTask for flushcache() as a field in HRegion and reuse it.&lt;/p&gt;</comment>
                            <comment id="13183851" author="zhihyu@ebaysf.com" created="Wed, 11 Jan 2012 04:14:21 +0000"  >&lt;p&gt;Maybe we can add the following method to TaskMonitor:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; MonitoredTask createStatus(&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; description, &lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt; obj) {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;TaskMonitor can maintain Map&amp;lt;Class, Map&amp;lt;Integer, MonitoredTask&amp;gt;&amp;gt; where Class key is the class of Object and Integer key is obj.hashCode().&lt;br/&gt;
This way we keep the current usage pattern and reduce redundancy in the mean time.&lt;/p&gt;</comment>
                            <comment id="13184520" author="jdcryans" created="Wed, 11 Jan 2012 23:21:32 +0000"  >&lt;p&gt;Same as in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5136&quot; title=&quot;Redundant MonitoredTask instances in case of distributed log splitting retry&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5136&quot;&gt;&lt;del&gt;HBASE-5136&lt;/del&gt;&lt;/a&gt;, I think we need to know something was aborted. Overwriting it will make it seem that nothing wrong&apos;s happening. Then add coalescing to make sure you only have 1 aborted and not a flood.&lt;/p&gt;</comment>
                            <comment id="13184532" author="tlipcon" created="Wed, 11 Jan 2012 23:25:53 +0000"  >&lt;p&gt;There&apos;s no guarantee that Object.hashCode() is unique - just that it&apos;s usually unique. Would rather coalesce by actual identity (WeakIdentityHashMap?) or by some string (eg region id) than use hashcode.&lt;/p&gt;</comment>
                            <comment id="13184547" author="zhihyu@ebaysf.com" created="Wed, 11 Jan 2012 23:42:12 +0000"  >&lt;p&gt;Looks like I didn&apos;t take State of MonitoredTask into account.&lt;br/&gt;
Personally I think seeing the latest status for a MonitoredTask is fine. To dig deeper, log is always the place to check.&lt;/p&gt;

&lt;p&gt;Map&amp;lt;Class, Map&amp;lt;String, Map&amp;lt;MonitoredTask.State, MonitoredTask&amp;gt;&amp;gt;&amp;gt; is easy to confuse a few people reading the code &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13184562" author="zhihyu@ebaysf.com" created="Wed, 11 Jan 2012 23:59:41 +0000"  >&lt;p&gt;I think the MonitoredTask display should be placed under region server section.&lt;/p&gt;</comment>
                            <comment id="13184571" author="apurtell" created="Thu, 12 Jan 2012 00:09:13 +0000"  >&lt;p&gt;Render the monitored tasks as a treeview, with something like &lt;a href=&quot;http://jquery.bassistance.de/treeview/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://jquery.bassistance.de/treeview/&lt;/a&gt; ? While building the tree, put entries with identical text one level down, as soon as you see something different, move back up to toplevel? Render fully collapsed?&lt;/p&gt;</comment>
                            <comment id="13185175" author="zhihyu@ebaysf.com" created="Thu, 12 Jan 2012 19:36:16 +0000"  >&lt;p&gt;Considering ABORTED task would be cleaned up in 1 minute, I wonder if the complexity introduced is worth it.&lt;/p&gt;</comment>
                            <comment id="13185187" author="apurtell" created="Thu, 12 Jan 2012 19:50:58 +0000"  >&lt;blockquote&gt;&lt;p&gt;Considering ABORTED task would be cleaned up in 1 minute, I wonder if the complexity introduced is worth it.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;On the other hand the display would be cleaner with coalescing, so perhaps failed or aborted tasks could remain displayed for a longer period of time.&lt;/p&gt;</comment>
                            <comment id="13185237" author="jdcryans" created="Thu, 12 Jan 2012 21:09:27 +0000"  >&lt;blockquote&gt;&lt;p&gt;so perhaps failed or aborted tasks could remain displayed for a longer period of time.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Agreed, and if for each time you coalesce tasks together you reset the timer then it could stick around for a while. &lt;/p&gt;</comment>
                            <comment id="13185694" author="jxiang" created="Fri, 13 Jan 2012 17:43:46 +0000"  >&lt;p&gt;Failed or aborted tasks should not be displayed after the retry is succeeded. Otherwise, will it cause confusion?&lt;/p&gt;</comment>
                            <comment id="13185697" author="jdcryans" created="Fri, 13 Jan 2012 17:50:29 +0000"  >&lt;blockquote&gt;&lt;p&gt;Failed or aborted tasks should not be displayed after the retry is succeeded. Otherwise, will it cause confusion?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I&apos;d rather want to know that something went wrong, and since it&apos;s ordered by time you can see that it eventually succeeds.&lt;/p&gt;</comment>
                            <comment id="13185701" author="jxiang" created="Fri, 13 Jan 2012 17:54:36 +0000"  >&lt;p&gt;I meant we can not just show the failed or aborted tasks longer.  We should also show the succeeded one or the retrying one as well, if it failed before and the failed tasks is still showing.&lt;/p&gt;</comment>
                            <comment id="13186527" author="yuzhihong@gmail.com" created="Sun, 15 Jan 2012 16:12:42 +0000"  >&lt;p&gt;A slight variation of my previous proposal:&lt;br/&gt;
MonitoredTaskImpl can maintain Map&amp;lt;String, MonitoredTask&amp;gt; where String key is the description passed to &lt;br/&gt;
TaskMonitor.createStatus(), prepended with MonitoredTask.State and separator string (such as &apos;||&apos;).&lt;/p&gt;

&lt;p&gt;A task may have two entries in the map, one starting with &apos;ABORTED&apos;, the other starting with &apos;COMPLETE&apos;. This corresponds to task retries.&lt;br/&gt;
Special handling would be added to MonitoredTaskImpl.setState().&lt;/p&gt;</comment>
                            <comment id="13650178" author="jdcryans" created="Mon, 6 May 2013 22:30:32 +0000"  >&lt;p&gt;Is it just me or was this somehow fixed in later releases? I just did a PE run and I saw the flushes were aborted only once.&lt;/p&gt;</comment>
                            <comment id="13651389" author="jdcryans" created="Tue, 7 May 2013 22:36:00 +0000"  >&lt;p&gt;So I guess someone fixed it elsewhere.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                            <subtask id="12538132">HBASE-5183</subtask>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 10 Jan 2012 22:39:19 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>223458</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            3 years, 30 weeks, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i02g87:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>12230</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>