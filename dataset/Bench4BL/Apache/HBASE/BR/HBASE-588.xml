<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 02 18:44:40 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-588/HBASE-588.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-588] Still a &apos;hole&apos; in scanners, even after HBASE-532</title>
                <link>https://issues.apache.org/jira/browse/HBASE-588</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Before &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-532&quot; title=&quot;Odd interaction between HRegion.get, HRegion.deleteAll and compactions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-532&quot;&gt;&lt;del&gt;HBASE-532&lt;/del&gt;&lt;/a&gt;, as soon as a flush started, we called snapshot.  Snapshot used to copy current live memcache into a &apos;snapshot&apos; TreeMap inside in Memcache.  This snapshot TreeMap was an accumulation of all snapshots since last flush.   Whenever we took out a scanner, we&apos;d do a copy of this snapshot into a new backing map carried by the scanner (Every outstanding Scanner had complete copy).  Memcache snapshots were cleared when a flush started.   Flushing could take near no time to up to tens of seconds during which an scanners taken out meantime would not see the edits in the snapshot currently being flushed and gets or getFull would also return incorrect answers because the content of the snapshot was not available to them.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-532&quot; title=&quot;Odd interaction between HRegion.get, HRegion.deleteAll and compactions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-532&quot;&gt;&lt;del&gt;HBASE-532&lt;/del&gt;&lt;/a&gt; made it so the snapshot was available until flush was done &amp;#8211; until a file had made it out to disk.  This fixed gets and getFull and any scanners taken out during flushing.  But there is still a hole.  Any outstanding scanners will be going against the state of Store Readers at time scanner was opened; they will not see the new flush file.&lt;/p&gt;

&lt;p&gt;Chatting about this on IRC, Jim suggests that we pass either memcache or current snapshot to each Scanner (Pass the snapshot if not empty).  The notion is that the Scanner would hold on to the Scanner reference should it be cleared by flushing.  Upside is that scanner wouldn&apos;t have to be concerned with the new flush that has been put out to disk.  Downsides are that Scanner data could be way stale if for instance the memcache was near to flushing but we hadn&apos;t done it yet.  And we wouldn&apos;t be clearing the snapshot promptly so would be some memory pressure.&lt;/p&gt;

&lt;p&gt;Another suggestion is that flushing send an event.  Listeners such as outstanding scanners would notice event and open the new Reader.  Would have to skip forward in the new Reader to catch up with the current set but shouldn&apos;t be bad.  Same mechanism could be used to let compactions be moved into place while scanners were outstanding closing down all existing readers skipping to the current &apos;next&apos; location in the new compacted store file.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12394225">HBASE-588</key>
            <summary>Still a &apos;hole&apos; in scanners, even after HBASE-532</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="1" iconUrl="https://issues.apache.org/jira/images/icons/priorities/blocker.png">Blocker</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="stack">stack</assignee>
                                    <reporter username="stack">stack</reporter>
                        <labels>
                    </labels>
                <created>Thu, 17 Apr 2008 17:41:16 +0000</created>
                <updated>Fri, 22 Aug 2008 21:13:14 +0000</updated>
                            <resolved>Thu, 24 Apr 2008 17:07:40 +0000</resolved>
                                                    <fixVersion>0.1.2</fixVersion>
                    <fixVersion>0.2.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12590136" author="stack" created="Thu, 17 Apr 2008 18:21:08 +0000"  >&lt;p&gt;Thinking on the Jim suggestion more, could give a new Scanner both the current memcache and the snapshot; would make it so Scanner was seeing current data at least until flush did a new snapshot (so still unpredictable staleness).  We&apos;re not iterating any more so should be fine if the current memcache gets new updates while its being used by the Scanner.  Would mean each Scanner would hold references to two pretty big Maps.  Would change getFull so I could pass in the &apos;memcache&apos; and &apos;snapshot&apos; to use.&lt;/p&gt;

&lt;p&gt;This might be the way to go for the branch fix since its easy (though unpredictable staleness issue).  Would do the eventing for TRUNK.&lt;/p&gt;</comment>
                            <comment id="12590492" author="stack" created="Fri, 18 Apr 2008 15:55:35 +0000"  >&lt;p&gt;The Jim soln. means keeping around possibly two Maps where one is at least 64M per columnfamily, per region while a scanner is outstanding.&lt;/p&gt;

&lt;p&gt;Making this issue a fix for 0.1.2.&lt;/p&gt;</comment>
                            <comment id="12590516" author="stack" created="Fri, 18 Apr 2008 16:51:15 +0000"  >&lt;p&gt;Adding getNextRow and getFull methods that take foreground and background caches &amp;#8211; e.g. memcache and snapshot &amp;#8211; and amending the MemcacheScanner so it takes foreground and background caches to use in its calls to getNextRow and getFull&lt;/p&gt;</comment>
                            <comment id="12591475" author="stack" created="Tue, 22 Apr 2008 23:03:43 +0000"  >&lt;p&gt;First attempt at fix for this issue.  Doesn&apos;t yet pass all tests so needs more work.&lt;/p&gt;</comment>
                            <comment id="12591476" author="stack" created="Tue, 22 Apr 2008 23:04:55 +0000"  >&lt;p&gt;Uploading again with different name (added v2).  This patch adds Observers who are notified when Store Readers change.&lt;/p&gt;</comment>
                            <comment id="12591527" author="stack" created="Wed, 23 Apr 2008 04:14:40 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
Add a ChangedReadersObserver &lt;span class=&quot;code-keyword&quot;&gt;interface&lt;/span&gt;.  HStore notifies registered
observers when list of HStoreFile Readers changes -- at flush time
and at compaction time.  Scanners are only current observers.

M  src/test/org/apache/hadoop/hbase/MultiRegionTable.java
    (getCacheFlushListern): Renamed as getFlushRequester
M  src/java/org/apache/hadoop/hbase/regionserver/HStore.java
    Added synchronizations on &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.storefiles.
    (activeScanners, newScannerLock): Removed.  We no longer &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; to
    block out scanners when compacting (Turns out same functionality
    &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; blocking scanners is up in HRegion used around closing/split).
    (changedReadersObservers): Added.
    (updateReaders): New method that manages the insertion of &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt;
    reader on flush.  Also calls &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; notifyChangedReadersObservers.
    (notifyChagnedReadersObservers, addChangedReadersObserver,
      deleteChangedReadersObservers): Added.
    (completeCompaction): Previous deleting old store files, we&apos;d
    remove from &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.storefiles and delete all in one step; now we
    &lt;span class=&quot;code-keyword&quot;&gt;do&lt;/span&gt; the remove first, notify all observers of readers, and then
    &lt;span class=&quot;code-keyword&quot;&gt;do&lt;/span&gt; the delete so observers have a chance to clean up any old
    references to files about to be deleted.  Removed all the lockout
    of &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; scanner creation and wait on old scanners to come &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;.
    (updateActiveScanners): Removed.
    (getStorefiles): Accessor.  Added.
M  src/java/org/apache/hadoop/hbase/regionserver/StoreFileScanner.java
    Added implementation of &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ChangedReadersObserver &lt;span class=&quot;code-keyword&quot;&gt;interface&lt;/span&gt;.
    Added a lock that we hold when &apos;nexting&apos; and when changing the
    set of readers out from under the scanner.
    Changed the constructor moving bulk into &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; openReaders method
    that we reuse when list of Readers changes.
    (next): Moved head of &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; method into &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; getNextViableRow (used
    to be called chosenRow and chosenTimestamp).  New method returns
    simple datastructure of row and timestamp (ViableRow).
    (close): On close, remove ourselves as ChangedReadersObserver (we
    added ourselves in the constructor).
    (updateReaders): Changed the set of Readers out from under the
    Scanner.
A  src/java/org/apache/hadoop/hbase/regionserver/ChangedReadersObserver.java
    Added.
M  src/java/org/apache/hadoop/hbase/regionserver/Flusher.java
    Changed name of the &lt;span class=&quot;code-keyword&quot;&gt;interface&lt;/span&gt; we implement from CacheFlushListener to
    FlushRequester.
D  src/java/org/apache/hadoop/hbase/regionserver/CacheFlushListener.java
    Renamed as FlushRequester.
M  src/java/org/apache/hadoop/hbase/regionserver/HStoreScanner.java
    Remove update of activeScanners.
A  src/java/org/apache/hadoop/hbase/regionserver/FlushRequester.java
    Added.  Rename of CacheFlushListener.
M  src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java
    Renamed method getCacheFlushListener as getFlushRequester.
M src/java/org/apache/hadoop/hbase/regionserver/HAbstractScanner.java
    Formatting.
M  src/java/org/apache/hadoop/hbase/regionserver/HRegion.java
    CacheFlushListener was renamed as FlushListener.
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="12591529" author="stack" created="Wed, 23 Apr 2008 04:20:53 +0000"  >&lt;p&gt;Version that goes against latest TRUNK.&lt;/p&gt;

&lt;p&gt;Failed over on cluster.  Need to look into it in morning.  Also fails doing TTI.  Will look at that also.&lt;/p&gt;</comment>
                            <comment id="12591698" author="stack" created="Wed, 23 Apr 2008 17:38:41 +0000"  >&lt;p&gt;Add in fix for this &amp;#8211; though not caused by this patch.  Also some clean up in Flusher added.  Please review.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
Java stack information &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; the threads listed above:
===================================================
&lt;span class=&quot;code-quote&quot;&gt;&quot;IPC Server handler 3 on 60020&quot;&lt;/span&gt;:
        at org.apache.hadoop.hbase.regionserver.Flusher.request(Flusher.java:118)
        - waiting to lock &amp;lt;0xb6526348&amp;gt; (a java.util.HashSet)
        at org.apache.hadoop.hbase.regionserver.HRegion.update(HRegion.java:1527)
        - locked &amp;lt;0xb66c0708&amp;gt; (a java.lang.&lt;span class=&quot;code-object&quot;&gt;Integer&lt;/span&gt;)
        at org.apache.hadoop.hbase.regionserver.HRegion.batchUpdate(HRegion.java:1318)
        at org.apache.hadoop.hbase.regionserver.HRegionServer.batchUpdate(HRegionServer.java:1101)
        at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.apache.hadoop.hbase.ipc.HbaseRPC$Server.call(HbaseRPC.java:413)
        at org.apache.hadoop.ipc.Server$Handler.run(Server.java:896)
&lt;span class=&quot;code-quote&quot;&gt;&quot;regionserver/0:0:0:0:0:0:0:0:60020.cacheFlusher&quot;&lt;/span&gt;:
        at org.apache.hadoop.hbase.regionserver.HRegion.internalFlushcache(HRegion.java:987)
        - waiting to lock &amp;lt;0xb66c0708&amp;gt; (a java.lang.&lt;span class=&quot;code-object&quot;&gt;Integer&lt;/span&gt;)
        at org.apache.hadoop.hbase.regionserver.HRegion.flushcache(HRegion.java:923)
        at org.apache.hadoop.hbase.regionserver.Flusher.flushRegion(Flusher.java:171)
        - locked &amp;lt;0xb6526348&amp;gt; (a java.util.HashSet)
        at org.apache.hadoop.hbase.regionserver.Flusher.run(Flusher.java:94)

Found 1 deadlock.
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="12591699" author="stack" created="Wed, 23 Apr 2008 17:39:41 +0000"  >&lt;p&gt;Please review&lt;/p&gt;

&lt;p&gt;Local tests pass (Running verification that deadlock has been fixed)&lt;/p&gt;</comment>
                            <comment id="12591705" author="stack" created="Wed, 23 Apr 2008 17:48:41 +0000"  >&lt;p&gt;Moved flush request out from under update lock; no need to be inside the lock scope.&lt;/p&gt;</comment>
                            <comment id="12591740" author="jimk" created="Wed, 23 Apr 2008 19:07:21 +0000"  >&lt;p&gt;NotServingRegionException: only whitespace differences&lt;/p&gt;

&lt;p&gt;HStore: fix indentation in completeCompaction&lt;/p&gt;

&lt;p&gt;Otherwise +1. &lt;/p&gt;

&lt;p&gt;I&apos;ll pick up the changes to HRegion and HRegionServer and the Flusher in my patch for &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-572&quot; title=&quot;Backport HBASE-512 to 0.1 branch&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-572&quot;&gt;&lt;del&gt;HBASE-572&lt;/del&gt;&lt;/a&gt; so those will already be back-ported.&lt;/p&gt;</comment>
                            <comment id="12591748" author="stack" created="Wed, 23 Apr 2008 19:22:20 +0000"  >&lt;p&gt;Committed to TRUNK after making Jim suggested changes.&lt;/p&gt;

&lt;p&gt;Working on backport.&lt;/p&gt;</comment>
                            <comment id="12591814" author="jimk" created="Wed, 23 Apr 2008 21:54:34 +0000"  >&lt;p&gt;Add as blocker for 0.1.2&lt;/p&gt;</comment>
                            <comment id="12592134" author="stack" created="Thu, 24 Apr 2008 17:07:40 +0000"  >&lt;p&gt;Committed to BRANCH and TRUNK&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12380736" name="588-v2.patch" size="31361" author="stack" created="Tue, 22 Apr 2008 23:04:55 +0000"/>
                            <attachment id="12380744" name="588-v3.patch" size="37945" author="stack" created="Wed, 23 Apr 2008 04:14:40 +0000"/>
                            <attachment id="12380745" name="588-v4.patch" size="37945" author="stack" created="Wed, 23 Apr 2008 04:20:53 +0000"/>
                            <attachment id="12380775" name="588-v5.patch" size="45998" author="stack" created="Wed, 23 Apr 2008 17:38:41 +0000"/>
                            <attachment id="12380777" name="588-v6.patch" size="46416" author="stack" created="Wed, 23 Apr 2008 17:48:41 +0000"/>
                            <attachment id="12380518" name="588.patch" size="5504" author="stack" created="Fri, 18 Apr 2008 16:51:15 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>6.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 23 Apr 2008 19:07:21 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>25278</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            8 years, 33 weeks, 1 day ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0h887:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>98595</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>