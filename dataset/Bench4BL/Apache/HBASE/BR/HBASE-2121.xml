<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sat Dec 03 17:13:37 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-2121/HBASE-2121.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-2121] HBase client doesn&apos;t retry the right number of times when a region is unavailable</title>
                <link>https://issues.apache.org/jira/browse/HBASE-2121</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;org.apache.hadoop.hbase.client.HConnectionManager$TableServers.getRegionServerWithRetries retries 10 times (by default).   It ends up calling HConnectionManager$TableServers.locateRegionInMeta, which retries 10 times on its own.  So the HBase client is effectively retrying 100 times before giving up, instead of 10 (10 is the default hbase.client.retries.number).&lt;/p&gt;

&lt;p&gt;I&apos;m using hbase trunk HEAD.  I verified this bug is also in 0.20.2.&lt;/p&gt;

&lt;p&gt;Sample call stack:&lt;br/&gt;
 org.apache.hadoop.hbase.client.RegionOfflineException: region offline: mytable,,1263421423787&lt;br/&gt;
 	at org.apache.hadoop.hbase.client.HConnectionManager$TableServers.locateRegionInMeta(HConnectionManager.java:709)&lt;br/&gt;
 	at org.apache.hadoop.hbase.client.HConnectionManager$TableServers.locateRegion(HConnectionManager.java:640)&lt;br/&gt;
 	at org.apache.hadoop.hbase.client.HConnectionManager$TableServers.relocateRegion(HConnectionManager.java:609)&lt;br/&gt;
 	at org.apache.hadoop.hbase.client.HConnectionManager$TableServers.getRegionLocation(HConnectionManager.java:430)&lt;br/&gt;
 	at org.apache.hadoop.hbase.client.ServerCallable.instantiateServer(ServerCallable.java:57)&lt;br/&gt;
 	at org.apache.hadoop.hbase.client.ScannerCallable.instantiateServer(ScannerCallable.java:62)&lt;br/&gt;
 	at org.apache.hadoop.hbase.client.HConnectionManager$TableServers.getRegionServerWithRetries(HConnectionManager.java:1047)&lt;br/&gt;
 	at org.apache.hadoop.hbase.client.HTable$ClientScanner.nextScanner(HTable.java:836)&lt;br/&gt;
 	at org.apache.hadoop.hbase.client.HTable$ClientScanner.initialize(HTable.java:756)&lt;br/&gt;
 	at org.apache.hadoop.hbase.client.HTable.getScanner(HTable.java:354)&lt;br/&gt;
 	at &amp;lt;my application&amp;gt;&lt;/p&gt;

&lt;p&gt;How to reproduce:&lt;br/&gt;
with a trivial HBase client (mine was just trying to scan the table), start the client, take offline the table the client uses, tell the client to start the scan.  The client will not give up after 10 attempts, unlike what it&apos;s supposed to do.&lt;/p&gt;

&lt;p&gt;If locateRegionInMeta is only ever called from getRegionServerWithRetries, then the fix is trivial: just remove the retry logic in there.  If it has some other callers who possibly relied on the retry logic in locateRegionInMeta, then the fix is going to be a bit more involved.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12445471">HBASE-2121</key>
            <summary>HBase client doesn&apos;t retry the right number of times when a region is unavailable</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="3">Duplicate</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="tsuna">Benoit Sigoure</reporter>
                        <labels>
                    </labels>
                <created>Thu, 14 Jan 2010 02:00:18 +0000</created>
                <updated>Mon, 9 Feb 2015 05:51:00 +0000</updated>
                            <resolved>Mon, 9 Feb 2015 05:50:59 +0000</resolved>
                                    <version>0.20.2</version>
                    <version>0.90.0</version>
                                                    <component>Client</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>6</watches>
                                                                <comments>
                            <comment id="12800134" author="tsuna" created="Thu, 14 Jan 2010 06:50:42 +0000"  >&lt;p&gt;Actually, this issue doesn&apos;t require a region &lt;b&gt;server&lt;/b&gt; to be unavailable, just a region itself.&lt;/p&gt;</comment>
                            <comment id="12931632" author="garygilbert" created="Sat, 13 Nov 2010 05:45:01 +0000"  >&lt;p&gt;Not only does it not retry the right number of times,but there is another annoying side-effect.  When the inner loop completes, it sleeps.  However the inner loop is entirely within a synchronized section.  My application had multiple HTable objects in different threads and they waited serially for each of them to finally give up.  As each retry was on the order of an hour, the application didn&apos;t completely fail until all 5 HTable objects had reported the same error, 5 hours later.  The inner loop ought to return the failure outside the synchronized section and be re-driven from above.  Then each of the threads would equally be in midst of retrying.  Granted this was mostly just annoying, but it made it difficult to kill the application in a friendly way. &lt;/p&gt;</comment>
                            <comment id="12931769" author="tsuna" created="Sun, 14 Nov 2010 06:21:54 +0000"  >&lt;p&gt;Hey Gary, if you have a multi-threaded HBase app, I recommend you take a look at asynchbase (&lt;a href=&quot;https://github.com/stumbleupon/asynchbase&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/stumbleupon/asynchbase&lt;/a&gt;).  It&apos;s an alternative HBase client that was designed to be thread-safe and non-blocking from the ground up.&lt;/p&gt;</comment>
                            <comment id="14311834" author="lhofhansl" created="Mon, 9 Feb 2015 05:51:00 +0000"  >&lt;p&gt;I fixed this in a later issue. (can&apos;t find it, right now, but it is fixed)&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12553730">HBASE-5924</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sat, 13 Nov 2010 05:45:01 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>26159</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 42 weeks, 5 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i02bf3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>11451</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>