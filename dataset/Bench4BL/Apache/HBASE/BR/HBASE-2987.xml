<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sat Dec 03 16:17:07 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-2987/HBASE-2987.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-2987] Avoid compressing flush files</title>
                <link>https://issues.apache.org/jira/browse/HBASE-2987</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;I&apos;ve extended Hadoop compression to use the LZMA algorithm and HFile to provide an option for selecting it. With typical input, the LZMA algorithm produces 30% smaller output than GZIP at max compression (which is currently the best available option for HFiles) and 15% smaller output than BZIP2. I&apos;m aware of the &quot;disk is cheap&quot; mantra but for a multi-peta-scale archival application, where we still want random read and random update capabilities, 30% less disk is a substantial cost savings. LZMA compression speed is ~1 MB/second on a 2 GHz CPU, decompression speed is ~20 MB/second. This is 4x slower than BZIP2 to compress but at least 2x faster to decompress for 15% better results. For an archival application these properties would be acceptable if not for the very significant problem of flushing. Obviously the low throughput of the LZMA compressor means it is unsuitable for foreground processing. In HBase terms, it can be used for compaction but not for flush files. &lt;/p&gt;

&lt;p&gt;Attached patch, against 0.20 branch, turns off compression for flushes. This could be implemented as a config option, but I wonder if with the possible exception of LZO should we be compressing flushes at all? Any significant reduction in flush throughput can stall writers during periods of high write activity. Maybe globally disabling compression on flush flies is a good thing? &lt;/p&gt;

&lt;p&gt;I have tested this and confirmed the result is the desired behavior: &apos;file&apos; shows flush files as uncompressed data, compacted files as compressed. Compaction merges files with different compression properties. LZMA provides rather extreme space savings over the other available options without slowing down writers if the regionservers are configured with enough write buffering to ride over the significantly lengthened compaction times.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12473881">HBASE-2987</key>
            <summary>Avoid compressing flush files</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="3">Duplicate</resolution>
                                        <assignee username="apurtell">Andrew Purtell</assignee>
                                    <reporter username="apurtell">Andrew Purtell</reporter>
                        <labels>
                    </labels>
                <created>Sat, 11 Sep 2010 00:01:22 +0000</created>
                <updated>Tue, 28 Sep 2010 09:33:59 +0000</updated>
                            <resolved>Mon, 13 Sep 2010 06:53:05 +0000</resolved>
                                                                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12908248" author="streamy" created="Sat, 11 Sep 2010 00:09:51 +0000"  >&lt;p&gt;I don&apos;t follow why flushes are foreground but compactions are background?  We can flush while serving reads and taking writes.&lt;/p&gt;

&lt;p&gt;The only difference would be during region movement, in which case, double flush prevents unavailability due to long-running flushes.&lt;/p&gt;

&lt;p&gt;Otherwise, it&apos;s actually the compactions that we wait for when we put up the update wall not flushes, unless you&apos;re talking about the first flush not finishing before it&apos;s time for the second flush?&lt;/p&gt;</comment>
                            <comment id="12908252" author="apurtell" created="Sat, 11 Sep 2010 00:16:32 +0000"  >&lt;blockquote&gt;&lt;p&gt;unless you&apos;re talking about the first flush not finishing before it&apos;s time for the second flush?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes, and the write gate comes down because the memstore limit on the region is reached.&lt;/p&gt;




</comment>
                            <comment id="12908253" author="apurtell" created="Sat, 11 Sep 2010 00:29:33 +0000"  >&lt;p&gt;Also I agree slow compactions can trip up writers also. In this case as I experimented I was able to tune the system so compactions were not significant but could do nothing about slow flushes. &lt;/p&gt;</comment>
                            <comment id="12908354" author="streamy" created="Sat, 11 Sep 2010 19:09:05 +0000"  >&lt;p&gt;I think the update wall can come up when memstore reaches it&apos;s max limit and you can&apos;t flush.  You can&apos;t flush because you&apos;ve reached the blockingStoreFiles count and have to wait for a compaction to complete.  Or is there another situation where you have snapshotted, waiting for the flush, and the memstore fills before the snapshot gets flushed?&lt;/p&gt;

&lt;p&gt;Prioritizing compactions has shown to help the first case.  I don&apos;t think I&apos;ve seen the second case in practice.&lt;/p&gt;

&lt;p&gt;In any case, I&apos;d still be +1 on making these things configurable.&lt;/p&gt;</comment>
                            <comment id="12908355" author="streamy" created="Sat, 11 Sep 2010 19:12:44 +0000"  >&lt;p&gt;But I don&apos;t think that default behavior should be to override a users compression settings for flushes.&lt;/p&gt;</comment>
                            <comment id="12908391" author="apurtell" created="Sun, 12 Sep 2010 00:50:57 +0000"  >&lt;blockquote&gt;&lt;p&gt;Or is there another situation where you have snapshotted, waiting for the flush, and the memstore fills before the snapshot gets flushed? ... I don&apos;t think I&apos;ve seen the second case in practice.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;You have not tried to use LZMA compression before, or something like it. I&apos;m not saying that kind of thing would be common. &lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;But I don&apos;t think that default behavior should be to override a users compression settings for flushes.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I&apos;ll submit a proposal to RB.&lt;/p&gt;

</comment>
                            <comment id="12908400" author="streamy" created="Sun, 12 Sep 2010 01:49:48 +0000"  >&lt;blockquote&gt;&lt;p&gt;You have not tried to use LZMA compression before, or something like it. I&apos;m not saying that kind of thing would be common. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Agreed (isn&apos;t that an argument to not change default?).&lt;/p&gt;

&lt;p&gt;Let me try to be more clear on my point.  In all tests I&apos;ve run previously (w/ and w/o LZO compression) it is not the flush that bites you, it&apos;s the compaction.  If you are tripping over the flush build-up, you are worse off than other tests because normally that is fine and it is the compactions that end up blocking stuff.&lt;/p&gt;

&lt;p&gt;Disabling compression for flushes may prevent the flushing from stacking but then you will get hit by the even longer-running compactions.&lt;/p&gt;

&lt;p&gt;Thinking through this again, perhaps what I&apos;m really concluding is that it might make sense to disable compression on flushes &lt;b&gt;and&lt;/b&gt; minor compactions and to enable it on major compactions (in an archival example like this using LZMA or the like).  It could even make sense to use something like LZO on flushes/minors and LZMA on majors.&lt;/p&gt;</comment>
                            <comment id="12908403" author="apurtell" created="Sun, 12 Sep 2010 02:18:42 +0000"  >&lt;blockquote&gt;&lt;p&gt;... it might make sense to disable compression on flushes &lt;b&gt;and&lt;/b&gt; minor compactions and to enable it on major compactions (in an archival example like this using LZMA or the like).  It could even make sense to use something like LZO on flushes/minors and LZMA on majors.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Makes sense. I&apos;ll work it up.&lt;/p&gt;
</comment>
                            <comment id="12908645" author="apurtell" created="Mon, 13 Sep 2010 06:53:05 +0000"  >&lt;p&gt;Continued as &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2988&quot; title=&quot;Support alternate compression for major compactions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2988&quot;&gt;&lt;del&gt;HBASE-2988&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12473955">HBASE-2988</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12454351" name="HBASE-2987.patch" size="1387" author="apurtell" created="Sat, 11 Sep 2010 00:02:03 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sat, 11 Sep 2010 00:09:51 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>32862</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            6 years, 12 weeks, 5 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0hk6n:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>100532</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>