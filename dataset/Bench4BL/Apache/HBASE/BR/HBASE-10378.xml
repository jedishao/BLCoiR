<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sat Dec 03 19:39:41 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-10378/HBASE-10378.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-10378] Divide HLog interface into User and Implementor specific interfaces</title>
                <link>https://issues.apache.org/jira/browse/HBASE-10378</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5937&quot; title=&quot;Refactor HLog into an interface.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5937&quot;&gt;&lt;del&gt;HBASE-5937&lt;/del&gt;&lt;/a&gt; introduces the HLog interface as a first step to support multiple WAL implementations. This interface is a good start, but has some limitations/drawbacks in its current state, such as:&lt;br/&gt;
1) There is no clear distinction b/w User and Implementor APIs, and it provides APIs both for WAL users (append, sync, etc) and also WAL implementors (Reader/Writer interfaces, etc). There are APIs which are very much implementation specific (getFileNum, etc) and a user such as a RegionServer shouldn&apos;t know about it.&lt;br/&gt;
2) There are about 14 methods in FSHLog which are not present in HLog interface but are used at several places in the unit test code. These tests typecast HLog to FSHLog, which makes it very difficult to test multiple WAL implementations without doing some ugly checks.&lt;/p&gt;

&lt;p&gt;I&apos;d like to propose some changes in HLog interface that would ease the multi WAL story:&lt;/p&gt;

&lt;p&gt;1) Have two interfaces WAL and WALService. WAL provides APIs for implementors. WALService provides APIs for users (such as RegionServer).&lt;br/&gt;
2) A skeleton implementation of the above two interface as the base class for other WAL implementations (AbstractWAL). It provides required fields for all subclasses (fs, conf, log dir, etc). Make a minimal set of test only methods and add this set in AbstractWAL.&lt;br/&gt;
3) HLogFactory returns a WALService reference when creating a WAL instance; if a user need to access impl specific APIs (there are unit tests which get WAL from a HRegionServer and then call impl specific APIs), use AbstractWAL type casting,&lt;br/&gt;
4) Make TestHLog abstract and let all implementors provide their respective test class which extends TestHLog (TestFSHLog, for example).&lt;/p&gt;</description>
                <environment></environment>
        <key id="12689687">HBASE-10378</key>
            <summary>Divide HLog interface into User and Implementor specific interfaces</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="12687287">HBASE-10278</parent>
                                    <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="busbey">Sean Busbey</assignee>
                                    <reporter username="v.himanshu">Himanshu Vashishtha</reporter>
                        <labels>
                    </labels>
                <created>Sun, 19 Jan 2014 00:43:14 +0000</created>
                <updated>Thu, 20 Nov 2014 23:57:16 +0000</updated>
                            <resolved>Thu, 20 Nov 2014 23:57:16 +0000</resolved>
                                                    <fixVersion>2.0.0</fixVersion>
                                    <component>wal</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>21</watches>
                                                                <comments>
                            <comment id="13875786" author="v.himanshu" created="Sun, 19 Jan 2014 00:50:53 +0000"  >&lt;p&gt;Attaching an initial patch implementing the above mentioned changes. Please have a look at the overall approach. Thanks.&lt;/p&gt;

&lt;p&gt;For testing, mvn clean test -PrunAllTests passes for both hadoop1 and hadoop2. Also ran the patched version on a test cluster/killing nodes and doing log splitting for basic sanity test. It looks good.&lt;/p&gt;</comment>
                            <comment id="13875796" author="hadoopqa" created="Sun, 19 Jan 2014 02:41:14 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12623840/10378-1.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12623840/10378-1.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;br/&gt;
  ATTACHMENT ID: 12623840&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 128 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop1.0&lt;/font&gt;.  The patch compiles against the hadoop 1.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop1.1&lt;/font&gt;.  The patch compiles against the hadoop 1.1 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 1 warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 site&lt;/font&gt;.  The patch appears to cause mvn site goal to fail.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8469//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8469//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8469//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8469//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8469//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8469//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8469//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8469//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8469//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8469//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8469//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8469//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8469//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8469//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8469//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8469//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8469//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8469//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8469//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8469//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8469//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8469//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13876174" author="ram_krish" created="Mon, 20 Jan 2014 06:17:23 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=himanshu%40cloudera.com&quot; class=&quot;user-hover&quot; rel=&quot;himanshu@cloudera.com&quot;&gt;Himanshu Vashishtha&lt;/a&gt;&lt;br/&gt;
Had a glance at the patch.  The WAL and WALService looks good.  &lt;br/&gt;
I have some basic questions, incase of rollWriter and replications (including starting the syncer and writer threads), should we have an implemenation for the WALservice where based on the number of hLogs those many syncer and writer threads need to be started along with the replicaiton services for them?  &lt;br/&gt;
Currently the HRS just instantiates one HLog and starts them.  What do you say?&lt;br/&gt;
I was having an idea of defining an interface called WALGrouper and every region server would use an type of this WALGrouper and this grouper would know how many hLog instance he is creating and for every instance those syncer and writer threads would be started. &lt;br/&gt;
And the api &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; WALService getWAL() {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt; 
&lt;p&gt;How will this make sense when there are more than one hlog for that RS?  I know that in ur current implementation there are only 2 HLog and one among them is going to be active? But what if my multiwal impl is not that way and i may have more than one active HLog?  &lt;br/&gt;
I can discuss with you offline too on some my concerns and questions that I had while doing &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8610&quot; title=&quot;Introduce interfaces to support MultiWAL&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-8610&quot;&gt;&lt;del&gt;HBASE-8610&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="13876942" author="v.himanshu" created="Mon, 20 Jan 2014 22:51:33 +0000"  >&lt;p&gt;Thanks for taking a look at the patch. These are really good questions, and are applicable for the current WAL implementation as well.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;should we have an implemenation for the WALservice where based on the number of hLogs those many syncer and writer threads need to be started along with the replicaiton services for them? Currently the HRS just instantiates one HLog and starts them. What do you say?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yes,  that is definitely one possible implementation.&lt;/p&gt;

&lt;p&gt;Re: getWAL() api wrt grouping WALs:&lt;br/&gt;
Yes, the grouping logic needs to be extracted and made available, it can be either in HRS, or in the WAL implementor. One way is to use an array of WALService instances in HRegionServer, and let the WALGroup return an array to the region server? That way, the region server could invoke its usual method (append/sync, etc) just like it does currently? The grouping logic would be present in HRs in this case.&lt;br/&gt;
Or, have the grouping logic in WAL impl and rewrite the getWAL to use this grouping knowledge? i.e., getWAL passes a Hregioninfo to the underlying Group-WAL-impl, and the underlying Group-wal impl returns a WALService instance based on its grouping. In either case, I see WALGroup can extend &#197;bstractWAL interface. What do you think? Or, let&apos;s chat offline?&lt;/p&gt;</comment>
                            <comment id="13877189" author="ram_krish" created="Tue, 21 Jan 2014 04:54:18 +0000"  >&lt;p&gt;We could discuss offline too, not an issue. and then consolidate our thoughts here. &lt;br/&gt;
&amp;gt;bq.Or, have the grouping logic in WAL impl and rewrite the getWAL to use this grouping knowledge? i.e., getWAL passes a Hregioninfo to the underlying Group-WAL-impl, and the underlying Group-wal impl returns a WALService instance based on its grouping.&lt;br/&gt;
I would prefer this.  Let HRS not deal with these things.  The HRS at any point of time should only say instantiate WAL and based on what grouping or mechanism we select those many HLogs should be instantiated and the supporting feature like syncer,writers and replication for every HLog should be done inside the Group-WAL impl.  &lt;br/&gt;
Another API which I was not sure how to go about was the rollWriter() called from admin. Currently it returns set of regions that were flushed on calling rollWriter.  &lt;br/&gt;
Now it should be an array of regions or a list of regions.  We can discuss offline, fine with it.&lt;/p&gt;</comment>
                            <comment id="13877193" author="stack" created="Tue, 21 Jan 2014 05:03:48 +0000"  >&lt;blockquote&gt;&lt;p&gt;should we have an implemenation for the WALservice where based on the number of hLogs those many syncer and writer threads...&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Or shouldn&apos;t the above be encapsulated inside the implementation and not pass out from behind the WALService Interface?  (Which seems to be what you favor in your later comment &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ram_krish&quot; class=&quot;user-hover&quot; rel=&quot;ram_krish&quot;&gt;ramkrishna.s.vasudevan&lt;/a&gt;)&lt;/p&gt;
</comment>
                            <comment id="13877195" author="ram_krish" created="Tue, 21 Jan 2014 05:12:03 +0000"  >&lt;p&gt;Yes Stack. I meant the implementation of the WALService.  May be we can have an Abstract implementation for those like where we call Sycner.start(), writer.start() etc.&lt;/p&gt;
{edit}
&lt;p&gt; : Changed spelling&lt;/p&gt;</comment>
                            <comment id="13877251" author="v.himanshu" created="Tue, 21 Jan 2014 06:16:06 +0000"  >&lt;p&gt;Yes, hiding the impl specific details from HRS is one big point of this feature. Looks like we both are on same page re getWAL() api? That is, hiding the details in the impl.&lt;/p&gt;

&lt;p&gt;Re: rollWriter()&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;... called from admin. Currently it returns set of regions that were flushed on calling rollWriter.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;No, it doesn&apos;t flush any region. It just returns regions which the caller should flush in order to archive the oldest WAL file. Actually, this return value is never used by the shell. &lt;br/&gt;
Anyway, though rolling is an internal stuff, we have exposed it as an API in shell. I would again go the same route and let WAL impl decide how to deal with it. For example, TableGroupWALImpl could roll the logs for all tables. Since it requires user&apos;s input, we can also overload the API as per WAL requirement?&lt;br/&gt;
As mentioned in the parent jira, I will take a stab at it once basic switching is done.&lt;/p&gt;</comment>
                            <comment id="13877265" author="ram_krish" created="Tue, 21 Jan 2014 06:30:08 +0000"  >&lt;blockquote&gt;&lt;p&gt;Since it requires user&apos;s input, we can also overload the API as per WAL requirement?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Ok. Fine with it.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Looks like we both are on same page re getWAL() api? That is, hiding the details in the impl.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;+1.  We are on the same page.&lt;br/&gt;
I can send you what I made on this WAL Grouping things.  &lt;br/&gt;
One issue would be with performance inside getWAL api.  Currently getWAL is getting called on every region Opening in OPenRegionHandler.  So when multiple regions of the same table arrive we would add up synchronization there and that would slow down reigon opening. &lt;/p&gt;</comment>
                            <comment id="13877302" author="v.himanshu" created="Tue, 21 Jan 2014 07:29:35 +0000"  >&lt;p&gt;Sounds great Ram krishna. &lt;br/&gt;
Btw, I tried sending an email to ramakrishna.s.vasudevan@gmail.com, but it bounced back. Let me know your email id and we can chat more on it offline. Thanks.&lt;/p&gt;</comment>
                            <comment id="13880458" author="v.himanshu" created="Thu, 23 Jan 2014 22:31:51 +0000"  >&lt;p&gt;Fixed the javadoc warning. Please review. Thanks.&lt;/p&gt;</comment>
                            <comment id="13881949" author="hadoopqa" created="Sat, 25 Jan 2014 17:10:32 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12624933/10378-2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12624933/10378-2.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;br/&gt;
  ATTACHMENT ID: 12624933&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 128 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop1.0&lt;/font&gt;.  The patch compiles against the hadoop 1.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop1.1&lt;/font&gt;.  The patch compiles against the hadoop 1.1 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 site&lt;/font&gt;.  The patch appears to cause mvn site goal to fail.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8507//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8507//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8507//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8507//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8507//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8507//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8507//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8507//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8507//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8507//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8507//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8507//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8507//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8507//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8507//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8507//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8507//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8507//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8507//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8507//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8507//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8507//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13885058" author="stack" created="Wed, 29 Jan 2014 06:26:47 +0000"  >&lt;p&gt;I like the doing away with the awful HLog name replacing it w/ WAL.&lt;/p&gt;

&lt;p&gt;I suppose we should remove NamespaceUpgrade.java now we are past out 0.96.  But that is not for this issue.&lt;/p&gt;

&lt;p&gt;This is a bit odd, returning a &apos;Service&apos; when we asked for a &apos;Log&apos;:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;public HLog getLog() {&lt;br/&gt;
+  public WALService getLog() 
{
     return this.log;
   }&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;Similar here, final WALService wal, in that the parameter name should be walService, not just wal... and here &apos;WALService log&apos;&lt;/p&gt;

&lt;p&gt;Here in the comment it says:&lt;/p&gt;

&lt;p&gt;+   * need to explicitly close the &lt;/p&gt;
{@link WALService} it created too; &lt;br/&gt;
&lt;br/&gt;
... but I&apos;d think we&apos;d start and stop a Service, not &apos;close&apos; it.  What you think?&lt;br/&gt;
&lt;br/&gt;
It shouldn&apos;t be &apos;{@link WALService}
&lt;p&gt; file. &apos; a file here... how WALService is implemented should not be a concern of the user (whether it uses files or not).  This is a &apos;nit&apos;.&lt;/p&gt;

&lt;p&gt;Yeah, you &apos;stop&apos; a service I&apos;d say: &apos;+   * The &lt;/p&gt;
{@link WALService}
&lt;p&gt; for the created region needs to be closed explicitly.&apos;&lt;/p&gt;

&lt;p&gt;Fix this:&lt;/p&gt;

&lt;p&gt;  final WALService hlog,&lt;/p&gt;

&lt;p&gt;This should be cleaned up:&lt;/p&gt;

&lt;p&gt;+    WALService effectiveHLog = hlog;&lt;/p&gt;

&lt;p&gt;something like &apos;+    WALService effectiveWALService = walService;&apos;&lt;/p&gt;

&lt;p&gt;Fix &apos;    final WALService hlog)&apos;&lt;/p&gt;

&lt;p&gt;+  protected volatile WALService hlogForMeta; should be &apos;walServiceForMeta&apos;.&lt;/p&gt;

&lt;p&gt;+  private WALService getMetaWAL() throws IOException { should be getMetaWALService&lt;/p&gt;

&lt;p&gt;+  protected WALService instantiateHLog( should be instantiateWALService...&lt;/p&gt;

&lt;p&gt;I think you get the point.&lt;/p&gt;

&lt;p&gt;I skipped forward to the Interfaces:&lt;/p&gt;

&lt;p&gt;It is a pity that rollWriter has to be let outside of WALService but there is probably little to do about it.&lt;/p&gt;

&lt;p&gt;stop rather than &apos;close&apos;.  Does it need a &apos;start&apos;?&lt;/p&gt;

&lt;p&gt;+  // TODO: Do we need all these versions of sync?&lt;br/&gt;
+  void hsync() throws IOException;&lt;br/&gt;
+&lt;br/&gt;
+  void hflush() throws IOException;&lt;br/&gt;
+&lt;br/&gt;
+  void sync() throws IOException;&lt;br/&gt;
+&lt;br/&gt;
+  void sync(long txid) throws IOException;&lt;/p&gt;

&lt;p&gt;?&lt;/p&gt;

&lt;p&gt;Does this have to be in the WALService &amp;#8211; +  WALCoprocessorHost getCoprocessorHost();?&lt;/p&gt;

&lt;p&gt;Otherwise, the WALService looks nice and clean.&lt;/p&gt;

&lt;p&gt;These belong in WALService instead?&lt;/p&gt;

&lt;p&gt;+  /**&lt;br/&gt;
+   * @return the total number of WAL files (including rolled WALs).&lt;br/&gt;
+   */&lt;br/&gt;
+  int getNumLogFiles();&lt;br/&gt;
+&lt;br/&gt;
+  /**&lt;br/&gt;
+   * returns the number of rolled WAL files.&lt;br/&gt;
+   */&lt;br/&gt;
+  int getNumRolledLogFiles();&lt;br/&gt;
+&lt;br/&gt;
+  /**&lt;br/&gt;
+   * @return the path of the current WAL file.&lt;br/&gt;
+   */&lt;br/&gt;
+  Path getCurrentFileName();&lt;br/&gt;
+&lt;/p&gt;

&lt;p&gt;+  /**&lt;br/&gt;
+   * Get LowReplication-Roller status&lt;br/&gt;
+   * @return lowReplicationRollEnabled&lt;br/&gt;
+   */&lt;br/&gt;
+  boolean isLowReplicationRollEnabled();&lt;/p&gt;

&lt;p&gt;We should get rid of this:&lt;/p&gt;

&lt;p&gt;+  // TODO: Remove this Writable.&lt;br/&gt;
+  class Entry implements Writable {&lt;/p&gt;

&lt;p&gt;Should just be the pb.  But another patch.&lt;/p&gt;

&lt;p&gt;Otherwise WAL looks good.&lt;/p&gt;


</comment>
                            <comment id="13889294" author="hv.csuoa@gmail.com" created="Mon, 3 Feb 2014 08:02:07 +0000"  >&lt;p&gt;Thanks for the comments Stack. I would get back on this once I am back.&lt;/p&gt;


</comment>
                            <comment id="14102596" author="busbey" created="Tue, 19 Aug 2014 18:23:05 +0000"  >&lt;p&gt;This has turned into a bit of a time sink. Now that I have small tests passing, I&apos;m posting some WIP to get suggestions early about parts that are worth breaking off into different tickets. Note that the RB patch is definitely not something that&apos;s ready to go in.&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://github.com/busbey/hbase/tree/HBASE-10378&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;github branch&lt;/a&gt; - has both the original work from this ticket rebased onto master and then follow on changes.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;https://reviews.apache.org/r/24857/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;reviewboard for the net changes on top of master&lt;/a&gt; (warning: it&apos;s 10 pages)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;RB description has the major compatibility goals and current failings. The github WIP commit message has questions that I&apos;m trying to work out in my head. I&apos;d love to get feedback on the compatibility stuff and suggestions on the open questions.&lt;/p&gt;</comment>
                            <comment id="14112786" author="busbey" created="Wed, 27 Aug 2014 20:35:17 +0000"  >&lt;p&gt;As a sanity check for the approach taken in this ticket &lt;a href=&quot;https://reviews.apache.org/r/25114/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;I&apos;ve outlined how I think I&apos;ll be able to get from here to the improvements for wals throughput, mttr, and write latency&lt;/a&gt;. If folks have any feedback on how this looks I&apos;d appreciate it. Hopefully commenting on unrendered markdown in ReviewBoard isn&apos;t too terrible.&lt;/p&gt;</comment>
                            <comment id="14181881" author="busbey" created="Thu, 23 Oct 2014 20:17:23 +0000"  >&lt;p&gt;patch up on review board that keeps enough compatibility that I think it would work for branch-1. (ping &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=enis&quot; class=&quot;user-hover&quot; rel=&quot;enis&quot;&gt;Enis Soztutar&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;The current set of changes to the API should be sufficient to allow for multiple wals per region server, so I subsumed &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8610&quot; title=&quot;Introduce interfaces to support MultiWAL&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-8610&quot;&gt;&lt;del&gt;HBASE-8610&lt;/del&gt;&lt;/a&gt; and attached its last targeted version.&lt;/p&gt;</comment>
                            <comment id="14183989" author="busbey" created="Sat, 25 Oct 2014 06:04:10 +0000"  >&lt;p&gt;Adding release notes in progress.&lt;/p&gt;</comment>
                            <comment id="14184001" author="busbey" created="Sat, 25 Oct 2014 06:33:07 +0000"  >&lt;p&gt;cancelled patch while I fix stack&apos;s last round of comments and I make the change to HLogKey binary compatible.&lt;/p&gt;</comment>
                            <comment id="14189664" author="busbey" created="Thu, 30 Oct 2014 05:36:12 +0000"  >&lt;p&gt;Updating the release notes based on RB feedback and the current (yet to be posted) reworking of the code to maintain more backwards compatibility.&lt;/p&gt;

&lt;p&gt;I believe at this point there aren&apos;t any backwards incompatibilities with Phoenix&apos;s non-test code. There is impact in both unit and integration tests.&lt;/p&gt;

&lt;p&gt;The replication code is further into the guts of the write-ahead-log than the coprocessors were, so it has changed more. Projects that rely on hooking into that code path will be broken. This includes the only prominent example I could think of, the HBase Lily Indexer. Since they have a compatibility layer already, these changes should just mean that they need an updated one based on their current 0.98 shim that accounts for the class renames in this patch.&lt;/p&gt;

&lt;p&gt;Open to suggestions on other downstream impacts I should look for.&lt;/p&gt;</comment>
                            <comment id="14213848" author="busbey" created="Sun, 16 Nov 2014 04:13:00 +0000"  >&lt;p&gt;Latest patch out of reviewboard rebased onto current master.&lt;/p&gt;</comment>
                            <comment id="14213859" author="hadoopqa" created="Sun, 16 Nov 2014 05:58:38 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12681773/HBASE-10378.3.patch.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12681773/HBASE-10378.3.patch.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;br/&gt;
  ATTACHMENT ID: 12681773&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 349 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 25 warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 3861 checkstyle errors (more than the trunk&apos;s current 3788 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 findbugs&lt;/font&gt;.  The patch appears to introduce 4 new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces the following lines longer than 100:&lt;br/&gt;
    +set corecommands=shell master regionserver thrift thrift2 rest avro hlog wal hbck hfile zookeeper zkcli upgrade mapredcp&lt;br/&gt;
+   * Protocol buffer version of WALKey; see WALKey comment, not really a key but WALEdit header for some KVs&lt;br/&gt;
+     * Protocol buffer version of WALKey; see WALKey comment, not really a key but WALEdit header for some KVs&lt;br/&gt;
+// Protocol buffer version of WALKey; see WALKey comment, not really a key but WALEdit header for some KVs&lt;br/&gt;
+  public void preWALRestore(ObserverContext&amp;lt;? extends RegionCoprocessorEnvironment&amp;gt; env, HRegionInfo info,&lt;br/&gt;
+  public boolean preWALWrite(ObserverContext&amp;lt;? extends WALCoprocessorEnvironment&amp;gt; ctx, HRegionInfo info,&lt;br/&gt;
+  public void postWALWrite(ObserverContext&amp;lt;? extends WALCoprocessorEnvironment&amp;gt; ctx, HRegionInfo info,&lt;br/&gt;
+          Path logDir = new Path(rootdir, DefaultWALProvider.getWALDirectoryName(serverName.toString()));&lt;br/&gt;
+        Path logDir = new Path(this.rootdir, DefaultWALProvider.getWALDirectoryName(serverName.toString()));&lt;br/&gt;
+      return createHRegion(info, rootDir, tableDir, conf, hTableDescriptor, wal, initialize, ignoreWAL);&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 site&lt;/font&gt;.  The patch appears to cause mvn site goal to fail.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11692//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11692//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11692//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11692//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11692//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11692//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11692//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11692//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11692//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11692//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11692//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11692//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11692//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11692//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11692//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11692//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11692//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11692//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11692//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11692//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11692//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11692//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11692//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11692//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11692//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11692//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Javadoc warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11692//artifact/patchprocess/patchJavadocWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11692//artifact/patchprocess/patchJavadocWarnings.txt&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11692//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11692//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14215184" author="busbey" created="Mon, 17 Nov 2014 21:12:49 +0000"  >&lt;p&gt;updated patch with most of the changed suggested by QA Bot.&lt;/p&gt;

&lt;p&gt;Didn&apos;t wrap the long line in hbase.cmd because&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;I can&apos;t tell if our Windows scripts are for PowerShell or earlier and line continuations are handled differently in those two cases&lt;/li&gt;
	&lt;li&gt;there are a ton of other lines &amp;gt; 100 columns in there already.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14215351" author="hadoopqa" created="Mon, 17 Nov 2014 23:06:13 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12681992/HBASE-10378.4.patch.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12681992/HBASE-10378.4.patch.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;br/&gt;
  ATTACHMENT ID: 12681992&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 349 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 1 warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 3855 checkstyle errors (more than the trunk&apos;s current 3788 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces the following lines longer than 100:&lt;br/&gt;
    +set corecommands=shell master regionserver thrift thrift2 rest avro hlog wal hbck hfile zookeeper zkcli upgrade mapredcp&lt;br/&gt;
+      final WAL wal = walFactory.getMetaWAL(HRegionInfo.FIRST_META_REGIONINFO.getEncodedNameAsBytes());&lt;br/&gt;
+      LOG.warn(&quot;Exception attempting to fetch wal coprocessor information for the common wal; skipping.&quot;);&lt;br/&gt;
+        LOG.warn(&quot;Exception attempting to fetch wal coprocessor information for region &quot; + region + &quot;; skipping.&quot;);&lt;br/&gt;
+        LOG.error(&quot;Could not retrieve WAL information for region &quot; + r.getRegionInfo() + &quot;; not adding to moved regions.&quot;);&lt;br/&gt;
+  private final ConcurrentHashMap&amp;lt;WAL, Boolean&amp;gt; walNeedsRoll = new ConcurrentHashMap&amp;lt;WAL, Boolean&amp;gt;();&lt;br/&gt;
+          final byte [][] regionsToFlush = wal.rollWriter(periodic || entry.getValue().booleanValue());&lt;br/&gt;
+          // in the case of the null suffix, we need to make sure the filename ends with the timestamp.&lt;br/&gt;
+          return org.apache.commons.lang.StringUtils.isNumeric(fileNameString.substring(prefixPathStr.length()));&lt;br/&gt;
+      throw new IllegalArgumentException(&quot;The log file &quot; + fileName + &quot; doesn&apos;t belong to this wal. (&quot; + toString() + &quot;)&quot;);&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11717//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11717//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11717//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11717//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11717//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11717//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11717//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11717//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11717//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11717//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11717//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11717//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11717//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11717//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11717//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11717//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11717//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11717//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11717//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11717//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11717//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11717//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11717//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11717//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11717//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11717//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Javadoc warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11717//artifact/patchprocess/patchJavadocWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11717//artifact/patchprocess/patchJavadocWarnings.txt&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11717//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11717//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14215396" author="stack" created="Mon, 17 Nov 2014 23:28:09 +0000"  >&lt;p&gt;+1 on commit to master branch after reviewing up on rb. Will let this hang out until tomorrow in case any other opinions out there (see &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=busbey&quot; class=&quot;user-hover&quot; rel=&quot;busbey&quot;&gt;Sean Busbey&lt;/a&gt; release notes above for what changes)&lt;/p&gt;</comment>
                            <comment id="14216384" author="busbey" created="Tue, 18 Nov 2014 16:34:42 +0000"  >&lt;p&gt;Patch fixes long lines except for those that rely on not wrapping for formatting.&lt;/p&gt;

&lt;p&gt;The remaining javadoc warning isn&apos;t related (will file follow on to fix it). Haven&apos;t worked out what&apos;s busted in checkstyle yet.&lt;/p&gt;</comment>
                            <comment id="14216489" author="ram_krish" created="Tue, 18 Nov 2014 17:44:32 +0000"  >&lt;p&gt;Still going thro the RB. One more day would be great.  In case of open region - when there is a grouping done based on table (for eg), how are we handling the assignment of WAL to those regions specific to a table. I am still not there in the review but that would be interesting to see.  I am in the 5th page now.&lt;/p&gt;</comment>
                            <comment id="14216513" author="busbey" created="Tue, 18 Nov 2014 17:53:24 +0000"  >&lt;p&gt;The initial implementation done in this refactoring only replicates the behavior from prior to the patch; i.e. one wal per region server.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5699&quot; title=&quot;Run with &amp;gt; 1 WAL in HRegionServer&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5699&quot;&gt;&lt;del&gt;HBASE-5699&lt;/del&gt;&lt;/a&gt; has the patch for building on this to do using multiple wals based on a grouping. You can evaluate that patch without most of the context here if you rely on the fact that on region open we request a WAL based on the region&apos;s encoded name. We should keep the discussion of how one would e.g. group by table on that ticket. (the short version is you&apos;d have to look up a byte[] that represents the table).&lt;/p&gt;</comment>
                            <comment id="14216550" author="hadoopqa" created="Tue, 18 Nov 2014 18:28:08 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12682182/HBASE-10378.5.patch.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12682182/HBASE-10378.5.patch.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;br/&gt;
  ATTACHMENT ID: 12682182&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 349 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 3833 checkstyle errors (more than the trunk&apos;s current 3788 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces the following lines longer than 100:&lt;br/&gt;
    +set corecommands=shell master regionserver thrift thrift2 rest avro hlog wal hbck hfile zookeeper zkcli upgrade mapredcp&lt;br/&gt;
+   * 2010-06-15 11:52:28,511 WARN  &lt;span class=&quot;error&quot;&gt;&amp;#91;DataStreamer for file /hbase/.logs/wal.1276627923013 block blk_928005470262850423_1021&amp;#93;&lt;/span&gt; hdfs.DFSClient$DFSOutputStream(2657): Error Recovery for block blk_928005470262850423_1021 failed  because recovery from primary datanode 127.0.0.1:53683 failed 4 times.  Pipeline was 127.0.0.1:53687, 127.0.0.1:53683. Will retry...&lt;br/&gt;
+          &amp;lt;screen langauge=&quot;bourne&quot;&amp;gt; $ ./bin/hbase wal hdfs://example.org:8020/hbase/.logs/example.org,60020,1283516293161/10.10.21.10%3A60020.1283973724012&amp;lt;/screen&amp;gt;&lt;br/&gt;
+            &amp;lt;screen langauge=&quot;bourne&quot;&amp;gt; $ ./bin/hbase hlog hdfs://example.org:8020/hbase/.logs/example.org,60020,1283516293161/10.10.21.10%3A60020.1283973724012&amp;lt;/screen&amp;gt;&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;/p&gt;


&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 2 zombie test(s): 	at org.apache.hadoop.hbase.master.balancer.TestBaseLoadBalancer.testImmediateAssignment(TestBaseLoadBalancer.java:136)&lt;br/&gt;
	at org.apache.sentry.tests.e2e.hive.TestMovingToProduction.testMovingTable2(TestMovingToProduction.java:183)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11734//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11734//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11734//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11734//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11734//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11734//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11734//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11734//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11734//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11734//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11734//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11734//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11734//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11734//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11734//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11734//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11734//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11734//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11734//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11734//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11734//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11734//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11734//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11734//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11734//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11734//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11734//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11734//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14216648" author="stack" created="Tue, 18 Nov 2014 19:24:28 +0000"  >&lt;p&gt;Let me get this in before it rots. Pardon me if I appear overly-aggressive (I&apos;m just being lazy).  No problem backing it out if objection.&lt;/p&gt;</comment>
                            <comment id="14216705" author="stack" created="Tue, 18 Nov 2014 20:06:56 +0000"  >&lt;p&gt;Pushed to master.  Nice work &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=busbey&quot; class=&quot;user-hover&quot; rel=&quot;busbey&quot;&gt;Sean Busbey&lt;/a&gt;  I think I got it all in.&lt;/p&gt;</comment>
                            <comment id="14216706" author="hudson" created="Tue, 18 Nov 2014 20:07:16 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-TRUNK #5786 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/5786/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/5786/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10378&quot; title=&quot;Divide HLog interface into User and Implementor specific interfaces&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10378&quot;&gt;&lt;del&gt;HBASE-10378&lt;/del&gt;&lt;/a&gt; Refactor write-ahead-log implementation (stack: rev f5e05eb836a807e418ebcf432fb0f481b40277ac)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLogSplitter.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/wal/TestSecureWAL.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/wal/DisabledWALProvider.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/wal/DefaultWALProvider.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/mapreduce/WALInputFormat.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/mapreduce/TestWALRecordReader.java&lt;/li&gt;
	&lt;li&gt;hbase-hadoop-compat/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestMetricsWALSource.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestFSHLog.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestProtobufLog.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/wal/TestWALMethods.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/wal/WALKey.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/wal/TestWALSplit.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/wal/WALFactory.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/replication/regionserver/TestReplicationWALReaderManager.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/wal/TestDefaultWALProviderWithHLogKey.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/wal/WALPerformanceEvaluation.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/wal/TestWALFiltering.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/InstrumentedLogWriter.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/wal/FaultyFSLog.java&lt;/li&gt;
	&lt;li&gt;hbase-shell/src/main/ruby/shell/commands/wal_roll.rb&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/wal/WALSplitter.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/wal/TestWALReaderOnSecureWAL.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/client/HBaseAdmin.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/wal/WALPrettyPrinter.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/wal/TestDefaultWALProvider.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/wal/WAL.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/wal/TestWALFactory.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/handler/WALSplitterHandler.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/wal/TestWALSplitCompressed.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationWALReaderManager.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/WALLink.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/WALUtil.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/wal/WALProvider.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14216727" author="stack" created="Tue, 18 Nov 2014 20:20:17 +0000"  >&lt;p&gt;Had to do an addendum... git am --continue failed pick up the deletes for me (pilot issue I&apos;m sure).  Here is addendum I added b94e6738d920cb5bf297214883e0cf29522597b9&lt;/p&gt;</comment>
                            <comment id="14216857" author="hudson" created="Tue, 18 Nov 2014 21:49:18 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-TRUNK #5787 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/5787/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/5787/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10378&quot; title=&quot;Divide HLog interface into User and Implementor specific interfaces&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10378&quot;&gt;&lt;del&gt;HBASE-10378&lt;/del&gt;&lt;/a&gt; Refactor write-ahead-log implementation &amp;#8211; ADDEDNUM (stack: rev b94e6738d920cb5bf297214883e0cf29522597b9)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-hadoop2-compat/src/main/java/org/apache/hadoop/hbase/regionserver/wal/MetricsWALSourceImpl.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLogKey.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/backup/TestHFileArchiving.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/handler/HLogSplitterHandler.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/Compressor.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLogFactory.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/master/RegionStates.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestLogRollAbort.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/master/ServerManager.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/replication/regionserver/TestRegionReplicaReplicationEndpoint.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/replication/regionserver/TestReplicationHLogReaderManager.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/master/snapshot/TestSnapshotFileCache.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLogUtil.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSourceManager.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/MemStoreFlusher.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationHLogReaderManager.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/coprocessor/WALCoprocessorEnvironment.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/Replication.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestStore.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/master/AssignmentManager.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/mapreduce/MultiTableOutputFormat.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestReadOldRootAndMetaEdits.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/master/handler/ServerShutdownHandler.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/util/RegionSplitter.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/SecureProtobufLogWriter.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegion.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/FSHLog.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/replication/ReplicationQueuesClient.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/client/Admin.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/HLogPerformanceEvaluation.java&lt;/li&gt;
	&lt;li&gt;hbase-it/src/test/java/org/apache/hadoop/hbase/IntegrationTestIngestWithEncryption.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/master/MockRegionServer.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/InstrumentedSequenceFileLogWriter.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/replication/TestReplicationKillMasterRSCompressed.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/coprocessor/WALObserver.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/master/handler/MetaServerShutdownHandler.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestLogRolling.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/util/TestHBaseFsck.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/CompressionContext.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/HBaseTestingUtility.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/mapreduce/HLogInputFormat.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/ReaderBase.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/util/Merge.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/HConstants.java&lt;/li&gt;
	&lt;li&gt;hbase-it/src/test/java/org/apache/hadoop/hbase/mttr/IntegrationTestMTTR.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/replication/master/ReplicationLogCleaner.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/replication/TestReplicationSource.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/master/MetricsMasterFileSystem.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestHLogMethods.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/replication/TestReplicationChangingPeerRegionservers.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/MockRegionServerServices.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/protobuf/ResponseConverter.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestHLog.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/ProtobufLogWriter.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/mapreduce/HFileOutputFormat2.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/util/HBaseFsck.java&lt;/li&gt;
	&lt;li&gt;hbase-protocol/src/main/java/org/apache/hadoop/hbase/protobuf/generated/RegionServerStatusProtos.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RegionServerServices.java&lt;/li&gt;
	&lt;li&gt;hbase-hadoop-compat/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestMetricsHLogSource.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/replication/TableCfWALEntryFilter.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/mapreduce/WALPlayer.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/master/cleaner/TimeToLiveLogCleaner.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/SplitLogWorker.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/master/snapshot/SnapshotLogCleaner.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/SampleRegionWALObserver.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestMasterFailover.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/HLogUtilsForTests.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RSRpcServices.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/security/access/AccessController.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/WALEditsReplaySink.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/mapreduce/TestHLogRecordReader.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/WALCoprocessorHost.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/replication/ScopeWALEntryFilter.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestCompaction.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/security/access/HbaseObjectWritableFor96Migration.java&lt;/li&gt;
	&lt;li&gt;hbase-protocol/src/main/java/org/apache/hadoop/hbase/protobuf/generated/WALProtos.java&lt;/li&gt;
	&lt;li&gt;hbase-hadoop2-compat/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsRegionServerSourceImpl.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/snapshot/SnapshotInfo.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HStore.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/KeyValue.java&lt;/li&gt;
	&lt;li&gt;hbase-protocol/src/main/protobuf/RegionServerStatus.proto&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/util/TestMergeTool.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRegionObserver.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/util/FSVisitor.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/replication/ReplicationQueuesZKImpl.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/jamon/org/apache/hadoop/hbase/tmpl/regionserver/ServerMetricsTmpl.jamon&lt;/li&gt;
	&lt;li&gt;hbase-shell/src/main/ruby/shell.rb&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RegionCoprocessorHost.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionObserverScannerOpenHook.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/replication/ReplicationQueues.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/TestIOFencing.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/replication/regionserver/TestReplicationSourceManager.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/DroppedSnapshotException.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/ProtobufLogReader.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/resources/hbase-default.xml&lt;/li&gt;
	&lt;li&gt;bin/hbase.cmd&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestSecureHLog.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/coordination/SplitLogWorkerCoordination.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/client/replication/ReplicationAdmin.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RegionServerAccounting.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestSplitTransaction.java&lt;/li&gt;
	&lt;li&gt;src/main/docbkx/troubleshooting.xml&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/replication/TestReplicationWALEntryFilters.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/SequenceFileLogReader.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestRegionMergeTransaction.java&lt;/li&gt;
	&lt;li&gt;src/main/docbkx/ops_mgt.xml&lt;/li&gt;
	&lt;li&gt;hbase-shell/src/main/ruby/shell/commands/hlog_roll.rb&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/migration/NamespaceUpgrade.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/master/SplitLogManager.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/replication/ChainWALEntryFilter.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSource.java&lt;/li&gt;
	&lt;li&gt;hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsRegionServerWrapper.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/snapshot/ExportSnapshot.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestHLogSplitCompressed.java&lt;/li&gt;
	&lt;li&gt;hbase-protocol/src/main/protobuf/ZooKeeper.proto&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestLogRollingNoCluster.java&lt;/li&gt;
	&lt;li&gt;hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsRegionServerSource.java&lt;/li&gt;
	&lt;li&gt;hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/regionserver/wal/MetricsEditsReplaySource.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/ipc/RegionServerCoprocessorRpcChannel.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/coprocessor/BaseWALObserver.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/replication/ReplicationEndpoint.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/util/TestFSVisitor.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/master/MasterFileSystem.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/HBaseInterClusterReplicationEndpoint.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/replication/ReplicationQueuesClientZKImpl.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestSecureWALReplay.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/protobuf/ReplicationProtbufUtil.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/WALEdit.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestDistributedLogSplitting.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/replication/SystemTableWALEntryFilter.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/WALCellCodec.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/LogRoller.java&lt;/li&gt;
	&lt;li&gt;bin/hbase&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/zookeeper/ZKUtil.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/coordination/ZkSplitLogWorkerCoordination.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/io/TestHeapSize.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/zookeeper/ZKSplitLog.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/mapreduce/TableSnapshotInputFormat.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestCacheOnWriteInSchema.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/SequenceFileLogWriter.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/HLogLink.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestMajorCompaction.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestDurability.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/util/MetaUtils.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestStoreFileRefresherChore.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/mapreduce/TestImportExport.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/snapshot/SnapshotReferenceUtil.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/HBaseTestCase.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/SplitLogTask.java&lt;/li&gt;
	&lt;li&gt;hbase-protocol/src/main/protobuf/WAL.proto&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/replication/WALEntryFilter.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/replication/TestMultiSlaveReplication.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/mapreduce/TestWALPlayer.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestHLogSplit.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSink.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/FaultySequenceFileLogReader.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionObserverInterface.java&lt;/li&gt;
	&lt;li&gt;src/main/docbkx/performance.xml&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/replication/TestReplicationEndpoint.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestHLogReaderOnSecureHLog.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/SimpleRegionObserver.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/mapreduce/TestTableMapReduceUtil.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/fs/HFileSystem.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/replication/TestReplicationSmallTests.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestAtomicOperation.java&lt;/li&gt;
	&lt;li&gt;hbase-protocol/src/main/protobuf/Admin.proto&lt;/li&gt;
	&lt;li&gt;hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/master/MetricsMasterFileSystemSource.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/SplitLogCounters.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/coprocessor/RegionObserver.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/MetricsWAL.java&lt;/li&gt;
	&lt;li&gt;hbase-protocol/src/main/java/org/apache/hadoop/hbase/protobuf/generated/ZooKeeperProtos.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/TestWALObserver.java&lt;/li&gt;
	&lt;li&gt;hbase-shell/src/main/ruby/hbase/admin.rb&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/fs/TestBlockReorder.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestAdmin2.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/MetricsRegionServerWrapperStub.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestLogRollPeriod.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/FSWALEntry.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestGetClosestAtOrBefore.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestMinorCompaction.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/util/HMerge.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/RegionReplicaReplicationEndpoint.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/master/cleaner/LogCleaner.java&lt;/li&gt;
	&lt;li&gt;hbase-protocol/src/main/java/org/apache/hadoop/hbase/protobuf/generated/AdminProtos.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/FaultyHLog.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestHLogFiltering.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLog.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestWALReplay.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/coordination/ZKSplitLogManagerCoordination.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/filter/TestFilter.java&lt;/li&gt;
	&lt;li&gt;hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/regionserver/wal/MetricsWALSource.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/WriterBase.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLogPrettyPrinter.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestDefaultCompactSelection.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/filter/TestInvocationRecordFilter.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestWALActionsListener.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/replication/regionserver/TestRegionReplicaReplicationEndpointNoMaster.java&lt;/li&gt;
	&lt;li&gt;src/main/docbkx/book.xml&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/MetaLogRoller.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/util/FSHDFSUtils.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsRegionServerWrapperImpl.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/WALActionsListener.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14216921" author="eclark" created="Tue, 18 Nov 2014 22:23:48 +0000"  >&lt;p&gt;Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=busbey&quot; class=&quot;user-hover&quot; rel=&quot;busbey&quot;&gt;Sean Busbey&lt;/a&gt; This is awesome. I actually held off on creating a feature branch so that I could get this patch in.&lt;/p&gt;</comment>
                            <comment id="14217013" author="apurtell" created="Tue, 18 Nov 2014 23:08:40 +0000"  >&lt;p&gt;Pardon if I&apos;m implicating the wrong issue.&lt;/p&gt;

&lt;p&gt;Working on a Macbook dev box.&lt;/p&gt;

&lt;p&gt;I have found that some TestHRegion unit tests fail now because the can&apos;t get a WAL writer:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;$ mvn -DskipTests clean install
$ mvn test -Dtest=TestHRegion
Tests in error: 
  TestHRegion.testDelete_multiDeleteColumn:1836-&amp;gt;initHRegion:4883-&amp;gt;initHRegion:4904-&amp;gt;initHRegion:4923 &#187; IOException cannot get log writer
  TestHRegion.testRegionReplicaSecondary:4587 &#187; IOException cannot get log writer
  TestHRegion.testScanner_DeleteOneFamilyNotAnother:2096-&amp;gt;initHRegion:4883-&amp;gt;initHRegion:4904-&amp;gt;initHRegion:4923 &#187; IOException cannot get log writer
  TestHRegion.testScanner_JoinedScannersWithLimits:3156-&amp;gt;initHRegion:4883-&amp;gt;initHRegion:4904-&amp;gt;initHRegion:4923 &#187; IOException cannot get log writer
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;For example:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;testRegionReplicaSecondary(org.apache.hadoop.hbase.regionserver.TestHRegion)  Time elapsed: 0.063 sec  &amp;lt;&amp;lt;&amp;lt; ERROR!
java.io.IOException: cannot get log writer
	at org.apache.hadoop.util.Shell.runCommand(Shell.java:538)
	at org.apache.hadoop.util.Shell.run(Shell.java:455)
	at org.apache.hadoop.util.Shell$ShellCommandExecutor.execute(Shell.java:702)
	at org.apache.hadoop.util.Shell.execCommand(Shell.java:791)
	at org.apache.hadoop.util.Shell.execCommand(Shell.java:774)
	at org.apache.hadoop.fs.RawLocalFileSystem.setPermission(RawLocalFileSystem.java:646)
	at org.apache.hadoop.fs.RawLocalFileSystem.create(RawLocalFileSystem.java:293)
	at org.apache.hadoop.fs.ChecksumFileSystem.create(ChecksumFileSystem.java:451)
	at org.apache.hadoop.fs.ChecksumFileSystem.createNonRecursive(ChecksumFileSystem.java:469)
	at org.apache.hadoop.fs.FileSystem.createNonRecursive(FileSystem.java:1086)
	at org.apache.hadoop.hbase.regionserver.wal.ProtobufLogWriter.init(ProtobufLogWriter.java:90)
	at org.apache.hadoop.hbase.wal.DefaultWALProvider.createWriter(DefaultWALProvider.java:361)
	at org.apache.hadoop.hbase.regionserver.wal.FSHLog.createWriterInstance(FSHLog.java:736)
	at org.apache.hadoop.hbase.regionserver.wal.FSHLog.rollWriter(FSHLog.java:701)
	at org.apache.hadoop.hbase.regionserver.wal.FSHLog.rollWriter(FSHLog.java:612)
	at org.apache.hadoop.hbase.regionserver.wal.FSHLog.&amp;lt;init&amp;gt;(FSHLog.java:549)
	at org.apache.hadoop.hbase.wal.DefaultWALProvider.init(DefaultWALProvider.java:97)
	at org.apache.hadoop.hbase.wal.WALFactory.getProvider(WALFactory.java:139)
	at org.apache.hadoop.hbase.wal.WALFactory.&amp;lt;init&amp;gt;(WALFactory.java:171)
	at org.apache.hadoop.hbase.regionserver.HRegion.createHRegion(HRegion.java:4566)
	at org.apache.hadoop.hbase.regionserver.HRegion.createHRegion(HRegion.java:4533)
	at org.apache.hadoop.hbase.regionserver.HRegion.createHRegion(HRegion.java:4508)
	at org.apache.hadoop.hbase.regionserver.HRegion.createHRegion(HRegion.java:4585)
	at org.apache.hadoop.hbase.regionserver.HRegion.createHRegion(HRegion.java:4469)
	at org.apache.hadoop.hbase.regionserver.TestHRegion.testRegionReplicaSecondary(TestHRegion.java:4587)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Then, I can&apos;t clean:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;$ mvn clean
...
[ERROR] Failed to execute goal org.apache.maven.plugins:maven-clean-plugin:2.5:clean (default-clean) on project hbase-server: Failed to clean project: Failed to delete /Users/apurtell/src/hbase/hbase-server/target/test-data/c8c12cda-613a-488d-9a9c-2463c8f884d5/WALs -&amp;gt; [Help 1]
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I need to sudo rm -rf . &lt;/p&gt;

&lt;p&gt;It wasn&apos;t like this last week.&lt;/p&gt;</comment>
                            <comment id="14217029" author="apurtell" created="Tue, 18 Nov 2014 23:19:06 +0000"  >&lt;p&gt;No problems on a Linux system.&lt;/p&gt;</comment>
                            <comment id="14217042" author="busbey" created="Tue, 18 Nov 2014 23:25:17 +0000"  >&lt;p&gt;That sounds like a problem I ran into when I rebased to current master on Friday. In my case it was one of the HBaseFsck tests that died a horrible death and got into that state. But it was the exact same thing with the mysterious &quot;can&apos;t get writer&quot; and splat.&lt;/p&gt;

&lt;p&gt;In my case the problem was that max open files was set to something ridiculous like 200. Can you check that on your macbook?&lt;/p&gt;</comment>
                            <comment id="14217426" author="ram_krish" created="Wed, 19 Nov 2014 05:10:48 +0000"  >&lt;p&gt;Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=busbey&quot; class=&quot;user-hover&quot; rel=&quot;busbey&quot;&gt;Sean Busbey&lt;/a&gt;.  Will follow &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5699&quot; title=&quot;Run with &amp;gt; 1 WAL in HRegionServer&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5699&quot;&gt;&lt;del&gt;HBASE-5699&lt;/del&gt;&lt;/a&gt;.  Added some comments in RB.&lt;/p&gt;</comment>
                            <comment id="14217459" author="ram_krish" created="Wed, 19 Nov 2014 05:49:19 +0000"  >&lt;p&gt;On updation of the master branch I get the following error&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.
2:testCompile (&lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt;-testCompile) on project hbase-server: Compilation failure

[ERROR] /C:/HBase_git/hbase/hbase/hbase-server/src/test/java/org/apache/hadoop/h
base/replication/TestMultiSlaveReplication.java:[227,32] no suitable method foun
d &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; getServerHoldingRegion(org.apache.hadoop.hbase.TableName,&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[])
[ERROR] method org.apache.hadoop.hbase.MiniHBaseCluster.getServerHoldingRegion(b
yte[]) is not applicable
[ERROR] (actual and formal argument lists differ in length)
[ERROR] -&amp;gt; [Help 1]
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="14217461" author="busbey" created="Wed, 19 Nov 2014 05:49:40 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=apurtell&quot; class=&quot;user-hover&quot; rel=&quot;apurtell&quot;&gt;Andrew Purtell&lt;/a&gt; with the patch from &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-12532&quot; title=&quot;TestFilter failing occasionally with ExitCodeException doing chmod since HBASE-10378&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-12532&quot;&gt;&lt;del&gt;HBASE-12532&lt;/del&gt;&lt;/a&gt; in place, TestHRegion in a loop is stable on my OSX box without mucking with anything. Can you give it a try?&lt;/p&gt;</comment>
                            <comment id="14217463" author="ram_krish" created="Wed, 19 Nov 2014 05:50:20 +0000"  >&lt;p&gt;The commit has this&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-comment&quot;&gt;// request a roll
&lt;/span&gt; 227     admin.rollWALWriter(cluster.getServerHoldingRegion(region.getTableDesc().getTableName(),
 228       region.getRegionName()));
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;But the latest patch has this attached in JIRA has this.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
admin.rollWALWriter(cluster.getServerHoldingRegion(region.getRegionName()));
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Am I the only person to get this error?&lt;/p&gt;</comment>
                            <comment id="14217466" author="ram_krish" created="Wed, 19 Nov 2014 05:51:33 +0000"  >&lt;p&gt;Adding an addendum.&lt;/p&gt;</comment>
                            <comment id="14217467" author="stack" created="Wed, 19 Nov 2014 05:52:19 +0000"  >&lt;p&gt;Its fixed &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ramkrishna.s.vasudevan%40gmail.com&quot; class=&quot;user-hover&quot; rel=&quot;ramkrishna.s.vasudevan@gmail.com&quot;&gt;ramkrishna vasudevan&lt;/a&gt;  My fault. I&apos;ve been backing out stuff trying to get us stable again (made it worse!)&lt;/p&gt;</comment>
                            <comment id="14217470" author="ram_krish" created="Wed, 19 Nov 2014 05:54:07 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=saint.ack%40gmail.com&quot; class=&quot;user-hover&quot; rel=&quot;saint.ack@gmail.com&quot;&gt;Stack&lt;/a&gt;&lt;br/&gt;
No problem at all &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="14217475" author="hudson" created="Wed, 19 Nov 2014 06:04:08 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-TRUNK #5793 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/5793/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/5793/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-12532&quot; title=&quot;TestFilter failing occasionally with ExitCodeException doing chmod since HBASE-10378&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-12532&quot;&gt;&lt;del&gt;HBASE-12532&lt;/del&gt;&lt;/a&gt; TestFilter failing occasionally with ExitCodeException doing chmod since &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10378&quot; title=&quot;Divide HLog interface into User and Implementor specific interfaces&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10378&quot;&gt;&lt;del&gt;HBASE-10378&lt;/del&gt;&lt;/a&gt; (stack: rev d87c550b948c11992660015ef26954a699929869)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14217664" author="hudson" created="Wed, 19 Nov 2014 09:53:20 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-TRUNK #5796 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/5796/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/5796/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-12532&quot; title=&quot;TestFilter failing occasionally with ExitCodeException doing chmod since HBASE-10378&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-12532&quot;&gt;&lt;del&gt;HBASE-12532&lt;/del&gt;&lt;/a&gt; TestFilter failing occasionally with ExitCodeException doing chmod since &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10378&quot; title=&quot;Divide HLog interface into User and Implementor specific interfaces&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10378&quot;&gt;&lt;del&gt;HBASE-10378&lt;/del&gt;&lt;/a&gt; ADDENDUM (stack: rev 640274d5e1e4aa9b37689c64b3fffb2b52f92d87)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14220119" author="lhofhansl" created="Thu, 20 Nov 2014 22:19:25 +0000"  >&lt;p&gt;This is done, right? Can we close it?&lt;/p&gt;</comment>
                            <comment id="14220141" author="busbey" created="Thu, 20 Nov 2014 22:34:59 +0000"  >&lt;p&gt;waiting to make sure the fix in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-12532&quot; title=&quot;TestFilter failing occasionally with ExitCodeException doing chmod since HBASE-10378&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-12532&quot;&gt;&lt;del&gt;HBASE-12532&lt;/del&gt;&lt;/a&gt; fixes the issue &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=apurtell&quot; class=&quot;user-hover&quot; rel=&quot;apurtell&quot;&gt;Andrew Purtell&lt;/a&gt; hit.&lt;/p&gt;</comment>
                            <comment id="14220179" author="apurtell" created="Thu, 20 Nov 2014 23:06:19 +0000"  >&lt;p&gt;Sorry, let me try now&lt;/p&gt;</comment>
                            <comment id="14220206" author="apurtell" created="Thu, 20 Nov 2014 23:22:49 +0000"  >&lt;p&gt;Yes, thanks, the issue is fixed&lt;/p&gt;</comment>
                            <comment id="14220260" author="busbey" created="Thu, 20 Nov 2014 23:57:16 +0000"  >&lt;p&gt;yay! closed.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310000">
                    <name>Duplicate</name>
                                                                <inwardlinks description="is duplicated by">
                                        <issuelink>
            <issuekey id="12610045">HBASE-6935</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="12310050">
                    <name>Regression</name>
                                            <outwardlinks description="breaks">
                                        <issuelink>
            <issuekey id="12756310">HBASE-12532</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="12310051">
                    <name>Supercedes</name>
                                            <outwardlinks description="supercedes">
                                        <issuelink>
            <issuekey id="12649284">HBASE-8610</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10001">
                    <name>dependent</name>
                                                                <inwardlinks description="is depended upon by">
                                        <issuelink>
            <issuekey id="12753484">HBASE-12437</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12549194">HBASE-5699</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12756200">HBASE-12522</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12623840" name="10378-1.patch" size="294711" author="v.himanshu" created="Sun, 19 Jan 2014 01:03:36 +0000"/>
                            <attachment id="12624933" name="10378-2.patch" size="294704" author="v.himanshu" created="Thu, 23 Jan 2014 22:31:51 +0000"/>
                            <attachment id="12681773" name="HBASE-10378.3.patch.txt" size="1458120" author="busbey" created="Sun, 16 Nov 2014 04:13:00 +0000"/>
                            <attachment id="12681992" name="HBASE-10378.4.patch.txt" size="1467262" author="busbey" created="Mon, 17 Nov 2014 21:12:49 +0000"/>
                            <attachment id="12682182" name="HBASE-10378.5.patch.txt" size="1467806" author="busbey" created="Tue, 18 Nov 2014 16:33:18 +0000"/>
                            <attachment id="12682354" name="HBASE-10378.addendum.patch" size="1833" author="ram_krish" created="Wed, 19 Nov 2014 05:51:33 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>6.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sun, 19 Jan 2014 02:41:14 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>368654</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10342"><![CDATA[Incompatible change]]></customfieldvalue>
    <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            2 years, 2 weeks, 1 day ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1rjhr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>368958</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>HBase internals for the write ahead log have been refactored. Advanced users of HBase should be aware of the following changes.&lt;br/&gt;
&lt;br/&gt;
Public Audience&lt;br/&gt;
&amp;nbsp;&amp;nbsp;- The Admin API for asking a region server to roll WAL files has changed from a synchronous command that returns a set of regions the WAL implementation would like flushed into an asynchronous command that returns nothing. Older clients relying on the former behavior will still be able to interact with newer servers, but the response body will always contain an empty list of regions to flush.&lt;br/&gt;
&amp;nbsp;&amp;nbsp;- The shell command &amp;quot;hlog_roll&amp;quot; has been deprecated. Operators should use the &amp;quot;wal_roll&amp;quot; command instead. This command is subject to the changes described above for the Admin API to roll WAL files.&lt;br/&gt;
&amp;nbsp;&amp;nbsp;- The command for analyzing write ahead logs has been renamed from &amp;#39;hlog&amp;#39; to &amp;#39;wal&amp;#39;. The old usage is deprecated and will be removed in a future version.&lt;br/&gt;
&amp;nbsp;&amp;nbsp;- Some utility methods in the HBaseTesetingUtility related to testing write-ahead-logs were changed in incompatible ways. No functionality has been removed, but method names and arguments have changed. See the HBaseTestingUtility javadoc for details.&lt;br/&gt;
&amp;nbsp;&amp;nbsp;- The WALPlayer utility has deprecated the configuration keys used for advanced customization. Users should switch to the updated configuration keys. See the usage information on the WALPlayer tool for details.&lt;br/&gt;
&amp;nbsp;&amp;nbsp;- The HLogInputFormat utility class for processing logs with MapReduce has been deprecated and will be removed in a future version. Users should switch to the WALInputFormat.&lt;br/&gt;
&amp;nbsp;&amp;nbsp;- The labeling of server metrics on the region server status pages changed. Previously, the number of backing files for the write ahead log was labeled &amp;#39;Num. HLog Files&amp;#39;. If you wish to see this statistic now, please look for the label &amp;#39;Num. WAL Files.&amp;#39;  If you rely on JMX for these metrics, their location has not changed.&lt;br/&gt;
&lt;br/&gt;
LimitedPrivate(COPROC) Audience, LimitedPrivate(PHOENIX)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;- The RegionObserver API has been updated. The changes are both binary and source backwards compatible for coprocessors that use the BaseRegionObserver class. For those that implement RegionObserver directly the changes are binary backwards compatible. Depending on the internals of future HBase versions, coprocessors using the deprecated API may not see all WAL related events. Users are strongly encouraged to update their use of the API; see the RegionObserver javadoc for details.&lt;br/&gt;
&amp;nbsp;&amp;nbsp;- Classes related to reading WAL entries (ReaderBase, ProtobufLogReader, SequenceFileLogReader) have changed in a backwards incompatible way. Users who referenced HLog.Reader directly or HLog.Entry will have to update. These changes do not impact compatibility with extant wal files.&lt;br/&gt;
&amp;nbsp;&amp;nbsp;- The WALObserver API has been updated. The changes are both binary and source backwards compatible for coprocessors that use the BaseWALObserver class. For those that implement WALObserver directly the changes are binary backwards compatible. Depending on the internals of future HBase versions, coprocessors using the deprecated API may not see all WAL related events. Users are strongly encouraged to update their use of the API; see the WALObserver javadoc for details.&lt;br/&gt;
&amp;nbsp;- The WALCoprocessorEnvironment  has changed in a backwards incompatible way. WALObserver coprocessors that relied on retrieving an object representing the write ahead log instance will have to be updated.&lt;br/&gt;
&lt;br/&gt;
LimitedPrivate(REPLICATION) Audience&lt;br/&gt;
&amp;nbsp;- The WALEntryFilter API has changed in a backwards incompatible way. Implementers will have to be updated.&lt;br/&gt;
&amp;nbsp;- The ReplicationEndpoint.ReplicateContext API has changed in a backwards incompatible way. Implementers who use this interface will have to be updated. These changes do not impact wire compatibility for replicating between clusters.&lt;br/&gt;
&amp;nbsp;- The HLogKey API is deprecated in favor of the WALKey API. Additionally, the HLogKey API has changed in a backwards incompatible way by changing from implementing WriteableComparable&amp;lt;HLogKey&amp;gt; to implementing Writeable and Comparable&amp;lt;WALKey&amp;gt;.</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>