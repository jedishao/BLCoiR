<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Thu Dec 01 23:03:26 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-15064/HBASE-15064.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-15064] BufferUnderflowException after last Cell fetched from an HFile Block served from L2 offheap cache</title>
                <link>https://issues.apache.org/jira/browse/HBASE-15064</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;While running the newer patches on our production system, I saw this error come couple of times &lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;ipc.RpcServer: Unexpected throwable object 
2016-01-01 16:42:56,090 ERROR [B.defaultRpcServer.handler=20,queue=20,port=60020] ipc.RpcServer: Unexpected throwable object 
java.nio.BufferUnderflowException
at java.nio.Buffer.nextGetIndex(Buffer.java:500)
at java.nio.DirectByteBuffer.get(DirectByteBuffer.java:249)
at org.apache.hadoop.hbase.nio.MultiByteBuff.get(MultiByteBuff.java:494)
at org.apache.hadoop.hbase.io.encoding.FastDiffDeltaEncoder$1.decode(FastDiffDeltaEncoder.java:402) 
at org.apache.hadoop.hbase.io.encoding.FastDiffDeltaEncoder$1.decodeNext(FastDiffDeltaEncoder.java:517) 
at org.apache.hadoop.hbase.io.encoding.BufferedDataBlockEncoder$BufferedEncodedSeeker.next(BufferedDataBlockEncoder.java:815)
at org.apache.hadoop.hbase.regionserver.StoreFileScanner.next(StoreFileScanner.java:138)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Looking at the get code &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.curItem.remaining() == 0) {
      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (items.length - 1 == &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.curItemIndex) {
        &lt;span class=&quot;code-comment&quot;&gt;// means cur item is the last one and we wont be able to read a &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt;. Throw exception
&lt;/span&gt;        &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; BufferUnderflowException();
      }
      &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.curItemIndex++;
      &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.curItem = &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.items[&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.curItemIndex];
    }
&lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.curItem.get();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Can the new currentItem have zero elements (position == limit), does it make sense to change the &lt;tt&gt;if&lt;/tt&gt; to &lt;tt&gt;while&lt;/tt&gt; ? &lt;tt&gt;while (this.curItem.remaining() == 0)&lt;/tt&gt;. This logic is repeated may make sense abstract to a new function if we plan to change to  &lt;tt&gt;if&lt;/tt&gt; to &lt;tt&gt;while&lt;/tt&gt;&lt;/p&gt;</description>
                <environment></environment>
        <key id="12925208">HBASE-15064</key>
            <summary>BufferUnderflowException after last Cell fetched from an HFile Block served from L2 offheap cache</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="2" iconUrl="https://issues.apache.org/jira/images/icons/priorities/critical.png">Critical</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="anoop.hbase">Anoop Sam John</assignee>
                                    <reporter username="dvdreddy">deepankar</reporter>
                        <labels>
                    </labels>
                <created>Sat, 2 Jan 2016 00:26:01 +0000</created>
                <updated>Mon, 12 Sep 2016 04:15:54 +0000</updated>
                            <resolved>Wed, 23 Mar 2016 09:34:49 +0000</resolved>
                                    <version>2.0.0</version>
                                    <fixVersion>2.0.0</fixVersion>
                                    <component>io</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>6</watches>
                                                                <comments>
                            <comment id="15076439" author="anoop.hbase" created="Sat, 2 Jan 2016 05:48:17 +0000"  >&lt;blockquote&gt;&lt;p&gt;Can the new currentItem have zero elements (position == limit)&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I dont think so.  Are you able to reproduce this?  Can u add some logs so as to see what is the curIndex then and whether ur doubt is coming true? and what is ramaining() call returns?&lt;/p&gt;</comment>
                            <comment id="15076467" author="dvdreddy" created="Sat, 2 Jan 2016 09:15:21 +0000"  >&lt;p&gt;Just also noticed that the experiment node also had hardware issues. I will  try to reproduce this on other node with some logging and will report. Thanks&lt;/p&gt;</comment>
                            <comment id="15080699" author="ram_krish" created="Mon, 4 Jan 2016 04:59:43 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=dvdreddy&quot; class=&quot;user-hover&quot; rel=&quot;dvdreddy&quot;&gt;deepankar&lt;/a&gt;&lt;br/&gt;
You are trying to use the latest trunk version I believe and also interested to know your use case. Are you trying out bucket cache in offheap mode for perf reasons?&lt;/p&gt;</comment>
                            <comment id="15080717" author="dvdreddy" created="Mon, 4 Jan 2016 05:40:51 +0000"  >&lt;p&gt;Pinging &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ishanc&quot; class=&quot;user-hover&quot; rel=&quot;ishanc&quot;&gt;Ishan Chhabra&lt;/a&gt; he can add  anything I miss.&lt;/p&gt;

&lt;p&gt;Our use case was more of gets (working for RocketFuel Inc), singular workload with response times requirement to be &amp;lt; 40ms (~16kb response size, ~20k - 30k reqs per node per sec). We are encountering problems with frequent(~ish) Mixed G1 GCs due to the heap block cache churning (eviction size matching the Mixed GC clean up size). &lt;/p&gt;

&lt;p&gt;We decided to experiment with Off heap Bucket Cache by running hbase 1.1.2  version to reduce mixed GCs. We did see a decrease in mixed GC frequency but the young gcs started to become more rampant, so we decided to use the patches from &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11425&quot; title=&quot;Cell/DBB end-to-end on the read-path&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11425&quot;&gt;&lt;del&gt;HBASE-11425&lt;/del&gt;&lt;/a&gt; to decrease them. I ported most of the required patches from trunk onto our internal branch and was giving it a spin on a single region server along with our stable 1.1 version regionservers. That is where I was encountering some of these issues. Initial results did not decrease young GCs that much (our client does not support the cells by payload yet and might also needs some more investigation from our side for the reason). This is all from our side until now. Can definitely help with anything from our iside related testing or reporting results.&lt;/p&gt;

&lt;p&gt;Thanks&lt;/p&gt;

</comment>
                            <comment id="15080725" author="ram_krish" created="Mon, 4 Jan 2016 05:47:51 +0000"  >&lt;p&gt;Thanks for the valuable information. Good to see &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11425&quot; title=&quot;Cell/DBB end-to-end on the read-path&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11425&quot;&gt;&lt;del&gt;HBASE-11425&lt;/del&gt;&lt;/a&gt; getting used. One thing to see is that in case of DBEs (block encoders) there are some small byte[] created for creating the Cells coming out of DBE blocks though the actual block is offheap but the value part of the cell gets served directly from the offheap block.&lt;br/&gt;
Pls keep posted on your findings and that would help us refine the feature. &lt;/p&gt;</comment>
                            <comment id="15080729" author="dvdreddy" created="Mon, 4 Jan 2016 05:58:09 +0000"  >&lt;p&gt;Hmm, that might be the reason why there was not that much decrease as we were expecting, we do use FAST_DIFF for encoding the data blocks that might be the cause of some of the garbage. Also we do have some puts (smaller in ratio compared to gets) which also might be causing some of the garbage. &lt;/p&gt;

&lt;p&gt;Will definitely report on our findings. Thanks&lt;/p&gt;</comment>
                            <comment id="15080736" author="stack" created="Mon, 4 Jan 2016 06:09:21 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=dvdreddy&quot; class=&quot;user-hover&quot; rel=&quot;dvdreddy&quot;&gt;deepankar&lt;/a&gt; Any tests we could do on your end that might help get you clarity on your end (I have a little rig up)?&lt;/p&gt;</comment>
                            <comment id="15080749" author="dvdreddy" created="Mon, 4 Jan 2016 06:26:12 +0000"  >&lt;p&gt;I have not seen this error again on a new machine on which I have been running with these patches (may be related to hardware issue on new machine), I will let it run for a few more days on the new machine and report (or resolve)  if I see this error again. Possibly no need for tests on your end.&lt;/p&gt;

&lt;p&gt;Another interesting spew pattern I have been seeing is that I had to pull in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14317&quot; title=&quot;Stuck FSHLog: bad disk (HDFS-8960) and can&amp;#39;t roll WAL&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14317&quot;&gt;&lt;del&gt;HBASE-14317&lt;/del&gt;&lt;/a&gt;, to decrease conflicts while pulling in some patches of &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11425&quot; title=&quot;Cell/DBB end-to-end on the read-path&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11425&quot;&gt;&lt;del&gt;HBASE-11425&lt;/del&gt;&lt;/a&gt; and after that I am seeing the spew  &lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;WARN  [B.defaultRpcServer.handler=24,queue=24,port=60020] regionserver.MultiVersionConcurrencyControl: STUCK: 
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;for 2-3 minutes and stops and this was happening only for once a day for the past 4-5 days (testing was happening  only for that period). Will report more on this if it keeps recurring more.&lt;/p&gt;</comment>
                            <comment id="15080772" author="anoop.hbase" created="Mon, 4 Jan 2016 07:23:20 +0000"  >&lt;p&gt;Thanks for the details.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;our client does not support the cells by payload yet&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;This can be the reason for not seeing much diff wrt young gen. When the client is not supporting payload cells, we will have to convert the java cells to PB cells to return and for that we will have to copy cell from off heap area to on heap &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/sad.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;.. To even avoid that we will need some fancy work in PB area.  For on heap backed cells we already have some thing (See HBaseZeroCopyByteString)&lt;/p&gt;</comment>
                            <comment id="15082391" author="anoop.hbase" created="Tue, 5 Jan 2016 05:15:30 +0000"  >&lt;p&gt;I think I got the reason why we are getting this.  Working on the patch with test.&lt;/p&gt;</comment>
                            <comment id="15082455" author="anoop.hbase" created="Tue, 5 Jan 2016 06:06:17 +0000"  >&lt;p&gt;In BufferedEncodedSeeker#next() we can see&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; next() {
      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (!currentBuffer.hasRemaining()) {
        &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;;
      }
      decodeNext();
	  ...
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;So when we are the end of a block, this hasRemaining is supposed to return false and so no more calls to decodeNext. In normal case of MBB and SBB this works fine.&lt;br/&gt;
When the MBB is created over the last bucket, we are returning the last dummy BB of 0 size also.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
} &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; {
    buffers[i] = ByteBuffer.allocate(0);
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Because of that even when we have finished all cells from a buffer, hasRemaining() will say true for such case and for decodeNext() we will move to the last BB which is of limit 0.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
@Override
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; hasRemaining() {
    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.curItem.hasRemaining() || &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.curItemIndex &amp;lt; &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.items.length - 1;
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;


&lt;p&gt;We have to solve this by fixing ByteBufferArray#asSubBuffer by not including the last dummy buffer of 0 size from returning back to user.&lt;/p&gt;</comment>
                            <comment id="15082480" author="stack" created="Tue, 5 Jan 2016 06:22:51 +0000"  >&lt;blockquote&gt;&lt;p&gt;WARN  &lt;span class=&quot;error&quot;&gt;&amp;#91;B.defaultRpcServer.handler=24,queue=24,port=60020&amp;#93;&lt;/span&gt; regionserver.MultiVersionConcurrencyControl: STUCK: &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The server is seized up if you see this so I&apos;d be interested in hearing more if you run into it again &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=dvdreddy&quot; class=&quot;user-hover&quot; rel=&quot;dvdreddy&quot;&gt;deepankar&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="15082495" author="stack" created="Tue, 5 Jan 2016 06:31:52 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=anoop.hbase&quot; class=&quot;user-hover&quot; rel=&quot;anoop.hbase&quot;&gt;Anoop Sam John&lt;/a&gt; Patch seems good to me. Only odd thing is the location of the test. Is there not a better place for it than its own class?&lt;/p&gt;</comment>
                            <comment id="15082513" author="anoop.hbase" created="Tue, 5 Jan 2016 06:46:22 +0000"  >&lt;p&gt;Thanks for the review Stack.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Only odd thing is the location of the test. Is there not a better place for it than its own class?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I think it is fine as a UT.  The issue is clearly coming up.  The issue was that even if we are at the end of the MBB, the hasRemaining return true. It is not an issue with MBB as such. It as an issue with ByteBufferArray#asSubBuffer() which returns the 0 length BB as the last buffer within MBB.  That is why I thought a UT for ByteBufferArray#asSubBuffer()  for hasRemaining() is good enough.&lt;/p&gt;

&lt;p&gt;It might be difficult to mock the same situation in an FT which is doing the actual cells read from a Scanner. Because this will happen for the HFileBlock read from the end of the bucket cache.&lt;/p&gt;</comment>
                            <comment id="15082671" author="ram_krish" created="Tue, 5 Jan 2016 09:04:46 +0000"  >&lt;p&gt;+1 on patch. &lt;/p&gt;</comment>
                            <comment id="15082673" author="hadoopqa" created="Tue, 5 Jan 2016 09:07:00 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12780476/HBASE-15064.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12780476/HBASE-15064.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 9997e4ee52136a681faa825dea46bd1162d71eca.&lt;br/&gt;
  ATTACHMENT ID: 12780476&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 2 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.6.1 2.7.0 2.7.1)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated new checkstyle errors. Check build console for list of new errors.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 site&lt;/font&gt;.  The patch appears to cause mvn post-site goal to fail.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 zombies&lt;/font&gt;. No zombie tests found running at the end of the build.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/17123//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/17123//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/17123//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/17123//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/17123//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/17123//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/17123//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/17123//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="15083786" author="stack" created="Tue, 5 Jan 2016 21:05:55 +0000"  >&lt;p&gt;Ok. +1 on patch.&lt;/p&gt;</comment>
                            <comment id="15084978" author="anoop.hbase" created="Wed, 6 Jan 2016 04:57:24 +0000"  >&lt;p&gt;Pushed to master. Thanks for the reviews.&lt;br/&gt;
Thanks for the extensive test and reporting this &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=dvdreddy&quot; class=&quot;user-hover&quot; rel=&quot;dvdreddy&quot;&gt;deepankar&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="15085155" author="hudson" created="Wed, 6 Jan 2016 07:47:24 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-Trunk_matrix #613 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-Trunk_matrix/613/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-Trunk_matrix/613/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-15064&quot; title=&quot;BufferUnderflowException after last Cell fetched from an HFile Block served from L2 offheap cache&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-15064&quot;&gt;&lt;del&gt;HBASE-15064&lt;/del&gt;&lt;/a&gt; BufferUnderflowException after last Cell fetched from an (anoopsamjohn: rev 7cd09bfb91e829a7595b97842e64cfd8edcd97f9)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/util/ByteBufferArray.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/test/java/org/apache/hadoop/hbase/util/TestByteBufferArray.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="15198473" author="dvdreddy" created="Thu, 17 Mar 2016 00:22:28 +0000"  >&lt;p&gt;I am still seeing this exception on our servers, I think I found something, what I observe is that a couple of things, in the normal byte buffers (java.nio) the hasRemaining function uses the current position and limit &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;     /**
     * Tells whether there are any elements between the current position and
     * the limit. &amp;lt;/p&amp;gt;
     *
     * @&lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt;  &amp;lt;tt&amp;gt;&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;&amp;lt;/tt&amp;gt; &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt;, and only &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt;, there is at least one element
     *          remaining in &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; buffer
     */
    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; hasRemaining() {
        &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; position &amp;lt; limit;
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;But in the MultiByteBuff we have the hasRemaining is not taking care of limit &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
 /**
   * Returns &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; there are elements between the current position and the limit
   * @&lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; there are elements, &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt; otherwise
   */
  @Override
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; hasRemaining() {
    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.curItem.hasRemaining() || &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.curItemIndex &amp;lt; &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.items.length - 1;
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Also the items array is not changed in the limit(int) function, this means there could be a scenario where the user has asked to limit at the end of first buffer, but the hasRemaining() will still return true, Is there any flaw in my logic here ?&lt;/p&gt;

&lt;p&gt;Also in the limit(int) function  in the MultiByteBuff function we are doing &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  &lt;span class=&quot;code-comment&quot;&gt;// Normally the limit will &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; to limit within the last BB item
&lt;/span&gt;    &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; limitedIndexBegin = &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.itemBeginPos[&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.limitedItemIndex];
    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (limit &amp;gt;= limitedIndexBegin &amp;amp;&amp;amp; limit &amp;lt; &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.itemBeginPos[&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.limitedItemIndex + 1]) {
      &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.items[&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.limitedItemIndex].limit(limit - limitedIndexBegin);
      &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;;
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;here I think in the if statement isn&apos;t the logic be just &lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt; if (limit  &amp;gt; limitedIndexBegin  &amp;amp;&amp;amp; limit &amp;lt; this.itemBeginPos[this.limitedItemIndex + 1]) &lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt; because if somebody is trying to limit at the place which is exactly at the boundary of the limitIndexBuffer then we are also including the last item which does not have any data as you are limiting at 0 (as limit == limitedIndexBegin, which is at the boundary), But then once you have read everything in the previous buffer if the client consults hasRemaining function this will return again true (as curIterm &amp;lt; no_of_items in array) but when you actually try to read anything we will throw BufferUnderFlowException because again the last element has no data. There is similar issue with &lt;tt&gt;getItemIndexfunction&lt;/tt&gt; when again the &lt;tt&gt;elemIndex&lt;/tt&gt; matches with the boundary&lt;/p&gt;</comment>
                            <comment id="15198685" author="ram_krish" created="Thu, 17 Mar 2016 03:28:54 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=dvdreddy&quot; class=&quot;user-hover&quot; rel=&quot;dvdreddy&quot;&gt;deepankar&lt;/a&gt;&lt;br/&gt;
Let&apos;s look at this once again. Thanks for the comments. &lt;/p&gt;</comment>
                            <comment id="15198749" author="anoop.hbase" created="Thu, 17 Mar 2016 05:05:27 +0000"  >&lt;p&gt;I think this is the correct impl of hasRemaining()&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; hasRemaining() {
    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.curItem.hasRemaining() || &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.curItemIndex &amp;lt; &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.limitedItemIndex;
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;What do you think ?&lt;/p&gt;</comment>
                            <comment id="15198751" author="dvdreddy" created="Thu, 17 Mar 2016 05:09:08 +0000"  >&lt;p&gt;yeah I think that will work, but what about the other bug in calculating limitedItemIndex&lt;/p&gt;</comment>
                            <comment id="15198752" author="dvdreddy" created="Thu, 17 Mar 2016 05:10:16 +0000"  >&lt;p&gt;Is there something wrong with my reasoning there ? or am i missing something ?&lt;/p&gt;</comment>
                            <comment id="15198754" author="ram_krish" created="Thu, 17 Mar 2016 05:12:56 +0000"  >&lt;blockquote&gt;&lt;p&gt;Also the items array is not changed in the limit(int) function, this means there could be a scenario where the user has asked to limit at the end of first buffer, but the hasRemaining() will still return true, Is there any flaw in my logic here ?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;In a general usage I think the limit() function on MBB and the hasRemaining has a flaw.  You are example is valid here. &lt;/p&gt;</comment>
                            <comment id="15198761" author="ram_krish" created="Thu, 17 Mar 2016 05:17:36 +0000"  >&lt;p&gt;Also once a limit is explicitly set on an MBB we should honour that in other operations. Currently even if the limit is set to 5 and we do a position(5), ya we get an Run time Exception but that happens from the internal BB instead I think the MBB should identify and throw an exception. But ya that will add some preChecks (based on the case).&lt;/p&gt;</comment>
                            <comment id="15198764" author="anoop.hbase" created="Thu, 17 Mar 2016 05:21:42 +0000"  >&lt;p&gt;Wanted to avoid many checks..  &lt;br/&gt;
And regarding your point on the limit(int) issue&lt;br/&gt;
That will be issue with the last item with 0 size right? Actually we will not include that BB going into the MBB.  So that wont come in?&lt;/p&gt;</comment>
                            <comment id="15198769" author="ram_krish" created="Thu, 17 Mar 2016 05:26:23 +0000"  >&lt;blockquote&gt;&lt;p&gt;because if somebody is trying to limit at the place which is exactly at the boundary of the limitIndexBuffer then we are also including the last item which does not have any data as you are limiting at 0 (as limit == limitedIndexBegin, which is at the boundary), But then once you have read everything in the previous buffer if the client consults hasRemaining function this will return again true (as curIterm &amp;lt; no_of_items in array) but when you actually try to read anything we will throw BufferUnderFlowException because again the last element has no data. &lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;This is again true. In case you see MBB as a generic API what you say is true&lt;/p&gt;</comment>
                            <comment id="15198774" author="anoop.hbase" created="Thu, 17 Mar 2016 05:29:51 +0000"  >&lt;p&gt;FYI,  we will not include the last 0 sized BB in the BucketArray within any of the MBB created.  This was fixed.&lt;/p&gt;</comment>
                            <comment id="15198775" author="ram_krish" created="Thu, 17 Mar 2016 05:30:14 +0000"  >&lt;blockquote&gt;&lt;p&gt;Actually we will not include that BB going into the MBB.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Just seeing these comments. &lt;/p&gt;</comment>
                            <comment id="15198777" author="anoop.hbase" created="Thu, 17 Mar 2016 05:32:05 +0000"  >&lt;p&gt;I see I get now what you are saying.. Let me see&lt;/p&gt;</comment>
                            <comment id="15198780" author="anoop.hbase" created="Thu, 17 Mar 2016 05:37:28 +0000"  >&lt;p&gt;But let us keep the limitedItemIndex to whichever we found.  It may so happen that within that item it has 0 readable size as it was limited to begin pos. In hasRemaining may be we need to consider this fact also?&lt;/p&gt;</comment>
                            <comment id="15198784" author="ram_krish" created="Thu, 17 Mar 2016 05:44:19 +0000"  >&lt;blockquote&gt;&lt;p&gt;In hasRemaining may be we need to consider this fact also?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yes.. We should ensure that the global &apos;limit&apos; tracking variable is used here. I think limit(int) is anyway going to set the limit upto which we can use on this MBB.  (like in Bytebuffers). So before returning hasRemaining we may have to check this &apos;limit&apos; and decide on it. &lt;/p&gt;</comment>
                            <comment id="15198793" author="dvdreddy" created="Thu, 17 Mar 2016 05:50:27 +0000"  >&lt;p&gt;What if we remove the equality in the if clause in the limit and in the limit method modify the new limitIndex to search for limit - 1 will that not work seamlessly ?&lt;/p&gt;</comment>
                            <comment id="15198794" author="dvdreddy" created="Thu, 17 Mar 2016 05:51:34 +0000"  >&lt;p&gt;pressed add too early i mean like this &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; MultiByteBuff limit(&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; limit) {
    &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.limit = limit;
    &lt;span class=&quot;code-comment&quot;&gt;// Normally the limit will &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; to limit within the last BB item
&lt;/span&gt;    &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; limitedIndexBegin = &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.itemBeginPos[&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.limitedItemIndex];
    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (limit &amp;gt; limitedIndexBegin &amp;amp;&amp;amp; limit &amp;lt; &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.itemBeginPos[&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.limitedItemIndex + 1]) {
      &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.items[&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.limitedItemIndex].limit(limit - limitedIndexBegin);
      &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;;
    }
    &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; itemIndex = getItemIndex(limit - 1);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="15198796" author="dvdreddy" created="Thu, 17 Mar 2016 05:53:19 +0000"  >&lt;p&gt;Also the hasRemaining method &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=anoop.hbase&quot; class=&quot;user-hover&quot; rel=&quot;anoop.hbase&quot;&gt;Anoop Sam John&lt;/a&gt; suggested should also work seamlessly similar to the generic API right ?&lt;/p&gt;</comment>
                            <comment id="15198808" author="ram_krish" created="Thu, 17 Mar 2016 06:07:33 +0000"  >&lt;p&gt;Patch for reference. &lt;/p&gt;</comment>
                            <comment id="15198811" author="ram_krish" created="Thu, 17 Mar 2016 06:11:08 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
Also the hasRemaining method Anoop Sam John suggested should also work seamlessly similar to the &lt;span class=&quot;code-keyword&quot;&gt;generic&lt;/span&gt; API right ?
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Just seeing these comments. I tried it out. But that may not work for the case when the limit is set exactly at the first BB (see in patch for case where we have the Mbb.limit(4). May be then your suggestion also needs to be combined then. &lt;/p&gt;</comment>
                            <comment id="15198820" author="ram_krish" created="Thu, 17 Mar 2016 06:17:21 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; itemIndex = getItemIndex(limit - 1);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Why is that &apos;limit - 1&apos; ?&lt;/p&gt;</comment>
                            <comment id="15198821" author="dvdreddy" created="Thu, 17 Mar 2016 06:17:42 +0000"  >&lt;p&gt;I think the test in your patch should fail Mbb.limit(12); because once your cross the 4th byte the hasRemaining will start returning false as you are checking only the limit index. I think just &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=anoop.hbase&quot; class=&quot;user-hover&quot; rel=&quot;anoop.hbase&quot;&gt;Anoop Sam John&lt;/a&gt; &apos;s suggestion  will not work, that coupled with the modification of the way we calculate limitedItemIndex should work I think&lt;/p&gt;</comment>
                            <comment id="15198828" author="anoop.hbase" created="Thu, 17 Mar 2016 06:21:37 +0000"  >&lt;p&gt;Let us revisit all logic..  Add one more check for corner case again and again, we will land in issues later.. Let us clean it up.  I will work on that today.&lt;/p&gt;</comment>
                            <comment id="15198848" author="ram_krish" created="Thu, 17 Mar 2016 06:45:57 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
bb1 = ByteBuffer.wrap(b);
    bb2 = ByteBuffer.wrap(b1);
    bb3 = ByteBuffer.allocate(4);
    mbb1 = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; MultiByteBuff(bb1, bb2, bb3);
    mbb1.limit(12);
    &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; i = 0; i &amp;lt; 12; i++) {
      mbb1.get();
    }
    assertFalse(mbb1.hasRemaining());
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;You mean this hasRemaining() will return true in this case? No it will work correctly. Because the limitedItemIndex will be 2 and once we have reached the end of 12 bytes the item at the limitedItemIndex  will have its limit 0. So this check &apos;return this.items&lt;span class=&quot;error&quot;&gt;&amp;#91;limitedItemIndex&amp;#93;&lt;/span&gt;.hasRemaining();&apos; will return false. &lt;/p&gt;</comment>
                            <comment id="15198849" author="ram_krish" created="Thu, 17 Mar 2016 06:47:08 +0000"  >&lt;p&gt;bqLet us revisit all logic.. Add one more check for corner case again and again,&lt;br/&gt;
Okie to revisit all logic. But this fix is only for limit() and hasRemaining I think.&lt;/p&gt;</comment>
                            <comment id="15198858" author="dvdreddy" created="Thu, 17 Mar 2016 06:59:37 +0000"  >&lt;p&gt;No I was saying, when you have done  mbb1.get() for 4 times and then you check hasRemaining it will return false;&lt;br/&gt;
so I think the following test will fail&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
bb1 = ByteBuffer.wrap(b);
bb2 = ByteBuffer.wrap(b1);
bb3 = ByteBuffer.allocate(4);
mbb1 = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; MultiByteBuff(bb1, bb2, bb3);
mbb1.limit(12);
&lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; i = 0; i &amp;lt; 12; i++) {
       assertTrue(mbb1.hasRemaining());
      mbb1.get();
}
assertFalse(mbb1.hasRemaining());
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="15198872" author="ram_krish" created="Thu, 17 Mar 2016 07:18:16 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; i = 0; i &amp;lt; 12; i++) {
       assertTrue(mbb1.hasRemaining());
      mbb1.get();
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Ya that is true. Good point. &lt;/p&gt;</comment>
                            <comment id="15198873" author="ram_krish" created="Thu, 17 Mar 2016 07:19:59 +0000"  >&lt;p&gt;Ideally this limitedItemIndex should be used if the curItemIndex is just the one before it right?  Otherwise it makes sense to say hasReminaing is true.&lt;/p&gt;</comment>
                            <comment id="15199100" author="dvdreddy" created="Thu, 17 Mar 2016 07:44:05 +0000"  >&lt;p&gt;Yeah something like that which was what &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=anoop.hbase&quot; class=&quot;user-hover&quot; rel=&quot;anoop.hbase&quot;&gt;Anoop Sam John&lt;/a&gt; was suggesting, just the limitedItemIndex computation was wrong in the first place.&lt;/p&gt;</comment>
                            <comment id="15206616" author="anoop.hbase" created="Tue, 22 Mar 2016 15:51:02 +0000"  >&lt;p&gt;As this is opened let us fix this particular case with below fix?&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
 &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; hasRemaining() {
    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.curItem.hasRemaining() || (&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.curItemIndex &amp;lt; &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.limitedItemIndex
        &amp;amp;&amp;amp; &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.items[&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.curItemIndex + 1].hasRemaining());
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="15206829" author="ram_krish" created="Tue, 22 Mar 2016 17:26:30 +0000"  >&lt;blockquote&gt;&lt;p&gt;this.curItemIndex &amp;lt; this.limitedItemIndex&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Should we not check if really the curItemIndex is one less than the limitedItemIndex?&lt;/p&gt;</comment>
                            <comment id="15206837" author="ram_krish" created="Tue, 22 Mar 2016 17:29:24 +0000"  >&lt;blockquote&gt;&lt;p&gt;(this.curItemIndex &amp;lt; this.limitedItemIndex&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;        &amp;amp;&amp;amp; this.items&lt;span class=&quot;error&quot;&gt;&amp;#91;this.curItemIndex + 1&amp;#93;&lt;/span&gt;.hasRemaining());&lt;br/&gt;
I think reading the full condition it will do that. So no problem. &lt;/p&gt;</comment>
                            <comment id="15207082" author="dvdreddy" created="Tue, 22 Mar 2016 19:19:41 +0000"  >&lt;p&gt;Yeah I think this will fix this issue.&lt;/p&gt;</comment>
                            <comment id="15208015" author="anoop.hbase" created="Wed, 23 Mar 2016 07:39:03 +0000"  >&lt;p&gt;Let us commit this addendum then?  Pls give a +1&lt;/p&gt;</comment>
                            <comment id="15208041" author="ram_krish" created="Wed, 23 Mar 2016 08:13:08 +0000"  >&lt;p&gt;Want to add a test case in the patch?&lt;/p&gt;</comment>
                            <comment id="15208057" author="anoop.hbase" created="Wed, 23 Mar 2016 08:26:19 +0000"  >&lt;p&gt;Sure..  Tests are there for the discussed corner cases for hasRemaining() API&lt;/p&gt;</comment>
                            <comment id="15208085" author="ram_krish" created="Wed, 23 Mar 2016 08:53:28 +0000"  >&lt;p&gt;+1&lt;/p&gt;</comment>
                            <comment id="15208134" author="anoop.hbase" created="Wed, 23 Mar 2016 09:34:49 +0000"  >&lt;p&gt;Thanks for reporting it &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=dvdreddy&quot; class=&quot;user-hover&quot; rel=&quot;dvdreddy&quot;&gt;deepankar&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="15208484" author="hudson" created="Wed, 23 Mar 2016 14:25:41 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-Trunk_matrix #800 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-Trunk_matrix/800/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-Trunk_matrix/800/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-15064&quot; title=&quot;BufferUnderflowException after last Cell fetched from an HFile Block served from L2 offheap cache&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-15064&quot;&gt;&lt;del&gt;HBASE-15064&lt;/del&gt;&lt;/a&gt; BufferUnderflowException after last Cell fetched from an (anoopsamjohn: rev cadfb21f4bb465d1e305db2a159b8574282c8150)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-common/src/test/java/org/apache/hadoop/hbase/nio/TestMultiByteBuff.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/nio/MultiByteBuff.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12724166">HBASE-11425</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12794958" name="HBASE-15064-addendum.patch" size="2153" author="anoop.hbase" created="Wed, 23 Mar 2016 08:26:19 +0000"/>
                            <attachment id="12794952" name="HBASE-15064-addendum.patch" size="729" author="anoop.hbase" created="Wed, 23 Mar 2016 07:39:03 +0000"/>
                            <attachment id="12780476" name="HBASE-15064.patch" size="3093" author="anoop.hbase" created="Tue, 5 Jan 2016 06:07:56 +0000"/>
                            <attachment id="12793927" name="MBB_hasRemaining.patch" size="2471" author="ram_krish" created="Thu, 17 Mar 2016 06:07:33 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sat, 2 Jan 2016 05:48:17 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            36 weeks, 1 day ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2qg9j:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>