<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 02 19:53:32 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-826/HBASE-826.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-826] delete table followed by recreation results in honked table</title>
                <link>https://issues.apache.org/jira/browse/HBASE-826</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Daniel Leffel suspected that delete and then recreate causes issues.  I tried it on our little cluster.  I&apos;m doing a MR load up into the newly created table and after a few million rows, the MR job just hangs.  Its looking for a region that doesn&apos;t exist:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;2008-08-13 03:32:36,840 INFO org.apache.hadoop.metrics.jvm.JvmMetrics: Initializing JVM Metrics with processName=MAP, sessionId=
2008-08-13 03:32:36,940 INFO org.apache.hadoop.mapred.MapTask: numReduceTasks: 1
2008-08-13 03:32:37,420 DEBUG org.apache.hadoop.hbase.client.HConnectionManager$TableServers: Found ROOT REGION =&amp;gt; {NAME =&amp;gt; &apos;-ROOT-,,0&apos;, STARTKEY =&amp;gt; &apos;&apos;, ENDKEY =&amp;gt; &apos;&apos;, ENCODED =&amp;gt; 70236052, TABLE =&amp;gt; {{NAME =&amp;gt; &apos;-ROOT-&apos;, IS_ROOT =&amp;gt; &apos;&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;&apos;, IS_META =&amp;gt; &apos;&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;&apos;, FAMILIES =&amp;gt; [{NAME =&amp;gt; &apos;info&apos;, BLOOMFILTER =&amp;gt; &apos;&lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;&apos;, COMPRESSION =&amp;gt; &apos;NONE&apos;, VERSIONS =&amp;gt; &apos;1&apos;, LENGTH =&amp;gt; &apos;2147483647&apos;, TTL =&amp;gt; &apos;-1&apos;, IN_MEMORY =&amp;gt; &apos;&lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;&apos;, BLOCKCACHE =&amp;gt; &apos;&lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;&apos;}]}}
2008-08-13 03:32:37,541 DEBUG org.apache.hadoop.hbase.client.HConnectionManager$TableServers: reloading table servers because: HRegionInfo was &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; or empty in .META.
2008-08-13 03:32:37,541 DEBUG org.apache.hadoop.hbase.client.HConnectionManager$TableServers: Removed .META.,,1 from cache because of TestTable,0008388608,99999999999999
2008-08-13 03:32:37,544 DEBUG org.apache.hadoop.hbase.client.HConnectionManager$TableServers: Found ROOT REGION =&amp;gt; {NAME =&amp;gt; &apos;-ROOT-,,0&apos;, STARTKEY =&amp;gt; &apos;&apos;, ENDKEY =&amp;gt; &apos;&apos;, ENCODED =&amp;gt; 70236052, TABLE =&amp;gt; {{NAME =&amp;gt; &apos;-ROOT-&apos;, IS_ROOT =&amp;gt; &apos;&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;&apos;, IS_META =&amp;gt; &apos;&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;&apos;, FAMILIES =&amp;gt; [{NAME =&amp;gt; &apos;info&apos;, BLOOMFILTER =&amp;gt; &apos;&lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;&apos;, COMPRESSION =&amp;gt; &apos;NONE&apos;, VERSIONS =&amp;gt; &apos;1&apos;, LENGTH =&amp;gt; &apos;2147483647&apos;, TTL =&amp;gt; &apos;-1&apos;, IN_MEMORY =&amp;gt; &apos;&lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;&apos;, BLOCKCACHE =&amp;gt; &apos;&lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;&apos;}]}}
2008-08-13 03:32:47,605 DEBUG org.apache.hadoop.hbase.client.HConnectionManager$TableServers: reloading table servers because: HRegionInfo was &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; or empty in .META.
2008-08-13 03:32:47,606 DEBUG org.apache.hadoop.hbase.client.HConnectionManager$TableServers: Removed .META.,,1 from cache because of TestTable,0008388608,99999999999999

....
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;My guess is that its a region that was in the tables&apos; previous incarnation with ghosts left over down inside .META.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12402267">HBASE-826</key>
            <summary>delete table followed by recreation results in honked table</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="1" iconUrl="https://issues.apache.org/jira/images/icons/priorities/blocker.png">Blocker</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="stack">stack</assignee>
                                    <reporter username="stack">stack</reporter>
                        <labels>
                    </labels>
                <created>Wed, 13 Aug 2008 03:50:08 +0000</created>
                <updated>Sat, 13 Sep 2008 23:22:45 +0000</updated>
                            <resolved>Fri, 29 Aug 2008 05:12:28 +0000</resolved>
                                                    <fixVersion>0.2.1</fixVersion>
                    <fixVersion>0.18.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12622261" author="jdcryans" created="Wed, 13 Aug 2008 15:57:28 +0000"  >&lt;p&gt;We see this again. Tables that have been used for a long time are now giving us that kind of problem under a MR.&lt;/p&gt;</comment>
                            <comment id="12622288" author="stack" created="Wed, 13 Aug 2008 17:33:51 +0000"  >&lt;p&gt;Commit of 808/809 did not fix this.&lt;/p&gt;

&lt;p&gt;Running a test, what I&apos;m seeing is that the root cause is the reported empty HRegionInfo&lt;/p&gt;</comment>
                            <comment id="12622465" author="stack" created="Thu, 14 Aug 2008 08:05:13 +0000"  >&lt;p&gt;I&apos;m seeing that the getClosestAtOrBefore is finding rows from previous incarnations of a table.  This triggers the stuck client over and over emitting &apos;reloading .. because HRI was null or empty  in &quot;.META.&quot;&apos;.&lt;/p&gt;

&lt;p&gt;On table delete, not all cells on a row in .META. are removed.  If a new table is created with the same name and schema as a just-deleted table, the first region with a null start and end row works fine for a while.  We split and then we may get lucky for a while but inevitably, the getClosestAtOrBefore will be queried with a row whose just-before will be from a previous incarnation of the table, only its a cell from the historian column family or its some old startcode that wasn&apos;t properly removed; so getClosestAtOrBefore returns a closet row where there is no HRI.   Client gets stuck because it keeps asking server for closest row for row &apos;X&apos; and it keeps getting back the unsatisfactory answer.&lt;/p&gt;

&lt;p&gt;We&apos;ve had this issue since before 0.2.0 RC1.  Its what daniel and sebastien were seeing just before RC2 but we tried to accredit the issue first to a hdfs storm and to the running of an instance with hbase-751 not fixed.  We&apos;ve not had it in test because our unit tests are regular and split in same place every time (so no chance for ghost regions to shine through).&lt;/p&gt;

&lt;p&gt;I&apos;m still trying to figure how we don&apos;t successfully deleteall.  Seems like table has to be big for the problem to start occurring.&lt;/p&gt;

&lt;p&gt;After figuring the issue, we then need to make a tool that will fix up people&apos;s .META. tables removing any vestige of deleted tables.&lt;/p&gt;

&lt;p&gt;&apos;Workaround&apos; is not to reuse a table name until this is fixed.&lt;/p&gt;</comment>
                            <comment id="12622823" author="stack" created="Fri, 15 Aug 2008 07:09:02 +0000"  >&lt;p&gt;After study, it looks like the deletes are in place; its just that when we do the getClosestAtOrBefore, when pulling from StoreFiles, AND we have candidate keys gotten from memcache, there is a code path we take that doesn&apos;t record deleted cells.&lt;/p&gt;

&lt;p&gt;The handleDeleted Memcache function needs to be used by HStore.rowAtOrBeforeWithCandidates.  See the duplicated code that is in HStore and in handleDeleted?  The bit that is missing from HStore is the deletes.add(k).  Suggest moving the handleDeleted into HStore, make it a static and then have Memcache and HStore.rowAtOrBeforeWithCandidates use it.&lt;/p&gt;

&lt;p&gt;Doing more testing to verify this indeed fixes things.&lt;/p&gt;</comment>
                            <comment id="12622826" author="stack" created="Fri, 15 Aug 2008 07:46:50 +0000"  >&lt;p&gt;More testing would seem to indicate the above described fix works for at least the small testcase where small case was upload of 2M rows into a table, delete it, then try same upload.  Was failing reliably before this fix.&lt;/p&gt;

&lt;p&gt;Trying with a bigger table.&lt;/p&gt;

&lt;p&gt;Debugging this issue, I made getStores public in HRegion and then in HStores, I made getReader also public.  Doing this, I was able to do a little script that could enumerate all keys in the .META. table in a few lines.  I think we should make these methods public to facilitate future easier debugging.&lt;/p&gt;

&lt;p&gt;Script looked like this:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
# Script that outputs all keys in .META. store files.
# HBase MUST be shutdown when you run &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; script.
#
# To run it, &lt;span class=&quot;code-keyword&quot;&gt;do&lt;/span&gt;: ${HBASE_HOME}/bin/hbase org.jruby.Main iteratemeta.rb
include Java
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.hbase.util.MetaUtils
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.hbase.HRegionInfo
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.hbase.HConstants
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.hbase.HBaseConfiguration
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.hbase.HStoreKey
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.hbase.io.ImmutableBytesWritable
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.hbase.regionserver.HLogEdit

# Get configuration to use.
c = HBaseConfiguration.&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt;()
# Set hadoop filesystem configuration using the hbase.rootdir.
# Otherwise, we&apos;ll always use localhost though the hbase.rootdir
# might be pointing at hdfs location.
c.set(&lt;span class=&quot;code-quote&quot;&gt;&quot;fs.&lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt;.name&quot;&lt;/span&gt;, c.get(HConstants::HBASE_DIR));
meta = utils.getMetaRegion(HRegionInfo::FIRST_META_REGIONINFO)
begin
  &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; columnDescriptor in meta.getRegionInfo().getTableDesc().getFamilies()
    store = meta.getStore(columnDescriptor.getName())  
    puts &lt;span class=&quot;code-quote&quot;&gt;&quot;Store: %s&quot;&lt;/span&gt; % [store.toString()]
    &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; reader in store.getReaders()
      puts &lt;span class=&quot;code-quote&quot;&gt;&quot;Store: %s, reader %s&quot;&lt;/span&gt; % [store.toString(), reader.toString()]
      key = HStoreKey.&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt;()
      value = ImmutableBytesWritable.&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt;()
      &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; (reader.next(key, value))
        puts &lt;span class=&quot;code-quote&quot;&gt;&quot;%s %s&quot;&lt;/span&gt; % [key, (HLogEdit.isDeleted(value.get()) ? &lt;span class=&quot;code-quote&quot;&gt;&quot;d&quot;&lt;/span&gt;: &quot;&quot;)]
      end 
    end
  end
ensure
  utils.shutdown()
end
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="12622828" author="stack" created="Fri, 15 Aug 2008 08:03:23 +0000"  >&lt;p&gt;One other note, if the deletes are actually all in place, then there will be no need of a repair script to fixup horked .META.s.  Lets see.  Have more tests to run in morning.&lt;/p&gt;</comment>
                            <comment id="12622855" author="jdcryans" created="Fri, 15 Aug 2008 11:19:10 +0000"  >&lt;p&gt;I will try the described fix on Sebastien&apos;s setup this morning since I can reliably recreate this bug for a really big table.&lt;/p&gt;</comment>
                            <comment id="12622995" author="jdcryans" created="Fri, 15 Aug 2008 19:40:51 +0000"  >&lt;p&gt;Fixes the holes described by st^ack. This patch only applies to 0.3.0 for the moment, have to change row locks for 0.2.&lt;/p&gt;</comment>
                            <comment id="12622996" author="jdcryans" created="Fri, 15 Aug 2008 19:41:25 +0000"  >&lt;p&gt;Wrong patch was uploaded.&lt;/p&gt;</comment>
                            <comment id="12623133" author="stack" created="Sat, 16 Aug 2008 15:38:43 +0000"  >&lt;p&gt;Found another hole &amp;#8211; need to make copy of HSK before putting into deletes list &amp;#8211; but there is still another hole; a delete is not entered for a single server and startcode.  Digging.&lt;/p&gt;</comment>
                            <comment id="12623163" author="stack" created="Sat, 16 Aug 2008 21:43:07 +0000"  >&lt;p&gt;At first it was easy to provoke the issue.  Two regions was sufficient.  Now with the J-D patch in place, things are better for sure.  On small tables the problem is gone.&lt;/p&gt;

&lt;p&gt;I&apos;m testing with bigger tables to be sure.&lt;/p&gt;

&lt;p&gt;I don&apos;t think the fix is all in though, or, there is another issue lurking. Last night at least I found two lone edits from an old instance of a table shining through doing getClosest against new table (manifestation in MR job is the log snippet posted at the start of this issue).&lt;/p&gt;

&lt;p&gt;I&apos;m testing by running sizeable imports &amp;#8211; 4 to 32M &amp;#8211; on our little cluster of 4 machines over and over again.  I upload, then delete the table.  I then stop hbase, memcache is flushed out to FileSystem (Issue seems to be related to travesal of many store files in FileSystem).   Is on the subsequent import where I&apos;d issues.&lt;/p&gt;

&lt;p&gt;I&apos;m having trouble reliably replicating the errant edits this morning.  Testing works most of the time.  &lt;/p&gt;

&lt;p&gt;Repair of a table with old edits is tough too.   I can&apos;t scan using an old timestamp to find the errant edits.   I ain&apos;t sure why; my guess is as in how getFull works, the presence of newer deletes can overshadow older shells.  If we knew the HStoreKey of the errant edits, a repair would just be a case of adding deletes against their coordinates but discovering the errant edit coordinates is tough; up to this I&apos;ve only been able to do it by adding in super-intrusive logging into the getClosestAtOrBefore calculation or by sort/joins on the output of the iterate script above.&lt;/p&gt;</comment>
                            <comment id="12623229" author="stack" created="Sun, 17 Aug 2008 21:00:19 +0000"  >&lt;p&gt;Ok. I don&apos;t have enough confidence in the patch to commit it at this time though it improves .  My most recent test failed in an odd way; meta shows a region deployed on a particular server but if I visit it, its not there.  It could be the above patch though I doubt it.&lt;/p&gt;

&lt;p&gt;I&apos;m gone for a week starting tomorrow.  Will address this issue again then, unless anyone digs in meantime (One change to J-D patch I&apos;d make is doing a &apos;new HStoreKey(key)&apos; when adding to the deletes list).&lt;/p&gt;

&lt;p&gt;At a minimum we need to add hbase sufficient API such that we can build repair tools to fix this conditiion should it arise in the field; table becomes inoperable and no means of figuring which are the errant keys to delete.&lt;/p&gt;</comment>
                            <comment id="12623237" author="stack" created="Sun, 17 Aug 2008 22:14:14 +0000"  >&lt;p&gt;Here is J-Ds patch with addition of the above referenced &apos;new HStoreKey(deletekey)&apos;.&lt;/p&gt;</comment>
                            <comment id="12625889" author="stack" created="Tue, 26 Aug 2008 22:12:06 +0000"  >&lt;p&gt;Its looking like tables are not being fully deleted &amp;#8211; which would seem to be an issue distinct from the items fixed by the J-D patch above.&lt;/p&gt;

&lt;p&gt;After a delete, I shut hbase down so all of the edits are out in store files.  I then run the above iteratemeta.rb script to get the content of .META., sort the result and then with another hacked script, print out cells that do not have a corresponding delete record.  Its always startcode and server cells that are missing their deletes.  Trying to figure why these are not getting delete cell overrides.&lt;/p&gt;</comment>
                            <comment id="12626844" author="stack" created="Fri, 29 Aug 2008 04:54:09 +0000"  >&lt;p&gt;Ok, so figured the bug I was seeing AFTER application of above J-D patch. I thought the bug was more of what J-D&apos;s patch was supposed to be fixing but its something else, something equally as ugly.&lt;/p&gt;

&lt;p&gt;Here is how I consistently generated the problem with J-D&apos;s patch in place:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
Fill a table.
Stop hbase so files are flushed.
Start hbase.
Remove table (disable/drop).
Stop hbase so again flushed to filesystem.
Then look at the content of the .META. using above iteratemeta script.
Sort -u output then run below &apos;check&apos; script to match delete and non-delete cells
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Here&apos;s the script:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;                                                                                                                                                                                                                             1,1            All
#!/usr/bin/env ruby
# Take on STDIN, sorted and uniqued output of the iteratemeta.rb
lastline = nil
&lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; line in STDIN
  &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; line =~ /(.*)\s+d$/
    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; lastline != nil
      puts lastline unless lastline.eql?($1)
    end
    lastline = nil
  &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt;
    puts lastline unless lastline == nil
    lastline = line.rstrip
  end
end
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Was finding a few keys that should have had overshadowing deletes but the deletes were not present.  (If I attempted refilling table, eventually, we&apos;d fail with the &apos;empty HRI&apos; complaint).&lt;/p&gt;

&lt;p&gt;I thought the fail was because the above J-D patch was incomplete.&lt;/p&gt;

&lt;p&gt;Turns out its a problem in compactions.  We see it since the compaction algorithm changed.&lt;/p&gt;

&lt;p&gt;Here is what is happening.&lt;/p&gt;

&lt;p&gt;Max versions by default in &apos;.META.&apos; table is &lt;b&gt;1&lt;/b&gt;.  Version check looks at row and column component of a HStoreKey only: i.e. not at timestamp.  info:serverstartcode and info:server are edited everytime we startup and when we offline (disable) and delete.  The delete cell has same timestamp as the cell it would delete; i.e. it&apos;ll usually be older than offlining update.&lt;/p&gt;

&lt;p&gt;So, with our new smart compaction, we do not do every file when we compact.  What I was seeing after the restarts was that the two most recent files would have been compacted on final restart.  We&apos;d discard the delete cell that was not the offlining of info:server and info:serverstartcode.  The original cell would be back in the biggest and oldest storefile.  It would on occasion get a chance to come through doing getClosestAtOrBefore.&lt;/p&gt;

&lt;p&gt;So, I think the fix is that we cannot remove anything compacting, not until we do a major compaction when all files are in play.  Will talk to Billy over in hbase-834 about it.  Meantime, will apply the J-D patch and close this issue.&lt;/p&gt;</comment>
                            <comment id="12626848" author="stack" created="Fri, 29 Aug 2008 05:12:28 +0000"  >&lt;p&gt;Committed branch and trunk.  Off to talk to Billy about fixing compactions.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12388398" name="826-v3.patch" size="18916" author="stack" created="Sun, 17 Aug 2008 22:14:14 +0000"/>
                            <attachment id="12388334" name="hbase-826_0.3.0.patch" size="12416" author="jdcryans" created="Fri, 15 Aug 2008 19:41:25 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 13 Aug 2008 15:57:28 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>25420</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            8 years, 15 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0h9of:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>98830</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>