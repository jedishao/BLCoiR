<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 02 19:35:56 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-543/HBASE-543.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-543] A region&apos;s state is kept in several places in the master opening the possibility for race conditions</title>
                <link>https://issues.apache.org/jira/browse/HBASE-543</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;A region&apos;s state exists in multiple maps in the RegionManager: unassignedRegions, pendingRegions, regionsToClose, closingRegions, regionsToDelete, etc.&lt;/p&gt;

&lt;p&gt;One of these race conditions was found in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-534&quot; title=&quot;Double-assignment at SPLIT-time (WAS: Stores retaining references to long-deleted mapfiles)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-534&quot;&gt;&lt;del&gt;HBASE-534&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;For HBase-0.1.x, we should just patch the holes we find.&lt;/p&gt;

&lt;p&gt;The ultimate solution (which requires a lot of changes in HMaster) should be applied to HBase trunk.&lt;/p&gt;

&lt;p&gt;Proposed solution:&lt;/p&gt;

&lt;p&gt;Create a class that encapsulates a region&apos;s state and provide synchronized access to the class that validates state changes.&lt;br/&gt;
There should be a single structure that holds regions in these transitional states and it should be a synchronized collection of some kind.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12392212">HBASE-543</key>
            <summary>A region&apos;s state is kept in several places in the master opening the possibility for race conditions</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="jimk">Jim Kellerman</assignee>
                                    <reporter username="jimk">Jim Kellerman</reporter>
                        <labels>
                    </labels>
                <created>Mon, 24 Mar 2008 22:26:42 +0000</created>
                <updated>Sun, 13 Sep 2009 22:26:24 +0000</updated>
                            <resolved>Wed, 24 Dec 2008 01:38:25 +0000</resolved>
                                    <version>0.1.0</version>
                    <version>0.1.1</version>
                    <version>0.2.0</version>
                                    <fixVersion>0.19.0</fixVersion>
                                    <component>master</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                                                            <comments>
                            <comment id="12583790" author="stack" created="Mon, 31 Mar 2008 18:39:06 +0000"  >&lt;p&gt;Do we think we should address this for 0.1.1?  As I see it, this would require a rewrite of a core piece of the HMaster.  It would take some effort inside a pretty complex piece of code.  The effort would then be hard to forward-port because TRUNK has been significantly refactored in this regard.&lt;/p&gt;

&lt;p&gt;I&apos;d suggest that regards the branch, lets just patch any &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-534&quot; title=&quot;Double-assignment at SPLIT-time (WAS: Stores retaining references to long-deleted mapfiles)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-534&quot;&gt;&lt;del&gt;HBASE-534&lt;/del&gt;&lt;/a&gt; holes we come across and do the proper fix in TRUNK?&lt;/p&gt;</comment>
                            <comment id="12583795" author="jimk" created="Mon, 31 Mar 2008 18:51:06 +0000"  >&lt;p&gt;Yes, I think you are probably right. After looking at the scope of changes required here, doing them in 0.1.1 would be out of place. If we patch holes in 0.1.1 and then do the &quot;real solution&quot; in trunk, that would probably be more appropriate.&lt;/p&gt;</comment>
                            <comment id="12592209" author="bryanduxbury" created="Fri, 25 Apr 2008 00:09:28 +0000"  >&lt;p&gt;This is bad.&lt;/p&gt;</comment>
                            <comment id="12607494" author="stack" created="Tue, 24 Jun 2008 06:42:43 +0000"  >&lt;p&gt;Here&apos;s some state changes that currently look unsafe:&lt;/p&gt;

&lt;p&gt;+ On open, the move from unassigned to pending is done non-transactionally: ServerManager line 438&lt;br/&gt;
+ In checkAssigned in BaseScanner, around line 350, we remove entry from unassignedRegions and from pendingRegions non-transactionally.&lt;/p&gt;

&lt;p&gt;Looking to see if can squash together unassigned and pending.&lt;/p&gt;</comment>
                            <comment id="12607866" author="stack" created="Wed, 25 Jun 2008 06:01:51 +0000"  >&lt;p&gt;javadoc, more specific about method returns, removed unnecessary treemaps, etc.&lt;/p&gt;

&lt;p&gt;Still work to do.&lt;/p&gt;</comment>
                            <comment id="12614102" author="stack" created="Wed, 16 Jul 2008 21:08:26 +0000"  >&lt;p&gt;Last set of changes made working toward this issue.&lt;/p&gt;</comment>
                            <comment id="12614104" author="stack" created="Wed, 16 Jul 2008 21:11:35 +0000"  >&lt;p&gt;Moving out of 0.2.&lt;/p&gt;

&lt;p&gt;This is bad but punting so can get a 0.2 RC out.  In my experience, we&apos;ve not been burned by this issue recently.  We can live with ugly state of affairs a while longer.&lt;/p&gt;</comment>
                            <comment id="12643587" author="stack" created="Wed, 29 Oct 2008 18:32:26 +0000"  >&lt;p&gt;Moving out of 0.19.0.  ZK will fix this.  Its looking like it might happen before this issue gets fixed.&lt;/p&gt;</comment>
                            <comment id="12657907" author="jimk" created="Thu, 18 Dec 2008 21:16:32 +0000"  >&lt;p&gt;This file shows all the maps that are associated with region state, and how they change. There are several circumstances in which entries are not cleaned up if a server dies. There are also many possibilities for race conditions because the state of a region is maintained in multiple places, and a lot of them are not synchronized when referencing multiple maps.&lt;/p&gt;</comment>
                            <comment id="12658352" author="jimk" created="Sun, 21 Dec 2008 04:14:41 +0000"  >&lt;p&gt;This is the fundamental root cause of &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1051&quot; title=&quot;Regionserver attempting to open reassigned region but master ignoring, thinks region is still closing&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-1051&quot;&gt;&lt;del&gt;HBASE-1051&lt;/del&gt;&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1046&quot; title=&quot;Region assigned to two regionservers after split&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-1046&quot;&gt;&lt;del&gt;HBASE-1046&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12658353" author="jimk" created="Sun, 21 Dec 2008 04:19:22 +0000"  >&lt;p&gt;Please review. Passes all regresssion tests and PE randomWrite 4 with 1 or 4 region servers.&lt;/p&gt;</comment>
                            <comment id="12658359" author="stack" created="Sun, 21 Dec 2008 07:31:48 +0000"  >&lt;p&gt;How do I know this fixes the issues?  There are no tests nor description of how this addresses issues seen in referenced issues.  For example, it would be helpful if you explained how you replicated said issues so could test this patch actually addresses them.&lt;/p&gt;

&lt;p&gt;There is a bunch of redoing of state processing but no explanation as to why?  For example:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+   * Remove a region from the region state map.
+   * 
+   * @param info
+   */
+  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void removeRegion(HRegionInfo info) {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Under what circumstance would I remove a region from state map?&lt;/p&gt;

&lt;p&gt;The region state map itself has no explanation:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+  &lt;span class=&quot;code-comment&quot;&gt;// Needs to be SortedMap so we can specify a comparator
&lt;/span&gt;+  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; SortedMap&amp;lt;&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[], RegionState&amp;gt; regionState =
+    Collections.synchronizedSortedMap(
+        &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; TreeMap&amp;lt;&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[], RegionState&amp;gt;(Bytes.BYTES_COMPARATOR));
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The maps it would replace tried to explain what they were about.&lt;/p&gt;

&lt;p&gt;Nor does the new RegionState map.&lt;/p&gt;

&lt;p&gt;With above said, looks like this could be an improvement in that state is all in one place.&lt;/p&gt;

&lt;p&gt;Should RegionState be looking for illegal states?  It doesn&apos;t seem to do any checking.  This would be a good place to check we&apos;re doing transitions properly.&lt;/p&gt;

&lt;p&gt;Should resetting of connection root region be done inside unsetRootRegion in below so the two actions are tied together:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+      master.connection.setRootRegionLocation(&lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;);
+      master.regionManager.unsetRootRegion();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Does unsetRootRegion set root region to null in regionManger?  Maybe connection and regionManager both need an unsetRootRegion method (or both a setRootRegionLocation that takes null) so same action in two places uses similarily named methods (This stuff preexisted your patch).&lt;/p&gt;

&lt;p&gt;At first I thought all these things unsafe:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+      &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (RegionState s: regionsToAssign) {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;.. but now I see your comment that there is a lock held higher up on regionsToAssign.... good.&lt;/p&gt;

&lt;p&gt;Enough for now.&lt;/p&gt;

&lt;p&gt;Good stuff.&lt;/p&gt;</comment>
                            <comment id="12658360" author="apurtell" created="Sun, 21 Dec 2008 08:18:00 +0000"  >&lt;p&gt;I am running with this patch applied now. &lt;/p&gt;</comment>
                            <comment id="12658391" author="apurtell" created="Sun, 21 Dec 2008 16:00:51 +0000"  >&lt;p&gt;+1 &lt;/p&gt;

&lt;p&gt;The patch appears to fix the problems I&apos;ve been seeing where errors take down a regionserver but the master gets confused and fails to reassign the affected regions. &lt;/p&gt;</comment>
                            <comment id="12658425" author="stack" created="Sun, 21 Dec 2008 23:32:27 +0000"  >&lt;p&gt;Andrew: Thats good news.&lt;/p&gt;

&lt;p&gt;More comments on patch for Jim:&lt;/p&gt;

&lt;p&gt;In RegionState, data members are named isUnassigned, isClosing, etc.  Usual javabean convention is that data members are named unassigned, closing, etc. and that isClosing is one of the names getters have.&lt;/p&gt;

&lt;p&gt;Why dumpState and not toString?&lt;/p&gt;




</comment>
                            <comment id="12658616" author="jimk" created="Mon, 22 Dec 2008 18:32:04 +0000"  >&lt;p&gt;Replicating problems:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1046&quot; title=&quot;Region assigned to two regionservers after split&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-1046&quot;&gt;&lt;del&gt;HBASE-1046&lt;/del&gt;&lt;/a&gt;: Region assigned to two regionservers after split&lt;/p&gt;

&lt;p&gt;Running a slightly modified version of TestSplit (in which there are&lt;br/&gt;
two region servers instead of one) under the debugger (with lease and&lt;br/&gt;
client timeouts jacked up), I set a breakpoint in&lt;br/&gt;
ServerManager.processSplitRegion. When that was hit, I put a&lt;br/&gt;
breakpoint in ServerManager.processRegionOpen just before the call to&lt;br/&gt;
RegionManager.setPending. I also cleared the breakpoint in&lt;br/&gt;
processSplitRegion but did not resume the thread, yet.&lt;/p&gt;

&lt;p&gt;During the period in which the thread stopped in processSplitRegion&lt;br/&gt;
was stalled the meta scanner ran, assigning the split regions.&lt;/p&gt;

&lt;p&gt;The region server(s) assigned the split regions opened them and&lt;br/&gt;
reported back, stopping in processRegionOpen between the point where&lt;br/&gt;
the split regions we no longer unassigned and before they became&lt;br/&gt;
pending. (This works because there are multiple threads that handle&lt;br/&gt;
the region server report messages).&lt;/p&gt;

&lt;p&gt;Continuing the thread that had been stopped in processSplitRegion,&lt;br/&gt;
it now slid through the window I had created by pausing the region&lt;br/&gt;
open reports between removing the region from the unassigned list but&lt;br/&gt;
before they were marked pending, and the regions were marked&lt;br/&gt;
unassigned again.&lt;/p&gt;

&lt;p&gt;RegionManager.setPending has no synchronization, but that doesn&apos;t&lt;br/&gt;
really matter because the synchronization needs to happen at the level&lt;br/&gt;
where multiple Map(s)/Set(s) are being updated (i.e., the region&apos;s&lt;br/&gt;
state is kept in serveral places opening the possibility for race&lt;br/&gt;
conditions).&lt;/p&gt;

&lt;p&gt;RegionManager itself could not be synchronized without adding new&lt;br/&gt;
methods that performed the multiple operations while synchronized&lt;br/&gt;
on each of the structures being modified.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1051&quot; title=&quot;Regionserver attempting to open reassigned region but master ignoring, thinks region is still closing&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-1051&quot;&gt;&lt;del&gt;HBASE-1051&lt;/del&gt;&lt;/a&gt;: Regionserver attempting to open reassigned region but&lt;br/&gt;
            master ignoring, thinks region is still closing.&lt;/p&gt;

&lt;p&gt;Using a method similar to that used for &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1046&quot; title=&quot;Region assigned to two regionservers after split&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-1046&quot;&gt;&lt;del&gt;HBASE-1046&lt;/del&gt;&lt;/a&gt; (with the test&lt;br/&gt;
being TestRegionRebalancing), I was found that there is a similar&lt;br/&gt;
window in which a region is marked &quot;no longer closing&quot; in&lt;br/&gt;
ServerManager.processRegionClose and the region is marked as &quot;no&lt;br/&gt;
longer unassigned&quot;. If the meta scanner runs between these two points,&lt;br/&gt;
it will mark the region as unassigned, it could then get assigned, and&lt;br/&gt;
then be marked &quot;no longer unassigned&quot;.&lt;/p&gt;

&lt;p&gt;As a result, if the region server reports that it has opened the&lt;br/&gt;
region, ServerManager.processRegion open would interpret that&lt;br/&gt;
as a duplicate assignment, and tell the region server that just opened&lt;br/&gt;
the region to &quot;close without report&quot;.&lt;/p&gt;

&lt;p&gt;Since ProcessRegionClose does not delete the info:server field (nor&lt;br/&gt;
should it lest even worse race conditions ensue), the master still&lt;br/&gt;
sees a valid server when it scans the meta and will not attempt to&lt;br/&gt;
reassign the region.&lt;/p&gt;</comment>
                            <comment id="12658619" author="jimk" created="Mon, 22 Dec 2008 18:38:16 +0000"  >&lt;p&gt;A separate problem I found is related to the regionsToClose map:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; Map&amp;lt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;, Map&amp;lt;&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt; [], HRegionInfo&amp;gt;&amp;gt; regionsToClose =
    &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ConcurrentHashMap&amp;lt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;, Map&amp;lt;&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt; [], HRegionInfo&amp;gt;&amp;gt;();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Note that the internal map is a HashMap. HashMaps do not work with byte[] as a key because the hash value will be different for two byte arrays, even if they have the same content. If byte[] is the key, then you must use a TreeMap with a Bytes.BYTES_COMPARATOR. Unless the TreeMap with comparator is used operations on the map such as get(), containsKey(), etc., will not work.&lt;/p&gt;</comment>
                            <comment id="12658624" author="stack" created="Mon, 22 Dec 2008 18:56:32 +0000"  >&lt;p&gt;Above sounds good to me.&lt;/p&gt;</comment>
                            <comment id="12658626" author="jimk" created="Mon, 22 Dec 2008 19:06:09 +0000"  >&lt;p&gt;@Stack:&lt;/p&gt;

&lt;p&gt;&amp;gt; There is a bunch of redoing of state processing but no explanation&lt;br/&gt;
&amp;gt; as to why? For example: &lt;br/&gt;
&amp;gt;&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+   * Remove a region from the region state map.
+   * 
+   * @param info
+   */
+  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void removeRegion(HRegionInfo info) {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&amp;gt;&lt;br/&gt;
&amp;gt; Under what circumstance would I remove a region from state map?&lt;br/&gt;
&amp;gt;&lt;br/&gt;
&amp;gt; The region state map itself has no explanation:&lt;br/&gt;
&amp;gt;&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+  &lt;span class=&quot;code-comment&quot;&gt;// Needs to be SortedMap so we can specify a comparator
&lt;/span&gt;+  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; SortedMap&amp;lt;&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[], RegionState&amp;gt; regionState =
+    Collections.synchronizedSortedMap(
+        &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; TreeMap&amp;lt;&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[], RegionState&amp;gt;(Bytes.BYTES_COMPARATOR));
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&amp;gt;&lt;br/&gt;
&amp;gt; The maps it would replace tried to explain what they were about.&lt;br/&gt;
&amp;gt; Nor does the new RegionState map.&lt;/p&gt;

&lt;p&gt;Good points. The name of the map should really be regionsInTransition,&lt;br/&gt;
so removeRegion is called when a region completes the transitions from&lt;/p&gt;

&lt;p&gt;unassigned -&amp;gt; assigned -&amp;gt; pending -&amp;gt; open&lt;/p&gt;

&lt;p&gt;closing -&amp;gt; closed -&amp;gt; offline&lt;/p&gt;

&lt;p&gt;closing -&amp;gt; closed -&amp;gt; unassigned -&amp;gt; assigned -&amp;gt; pending -&amp;gt; open&lt;/p&gt;

&lt;p&gt;I will update the documentation and change the name of the map.&lt;/p&gt;

&lt;p&gt;&amp;gt; With above said, looks like this could be an improvement in that&lt;br/&gt;
&amp;gt; state is all in one place. &lt;/p&gt;

&lt;p&gt;Yes, it is no longer possible for a region to be in multiple states at&lt;br/&gt;
once as state transitions always clear all the other states.&lt;/p&gt;

&lt;p&gt;&amp;gt; Should RegionState be looking for illegal states? It doesn&apos;t seem to&lt;br/&gt;
&amp;gt; do any checking. This would be a good place to check we&apos;re doing&lt;br/&gt;
&amp;gt; transitions properly.&lt;/p&gt;

&lt;p&gt;Good point. It should at least check for valid state transitions to&lt;br/&gt;
make sure that they happen in the proper order. Will update to include&lt;br/&gt;
this.&lt;/p&gt;

&lt;p&gt;&amp;gt; Should resetting of connection root region be done inside&lt;br/&gt;
&amp;gt; unsetRootRegion in below so the two actions are tied together: &lt;br/&gt;
&amp;gt;&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+      master.connection.setRootRegionLocation(&lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;);
+      master.regionManager.unsetRootRegion();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Yes. Good idea. The connection is visible inside this method.&lt;/p&gt;

&lt;p&gt;&amp;gt; Does unsetRootRegion set root region to null in regionManger?&lt;/p&gt;

&lt;p&gt;Yes.&lt;/p&gt;

&lt;p&gt;&amp;gt; Maybe connection and regionManager both need an unsetRootRegion&lt;br/&gt;
&amp;gt; method (or both a setRootRegionLocation that takes null) so same&lt;br/&gt;
&amp;gt; action in two places uses similarily named methods (This stuff&lt;br/&gt;
&amp;gt; preexisted your patch). &lt;/p&gt;

&lt;p&gt;Yes. I think connection should have an unsetRootRegion instead of&lt;br/&gt;
setRootRegion(null). setRootRegion should only take a valid&lt;br/&gt;
HServerAddress. &lt;/p&gt;

&lt;p&gt;&amp;gt; In RegionState, data members are named isUnassigned, isClosing,&lt;br/&gt;
&amp;gt; etc. Usual javabean convention is that data members are named&lt;br/&gt;
&amp;gt; unassigned, closing, etc. and that isClosing is one of the names&lt;br/&gt;
&amp;gt; getters have.&lt;/p&gt;

&lt;p&gt;Ok, no problem.&lt;/p&gt;

&lt;p&gt;&amp;gt; Why dumpState and not toString?&lt;/p&gt;

&lt;p&gt;No good reason. I was using it for debugging, and was going to remove&lt;br/&gt;
it, but having a toString is a good idea.&lt;/p&gt;

&lt;p&gt;===&lt;/p&gt;

&lt;p&gt;Making the above edits now. Do you want to re-review the patch when I&apos;m done, or should I commit?&lt;/p&gt;</comment>
                            <comment id="12658638" author="stack" created="Mon, 22 Dec 2008 19:31:13 +0000"  >&lt;p&gt;I&apos;d suggest posting for review since fellas are using TRUNK in production.  Looking forward to it...&lt;/p&gt;</comment>
                            <comment id="12658669" author="jimk" created="Mon, 22 Dec 2008 21:31:08 +0000"  >&lt;p&gt;Applying suggested changes&lt;/p&gt;</comment>
                            <comment id="12658671" author="jimk" created="Mon, 22 Dec 2008 21:32:04 +0000"  >&lt;p&gt;Patch reflects changes that were requested by comments.&lt;/p&gt;</comment>
                            <comment id="12658672" author="jimk" created="Mon, 22 Dec 2008 21:32:46 +0000"  >&lt;p&gt;New patch available that addresses review comments. Please review and comment.&lt;/p&gt;</comment>
                            <comment id="12658684" author="jimk" created="Mon, 22 Dec 2008 22:04:40 +0000"  >&lt;p&gt;Oh, crud. I knew I forgot something. &lt;/p&gt;

&lt;p&gt;Need to add unsetRootRegion to HConnectionManager$TableServers and disallow setting rootRegionLocation to null).&lt;/p&gt;

&lt;p&gt;If it is ok with everyone, if the new patch passes muster, I will make the above changes just before commit.&lt;/p&gt;</comment>
                            <comment id="12658686" author="stack" created="Mon, 22 Dec 2008 22:09:37 +0000"  >&lt;p&gt;Last patch does not apply easily &amp;#8211; has cygwyn stuff in it.&lt;/p&gt;

&lt;p&gt;Please name patches with versions so I can tell which is which.&lt;/p&gt;

&lt;p&gt;Did you rename removeRegion?&lt;/p&gt;

&lt;p&gt;-1 on making change before commit.  I want to test this stuff before it goes in.  Fellas are running production off trunk.  Need to spare them hiccups as much as we can.&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="12658689" author="stack" created="Mon, 22 Dec 2008 22:14:39 +0000"  >&lt;p&gt;Ok, one sec.... &lt;/p&gt;

&lt;p&gt;I&apos;ve almost done testing this patch; could commit the latest version.&lt;/p&gt;</comment>
                            <comment id="12658698" author="stack" created="Mon, 22 Dec 2008 22:26:12 +0000"  >&lt;p&gt;Patch passed with loading and start/stops of hbase.  Also passed unit tests.&lt;/p&gt;

&lt;p&gt;Is this safe?&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (!master.regionManager.isUnassigned(i) &amp;amp;&amp;amp;
+            !master.regionManager.isAssigned(i.getRegionName()) &amp;amp;&amp;amp;
+            !master.regionManager.isPending(i.getRegionName())) {
+          master.regionManager.setUnassigned(i, &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Should this all be done in a sync block inside in regionManager?  Or is it &apos;safe&apos; because we process one message at a time?  There are a few of these multiple tests.  This glob of checks is done in a few places.  Put them together in a single method?  Would be easier to read (Latter point is not important for now).&lt;/p&gt;

&lt;p&gt;If above is safe, then I&apos;m +1 on committing last version of this patch.   Can address other minor stuff later.&lt;/p&gt;
</comment>
                            <comment id="12658701" author="jimk" created="Mon, 22 Dec 2008 22:30:52 +0000"  >&lt;p&gt;New patch with ServerConnection/HConnectionManager.unsetRootRegion.&lt;/p&gt;

&lt;p&gt;Also removed the cygwin C:/workspace...hbase-trunk/ prefix for files&lt;/p&gt;</comment>
                            <comment id="12658703" author="jimk" created="Mon, 22 Dec 2008 22:33:20 +0000"  >&lt;p&gt;Latest patch is 543.patch-4&lt;/p&gt;

&lt;p&gt;Added ServerConnection/HConnectionManager.unsetRootRegion and disallowed ServerConnection/HConnectionManager.setRootRegionLocation(null).&lt;/p&gt;

&lt;p&gt;Also removed cygwin patch path (C:/workspace/hbase-trunk/)&lt;/p&gt;</comment>
                            <comment id="12658705" author="jimk" created="Mon, 22 Dec 2008 22:40:23 +0000"  >&lt;p&gt;As Stack pointed out, the multiple calls to check the state are windows of opportunity for race conditions (albeit pretty small ones). Working up a new patch that will synchronize these multiple tests.&lt;/p&gt;</comment>
                            <comment id="12658732" author="jimk" created="Tue, 23 Dec 2008 03:15:56 +0000"  >&lt;p&gt;Addresses stack&apos;s comments about multiple ops in RegionManager that weren&apos;t synchronized.&lt;/p&gt;</comment>
                            <comment id="12658733" author="jimk" created="Tue, 23 Dec 2008 03:17:55 +0000"  >&lt;p&gt;Addresses stack&apos;s comments about multip ops against RegionManager that were not synchronized. Please review and test.&lt;/p&gt;</comment>
                            <comment id="12658762" author="apurtell" created="Tue, 23 Dec 2008 06:03:22 +0000"  >&lt;p&gt;Thanks Jim. I&apos;m testing patch-5 now.&lt;/p&gt;</comment>
                            <comment id="12658782" author="stack" created="Tue, 23 Dec 2008 07:14:32 +0000"  >&lt;p&gt;These broad locks look deadlock-prone especially as the lock is done from different threads:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+      &lt;span class=&quot;code-keyword&quot;&gt;synchronized&lt;/span&gt; (master.regionManager) {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Do you think them safe?&lt;/p&gt;

&lt;p&gt;They don&apos;t seem to slow down the master as I at first thought (seems to keep up same basic rates).&lt;/p&gt;



</comment>
                            <comment id="12658809" author="apurtell" created="Tue, 23 Dec 2008 09:50:39 +0000"  >&lt;p&gt;2008-12-23 04:43:03,882 INFO org.apache.hadoop.hbase.master.ServerManager: Received MSG_REPORT_SPLIT: content,aac240d1215a044b865e0faad888f048,1230019268119: content,aac240d1215a044b865e0faad888f048,1230019268119 split; daughters: content,aac240d1215a044b865e0faad888f048,1230025378559, content,ac7d850812026fa41ea8f31fe3a0b509,1230025378559 from 10.30.94.40:60020&lt;br/&gt;
2008-12-23 04:43:03,883 INFO org.apache.hadoop.hbase.master.RegionManager: assig&lt;br/&gt;
ning region content,aac240d1215a044b865e0faad888f048,1230025378559 to server 10.&lt;br/&gt;
30.94.40:60020&lt;br/&gt;
2008-12-23 04:43:03,884 INFO org.apache.hadoop.hbase.master.RegionManager: assigning region content,ac7d850812026fa41ea8f31fe3a0b509,1230025378559 to server 10.30.94.40:60020&lt;br/&gt;
2008-12-23 04:43:06,896 INFO org.apache.hadoop.hbase.master.ServerManager: Received MSG_REPORT_PROCESS_OPEN: content,ac7d850812026fa41ea8f31fe3a0b509,1230025378559 from 10.30.94.40:60020&lt;br/&gt;
2008-12-23 04:43:06,896 INFO org.apache.hadoop.hbase.master.ServerManager: Received MSG_REPORT_OPEN: content,aac240d1215a044b865e0faad888f048,1230025378559 from 10.30.94.40:60020&lt;br/&gt;
2008-12-23 04:43:06,896 INFO org.apache.hadoop.hbase.master.ServerManager: Received MSG_REPORT_OPEN: content,ac7d850812026fa41ea8f31fe3a0b509,1230025378559 from 10.30.94.40:60020&lt;br/&gt;
2008-12-23 04:43:06,896 DEBUG org.apache.hadoop.hbase.master.HMaster: Main processing loop: PendingOpenOperation from 10.30.94.40:60020&lt;br/&gt;
2008-12-23 04:43:06,896 DEBUG org.apache.hadoop.hbase.master.RegionManager: Server 10.30.94.40:60020 is overloaded. Server load: 7 avg: 6.0, slop: 0.1&lt;br/&gt;
2008-12-23 04:43:06,896 DEBUG org.apache.hadoop.hbase.master.RegionManager: Choosing to reassign 1 regions. mostLoadedRegions has 7 regions in it.&lt;br/&gt;
2008-12-23 04:43:06,896 INFO org.apache.hadoop.hbase.master.ProcessRegionOpen$1: content,aac240d1215a044b865e0faad888f048,1230025378559 open on 10.30.94.40:60020&lt;br/&gt;
2008-12-23 04:43:06,896 DEBUG org.apache.hadoop.hbase.master.RegionManager: Going to close region content,aac240d1215a044b865e0faad888f048,1230025378559&lt;br/&gt;
2008-12-23 04:43:06,896 INFO org.apache.hadoop.hbase.master.ProcessRegionOpen$1: updating row content,aac240d1215a044b865e0faad888f048,1230025378559 in region .META.,,1 with startcode 1230014187119 and server 10.30.94.40:60020&lt;br/&gt;
2008-12-23 04:43:06,897 INFO org.apache.hadoop.ipc.HBaseServer: IPC Server handler 0 on 60000, call regionServerReport(address: 10.30.94.40:60020, startcode: 1230014187119, load: (requests=3, regions=7, usedHeap=713, maxHeap=1777), [Lorg.apache.hadoop.hbase.HMsg;@55c0d3a3, [Lorg.apache.hadoop.hbase.HRegionInfo;@66869e5&lt;br/&gt;
0) from 10.30.94.40:41999: error: java.io.IOException: java.lang.IllegalStateException: Cannot transition to closing from any other state. Region: content,aac240d1215a044b865e0faad888f048,1230025378559&lt;br/&gt;
java.io.IOException: java.lang.IllegalStateException: Cannot transition to closing from any other state. Region: content,aac240d1215a044b865e0faad888f048,1230025378559&lt;br/&gt;
        at org.apache.hadoop.hbase.master.RegionManager.setClosing(RegionManager.java:785)&lt;br/&gt;
        at org.apache.hadoop.hbase.master.RegionManager.unassignSomeRegions(RegionManager.java:439)&lt;br/&gt;
        at org.apache.hadoop.hbase.master.RegionManager.assignRegions(RegionManager.java:192)&lt;br/&gt;
        at org.apache.hadoop.hbase.master.ServerManager.processMsgs(ServerManager.java:381)&lt;br/&gt;
        at org.apache.hadoop.hbase.master.ServerManager.processRegionServerAllsWell(ServerManager.java:327)&lt;br/&gt;
        at org.apache.hadoop.hbase.master.ServerManager.regionServerReport(ServerManager.java:240)&lt;br/&gt;
        at org.apache.hadoop.hbase.master.HMaster.regionServerReport(HMaster.java:570)&lt;br/&gt;
        at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)&lt;br/&gt;
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;br/&gt;
        at java.lang.reflect.Method.invoke(Method.java:597)&lt;br/&gt;
        at org.apache.hadoop.hbase.ipc.HBaseRPC$Server.call(HBaseRPC.java:632)&lt;br/&gt;
        at org.apache.hadoop.hbase.ipc.HBaseServer$Handler.run(HBaseServer.java:894)&lt;/p&gt;</comment>
                            <comment id="12658866" author="jimk" created="Tue, 23 Dec 2008 16:16:09 +0000"  >&lt;p&gt;Patch has problems.&lt;/p&gt;</comment>
                            <comment id="12658891" author="jimk" created="Tue, 23 Dec 2008 16:56:07 +0000"  >&lt;p&gt;@Andrew&lt;/p&gt;

&lt;p&gt;Well the good news is that this problem prevented an inconsistent state in the master, as ProcessRegionOpen would have updated the meta with the original server when, in fact it was being to close that region.&lt;/p&gt;

&lt;p&gt;The bad news, of course is that the region rebalancing did not work properly. unassignSomeRegions should not choose regions that are unassigned, assigned or pending.&lt;/p&gt;

&lt;p&gt;@Stack&lt;br/&gt;
Yes, the lock on RegionManager is broad, however it was the only way I could see to guard multiple operations that effect both the regionsInTransition map and the onlineMetaRegions map, which happen in a couple of places. Separate locks for regionsInTransition and onlineMetaRegions would be more deadlock prone I thought. With this approach, every method that performs multiple operations on either map either grabs the RegionManager&apos;s monitor or waits while the current owner of the monitor does its thing and gets out. I don&apos;t think I grab RegionManager&apos;s monitor over any long running operation, but I will reverify that.&lt;/p&gt;</comment>
                            <comment id="12658900" author="stack" created="Tue, 23 Dec 2008 17:32:40 +0000"  >&lt;p&gt;Understood.  Please check it out.  If you think it good, we can commit but would be good to avoid fellas in the field finding the deadlock.  My other concern is that this lock makes the master effectively single-threaded.&lt;/p&gt;</comment>
                            <comment id="12658901" author="stack" created="Tue, 23 Dec 2008 17:33:16 +0000"  >&lt;p&gt;Other thing is that thats&apos; great that assertions found an illegal transition.  Add more assertions!&lt;/p&gt;</comment>
                            <comment id="12658924" author="jimk" created="Tue, 23 Dec 2008 18:51:29 +0000"  >&lt;p&gt;change unassignSomeRegions to skip over ones that are in transition.&lt;/p&gt;

&lt;p&gt;verified that use of RegionManager&apos;s monitor does not span any long running operations.&lt;/p&gt;</comment>
                            <comment id="12658926" author="jimk" created="Tue, 23 Dec 2008 18:52:58 +0000"  >&lt;p&gt;New patch (543.patch-6) addresses issues in previous patch&lt;/p&gt;</comment>
                            <comment id="12658931" author="apurtell" created="Tue, 23 Dec 2008 19:28:45 +0000"  >&lt;p&gt;Despite the exception/assertion, or perhaps because of it, our cluster is still up and stable after hours of pounding and 100s of splits.&lt;/p&gt;

&lt;p&gt;Will test with patch-6 now.&lt;/p&gt;</comment>
                            <comment id="12658977" author="stack" created="Tue, 23 Dec 2008 22:25:40 +0000"  >&lt;p&gt;Patch is messy; some accesss to regionManager are synchronized whereas others are not.  Confusing.   Also still wary of many threads synchronizing on a single important master object afraid that someone in production is going to find a codepath that deadlocks &amp;#8211; and that it makes the master less &apos;live&apos;.  That said, I ran it under duress and no noticable degradation and all unit tests pass.  Andrew Purtell&apos;s testimony in its favor sends me over to +1 on commit.  At a minimum, its a big improvement over what we had before.   Also, this stuff will be rewritten on ZK integration; we can do a better job then.&lt;/p&gt;</comment>
                            <comment id="12659015" author="jimk" created="Wed, 24 Dec 2008 01:38:25 +0000"  >&lt;p&gt;Committed to trunk&lt;/p&gt;</comment>
                            <comment id="12659053" author="stack" created="Wed, 24 Dec 2008 07:05:04 +0000"  >&lt;p&gt;I seem to be seeing more NSREs then ending in RetriesExhausted with this patch applied.  You Andrew?&lt;/p&gt;</comment>
                            <comment id="12659054" author="stack" created="Wed, 24 Dec 2008 07:13:29 +0000"  >&lt;p&gt;Theory is that splits are taking longer.  Its pretty easy to compare old to new.  Will try that over next few days.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10032">
                    <name>Blocker</name>
                                            <outwardlinks description="blocks">
                                        <issuelink>
            <issuekey id="12392373">HBASE-546</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12390792">HBASE-504</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12394489">HBASE-599</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12392462">HBASE-549</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12411127">HBASE-1077</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12396631" name="543.patch" size="50261" author="jimk" created="Mon, 22 Dec 2008 21:32:04 +0000"/>
                            <attachment id="12396556" name="543.patch" size="48941" author="jimk" created="Sun, 21 Dec 2008 04:18:22 +0000"/>
                            <attachment id="12384651" name="543.patch" size="36631" author="stack" created="Wed, 25 Jun 2008 06:01:51 +0000"/>
                            <attachment id="12396638" name="543.patch-4" size="51015" author="jimk" created="Mon, 22 Dec 2008 22:30:52 +0000"/>
                            <attachment id="12396647" name="543.patch-5" size="68665" author="jimk" created="Tue, 23 Dec 2008 03:15:56 +0000"/>
                            <attachment id="12396689" name="543.patch-6" size="71481" author="jimk" created="Tue, 23 Dec 2008 18:51:29 +0000"/>
                            <attachment id="12386232" name="recent-changes.patch" size="38547" author="stack" created="Wed, 16 Jul 2008 21:08:26 +0000"/>
                            <attachment id="12396428" name="regionstate.txt" size="4447" author="jimk" created="Thu, 18 Dec 2008 21:16:32 +0000"/>
                    </attachments>
                <subtasks>
                            <subtask id="12410246">HBASE-1051</subtask>
                            <subtask id="12409994">HBASE-1046</subtask>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>8.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 31 Mar 2008 18:39:06 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>25255</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            7 years, 50 weeks, 2 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0h7xz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>98549</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>