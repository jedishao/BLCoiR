<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sat Dec 03 16:14:31 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-10676/HBASE-10676.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-10676] Removing ThreadLocal of PrefetchedHeader in HFileBlock.FSReaderV2 make higher perforamce of scan</title>
                <link>https://issues.apache.org/jira/browse/HBASE-10676</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;PrefetchedHeader variable in HFileBlock.FSReaderV2 is used for avoiding backward seek operation as the comment said:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;we will not incur a backward seek operation if we have already read this block&apos;s header as part of the previous read&apos;s look-ahead. And we also want to skip reading the header again if it has already been read.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;But that is not the case. In the code of 0.98, prefetchedHeader is threadlocal for one storefile reader, and in the RegionScanner lifecycle&#65292;different rpc handlers will serve scan requests of the same scanner. Even though one handler of previous scan call prefetched the next block header, the other handlers of current scan call will still trigger a backward seek operation. The process is like this:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;rs handler1 serves the scan call, reads block1 and prefetches the header of block2&lt;/li&gt;
	&lt;li&gt;rs handler2 serves the same scanner&apos;s next scan call, because rs handler2 doesn&apos;t know the header of block2 already prefetched by rs handler1, triggers a backward seek and reads block2, and prefetches the header of block3.&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;It is not the sequential read. So I think that the threadlocal is useless, and should be abandoned. I did the work, and evaluated the performance of one client, two client and four client scanning the same region with one storefile.  The test environment is&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;A hdfs cluster with a namenode, a secondary namenode , a datanode in a machine&lt;/li&gt;
	&lt;li&gt;A hbase cluster with a zk, a master, a regionserver in the same machine&lt;/li&gt;
	&lt;li&gt;clients are also in the same machine.&lt;br/&gt;
So all the data is local. The storefile is about 22.7GB from our online data, 18995949 kvs. Caching is set 1000. And setCacheBlocks(false)&lt;br/&gt;
With the improvement, the client total scan time decreases 21% for the one client case, 11% for the two clients case. But the four clients case is almost the same. The details tests&apos; data is the following:
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;case&lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;client&lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;time(ms)&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; original &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; 1 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; 306222 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; new &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; 1 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; 241313 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; original &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; 2 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; 416390 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; new &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; 2 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; 369064 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; original &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; 4 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; 555986 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; new &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; 4 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; 562152 &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;With some modification(see the comments below), the newest result is &lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;case&lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;client&lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;time(ms)&lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;case&lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;client&lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;time(ms)&lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;case&lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;client&lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;time(ms)&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;original&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;1&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;306222&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;new with synchronized&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;1&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;239510&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;new with AtomicReference&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;1&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;241243&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;original&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;2&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;416390&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;new with synchronized&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;2&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;365367&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;new with AtomicReference&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;2&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;368952&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;original&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;4&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;555986&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;new with synchronized&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;4&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;540642&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;new with AtomicReference&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;4&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;545715&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;original&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;8&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;854029&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;new with synchronized&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;8&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;852137&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;new with AtomicReference&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;8&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;850401&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
</description>
                <environment></environment>
        <key id="12698799">HBASE-10676</key>
            <summary>Removing ThreadLocal of PrefetchedHeader in HFileBlock.FSReaderV2 make higher perforamce of scan</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="3">Duplicate</resolution>
                                        <assignee username="zhaojianbo">zhaojianbo</assignee>
                                    <reporter username="zhaojianbo">zhaojianbo</reporter>
                        <labels>
                    </labels>
                <created>Wed, 5 Mar 2014 03:38:14 +0000</created>
                <updated>Thu, 24 Nov 2016 06:49:27 +0000</updated>
                            <resolved>Wed, 23 Nov 2016 02:54:44 +0000</resolved>
                                    <version>0.99.0</version>
                                                        <due></due>
                            <votes>0</votes>
                                    <watches>15</watches>
                                                                <comments>
                            <comment id="13920445" author="zhaojianbo" created="Wed, 5 Mar 2014 03:41:30 +0000"  >&lt;p&gt;upload the patch for 0.98 branch&lt;/p&gt;</comment>
                            <comment id="13920458" author="yuzhihong@gmail.com" created="Wed, 5 Mar 2014 04:00:40 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+      PrefetchedHeader prefetchedHeaderCopyed = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; PrefetchedHeader(); 
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Name the variable prefetchedHeaderCopy or prefetchedHeaderCopied.&lt;/p&gt;

&lt;p&gt;Can you provide performance comparison for 8 client case ?&lt;/p&gt;</comment>
                            <comment id="13920462" author="zhaojianbo" created="Wed, 5 Mar 2014 04:08:06 +0000"  >&lt;p&gt;ok, I will do the 8 client case&lt;/p&gt;</comment>
                            <comment id="13920468" author="zhaojianbo" created="Wed, 5 Mar 2014 04:12:58 +0000"  >&lt;p&gt;patch modified. Name the variable prefetchedHeaderCopied&lt;/p&gt;</comment>
                            <comment id="13920853" author="jmspaggi" created="Wed, 5 Mar 2014 13:49:05 +0000"  >&lt;p&gt;Nice, any impact on the other operations? Like get?&lt;/p&gt;

&lt;p&gt;I can run it on PE for a day if you want.&lt;/p&gt;</comment>
                            <comment id="13921271" author="ndimiduk" created="Wed, 5 Mar 2014 19:28:23 +0000"  >&lt;p&gt;Does your box have SSD or spinning disk?&lt;/p&gt;</comment>
                            <comment id="13921318" author="stack" created="Wed, 5 Mar 2014 19:57:03 +0000"  >&lt;p&gt;Patch lgtm&lt;/p&gt;</comment>
                            <comment id="13921396" author="jmspaggi" created="Wed, 5 Mar 2014 21:02:06 +0000"  >&lt;blockquote&gt;
&lt;p&gt;Does your box have SSD or spinning disk?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;SSD on master only. RS are spinning disks.&lt;/p&gt;</comment>
                            <comment id="13921410" author="lhofhansl" created="Wed, 5 Mar 2014 21:11:12 +0000"  >&lt;p&gt;We should also test the scenario when most data is filtered at the server (such as in Phoenix). &lt;/p&gt;</comment>
                            <comment id="13921461" author="ndimiduk" created="Wed, 5 Mar 2014 21:40:25 +0000"  >&lt;blockquote&gt;&lt;p&gt;Does your box have SSD or spinning disk?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;That was a question for &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=zhaojianbo&quot; class=&quot;user-hover&quot; rel=&quot;zhaojianbo&quot;&gt;zhaojianbo&lt;/a&gt; re: the perf numbers posted.&lt;/p&gt;</comment>
                            <comment id="13921816" author="lhofhansl" created="Thu, 6 Mar 2014 01:14:48 +0000"  >&lt;p&gt;Do we have to make a copy when we read the previous header out, or can we an AtomicReference?&lt;/p&gt;</comment>
                            <comment id="13921891" author="zhaojianbo" created="Thu, 6 Mar 2014 02:06:29 +0000"  >&lt;p&gt;hi, all&lt;br/&gt;
I have finished the 8 client case, the performance is:&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;case&lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;client&lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;time(ms)&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; original &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; 8 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; 854029 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; new &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; 8 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; 927244 &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;


&lt;p&gt;The result shows that client total time for 8 client case with the modification increases 8%. I checked the time distribution, it seemed that  the time of readAtOffset increased. I will find why.&lt;/p&gt;

</comment>
                            <comment id="13921899" author="zhaojianbo" created="Thu, 6 Mar 2014 02:08:52 +0000"  >&lt;blockquote&gt;
&lt;p&gt;Nice, any impact on the other operations? Like get?&lt;br/&gt;
I can run it on PE for a day if you want.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Thanks for your help.&lt;/p&gt;</comment>
                            <comment id="13921905" author="zhaojianbo" created="Thu, 6 Mar 2014 02:11:24 +0000"  >&lt;blockquote&gt;
&lt;p&gt;Does your box have SSD or spinning disk?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I run the clusters(hdfs and hbase) on spinning disk.  &lt;/p&gt;</comment>
                            <comment id="13922066" author="zhaojianbo" created="Thu, 6 Mar 2014 06:36:01 +0000"  >&lt;blockquote&gt;
&lt;p&gt;Do we have to make a copy when we read the previous header out, or can we an AtomicReference?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;good idea, I will try this modification.&lt;/p&gt;</comment>
                            <comment id="13922417" author="zhaojianbo" created="Thu, 6 Mar 2014 12:26:49 +0000"  >&lt;p&gt;I have finished the AtomicReference version. &lt;br/&gt;
The total results are&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;case&lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;client&lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;time(ms)&lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;case&lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;client&lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;time(ms)&lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;case&lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;client&lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;time(ms)&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; original &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; 1 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; 306222&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;new&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; 1 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;241313 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; new with AtomicReference &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; 1 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; 241236 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; original &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; 2 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; 416390&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;new&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; 2 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;369064 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; new with AtomicReference &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; 2 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; 393935 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; original &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; 4 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; 555986&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;new&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; 4 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;562152 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; new with AtomicReference &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; 4 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; 647195 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; original &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; 8 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; 854029&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;new&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; 8 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;927244 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; new with AtomicReference &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; 8 &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; 943768 &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;


&lt;p&gt;the client time of AtomicReference version also increases for 4 and 8 client. It looks like the same problem.&lt;br/&gt;
The reason why client time increase is still analyzing.&lt;br/&gt;
Any idea?&lt;/p&gt;</comment>
                            <comment id="13922610" author="zhaojianbo" created="Thu, 6 Mar 2014 15:01:55 +0000"  >&lt;p&gt;All tests run twice, and average to get the result.&lt;/p&gt;</comment>
                            <comment id="13925190" author="zhaojianbo" created="Sun, 9 Mar 2014 12:33:39 +0000"  >&lt;p&gt;hi, all&lt;br/&gt;
  I think I find the reason. In the new code, scan call of a scanner will still read the header again even though it already read it at last scan call, because the scan call of other scanner dirtied the prefetchedHeader. And the little difference makes the time of HDFS&apos; read increase. So I adjust the patch, introduce a global prefetchedHeader which avoids the backward seek between the different RPC handlers for one scanner, and keep the prefetchedHeaderForThread variable to avoid repeating to read the header which prefetched at last scan call. Then I test all cases again, and this time the result is ok. I make two patches, one for synchronized, one for AtomicReference. The result between synchronized version and AtomicReference version is almost the same.&lt;/p&gt;

&lt;p&gt; The result is:&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;case&lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;client&lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;time(ms)&lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;case&lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;client&lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;time(ms)&lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;case&lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;client&lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;time(ms)&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;original&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;1&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;306222&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;new with synchronized&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;1&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;239510&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;new with AtomicReference&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;1&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;241243&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;original&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;2&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;416390&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;new with synchronized&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;2&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;365367&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;new with AtomicReference&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;2&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;368952&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;original&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;4&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;555986&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;new with synchronized&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;4&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;540642&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;new with AtomicReference&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;4&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;545715&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;original&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;8&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;854029&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;new with synchronized&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;8&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;852137&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;new with AtomicReference&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;8&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;850401&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;


&lt;p&gt;The time of new version decrease 21% for a client,  12% for two client. And the time is the same for 4/8 client.&lt;/p&gt;

&lt;p&gt;I upload the new two patches. And update the descriptions with the newest result.&lt;/p&gt;</comment>
                            <comment id="13925228" author="yuzhihong@gmail.com" created="Sun, 9 Mar 2014 16:09:29 +0000"  >&lt;p&gt;I took a look at &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10676&quot; title=&quot;Removing ThreadLocal of PrefetchedHeader in HFileBlock.FSReaderV2 make higher perforamce of scan&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10676&quot;&gt;&lt;del&gt;HBASE-10676&lt;/del&gt;&lt;/a&gt;-0.98-branchV2.patch which looks good.&lt;/p&gt;

&lt;p&gt;Nice improvement.&lt;/p&gt;</comment>
                            <comment id="13925239" author="hadoopqa" created="Sun, 9 Mar 2014 16:45:13 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12633590/HBASE-10676-0.98-branchV2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12633590/HBASE-10676-0.98-branchV2.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;br/&gt;
  ATTACHMENT ID: 12633590&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop1.0&lt;/font&gt;.  The patch compiles against the hadoop 1.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop1.1&lt;/font&gt;.  The patch compiles against the hadoop 1.1 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8934//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8934//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8934//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8934//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8934//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8934//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8934//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8934//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8934//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8934//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8934//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8934//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8934//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8934//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8934//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8934//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8934//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8934//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8934//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8934//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8934//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8934//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13925421" author="apurtell" created="Mon, 10 Mar 2014 03:20:25 +0000"  >&lt;p&gt;If the results are very similar, the AtomicReference version looks cleaner.&lt;/p&gt;</comment>
                            <comment id="13925472" author="zhaojianbo" created="Mon, 10 Mar 2014 05:53:41 +0000"  >&lt;p&gt;Thanks. Ted Yu and Andrew Purtell&lt;br/&gt;
I&apos;m a new comer. What should I do next? will the patch be merged? &lt;/p&gt;</comment>
                            <comment id="13939108" author="zhaojianbo" created="Tue, 18 Mar 2014 11:56:48 +0000"  >&lt;p&gt;which patch should be remained.&lt;br/&gt;
ping to review...,  &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13948164" author="stack" created="Wed, 26 Mar 2014 17:19:16 +0000"  >&lt;p&gt;Patch lgtm.  &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt; What you think boss?&lt;/p&gt;</comment>
                            <comment id="13950565" author="codeblocker" created="Fri, 28 Mar 2014 10:37:10 +0000"  >&lt;p&gt;it&apos;s great&lt;/p&gt;</comment>
                            <comment id="13954338" author="haosdent@gmail.com" created="Sat, 29 Mar 2014 17:01:16 +0000"  >&lt;p&gt; The AtomicReference version looks better. And why the performance improvement didn&apos;t obvious when 4/8 clients?&lt;/p&gt;</comment>
                            <comment id="13954930" author="zhaojianbo" created="Mon, 31 Mar 2014 03:54:08 +0000"  >&lt;blockquote&gt;
&lt;p&gt;The AtomicReference version looks better. And why the performance improvement didn&apos;t obvious when 4/8 clients?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;The purpose of the patch is that make reading storefile sequentially to the best when less client scan the same storefile. But 4/8 clients case is hard to make reading storefile sequentially. So it&apos;s the same to the original version. &lt;/p&gt;</comment>
                            <comment id="13954941" author="haosdent@gmail.com" created="Mon, 31 Mar 2014 04:47:33 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=zhaojianbo&quot; class=&quot;user-hover&quot; rel=&quot;zhaojianbo&quot;&gt;zhaojianbo&lt;/a&gt; Thank you for your explain.&lt;/p&gt;</comment>
                            <comment id="13970355" author="zhaojianbo" created="Wed, 16 Apr 2014 02:18:36 +0000"  >&lt;p&gt;hi,  Lars Hofhansl. What do you think?&lt;/p&gt;</comment>
                            <comment id="15688288" author="hadoopqa" created="Tue, 22 Nov 2016 23:28:37 +0000"  >&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/error.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; &lt;b&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;&lt;/b&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;&lt;br class=&quot;atl-forced-newline&quot; /&gt;
&lt;br class=&quot;atl-forced-newline&quot; /&gt;&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Vote &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Subsystem &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Runtime &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Comment &lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt;0&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt; reexec &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt; 0m 0s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt; Docker mode activated. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt;-1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; patch &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; 0m 5s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10676&quot; title=&quot;Removing ThreadLocal of PrefetchedHeader in HFileBlock.FSReaderV2 make higher perforamce of scan&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10676&quot;&gt;&lt;del&gt;HBASE-10676&lt;/del&gt;&lt;/a&gt; does not apply to master. Rebase required? Wrong Branch? See &lt;a href=&quot;https://yetus.apache.org/documentation/0.3.0/precommit-patchnames&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://yetus.apache.org/documentation/0.3.0/precommit-patchnames&lt;/a&gt; for help. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;&lt;br class=&quot;atl-forced-newline&quot; /&gt;
&lt;br class=&quot;atl-forced-newline&quot; /&gt;&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Subsystem &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Report/Notes &lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; JIRA Patch URL &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://issues.apache.org/jira/secure/attachment/12633590/HBASE-10676-0.98-branchV2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/secure/attachment/12633590/HBASE-10676-0.98-branchV2.patch&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; JIRA Issue &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10676&quot; title=&quot;Removing ThreadLocal of PrefetchedHeader in HFileBlock.FSReaderV2 make higher perforamce of scan&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10676&quot;&gt;&lt;del&gt;HBASE-10676&lt;/del&gt;&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Console output &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4588/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4588/console&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Powered by &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Apache Yetus 0.3.0   &lt;a href=&quot;http://yetus.apache.org&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://yetus.apache.org&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;



&lt;p&gt;This message was automatically generated.&lt;/p&gt;
</comment>
                            <comment id="15688700" author="stack" created="Wed, 23 Nov 2016 02:54:44 +0000"  >&lt;p&gt;Resolving as duplicate/subsumed by &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-17072&quot; title=&quot;CPU usage starts to climb up to 90-100% when using G1GC; purge ThreadLocal usage&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-17072&quot;&gt;&lt;del&gt;HBASE-17072&lt;/del&gt;&lt;/a&gt; which purges the ThreadLocal. Thank you for your hard work in here &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=zhaojianbo&quot; class=&quot;user-hover&quot; rel=&quot;zhaojianbo&quot;&gt;zhaojianbo&lt;/a&gt;... Sorry it took us a while to get around to this.&lt;/p&gt;</comment>
                            <comment id="15692392" author="stack" created="Thu, 24 Nov 2016 06:49:27 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-17072&quot; title=&quot;CPU usage starts to climb up to 90-100% when using G1GC; purge ThreadLocal usage&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-17072&quot;&gt;&lt;del&gt;HBASE-17072&lt;/del&gt;&lt;/a&gt; actually includes the AtomicReference replacement for ThreadLocal part of this patch. Thanks.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="13020024">HBASE-17072</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12633589" name="HBASE-10676-0.98-branch-AtomicReferenceV2.patch" size="3508" author="zhaojianbo" created="Sun, 9 Mar 2014 12:38:14 +0000"/>
                            <attachment id="12633590" name="HBASE-10676-0.98-branchV2.patch" size="3606" author="zhaojianbo" created="Sun, 9 Mar 2014 12:38:14 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 5 Mar 2014 04:00:40 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>377147</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 week, 2 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1szlz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>377442</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>