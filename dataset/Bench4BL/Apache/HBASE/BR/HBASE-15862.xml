<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Thu Dec 01 21:10:08 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-15862/HBASE-15862.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-15862] Backup - Delete- Restore does not restore deleted data</title>
                <link>https://issues.apache.org/jira/browse/HBASE-15862</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;This was discovered during testing. If we delete row after full backup and perform immediately restore, the deleted row still remains deleted. &lt;/p&gt;</description>
                <environment></environment>
        <key id="12971224">HBASE-15862</key>
            <summary>Backup - Delete- Restore does not restore deleted data</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="vrodionov">Vladimir Rodionov</assignee>
                                    <reporter username="vrodionov">Vladimir Rodionov</reporter>
                        <labels>
                            <label>backup</label>
                    </labels>
                <created>Thu, 19 May 2016 17:45:42 +0000</created>
                <updated>Wed, 15 Jun 2016 04:35:26 +0000</updated>
                            <resolved>Wed, 15 Jun 2016 04:35:26 +0000</resolved>
                                    <version>2.0.0</version>
                                    <fixVersion>2.0.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                <comments>
                            <comment id="15311359" author="vrodionov" created="Wed, 1 Jun 2016 23:33:18 +0000"  >&lt;p&gt;Patch v1. cc: &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=tedyu&quot; class=&quot;user-hover&quot; rel=&quot;tedyu&quot;&gt;Ted Yu&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="15312545" author="yuzhihong@gmail.com" created="Thu, 2 Jun 2016 16:07:46 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
212	    TableName[] tTableArray, &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; autoRestore, &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; isOverwrite) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Please add javadoc for the new parameter (there&apos;re other methods with new parameter).&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
586	          hbadmin.disableTable(targetTableName);
587	          hbadmin.deleteTable(targetTableName);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The above would work. Is there other approach where the deletion of table can be avoided ?&lt;/p&gt;</comment>
                            <comment id="15312682" author="vrodionov" created="Thu, 2 Jun 2016 17:12:15 +0000"  >&lt;p&gt;No, I do not think so. When we restore table with overwrite, we need to clean table (truncate) or delete it first, otherwise we will have artefacts in memory (MemStore) and in a file system (store files) which are newer than data being restored.&lt;/p&gt;</comment>
                            <comment id="15313011" author="yuzhihong@gmail.com" created="Thu, 2 Jun 2016 20:36:57 +0000"  >&lt;p&gt;I added the second line to TestBackupDeleteRestore:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
      hba.flush(table1);
      hba.majorCompact(table1);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Without the fix, TestBackupDeleteRestore passes.&lt;/p&gt;</comment>
                            <comment id="15313048" author="vrodionov" created="Thu, 2 Jun 2016 21:00:52 +0000"  >&lt;p&gt;Ted, it does not make sense to major compact table, then fully overwrite it. Truncate or delete will suffice and looks more reasonable.&lt;/p&gt;</comment>
                            <comment id="15313064" author="yuzhihong@gmail.com" created="Thu, 2 Jun 2016 21:07:57 +0000"  >&lt;p&gt;What if hbadmin.disableTable() / hbadmin.deleteTable() fails ?&lt;/p&gt;</comment>
                            <comment id="15313180" author="vrodionov" created="Thu, 2 Jun 2016 22:09:14 +0000"  >&lt;p&gt;Operation will fail as well. Failure tolerance is not a part of Phase 2.&lt;/p&gt;</comment>
                            <comment id="15313293" author="vrodionov" created="Thu, 2 Jun 2016 23:30:58 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=tedyu&quot; class=&quot;user-hover&quot; rel=&quot;tedyu&quot;&gt;Ted Yu&lt;/a&gt;, what is your concern?&lt;/p&gt;</comment>
                            <comment id="15313305" author="yuzhihong@gmail.com" created="Thu, 2 Jun 2016 23:34:51 +0000"  >&lt;p&gt;Let me think more on finding a solution without disabling / deleting the table.&lt;/p&gt;

&lt;p&gt;The table deletion is only needed if there is Delete coming in after the backup.&lt;/p&gt;

&lt;p&gt;I feel we should be able to do better than the current formation.&lt;/p&gt;</comment>
                            <comment id="15313344" author="vrodionov" created="Thu, 2 Jun 2016 23:59:48 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=tedyu&quot; class=&quot;user-hover&quot; rel=&quot;tedyu&quot;&gt;Ted Yu&lt;/a&gt;, can you tell what is wrong with disable/delete table approach? I see it as the only option when you need to completely overwrite data in a table. If disable/delete fails, so will fail restore operation. User will have to remove table manually (from META and from HDFS) in this case and repeat restore.&lt;/p&gt;
</comment>
                            <comment id="15313380" author="yuzhihong@gmail.com" created="Fri, 3 Jun 2016 00:18:47 +0000"  >&lt;p&gt;Previously table deletion was not part of restore action.&lt;br/&gt;
For table with large number of regions, disable / deletion / creation have non-trivial cost (in normal flow). Cost would be higher if anything goes wrong in the three actions.&lt;/p&gt;</comment>
                            <comment id="15314610" author="vrodionov" created="Fri, 3 Jun 2016 19:00:25 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=enis&quot; class=&quot;user-hover&quot; rel=&quot;enis&quot;&gt;Enis Soztutar&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=devaraj&quot; class=&quot;user-hover&quot; rel=&quot;devaraj&quot;&gt;Devaraj Das&lt;/a&gt;, what do you think? I do not see better way to fix this issue. My opinion: if one wants to restore table from backup - he(she) must accept the fact that the table must be deleted/truncated to make restore possible. If one wants to roll restore back - he can snapshot table in advance. If you see another way how can we overwrite existing data in a table and handle deleted/updated rows w/o  table disabling/deletion, please advise. &lt;/p&gt;</comment>
                            <comment id="15314790" author="jinghe" created="Fri, 3 Jun 2016 20:55:08 +0000"  >&lt;p&gt;IMO and IIRC.  If fhe full restore is to an existing table, it would complain. This leaves to the user to decide to have a fresh and clean restore.  &lt;br/&gt;
The -overwrite option is a tricky option to restore to an existing table, which should be used cautiously. &lt;br/&gt;
In the original plan, this option means that the user is aware of risks that it is a &apos;overwrite&apos; &amp;#8211; which can be  non-deterministic in some cases (e.g. the case described in this ticket).&lt;/p&gt;

&lt;p&gt;If we do &apos;disable/delete&apos; table as part of the restore, it is similar to let the user clean up the table fresh outside of the restore process, which is similar to the non-overwrite case.&lt;/p&gt;</comment>
                            <comment id="15315217" author="jinghe" created="Sat, 4 Jun 2016 01:16:49 +0000"  >&lt;p&gt;Again, the -overwrite option is tricky, and should be used cautiously and in certain use cases that the user are aware. &lt;br/&gt;
IIRC You will see exactly the same problem if you:&lt;br/&gt;
1. Export table1&lt;br/&gt;
2. Delete some rows&lt;br/&gt;
3. Import back the exported data into the same table.&lt;br/&gt;
4. The deletes are still effective.&lt;/p&gt;

&lt;p&gt;I think the semantics and policy of the each backup/restore ops need to be thought out and clearly defined.&lt;/p&gt;</comment>
                            <comment id="15315252" author="vrodionov" created="Sat, 4 Jun 2016 01:55:14 +0000"  >&lt;p&gt;Restore from backup to a particular backupid with &lt;b&gt;overwrite&lt;/b&gt; means that we want to restore all the data from backup and replace &lt;b&gt;all&lt;/b&gt; data in a table with that restored data. This is how I understand semantics of &lt;b&gt;overwrite&lt;/b&gt;? This is what usually called PIT (point-in-time) restore. Am I right, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jerryhe&quot; class=&quot;user-hover&quot; rel=&quot;jerryhe&quot;&gt;Jerry He&lt;/a&gt;?&lt;/p&gt;</comment>
                            <comment id="15317092" author="jinghe" created="Mon, 6 Jun 2016 19:54:11 +0000"  >&lt;p&gt;Hi, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=vrodionov&quot; class=&quot;user-hover&quot; rel=&quot;vrodionov&quot;&gt;Vladimir Rodionov&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Yes, that is PIT restore. &lt;br/&gt;
But you can define your own &apos;overwrite&apos;.  &lt;br/&gt;
We can leave to the user to clean and then restore.  Or we can clean as part of the restore.&lt;br/&gt;
In the database world, there are different support and choices from different vendors.  For example, this is for DB2. &lt;a href=&quot;https://www.ibm.com/support/knowledgecenter/SSEPGG_10.5.0/com.ibm.db2.luw.admin.ha.doc/doc/c0006250.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://www.ibm.com/support/knowledgecenter/SSEPGG_10.5.0/com.ibm.db2.luw.admin.ha.doc/doc/c0006250.html&lt;/a&gt;&lt;br/&gt;
The compact before restore won&apos;t work for PIT, because HBase can have multiple versions for the cell.  So if the restore puts back the older version, the newer version will still be effective.&lt;/p&gt;</comment>
                            <comment id="15317094" author="devaraj" created="Mon, 6 Jun 2016 19:55:09 +0000"  >&lt;p&gt;I&apos;d say that we punt on it, and let the full-restore fail if the table already exists? Then the user can do the needful and either delete or not, take snapshot, etc.&lt;/p&gt;</comment>
                            <comment id="15317160" author="jinghe" created="Mon, 6 Jun 2016 20:24:49 +0000"  >&lt;blockquote&gt;&lt;p&gt;Then the user can do the needful and either delete or not, take snapshot, etc.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;This is a good option.&lt;/p&gt;

&lt;p&gt;You can decide if you want to keep the current &apos;overwrite&apos;, which actually means &apos;Dump whatever datafiles in the backup onto the live table, no offline. But be aware of the multi-version and delete issue.&apos;&lt;br/&gt;
It can still be useful in certain use cases.&lt;/p&gt;</comment>
                            <comment id="15317167" author="vrodionov" created="Mon, 6 Jun 2016 20:27:30 +0000"  >&lt;blockquote&gt;
&lt;p&gt;You can decide if you want to keep the current &apos;overwrite&apos;, which actually means &apos;Dump whatever datafiles in the backup onto the live table, no offline. But be aware of the multi-version and delete issue.&apos;&lt;br/&gt;
It can still be useful in certain use cases.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I though this is exactly no-overwrite semantics?&lt;/p&gt;</comment>
                            <comment id="15317364" author="vrodionov" created="Mon, 6 Jun 2016 22:06:59 +0000"  >&lt;p&gt;From MySQL:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;MySQL:&lt;br/&gt;
Full Versus Point-in-Time (Incremental) Recovery&lt;/p&gt;

&lt;p&gt;A full recovery restores all data from a full backup. This restores the server instance to the state that it had when the backup was made. If that state is not sufficiently current, a full recovery can be followed by recovery of incremental backups made since the full backup, to bring the server to a more up-to-date state.&lt;/p&gt;

&lt;p&gt;Incremental recovery is recovery of changes made during a given time span. This is also called point-in-time recovery because it makes a server&apos;s state current up to a given time. Point-in-time recovery is based on the binary log and typically follows a full recovery from the backup files that restores the server to its state when the backup was made. Then the data changes written in the binary log files are applied as incremental recovery to redo data modifications and bring the server up to the desired point in time.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;All restores are PIT restores. Others do not make sense. Let us not overcomplicate stuff and default overwrite mode.&lt;/p&gt;</comment>
                            <comment id="15322676" author="cartershanklin" created="Thu, 9 Jun 2016 15:11:48 +0000"  >&lt;p&gt;Wanted to give my thoughts, the question here is specifically around whether the -overwrite should or should not truncate the tables in the table set before restoring. To me as a user I would expect it to do the truncation automatically because I said -overwrite, this is a destructive operation and I accept this as a user. As I look at some of the comments I&apos;m not sure if Jerry agrees or not, the DB2 behavior seems consistent with automatically truncating.&lt;/p&gt;

&lt;p&gt;Having the user manually delete the tables:&lt;br/&gt;
1. Makes me switch to a different tool (the HBase Ruby shell as opposed the backup commands)&lt;br/&gt;
2. When we get to backup/restore for Phoenix, automatic truncation will have several advantages, such as not breaking or forcing re-creation of secondary indexes.&lt;/p&gt;

&lt;p&gt;So why force users to take that extra step?&lt;/p&gt;</comment>
                            <comment id="15322722" author="yuzhihong@gmail.com" created="Thu, 9 Jun 2016 15:42:10 +0000"  >&lt;p&gt;I am fine with calling truncate for -overwrite option.&lt;/p&gt;

&lt;p&gt;The patch needs to be modified - it should call hbaseadmin#truncateTable(, true)&lt;/p&gt;</comment>
                            <comment id="15322978" author="vrodionov" created="Thu, 9 Jun 2016 17:51:36 +0000"  >&lt;p&gt;v2 patch with truncate.&lt;/p&gt;</comment>
                            <comment id="15323026" author="yuzhihong@gmail.com" created="Thu, 9 Jun 2016 18:16:01 +0000"  >&lt;p&gt;Looks good overall.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; class TestBackupDeleteRestore &lt;span class=&quot;code-keyword&quot;&gt;extends&lt;/span&gt; TestBackupBase {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Please javadoc for what the scenario the test covers.&lt;/p&gt;</comment>
                            <comment id="15323191" author="vrodionov" created="Thu, 9 Jun 2016 19:44:36 +0000"  >&lt;p&gt;v3 with updated javadoc&lt;/p&gt;</comment>
                            <comment id="15323196" author="yuzhihong@gmail.com" created="Thu, 9 Jun 2016 19:47:56 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jerryhe&quot; class=&quot;user-hover&quot; rel=&quot;jerryhe&quot;&gt;Jerry He&lt;/a&gt;:&lt;br/&gt;
What do you think of the latest patch ?&lt;/p&gt;</comment>
                            <comment id="15323451" author="jinghe" created="Thu, 9 Jun 2016 21:57:25 +0000"  >&lt;p&gt;An issue with the &apos;truncate&apos; is that it preserves the schema of the table.&lt;br/&gt;
It is possible the current table schema is different (e.g. with a new column family or a column family has been dropped).&lt;br/&gt;
The restore (bulk load) can fail due to mismatch column families.  (This can be fixed with some kind of &apos;ignore&apos;).&lt;br/&gt;
But again the table is not in a PIT state in the past.&lt;/p&gt;</comment>
                            <comment id="15323472" author="jinghe" created="Thu, 9 Jun 2016 22:09:22 +0000"  >&lt;p&gt;We can call alterTable with the past PIT table descriptor after truncate?&lt;br/&gt;
IIRC. Incremental restore does that to handle possible schema change that happened between the backups.&lt;/p&gt;</comment>
                            <comment id="15323573" author="vrodionov" created="Thu, 9 Jun 2016 23:13:13 +0000"  >&lt;p&gt;Schema evolution and its support is on the roadmap - &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-15449&quot; title=&quot;HBase Backup Phase 3: Support physical table layout change &quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-15449&quot;&gt;&lt;del&gt;HBASE-15449&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We have 3 options:&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;Restore to a current schema (truncate approach)&lt;/li&gt;
	&lt;li&gt;Restore to a schema of a last full backup (delete approach)&lt;/li&gt;
	&lt;li&gt;Restore to a schema of a backup being restored (PIT schema- &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-15448&quot; title=&quot;HBase Backup Phase 3: Restore optimization 2&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-15448&quot;&gt;&lt;del&gt;HBASE-15448&lt;/del&gt;&lt;/a&gt;).&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;No. 3 is right one, but its in Phase 3. For now we can use either #1 or #2. I prefer #1, because, in most cases, the most recent schema (region splits) will be much closer to our PIT, than schema (region splits) of a last full backup.&lt;/p&gt;

&lt;p&gt;I vote for #1 (current patch), just we have to clarify that until we get &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-15448&quot; title=&quot;HBase Backup Phase 3: Restore optimization 2&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-15448&quot;&gt;&lt;del&gt;HBASE-15448&lt;/del&gt;&lt;/a&gt;(9) &lt;b&gt;we do not support physical layout change of a table&lt;/b&gt;.&lt;/p&gt;

</comment>
                            <comment id="15323591" author="vrodionov" created="Thu, 9 Jun 2016 23:25:01 +0000"  >&lt;p&gt;To clarify further:&lt;/p&gt;

&lt;p&gt;Until we get physical layout change support, both #1 and #2 are bad in case if table/column family descriptors are changed. Restore will fail in both cases. #3 requires some substantial work and I do not want to block this JIRA until we get  &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-15448&quot; title=&quot;HBase Backup Phase 3: Restore optimization 2&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-15448&quot;&gt;&lt;del&gt;HBASE-15448&lt;/del&gt;&lt;/a&gt;(9) resolved.  &lt;/p&gt;</comment>
                            <comment id="15328440" author="yuzhihong@gmail.com" created="Mon, 13 Jun 2016 22:32:13 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jerryhe&quot; class=&quot;user-hover&quot; rel=&quot;jerryhe&quot;&gt;Jerry He&lt;/a&gt;:&lt;br/&gt;
What do you think about Vlad&apos;s comment ?&lt;/p&gt;</comment>
                            <comment id="15328587" author="yuzhihong@gmail.com" created="Mon, 13 Jun 2016 23:26:52 +0000"  >&lt;p&gt;Since the snapshot restore would restore the region boundaries at time of full backup, simply truncating the table may not work (there may be splits in between the full backup and subsequent incremental backups).&lt;/p&gt;

&lt;p&gt;I wonder if we should add metadata into backup manifest so that we know whether truncate is applicable.&lt;/p&gt;</comment>
                            <comment id="15328885" author="vrodionov" created="Tue, 14 Jun 2016 04:00:48 +0000"  >&lt;p&gt;Snapshot restore works with arbitrary boundaries. &lt;/p&gt;

&lt;p&gt;If we select truncate option:&lt;/p&gt;

&lt;p&gt;First full backup restore can take a long time, because, bulk load tool will need to split (align) all HFiles to new region boundaries before pushing them to a cluster. The second step (M/R job to load all WAL files) will finish pretty quickly and no region splits will be afterwords. &lt;/p&gt;

&lt;p&gt;If we select  delete option:&lt;br/&gt;
First full backup restore will finish quickly, second step will finish quickly as well, but we will have a lot of region splits and major compaction when restore finishes.&lt;/p&gt;

&lt;p&gt;I vote for truncate as an interim solution.&lt;/p&gt;</comment>
                            <comment id="15329926" author="yuzhihong@gmail.com" created="Tue, 14 Jun 2016 17:15:21 +0000"  >&lt;p&gt;Alright, planning to commit if &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jerryhe&quot; class=&quot;user-hover&quot; rel=&quot;jerryhe&quot;&gt;Jerry He&lt;/a&gt; doesn&apos;t have objection.&lt;/p&gt;</comment>
                            <comment id="15330089" author="jinghe" created="Tue, 14 Jun 2016 18:27:01 +0000"  >&lt;blockquote&gt;&lt;p&gt;If we select delete option:  First full backup restore will finish quickly, second step will finish quickly as well, but we will have a lot of region splits and major compaction when restore finishes&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Hmm, could you explain?&lt;/p&gt;

&lt;p&gt;Ok. we know &apos;truncate&apos; has these issues, that should be addressed in the nex phase.&lt;br/&gt;
1. does not restore PIT table schema&lt;br/&gt;
2. does not restore PIT region boundary, &lt;/p&gt;</comment>
                            <comment id="15330125" author="vrodionov" created="Tue, 14 Jun 2016 18:37:27 +0000"  >&lt;p&gt;Ok, let us suppose that last full backup was done on a table when it had 10 regions. The last incremental backup was done when table had 100 regions. We restore everything into table with 10 regions. When restore finishes, every flush will trigger split until we reach ~ 100 regions - super split storm.&lt;/p&gt;

&lt;p&gt;The current restore code does not use direct wal replay to HBase, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jerryhe&quot; class=&quot;user-hover&quot; rel=&quot;jerryhe&quot;&gt;Jerry He&lt;/a&gt;. We combine all WALs into a single M/R job, create HFiles and then load them into a table. This is why is so important to have region boundaries after full backup restore as much closer to a PIT boundaries as possible - to avoid subsequent region splits.&lt;/p&gt;</comment>
                            <comment id="15331104" author="jinghe" created="Wed, 15 Jun 2016 04:03:03 +0000"  >&lt;p&gt;Ok. What you said above makes sense, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=vrodionov&quot; class=&quot;user-hover&quot; rel=&quot;vrodionov&quot;&gt;Vladimir Rodionov&lt;/a&gt;.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310010">
                    <name>Incorporates</name>
                                                                <inwardlinks description="is part of">
                                        <issuelink>
            <issuekey id="12863549">HBASE-14414</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12807557" name="HBASE-15862-v1.patch" size="10971" author="vrodionov" created="Wed, 1 Jun 2016 23:33:18 +0000"/>
                            <attachment id="12809243" name="HBASE-15862-v2.patch" size="11013" author="vrodionov" created="Thu, 9 Jun 2016 17:51:36 +0000"/>
                            <attachment id="12809273" name="HBASE-15862-v3.patch" size="11071" author="vrodionov" created="Thu, 9 Jun 2016 19:44:36 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 2 Jun 2016 16:07:46 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            24 weeks, 1 day ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2y847:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>