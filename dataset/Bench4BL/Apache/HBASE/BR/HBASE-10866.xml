<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sat Dec 03 16:00:09 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-10866/HBASE-10866.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-10866] Decouple HLogSplitterHandler from ZooKeeper</title>
                <link>https://issues.apache.org/jira/browse/HBASE-10866</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;As some sort of follow-up or initial step towards &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10296&quot; title=&quot;Replace ZK with a consensus lib(paxos,zab or raft) running within master processes to provide better master failover performance and state consistency&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10296&quot;&gt;HBASE-10296&lt;/a&gt;...&lt;/p&gt;

&lt;p&gt;Whatever consensus algorithm/library may be the chosen, perhaps on of first practical steps towards this goal would be to better abstract ZK-related API and details, which are now throughout the codebase (mostly leaked throuth ZkUtil, ZooKeeperWatcher and listeners).&lt;/p&gt;

&lt;p&gt;I&apos;d like to propose a series of patches to help better abstract out zookeeper (and then help develop consensus APIs). &lt;/p&gt;

&lt;p&gt;Here is first version of  patch for initial review (then I&apos;m planning to work on another handlers in regionserver, and then perhaps start working on abstracting listeners).&lt;/p&gt;

&lt;p&gt;Note - there used to be an attachment with PDF, a write-up, it&apos;s now moved up to the parent JIRA.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12704369">HBASE-10866</key>
            <summary>Decouple HLogSplitterHandler from ZooKeeper</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="12706580">HBASE-10909</parent>
                                    <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="3">Duplicate</resolution>
                                        <assignee username="mantonov">Mikhail Antonov</assignee>
                                    <reporter username="mantonov">Mikhail Antonov</reporter>
                        <labels>
                    </labels>
                <created>Fri, 28 Mar 2014 21:24:12 +0000</created>
                <updated>Tue, 1 Jul 2014 18:29:30 +0000</updated>
                            <resolved>Tue, 1 Jul 2014 18:29:30 +0000</resolved>
                                                                    <component>Consensus</component>
                    <component>Zookeeper</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>15</watches>
                                                                <comments>
                            <comment id="13951425" author="mantonov" created="Fri, 28 Mar 2014 21:27:13 +0000"  >&lt;p&gt;First version for review.&lt;/p&gt;</comment>
                            <comment id="13951515" author="stack" created="Fri, 28 Mar 2014 22:29:41 +0000"  >&lt;p&gt;Try against Hadoopqa.  So far looks good &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mantonov&quot; class=&quot;user-hover&quot; rel=&quot;mantonov&quot;&gt;Mikhail Antonov&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Packaging-wise, I&apos;d think a consensus package would live at o.a.h.h not at o.a.h.h.regionserver.consensus... consensus will have facility more general than regionserver?  Or do you think there will be a master consensus subpackage too and that master and regionserver will never share Interfaces?&lt;/p&gt;

&lt;p&gt;Nit: See other Interfaces in hbase.  They leave off the &apos;public&apos;.&lt;/p&gt;

&lt;p&gt;Is this all to address log splitting?  Is there not a master side too?&lt;/p&gt;

&lt;p&gt;Looks good so far.&lt;/p&gt;</comment>
                            <comment id="13951541" author="cos" created="Fri, 28 Mar 2014 22:55:32 +0000"  >&lt;p&gt;Thanks for the initial feedback, Stack! I think the main reason for doing this separation one handler at a time and just on the RS side is to limit the scope of the patches and make them easier to be digested. Would you suggest otherwise?&lt;/p&gt;</comment>
                            <comment id="13951632" author="stack" created="Sat, 29 Mar 2014 00:11:34 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=cos&quot; class=&quot;user-hover&quot; rel=&quot;cos&quot;&gt;Konstantin Boudnik&lt;/a&gt; Sounds good.  Any chance of a picture of what we&apos;ll have in the end just to make sure its all neat and tidy when done?  How many new packages and how many new Interfaces are we thinking?  Just checking packages and Interfaces are at right &apos;level&apos;.  Good stuff.&lt;/p&gt;</comment>
                            <comment id="13951709" author="hadoopqa" created="Sat, 29 Mar 2014 02:13:34 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12637549/HBASE-10866.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12637549/HBASE-10866.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;br/&gt;
  ATTACHMENT ID: 12637549&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;/p&gt;


&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 1 zombie test(s): 	at org.apache.hadoop.hbase.coprocessor.TestRegionObserverInterface.testHBase3758(TestRegionObserverInterface.java:296)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9132//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9132//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9132//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9132//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9132//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9132//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9132//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9132//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9132//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9132//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9132//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9132//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9132//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9132//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9132//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9132//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9132//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9132//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9132//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9132//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9132//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9132//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13951816" author="mantonov" created="Sat, 29 Mar 2014 09:34:03 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt; - thanks for review!&lt;/p&gt;

&lt;p&gt;Yeah, full decoupling of log splitting from zookeeper will involve also changes in zookeeper listener on RS side (SplitLogWorker), and changes in HMaster (SplitLogManager). The former one is what I&apos;m working on, and master side I will tackle after that.&lt;/p&gt;

&lt;p&gt;Regarding packaging - definitely both master and RS would include logic for consensus, and as more patches in this direction are rolled out, we should see that. In that patch I&apos;m trying to keep it narrow in scope, so that it&apos;s easier for initial review and discuss.&lt;/p&gt;

&lt;p&gt;So I think I&apos;ll write up a short document and post in for discussion sometime early-mid next week (unless you suggest otherwise).&lt;/p&gt;

&lt;p&gt;W.r.t  interface conventions- I&apos;ll fix them and revise the patch over weekend, will also check the tests which failed. &lt;/p&gt;</comment>
                            <comment id="13954935" author="stack" created="Mon, 31 Mar 2014 04:13:06 +0000"  >&lt;p&gt;Small patches are good.  A short one pager on the pattern you will apply rolling in these patches would be great too...  It will allow us to ensure that the small patches are going toward a healthy goal.   Thanks.&lt;/p&gt;</comment>
                            <comment id="13955710" author="mantonov" created="Mon, 31 Mar 2014 21:03:11 +0000"  >&lt;p&gt;updated patch, revised interfaces naming&lt;/p&gt;</comment>
                            <comment id="13955724" author="mantonov" created="Mon, 31 Mar 2014 21:11:07 +0000"  >&lt;p&gt;no-prefixed patch, corrected formatting&lt;/p&gt;</comment>
                            <comment id="13955780" author="hadoopqa" created="Mon, 31 Mar 2014 22:05:45 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12637916/HBASE-10866.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12637916/HBASE-10866.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;br/&gt;
  ATTACHMENT ID: 12637916&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 patch&lt;/font&gt;.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9144//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9144//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13955918" author="mantonov" created="Tue, 1 Apr 2014 00:06:31 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt; - attached is a short write-up on the consensus for hbase - would appreciate review and feedback.&lt;/p&gt;</comment>
                            <comment id="13956036" author="mantonov" created="Tue, 1 Apr 2014 02:38:10 +0000"  >&lt;p&gt;updated patch&lt;/p&gt;</comment>
                            <comment id="13956067" author="stack" created="Tue, 1 Apr 2014 03:33:10 +0000"  >&lt;p&gt;Writeup looks great.  Should have date, author and issue reference attached in case someone trips over it in wild but this is just a nit.  There is actually a fourth unfortunate use of zk that we&apos;d rather not recall but since you are making a list, I might as well let you know of it: we persist state into zk for a few cases; replicating and whether a table is disabled to speak of two (these we need to undo).  The writeup is helpful (&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jxiang&quot; class=&quot;user-hover&quot; rel=&quot;jxiang&quot;&gt;Jimmy Xiang&lt;/a&gt; &amp;#8211; you&apos;d be interested).  Regards say RegionServerConsensus, where would such an Interface live in the code base?  Is it only consensus among regionservers?   Would the Master need package access?  Thank you.&lt;/p&gt;
</comment>
                            <comment id="13956097" author="hadoopqa" created="Tue, 1 Apr 2014 04:35:28 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12637986/HBASE-10866.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12637986/HBASE-10866.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;br/&gt;
  ATTACHMENT ID: 12637986&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9150//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9150//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9150//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9150//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9150//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9150//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9150//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9150//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9150//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9150//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9150//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9150//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9150//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9150//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9150//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9150//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9150//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9150//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9150//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9150//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9150//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9150//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13956135" author="mantonov" created="Tue, 1 Apr 2014 05:38:26 +0000"  >&lt;p&gt;Regarding essential state being kept in ZK - I guess you&apos;re talking about &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7767&quot; title=&quot;Get rid of ZKTable, and table enable/disable state in ZK &quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7767&quot;&gt;&lt;del&gt;HBASE-7767&lt;/del&gt;&lt;/a&gt; and such? I see following possible approaches (looking from the position of abstracting ZK usage):&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;while doing refactoring, include this permanent shared state as part of first usecase (transient shared state), as described in writeup. That is conceptually wrong, but would just be a simple refactoring of ZK usage.&lt;/li&gt;
	&lt;li&gt;create another hbase meta table to keep this information. That is probably right approach, but would be much bigger change?&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;On the codebase structure - this is how I see it:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;both master and region server will need access to consensus operations. In example with log splitting, on the master side there&apos;s SplitLogManager which is orchestrating task to replay wal files by creating znodes.&lt;/li&gt;
	&lt;li&gt;I&apos;m thinking that at least for now, to make refactoring process more straightforward and manageable, it may be better to keep consensus parts of both sides (master and RS) separated in packages like o.a.h.h.regionserver.consensus (.impl for implementations) and o.a.h.h.master.consensus (.impl for implementations), and may be after a series of patches, reconcile common parts into o.a.h.h.consensus. Reasons - consensus api-related parts on master and regionserver sides can be worked on independently in many cases, and while the refactoring is in process we can refactor first region-part, then master-part. Also, in many cases the logic which needs to be abstracted on region side and master side is specific for this type of cluster node.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;What do you think? May be I&apos;m missing something on the packaging conventions for HBase though..&lt;/p&gt;


</comment>
                            <comment id="13956143" author="lhofhansl" created="Tue, 1 Apr 2014 05:52:06 +0000"  >&lt;p&gt;Hi &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mantonov&quot; class=&quot;user-hover&quot; rel=&quot;mantonov&quot;&gt;Mikhail Antonov&lt;/a&gt;, &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Nice writeup and separation of the uses of ZK.&lt;/li&gt;
	&lt;li&gt;I agree we can treat permanent and transient shared state same. In both cases it is state shared between servers. When the abstraction is done we can even have an implementation that stores that state in an HBase table.&lt;/li&gt;
	&lt;li&gt;Let&apos;s do this piecemeal (as you suggest). But note that if we do not finish this everywhere we&apos;re worse off than before - more classes that do the same thing and have to modified together.&lt;/li&gt;
	&lt;li&gt;o.a.h.h.regionserver.consensus and o.a.h.h.master.consensus seem fine to me.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13956155" author="mantonov" created="Tue, 1 Apr 2014 06:21:54 +0000"  >&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;~ lhofhansl&amp;#93;&lt;/span&gt; thanks for feedback!&lt;/p&gt;

&lt;p&gt;Yeah, totally understand this abstraction effort needs to be finished everywhere (and also the fact that it&apos;s quite a bit of work, affecting  many places in the codebase). The piecemeal approach would provide for easier review/feedbacks of patches to ensure they&apos;re in line with the goal (as &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=cos&quot; class=&quot;user-hover&quot; rel=&quot;cos&quot;&gt;Konstantin Boudnik&lt;/a&gt; noted), and for better work structuring and parallelization.&lt;/p&gt;</comment>
                            <comment id="13956994" author="mantonov" created="Tue, 1 Apr 2014 20:47:26 +0000"  >&lt;p&gt;Another usecase for ZK worth mentioning is ephemeral znodes operation, for live RSs tracking, for example. Learning about such event is as described in usecase 3, but sending such notification would be little different.&lt;/p&gt;</comment>
                            <comment id="13957825" author="apurtell" created="Wed, 2 Apr 2014 16:06:23 +0000"  >&lt;p&gt;Great write up and change proposal.&lt;/p&gt;

&lt;p&gt;For some of the notification uses, where we (ab)use ZK watches to notify distributed caches that the source of truth has changed, we should think about factoring out a reusable common implementation of this pattern. Another JIRA proposes to update the source of truth and coordinate cache updates in one step using HBase&apos;s distributed procedure facility, which relies on various ZK patterns internally. If we were to use an alternate consensus protocol based notification scheme, what is the &quot;acceptors quorum&quot; mentioned in the document? Since all RegionServers cache the data that would need be the full set of RegionServers. I suppose we could still use procedures built over the ZK alternate, just wanted to point out a ZK usage possibly not captured in the document. &lt;/p&gt;</comment>
                            <comment id="13958487" author="mantonov" created="Thu, 3 Apr 2014 03:29:32 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=apurtell&quot; class=&quot;user-hover&quot; rel=&quot;apurtell&quot;&gt;Andrew Purtell&lt;/a&gt;] thanks for feedback! &lt;/p&gt;

&lt;p&gt;(quorum (or just &quot;set&quot;) of acceptors is paxos term, just to illustrate the principle)&lt;/p&gt;

&lt;p&gt;If I understood you correctly, you meant that the patterns currently built on top of zk primitives (table lock for example, implemented with  the znodes) should still be preserved? Yeah, absolutely. I&apos;m thinking that the first goal is to ensure those patterns isolate ZK well enough.&lt;/p&gt;

&lt;p&gt;Regarding &quot;all RegionServers cache the data that would need be the full set of RegionServers&quot; - current caches keep the data on each regionserver, and then evict/add elements when triggered by certain event, right? So if the notion of &quot;triggering event&quot; is abstracted, then the implementation of trigger may be ZK watcher called from ZK, or paxos agreement reached upon the proposal (in case of paxos).&lt;/p&gt;

&lt;p&gt;Could you please elaborate a bit more on that additional ZK usage I may be missing now?&lt;/p&gt;</comment>
                            <comment id="13958491" author="mantonov" created="Thu, 3 Apr 2014 03:33:10 +0000"  >&lt;p&gt;A note regarding the actual patch submitted..it passed the existing tests, on hadoop-qa, but I guess there has to be more integration tests on that consensus thing. So am looking into how it may be tested (and would appreciate thoughts/feedbacks). &lt;/p&gt;</comment>
                            <comment id="13958639" author="apurtell" created="Thu, 3 Apr 2014 08:48:31 +0000"  >&lt;blockquote&gt;&lt;p&gt;Regarding &quot;all RegionServers cache the data that would need be the full set of RegionServers&quot; - current caches keep the data on each regionserver, and then evict/add elements when triggered by certain event, right? So if the notion of &quot;triggering event&quot; is abstracted, then the implementation of trigger may be ZK watcher called from ZK, or paxos agreement reached upon the proposal (in case of paxos).&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes, I just want to make sure that the distributed cache case is called out, because if a small group of processes running the consensus protocol agree and this triggers some kind of event notification, that&apos;s fine; but if all regionservers holding such a cache must participate in the protocol to be aware of a change then that won&apos;t scale.&lt;/p&gt;</comment>
                            <comment id="13958659" author="mantonov" created="Thu, 3 Apr 2014 09:25:08 +0000"  >&lt;p&gt;Ah, yeah. Former is correct. This is somewhat specific detail for Paxos, but yes, set of agents reaching agreement on certain proposal (acceptors) is decoupled from set of agents getting notified of the that agreement (learners).&lt;/p&gt;</comment>
                            <comment id="13959579" author="mantonov" created="Fri, 4 Apr 2014 02:51:59 +0000"  >&lt;p&gt;Looking for more comments on the patch / document..&lt;/p&gt;</comment>
                            <comment id="13959596" author="stack" created="Fri, 4 Apr 2014 03:26:01 +0000"  >&lt;p&gt;I wonder if this is the right package for this:&lt;/p&gt;

&lt;p&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/consensus/SplitLogWorkerConsensus&lt;/p&gt;

&lt;p&gt;Won&apos;t the master be participating?  If so, the package should be in a relative location they both can share: e.g. o.a.h.h.consensus rather than at o.a.h.h.regionserver.consensus and o.a.h.h.master.consensus?&lt;/p&gt;
</comment>
                            <comment id="13959602" author="mantonov" created="Fri, 4 Apr 2014 03:30:33 +0000"  >&lt;p&gt;Yep, agree. Will update patch. &lt;/p&gt;

&lt;p&gt;I will look at the master side (split log manager) to see if the consensus class for RS and master could share the same class (or base one).&lt;/p&gt;</comment>
                            <comment id="13959607" author="mantonov" created="Fri, 4 Apr 2014 03:33:09 +0000"  >&lt;p&gt;For the subsequent patch for other handlers.. would you prefer me to open simply another jira, or make an epic as an umbrella for them?&lt;/p&gt;</comment>
                            <comment id="13959610" author="stack" created="Fri, 4 Apr 2014 03:41:34 +0000"  >&lt;p&gt;Would encourage you to at least look at the master side and figure out if they will be sharing the same package.  If so, the package needs to come up a level.  Regards how to proceed, I would suggest you file an &apos;umbrella&apos; issue (we have this type) and then you make this and subsequent issues &apos;sub-tasks&apos;.  Make as many sub-tasks as you need; a sub-task should have some substance but not so much that fellas will have to take a weekend to review.  In the umbrella issue describe coarsely what you are at (maybe move up your pdf there).  As per &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt; above, rather than going broad, do a &apos;service&apos; at a time; it will help reviewers.  They won&apos;t need the grand picture just to give you a +1 on your patch.  Let me make you a contributor so you can manipulate issue relationships as you see fit.&lt;/p&gt;</comment>
                            <comment id="13959613" author="mantonov" created="Fri, 4 Apr 2014 03:47:46 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt; - thanks, will proceed this way.&lt;/p&gt;</comment>
                            <comment id="13961732" author="mantonov" created="Mon, 7 Apr 2014 09:09:44 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt; looks like I can&apos;t edit my comments - is that something you could grant me?&lt;/p&gt;</comment>
                            <comment id="13962602" author="stack" created="Tue, 8 Apr 2014 05:26:47 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mantonov&quot; class=&quot;user-hover&quot; rel=&quot;mantonov&quot;&gt;Mikhail Antonov&lt;/a&gt; I have you as a contributor.  Even if you relogin to jira, you can&apos;t edit your comments?&lt;/p&gt;</comment>
                            <comment id="13962608" author="mantonov" created="Tue, 8 Apr 2014 05:32:10 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt; Yes, still can&apos;t edit my comments for some reason.&lt;/p&gt;</comment>
                            <comment id="13980565" author="mantonov" created="Fri, 25 Apr 2014 00:46:44 +0000"  >&lt;p&gt;This jira would become part of &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11072&quot; title=&quot;Abstract WAL splitting from ZK&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11072&quot;&gt;&lt;del&gt;HBASE-11072&lt;/del&gt;&lt;/a&gt; (decouple WAL splitting in whole), will link them.&lt;/p&gt;</comment>
                            <comment id="14049160" author="mantonov" created="Tue, 1 Jul 2014 18:29:30 +0000"  >&lt;p&gt;Superseded by &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11072&quot; title=&quot;Abstract WAL splitting from ZK&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11072&quot;&gt;&lt;del&gt;HBASE-11072&lt;/del&gt;&lt;/a&gt; to abstract whole distributed log splitting.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310051">
                    <name>Supercedes</name>
                                                                <inwardlinks description="is superceded by">
                                        <issuelink>
            <issuekey id="12710468">HBASE-11072</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12637986" name="HBASE-10866.patch" size="17386" author="mantonov" created="Tue, 1 Apr 2014 02:38:10 +0000"/>
                            <attachment id="12637916" name="HBASE-10866.patch" size="11493" author="mantonov" created="Mon, 31 Mar 2014 21:11:07 +0000"/>
                            <attachment id="12637915" name="HBASE-10866.patch" size="17395" author="mantonov" created="Mon, 31 Mar 2014 21:03:11 +0000"/>
                            <attachment id="12637549" name="HBASE-10866.patch" size="17416" author="mantonov" created="Fri, 28 Mar 2014 21:27:13 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 28 Mar 2014 22:29:41 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>382703</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            2 years, 22 weeks, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1txlb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>382971</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>