<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sat Dec 03 16:49:29 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-2027/HBASE-2027.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-2027] HConnectionManager.HBASE_INSTANCES leaks TableServers</title>
                <link>https://issues.apache.org/jira/browse/HBASE-2027</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;HConnectionManager.HBASE_INSTANCES is a WeakHashMap from HBaseConfiguration to TableServers.  However, each TableServers has a strong reference back to the HBaseConfiguration key so they are never freed.  (See note at &lt;a href=&quot;http://java.sun.com/javase/6/docs/api/java/util/WeakHashMap.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://java.sun.com/javase/6/docs/api/java/util/WeakHashMap.html&lt;/a&gt; : &quot;Implementation note: The value objects in a WeakHashMap are held by ordinary strong references. Thus care should be taken to ensure that value objects do not strongly refer to their own keys, either directly or indirectly, since that will prevent the keys from being discarded.&quot;)&lt;/p&gt;

&lt;p&gt;Moreover, HBaseConfiguration implements hashCode() but not equals() so identical HBaseConfiguration objects each get their own TableServers object.&lt;/p&gt;

&lt;p&gt;We had a long running HBase client process that was creating new HTable() objects, each creating a new HBaseConfiguration() and thus a new TableServers object.  It eventually went OOM, and gave a heap dump indicating 360 MB of data retained by HBASE_INSTANCES.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12442297">HBASE-2027</key>
            <summary>HConnectionManager.HBASE_INSTANCES leaks TableServers</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="davelatham">Dave Latham</assignee>
                                    <reporter username="davelatham">Dave Latham</reporter>
                        <labels>
                    </labels>
                <created>Thu, 3 Dec 2009 01:27:55 +0000</created>
                <updated>Fri, 12 Oct 2012 06:14:15 +0000</updated>
                            <resolved>Tue, 8 Dec 2009 00:25:39 +0000</resolved>
                                    <version>0.20.0</version>
                                    <fixVersion>0.20.3</fixVersion>
                    <fixVersion>0.90.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12785119" author="davelatham" created="Thu, 3 Dec 2009 01:30:13 +0000"  >&lt;p&gt;Here&apos;s a patch for 0.20 that changes the WeakHashMap to use WeakReference&apos;s to the TableServers for values and adds an equals method to HBaseConfiguration so that identical configs will share the same TableServers instead of each getting their own.  Also corrects the javadoc for HBaseConfiguration.hashCode().&lt;/p&gt;</comment>
                            <comment id="12785168" author="davelatham" created="Thu, 3 Dec 2009 04:08:33 +0000"  >&lt;p&gt;This patch should apply to both trunk and branch.&lt;/p&gt;</comment>
                            <comment id="12785363" author="davelatham" created="Thu, 3 Dec 2009 15:41:03 +0000"  >&lt;p&gt;I spent some more time thinking about this issue, and reading through the background &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1251&quot; title=&quot;HConnectionManager.getConnection(HBaseConfiguration) returns same HConnection for different HBaseConfigurations &quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-1251&quot;&gt;&lt;del&gt;HBASE-1251&lt;/del&gt;&lt;/a&gt; which set it up.&lt;/p&gt;

&lt;p&gt;The cache of connections as it stands now is never reduced or freed due to the strong reference each TableServers holds back to the HBaseConfiguration key in the HBASE_INSTANCES map.  However, with the first patch I provided, if client code keeps a strong reference to an HBaseConfiguration but not to the connection itself, then the connection information may be freed even if the HBaseConfiguration object is still around.  This is not desirable either.&lt;/p&gt;

&lt;p&gt;Another possibility would be to convert the reference the TableServers holds to the HBaseConfiguration to a WeakReference instead of converting the HBASE_INSTANCES value to holding a WeakReference to the TableServers.  However, this also presents problems because then if the client held a strong reference to the HConnection but not to the HBaseConfiguration (less likely than the earlier case, I believe) then the configuration reference could be freed and methods that require it would fail.&lt;/p&gt;

&lt;p&gt;I propose another simpler method, to get rid of the WeakHashMap / WeakReferences entirely and make the HBASE_INSTANCES map a simple LRU cache of the last 10 HBaseConfiguration to HConnection instances.  This will bound the amount of memory used up by the cache (better than the current implementation) at the risk of hbase clients who need to repeatedly use more than 10 different hbase configurations losing cached connections (I believe this to be very rare, but please enlighten me if I am mistaken.)&lt;/p&gt;

&lt;p&gt;I&apos;m attaching a new patch with this solution.  Do you think it would be better to make the size of this cache a config option instead of hardcoding it?&lt;/p&gt;</comment>
                            <comment id="12785514" author="stack" created="Thu, 3 Dec 2009 20:48:41 +0000"  >&lt;p&gt;Your simpler bounded count of instances sounds good to me.  Ten should be more than enough.  You could make it configurable without adding the config. to hbase-default.xml; fellas would have to read the code to figure that they could change the value.   Its a static context though when this stuff is being set.  I&apos;d say the patch is good enough as is.  Unless you object, will commit. &lt;/p&gt;

&lt;p&gt;You know, set the max to 31.  ZK maximum connections from a host is default 30.  This way, users will hardly ever hit this hard-coded max.  They&apos;ll get complaint from zk instead (And 30 instances is still small potatoes).&lt;/p&gt;

&lt;p&gt;Good on you Dave.&lt;/p&gt;</comment>
                            <comment id="12785520" author="davelatham" created="Thu, 3 Dec 2009 21:00:04 +0000"  >&lt;p&gt;I just noticed &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1976&quot; title=&quot;HBaseConfiguration implements hashCode() without implementing equals()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-1976&quot;&gt;&lt;del&gt;HBASE-1976&lt;/del&gt;&lt;/a&gt; which is definitely related and the comments there.  There might be a better key for HBASE_INSTANCES than using the entire HBaseConfiguration.  Why don&apos;t you hold off on the commit until I (or someone else) gives that a bit more thought.&lt;/p&gt;</comment>
                            <comment id="12786503" author="stack" created="Sat, 5 Dec 2009 21:11:59 +0000"  >&lt;p&gt;@Dave Grand.  My uninformed notion is that the way this HBASE_INSTANCES stuff works is broke.  A static map will always be problematic.  I can understand that in the one JVM you might want differently configured connections but keying with the HBC instance seems off.  Table name might be better but then what if you wanted differently configured connections to the same table?  Would that even make sense?  Thanks for looking into this.&lt;/p&gt;</comment>
                            <comment id="12787010" author="davelatham" created="Mon, 7 Dec 2009 17:49:04 +0000"  >&lt;p&gt;Updated patch to set the max cached HConnection instances to 31.&lt;/p&gt;

&lt;p&gt;I gave it a bit more thought, and I&apos;m not sure what the best way would look like to track and support different connection sets is, so I propose we go with this patch as a definite improvement over the current set up and leave further improvement to future work.&lt;/p&gt;</comment>
                            <comment id="12787215" author="stack" created="Tue, 8 Dec 2009 00:25:39 +0000"  >&lt;p&gt;Agreed about new issue to fix this properly (Can be part of client rewrite when we take on another RPC, one that is non-blocking nio rather than handler-based hadoop RPC).&lt;/p&gt;

&lt;p&gt;Committed to branch and trunk.&lt;/p&gt;</comment>
                            <comment id="12787216" author="stack" created="Tue, 8 Dec 2009 00:25:54 +0000"  >&lt;p&gt;Thanks for the patch Dave.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10020">
                    <name>Cloners</name>
                                                                <inwardlinks description="is cloned by">
                                        <issuelink>
            <issuekey id="12471856">HBASE-2925</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12416529">HBASE-1251</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12440510">HBASE-1976</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12427204" name="2027-LRU.patch" size="3135" author="davelatham" created="Mon, 7 Dec 2009 17:49:03 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 3 Dec 2009 20:48:41 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>26108</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            7 years, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i08t9b:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>49340</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>