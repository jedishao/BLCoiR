<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sat Dec 03 17:11:25 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-2832/HBASE-2832.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-2832] Priorities and multi-threading for MemStore flushing</title>
                <link>https://issues.apache.org/jira/browse/HBASE-2832</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Similar to &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1476&quot; title=&quot;scaling compaction with multiple threads&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-1476&quot;&gt;&lt;del&gt;HBASE-1476&lt;/del&gt;&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2646&quot; title=&quot;Compaction requests should be prioritized to prevent blocking&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2646&quot;&gt;&lt;del&gt;HBASE-2646&lt;/del&gt;&lt;/a&gt; which are for compactions, but do this for flushes.&lt;/p&gt;

&lt;p&gt;Flushing when we hit the normal flush size is a low priority flush.  Other types of flushes (heap pressure, blocking client requests, etc) are high priority.&lt;/p&gt;

&lt;p&gt;Should have a tunable number of concurrent flushes.&lt;/p&gt;

&lt;p&gt;Will use the &lt;tt&gt;HBaseExecutorService&lt;/tt&gt; and &lt;tt&gt;HBaseEventHandler&lt;/tt&gt; introduced from master/zk changes.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12469138">HBASE-2832</key>
            <summary>Priorities and multi-threading for MemStore flushing</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="2" iconUrl="https://issues.apache.org/jira/images/icons/priorities/critical.png">Critical</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="3">Duplicate</resolution>
                                        <assignee username="streamy">Jonathan Gray</assignee>
                                    <reporter username="streamy">Jonathan Gray</reporter>
                        <labels>
                    </labels>
                <created>Tue, 13 Jul 2010 00:43:55 +0000</created>
                <updated>Mon, 15 Apr 2013 22:44:09 +0000</updated>
                            <resolved>Mon, 15 Apr 2013 22:44:09 +0000</resolved>
                                                                    <component>regionserver</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                <comments>
                            <comment id="12887604" author="streamy" created="Tue, 13 Jul 2010 00:46:06 +0000"  >&lt;p&gt;Linking to issues that are for compactions&lt;/p&gt;</comment>
                            <comment id="12887606" author="streamy" created="Tue, 13 Jul 2010 00:52:18 +0000"  >&lt;p&gt;Class comment from new FlushHandler that does a rundown of flushing in hbase:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;/**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Flushes are currently triggered when:&lt;br/&gt;
 *&lt;/li&gt;
	&lt;li&gt;&amp;lt;ol&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;li&amp;gt;MemStore size of an HRegion is &amp;gt; hbase.hregion.memstore.flush.size&lt;/li&gt;
	&lt;li&gt;(checked after every memstore insertion)&lt;/li&gt;
	&lt;li&gt;&amp;lt;/li&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;li&amp;gt;Sum of MemStores of an HRegionServer are &amp;gt; total.memstore.heap&lt;/li&gt;
	&lt;li&gt;(checked after every memstore insertion)&lt;/li&gt;
	&lt;li&gt;&amp;lt;/li&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;li&amp;gt;Number of HLogs of an HRegionServer are &amp;gt; max.hlogs&lt;/li&gt;
	&lt;li&gt;(checked after every hlog roll?) TODO: Verify&lt;/li&gt;
	&lt;li&gt;&amp;lt;/li&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;li&amp;gt;HRegion is being closed&lt;/li&gt;
	&lt;li&gt;(when receiving message from master)&lt;/li&gt;
	&lt;li&gt;&amp;lt;/li&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;li&amp;gt;HRegionServer is being quiesced&lt;/li&gt;
	&lt;li&gt;(when receiving message from master)&lt;/li&gt;
	&lt;li&gt;&amp;lt;/li&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;li&amp;gt;Client manually triggers flush of an HRegion&lt;/li&gt;
	&lt;li&gt;(when receiving message from master)&lt;/li&gt;
	&lt;li&gt;&amp;lt;/li&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;li&amp;gt;MemStore size of an HRegion is &amp;gt; memstore.flush.size *&lt;/li&gt;
	&lt;li&gt;hbase.hregion.memstore.multiplier&lt;/li&gt;
	&lt;li&gt;(checked before every memstore insertion)&lt;/li&gt;
	&lt;li&gt;&amp;lt;/li&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;/ol&amp;gt;&lt;br/&gt;
 *&lt;/li&gt;
	&lt;li&gt;There are 3 different types of flushes that correspond to these 6 events:&lt;br/&gt;
 *&lt;/li&gt;
	&lt;li&gt;&amp;lt;ol&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;li&amp;gt;&lt;/li&gt;
	&lt;li&gt;Low Priority Flush&lt;br/&gt;
 *&lt;/li&gt;
	&lt;li&gt;This occurs in response to #1.&lt;br/&gt;
 *&lt;/li&gt;
	&lt;li&gt;This is the lowest priority flush and does not need any tricks.  All other&lt;/li&gt;
	&lt;li&gt;flush types should be completed before any of this type are done.  The one&lt;/li&gt;
	&lt;li&gt;optimization it has is that if it determines that a compaction would be&lt;/li&gt;
	&lt;li&gt;triggered after the flush finished, it should cancel the flush and instead&lt;/li&gt;
	&lt;li&gt;trigger a CompactAndFlush.&lt;/li&gt;
	&lt;li&gt;&amp;lt;/li&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;li&amp;gt;&lt;/li&gt;
	&lt;li&gt;High Priority Flush&lt;br/&gt;
 *&lt;/li&gt;
	&lt;li&gt;This occurs in response to #2, #3, #6, and #7.&lt;br/&gt;
 *&lt;/li&gt;
	&lt;li&gt;High priority flushes occur in response to memory pressure, WAL pressure,&lt;/li&gt;
	&lt;li&gt;or because a user has asked for the flush.  These flushes should occur&lt;/li&gt;
	&lt;li&gt;before any low priority flushes are processed.  They are only special&lt;/li&gt;
	&lt;li&gt;because of their priority, otherwise the implementation of the flush is&lt;/li&gt;
	&lt;li&gt;identical to a low priority flush.&lt;br/&gt;
 *&lt;/li&gt;
	&lt;li&gt;This flush type explicitly does not contain the CompactAndFlush check&lt;/li&gt;
	&lt;li&gt;because it wants to flush as fast as possible.&lt;/li&gt;
	&lt;li&gt;&amp;lt;/li&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;li&amp;gt;&lt;/li&gt;
	&lt;li&gt;High Priority Double Flush&lt;br/&gt;
 *&lt;/li&gt;
	&lt;li&gt;TODO: Region closing currently does flushing in-band rather than through&lt;/li&gt;
	&lt;li&gt;the flush queue.  Should move those into using handlers once we have&lt;/li&gt;
	&lt;li&gt;blocking call.  Therefore, double-flush priority is not currently&lt;/li&gt;
	&lt;li&gt;used.&lt;br/&gt;
 *&lt;/li&gt;
	&lt;li&gt;TODO: Do we want a separate priority here once we do use this for closes?&lt;/li&gt;
	&lt;li&gt;Or are they just high priority flushes?  The first one is even a&lt;/li&gt;
	&lt;li&gt;low priority flush, second one high priority?&lt;br/&gt;
 *&lt;/li&gt;
	&lt;li&gt;This occurs in response to #4.&lt;br/&gt;
 *&lt;/li&gt;
	&lt;li&gt;When an HRegion is being closed (but not when a cluster is being quiesced)&lt;/li&gt;
	&lt;li&gt;we want to minimize the amount of time the region is unavailable.  To do&lt;/li&gt;
	&lt;li&gt;this we do a double flush.  A flush is done, then the region is closed,&lt;/li&gt;
	&lt;li&gt;then an additional flush is done before the region is available to be&lt;/li&gt;
	&lt;li&gt;re-opened.  This should happen when the Master asks a region to close&lt;/li&gt;
	&lt;li&gt;because of reassignment.&lt;br/&gt;
 *&lt;/li&gt;
	&lt;li&gt;This may also occur before splits to reduce the amount of time the parent&lt;/li&gt;
	&lt;li&gt;is offline before the daughters come back online.&lt;/li&gt;
	&lt;li&gt;&amp;lt;/li&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;/ol&amp;gt;&lt;br/&gt;
 */&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12887643" author="hbasereviewboard" created="Tue, 13 Jul 2010 03:43:13 +0000"  >&lt;p&gt;Message from: &quot;Jonathan Gray&quot; &amp;lt;jgray@apache.org&amp;gt;&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.hbase.org/r/301/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/301/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;(Updated 2010-07-12 20:39:44.545617)&lt;/p&gt;


&lt;p&gt;Review request for hbase, stack, Karthik Ranganathan, and Kannan Muthukkaruppan.&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Adds support for priorities and concurrency to regionserver flushing.&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Adds support for RS-side events/handlers/executors&lt;/li&gt;
	&lt;li&gt;Adds support for prioritized HBaseEventHandlers&lt;/li&gt;
	&lt;li&gt;Flushing now happens through FlushHandler, a new HBaseEventHandler.  There is an RS_FLUSHER executor pool that defaults to two threads right now but is also checking a conf value.  There is a good bit of documentation in FlushHandler.&lt;/li&gt;
	&lt;li&gt;Adds unit test TestFlushHandler.  There is a nicer way to detect when flushes finish now for other tests.&lt;/li&gt;
	&lt;li&gt;Handling of FS errors is pushed into FlushHandler now.  The changes happening with the master rewrite introduce a ServerStatus interface (probably a RegionStatus for rs side) that will contain the necessary methods rather than using HRegionServer directly as is required for now.&lt;/li&gt;
	&lt;li&gt;Something weird not passing in tests with multiple masters and regionservers, still working that out.&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2832&quot; title=&quot;Priorities and multi-threading for MemStore flushing&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2832&quot;&gt;&lt;del&gt;HBASE-2832&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;http://issues.apache.org/jira/browse/HBASE-2832&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/browse/HBASE-2832&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  trunk/src/main/java/org/apache/hadoop/hbase/executor/HBaseEventHandler.java 963507 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/executor/HBaseExecutorService.java 963507 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/master/HMaster.java 963507 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/regionserver/CompactSplitThread.java 963507 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java 963507 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/regionserver/MemStoreFlusher.java 963507 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/regionserver/handler/FlushHandler.java PRE-CREATION &lt;br/&gt;
  trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestFlushHandler.java PRE-CREATION &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;http://review.hbase.org/r/301/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/301/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Adds TestFlushHandler which passes.  Working on getting unit tests passing now, something related to the ExecutorService.&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Jonathan&lt;/p&gt;

</comment>
                            <comment id="12887653" author="hbasereviewboard" created="Tue, 13 Jul 2010 04:48:01 +0000"  >&lt;p&gt;Message from: &quot;Jonathan Gray&quot; &amp;lt;jgray@apache.org&amp;gt;&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.hbase.org/r/301/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/301/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;(Updated 2010-07-12 21:41:44.943871)&lt;/p&gt;


&lt;p&gt;Review request for hbase, stack, Karthik Ranganathan, and Kannan Muthukkaruppan.&lt;/p&gt;


&lt;p&gt;Changes&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Fixes some issues introduced by also having executor services running on the RS-side.  Specifically, shutdown hooks to the HBaseExecutorService would shutdown and clear all executor pools, rather than just those of the shutting down server instance.&lt;/p&gt;

&lt;p&gt;Now the map of services is always prefixed with the serverName and during shutdown we only actually shutdown those prefixed with the serverName.&lt;/p&gt;

&lt;p&gt;More unit tests are now passing, still finish the suite.&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Adds support for priorities and concurrency to regionserver flushing.&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Adds support for RS-side events/handlers/executors&lt;/li&gt;
	&lt;li&gt;Adds support for prioritized HBaseEventHandlers&lt;/li&gt;
	&lt;li&gt;Flushing now happens through FlushHandler, a new HBaseEventHandler.  There is an RS_FLUSHER executor pool that defaults to two threads right now but is also checking a conf value.  There is a good bit of documentation in FlushHandler.&lt;/li&gt;
	&lt;li&gt;Adds unit test TestFlushHandler.  There is a nicer way to detect when flushes finish now for other tests.&lt;/li&gt;
	&lt;li&gt;Handling of FS errors is pushed into FlushHandler now.  The changes happening with the master rewrite introduce a ServerStatus interface (probably a RegionStatus for rs side) that will contain the necessary methods rather than using HRegionServer directly as is required for now.&lt;/li&gt;
	&lt;li&gt;Something weird not passing in tests with multiple masters and regionservers, still working that out.&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2832&quot; title=&quot;Priorities and multi-threading for MemStore flushing&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2832&quot;&gt;&lt;del&gt;HBASE-2832&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;http://issues.apache.org/jira/browse/HBASE-2832&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/browse/HBASE-2832&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs (updated)&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  trunk/src/main/java/org/apache/hadoop/hbase/executor/HBaseEventHandler.java 963507 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/executor/HBaseExecutorService.java 963507 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/master/HMaster.java 963507 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/regionserver/CompactSplitThread.java 963507 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java 963507 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/regionserver/MemStoreFlusher.java 963507 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/regionserver/handler/FlushHandler.java PRE-CREATION &lt;br/&gt;
  trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestFlushHandler.java PRE-CREATION &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;http://review.hbase.org/r/301/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/301/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Adds TestFlushHandler which passes.  Working on getting unit tests passing now, something related to the ExecutorService.&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Jonathan&lt;/p&gt;

</comment>
                            <comment id="12887654" author="hbasereviewboard" created="Tue, 13 Jul 2010 05:06:18 +0000"  >&lt;p&gt;Message from: stack@duboce.net&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.hbase.org/r/301/#review377&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/301/#review377&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;I like what this adds but I&apos;m not mad about the foundation its built upon.  The EventType stuff seems off to me.&lt;/p&gt;


&lt;p&gt;trunk/src/main/java/org/apache/hadoop/hbase/executor/HBaseEventHandler.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.hbase.org/r/301/#comment1572&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/301/#comment1572&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    You couldn&apos;t call it EventHandler in the end?&lt;/p&gt;



&lt;p&gt;trunk/src/main/java/org/apache/hadoop/hbase/executor/HBaseEventHandler.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.hbase.org/r/301/#comment1573&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/301/#comment1573&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Does the base class have to know of all subclasses?&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;http://download.oracle.com/docs/cd/E17409_01/javase/6/docs/api/java/beans/EventHandler.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://download.oracle.com/docs/cd/E17409_01/javase/6/docs/api/java/beans/EventHandler.html&lt;/a&gt; and &lt;a href=&quot;http://download.oracle.com/docs/cd/E17409_01/javase/6/docs/api/java/util/EventObject.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://download.oracle.com/docs/cd/E17409_01/javase/6/docs/api/java/util/EventObject.html&lt;/a&gt; are not of use here?&lt;/p&gt;



&lt;p&gt;trunk/src/main/java/org/apache/hadoop/hbase/executor/HBaseEventHandler.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.hbase.org/r/301/#comment1574&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/301/#comment1574&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    oh, ok... ignore above comment then.&lt;/p&gt;



&lt;p&gt;trunk/src/main/java/org/apache/hadoop/hbase/executor/HBaseEventHandler.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.hbase.org/r/301/#comment1575&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/301/#comment1575&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    A Comparable Runnable?  Thats kinda odd?  Runnable is a faceless Interface.. has nothing but a run in it... how could it be comparable?  Should be Comparable&amp;lt;HBaseEventHandler&amp;gt;?&lt;/p&gt;



&lt;p&gt;trunk/src/main/java/org/apache/hadoop/hbase/executor/HBaseEventHandler.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.hbase.org/r/301/#comment1577&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/301/#comment1577&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Why only this one handled in here?  All others in subclass?&lt;/p&gt;



&lt;p&gt;trunk/src/main/java/org/apache/hadoop/hbase/executor/HBaseEventHandler.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.hbase.org/r/301/#comment1578&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/301/#comment1578&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Can you not use enums here?  RS_FLUSH_REGION.value rather than 64?  (where value is datamember of the enum?)&lt;/p&gt;



&lt;p&gt;trunk/src/main/java/org/apache/hadoop/hbase/executor/HBaseEventHandler.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.hbase.org/r/301/#comment1579&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/301/#comment1579&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Make it final then?  Maybe you can&apos;t because its from Comparable.. but maybe you can.&lt;/p&gt;



&lt;p&gt;trunk/src/main/java/org/apache/hadoop/hbase/executor/HBaseExecutorService.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.hbase.org/r/301/#comment1580&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/301/#comment1580&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    As above, this passed in int should be settting a data member (whats it setting otherwise, the enum index?)&lt;/p&gt;



&lt;p&gt;trunk/src/main/java/org/apache/hadoop/hbase/executor/HBaseExecutorService.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.hbase.org/r/301/#comment1581&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/301/#comment1581&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whats this wait for 60 seconds about?  Hoping for an interrupt?  Why hardcoded?&lt;/p&gt;



&lt;p&gt;trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.hbase.org/r/301/#comment1583&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/301/#comment1583&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Why ain&apos;t this FlushEventType.startExecutorService?  There are no master flushes so why this RS stuff in here?&lt;/p&gt;



&lt;p&gt;trunk/src/main/java/org/apache/hadoop/hbase/regionserver/MemStoreFlusher.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.hbase.org/r/301/#comment1584&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/301/#comment1584&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whats up?  We just let the DroppedSnapshotException out now?  Or do we not throw them anymore?&lt;/p&gt;



&lt;p&gt;trunk/src/main/java/org/apache/hadoop/hbase/regionserver/MemStoreFlusher.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.hbase.org/r/301/#comment1587&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/301/#comment1587&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Why would a FlushHandler take anything but a FlushRegionEventType enum?  Why even pass it in?&lt;/p&gt;



&lt;p&gt;trunk/src/main/java/org/apache/hadoop/hbase/regionserver/handler/FlushHandler.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.hbase.org/r/301/#comment1590&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/301/#comment1590&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Your nice formatting here will not come out in javadoc.&lt;/p&gt;



&lt;p&gt;trunk/src/main/java/org/apache/hadoop/hbase/regionserver/handler/FlushHandler.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.hbase.org/r/301/#comment1592&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/301/#comment1592&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Excellent class doc.  Needs to make its way out to the hbase &apos;book&apos;.&lt;/p&gt;



&lt;p&gt;trunk/src/main/java/org/apache/hadoop/hbase/regionserver/handler/FlushHandler.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.hbase.org/r/301/#comment1593&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/301/#comment1593&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Can these be final?&lt;/p&gt;



&lt;p&gt;trunk/src/main/java/org/apache/hadoop/hbase/regionserver/handler/FlushHandler.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.hbase.org/r/301/#comment1595&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/301/#comment1595&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Yeah, why does eventType have to be passed?  Once in here, you know what to pass?&lt;/p&gt;



&lt;p&gt;trunk/src/main/java/org/apache/hadoop/hbase/regionserver/handler/FlushHandler.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.hbase.org/r/301/#comment1597&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/301/#comment1597&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    If 1, 2, 3, you don&apos;t need to specify?  Just use enum ordinal?&lt;/p&gt;



&lt;p&gt;trunk/src/main/java/org/apache/hadoop/hbase/regionserver/handler/FlushHandler.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.hbase.org/r/301/#comment1599&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/301/#comment1599&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Low and high priority do same thing?&lt;/p&gt;



&lt;p&gt;trunk/src/main/java/org/apache/hadoop/hbase/regionserver/handler/FlushHandler.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.hbase.org/r/301/#comment1600&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/301/#comment1600&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    OK, you moved it here... thats good.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;stack&lt;/li&gt;
&lt;/ul&gt;



</comment>
                            <comment id="12887661" author="hbasereviewboard" created="Tue, 13 Jul 2010 05:45:26 +0000"  >&lt;p&gt;Message from: &quot;Jonathan Gray&quot; &amp;lt;jgray@apache.org&amp;gt;&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-07-12 21:55:02, stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; I like what this adds but I&apos;m not mad about the foundation its built upon.  The EventType stuff seems off to me.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Thanks for good review stack.&lt;/p&gt;

&lt;p&gt;Let&apos;s get this event stuff right because it&apos;s a huge part of the master changes.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-07-12 21:55:02, stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; trunk/src/main/java/org/apache/hadoop/hbase/executor/HBaseEventHandler.java, line 20&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.hbase.org/r/301/diff/2/?file=2551#file2551line20&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/301/diff/2/?file=2551#file2551line20&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     You couldn&apos;t call it EventHandler in the end?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yup, we can.  Will be EventType/EventHandler with master changes.  Requires the rest of the ZK cleanup to do the full changeover.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-07-12 21:55:02, stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; trunk/src/main/java/org/apache/hadoop/hbase/executor/HBaseEventHandler.java, line 41&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.hbase.org/r/301/diff/2/?file=2551#file2551line41&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/301/diff/2/?file=2551#file2551line41&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Does the base class have to know of all subclasses?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &lt;a href=&quot;http://download.oracle.com/docs/cd/E17409_01/javase/6/docs/api/java/beans/EventHandler.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://download.oracle.com/docs/cd/E17409_01/javase/6/docs/api/java/beans/EventHandler.html&lt;/a&gt; and &lt;a href=&quot;http://download.oracle.com/docs/cd/E17409_01/javase/6/docs/api/java/util/EventObject.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://download.oracle.com/docs/cd/E17409_01/javase/6/docs/api/java/util/EventObject.html&lt;/a&gt; are not of use here?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Not sure what you&apos;re saying with java beans classes?  You want to reuse those?  These are quite specialized.&lt;/p&gt;

&lt;p&gt;We went over this stuff a few times when we did that big group review of that first master zk patch.&lt;/p&gt;

&lt;p&gt;Basically what we ended up doing was trying to keep the places things are tied together (handlers, executors, types) in enums and in as few places as possible.  You add new executor service types in the ExecutorService class, but otherwise all the declaring/connecting of these things is done within HBaseEventHandler.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-07-12 21:55:02, stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; trunk/src/main/java/org/apache/hadoop/hbase/executor/HBaseEventHandler.java, line 52&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.hbase.org/r/301/diff/2/?file=2551#file2551line52&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/301/diff/2/?file=2551#file2551line52&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     A Comparable Runnable?  Thats kinda odd?  Runnable is a faceless Interface.. has nothing but a run in it... how could it be comparable?  Should be Comparable&amp;lt;HBaseEventHandler&amp;gt;?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I tried a few different approaches to have prioritized stuff.&lt;/p&gt;

&lt;p&gt;The underlying data structure expected by the java executor services are BlockingQueue&amp;lt;Runnable&amp;gt;.  It&apos;s trivial then to make the actual queue a PriorityBlockingQueue&amp;lt;Runnable&amp;gt; which then just requires whatever you put in there to implement Comparable&amp;lt;Runnable&amp;gt;.  In the compareTo we know that we will only be compared to other HBaseEventHandlers, so we can cast and do priority/FIFO comparisons.&lt;/p&gt;

&lt;p&gt;I&apos;m pretty open to other approaches (I did Comparable&amp;lt;HBaseEventHandler&amp;gt; in one attempt already) but this turned out to be the cleanest.  Now the handlers need only override a single getPriority() method rather than also be comparables themselves.&lt;/p&gt;

&lt;p&gt;Being a Comparable&amp;lt;HBEventHandler&amp;gt; means we&apos;ll have to not use a java executor service directly, or have two separate queues.  It always starts to get a bit awkward which is why I ended up this way.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-07-12 21:55:02, stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; trunk/src/main/java/org/apache/hadoop/hbase/executor/HBaseEventHandler.java, line 151&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.hbase.org/r/301/diff/2/?file=2551#file2551line151&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/301/diff/2/?file=2551#file2551line151&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Why only this one handled in here?  All others in subclass?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;hmm, not so?  this is only RS event right now.  method immediately above it, getMasterExecutorForEvent(), is the same style and is already committed doing master open/close handlers.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-07-12 21:55:02, stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; trunk/src/main/java/org/apache/hadoop/hbase/executor/HBaseEventHandler.java, line 198&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.hbase.org/r/301/diff/2/?file=2551#file2551line198&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/301/diff/2/?file=2551#file2551line198&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Can you not use enums here?  RS_FLUSH_REGION.value rather than 64?  (where value is datamember of the enum?)&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;case statements must use constants.  i could switch to else if?&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-07-12 21:55:02, stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; trunk/src/main/java/org/apache/hadoop/hbase/executor/HBaseExecutorService.java, line 78&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.hbase.org/r/301/diff/2/?file=2552#file2552line78&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/301/diff/2/?file=2552#file2552line78&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     As above, this passed in int should be settting a data member (whats it setting otherwise, the enum index?)&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;i&apos;m not totally clear on this int stuff with the enums.  on the event types, we actually persist them, so I understand wanting the byte/int value.  not sure here, we can just take it out?  there is intValue/value in there.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-07-12 21:55:02, stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; trunk/src/main/java/org/apache/hadoop/hbase/executor/HBaseExecutorService.java, line 157&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.hbase.org/r/301/diff/2/?file=2552#file2552line157&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/301/diff/2/?file=2552#file2552line157&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Whats this wait for 60 seconds about?  Hoping for an interrupt?  Why hardcoded?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Need to figure out what to do here.  Wait indefinitely?&lt;/p&gt;

&lt;p&gt;Basically, we shutdown the executor services gracefully at first (we let running and submitted tasks finish).  Then we&apos;ll wait for a certain period of time before interrupting the threads running.&lt;/p&gt;

&lt;p&gt;I felt like it was weird to wait indefinitely but this was the behavior previously.  I guess I should set to 0?&lt;/p&gt;

&lt;p&gt;(For example, MemStoreFlusher has a lock that prevents interruption while a flush is running, so it&apos;s equivalent to a graceful shutdown)&lt;/p&gt;

&lt;p&gt;I suppose there is a difference here which is this also includes items waiting in the queue.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-07-12 21:55:02, stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java, line 1032&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.hbase.org/r/301/diff/2/?file=2555#file2555line1032&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/301/diff/2/?file=2555#file2555line1032&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Why ain&apos;t this FlushEventType.startExecutorService?  There are no master flushes so why this RS stuff in here?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;There is separation between what runs on master side and what runs on RS side.  Different mapings.&lt;/p&gt;

&lt;p&gt;This may not even be necessary anymore, there was some reason for the separation, need to ask Karthik on this.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-07-12 21:55:02, stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; trunk/src/main/java/org/apache/hadoop/hbase/regionserver/MemStoreFlusher.java, line 270&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.hbase.org/r/301/diff/2/?file=2556#file2556line270&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/301/diff/2/?file=2556#file2556line270&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Whats up?  We just let the DroppedSnapshotException out now?  Or do we not throw them anymore?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;As per description, handling of this moved to FlushHandler.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-07-12 21:55:02, stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; trunk/src/main/java/org/apache/hadoop/hbase/regionserver/MemStoreFlusher.java, line 339&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.hbase.org/r/301/diff/2/?file=2556#file2556line339&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/301/diff/2/?file=2556#file2556line339&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Why would a FlushHandler take anything but a FlushRegionEventType enum?  Why even pass it in?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;It&apos;s not necessary for this one.  Some of the other events take multiple event types (for example, we share a handler for opening/opened events).&lt;/p&gt;

&lt;p&gt;Will clean that up.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-07-12 21:55:02, stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; trunk/src/main/java/org/apache/hadoop/hbase/regionserver/handler/FlushHandler.java, line 76&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.hbase.org/r/301/diff/2/?file=2557#file2557line76&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/301/diff/2/?file=2557#file2557line76&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Your nice formatting here will not come out in javadoc.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;throwing &amp;lt;pre&amp;gt; tags around it enough?&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-07-12 21:55:02, stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; trunk/src/main/java/org/apache/hadoop/hbase/regionserver/handler/FlushHandler.java, line 127&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.hbase.org/r/301/diff/2/?file=2557#file2557line127&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/301/diff/2/?file=2557#file2557line127&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Can these be final?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;done&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-07-12 21:55:02, stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; trunk/src/main/java/org/apache/hadoop/hbase/regionserver/handler/FlushHandler.java, line 148&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.hbase.org/r/301/diff/2/?file=2557#file2557line148&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/301/diff/2/?file=2557#file2557line148&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Yeah, why does eventType have to be passed?  Once in here, you know what to pass?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;done&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-07-12 21:55:02, stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; trunk/src/main/java/org/apache/hadoop/hbase/regionserver/handler/FlushHandler.java, line 178&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.hbase.org/r/301/diff/2/?file=2557#file2557line178&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/301/diff/2/?file=2557#file2557line178&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     If 1, 2, 3, you don&apos;t need to specify?  Just use enum ordinal?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;yeah it does.  seemed clearer to have the ints here i think.  i have gone back and forth several times and whether to have these ints in the enums or not, i&apos;m not sure why i ended up with all of them having it.&lt;/p&gt;

&lt;p&gt;so you think it&apos;s better i completely remove the ints?  what about in EventHandler where we persist it sometimes?&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-07-12 21:55:02, stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; trunk/src/main/java/org/apache/hadoop/hbase/regionserver/handler/FlushHandler.java, line 220&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.hbase.org/r/301/diff/2/?file=2557#file2557line220&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/301/diff/2/?file=2557#file2557line220&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Low and high priority do same thing?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;yup.  i had/have bigger plans to get rid of MemStoreFlusher so that FlushHandler actually does the checks and stuff.  For now it&apos;s still in the MemStoreFlusher thread and just the flushing is multi-threaded in here.&lt;/p&gt;

&lt;p&gt;until that happens, same thing, that&apos;s why they call the same method, just a different log message.&lt;/p&gt;

&lt;p&gt;so they do the same flush but they carry a different priority so will be executed in priority order.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Jonathan&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.hbase.org/r/301/#review377&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/301/#review377&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


</comment>
                            <comment id="12887663" author="hbasereviewboard" created="Tue, 13 Jul 2010 05:47:30 +0000"  >&lt;p&gt;Message from: &quot;Jonathan Gray&quot; &amp;lt;jgray@apache.org&amp;gt;&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.hbase.org/r/301/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/301/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;(Updated 2010-07-12 22:43:42.753269)&lt;/p&gt;


&lt;p&gt;Review request for hbase, stack, Karthik Ranganathan, and Kannan Muthukkaruppan.&lt;/p&gt;


&lt;p&gt;Changes&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Incorporates changes I acknowledged from stack review.&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Adds support for priorities and concurrency to regionserver flushing.&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Adds support for RS-side events/handlers/executors&lt;/li&gt;
	&lt;li&gt;Adds support for prioritized HBaseEventHandlers&lt;/li&gt;
	&lt;li&gt;Flushing now happens through FlushHandler, a new HBaseEventHandler.  There is an RS_FLUSHER executor pool that defaults to two threads right now but is also checking a conf value.  There is a good bit of documentation in FlushHandler.&lt;/li&gt;
	&lt;li&gt;Adds unit test TestFlushHandler.  There is a nicer way to detect when flushes finish now for other tests.&lt;/li&gt;
	&lt;li&gt;Handling of FS errors is pushed into FlushHandler now.  The changes happening with the master rewrite introduce a ServerStatus interface (probably a RegionStatus for rs side) that will contain the necessary methods rather than using HRegionServer directly as is required for now.&lt;/li&gt;
	&lt;li&gt;Something weird not passing in tests with multiple masters and regionservers, still working that out.&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2832&quot; title=&quot;Priorities and multi-threading for MemStore flushing&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2832&quot;&gt;&lt;del&gt;HBASE-2832&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;http://issues.apache.org/jira/browse/HBASE-2832&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/browse/HBASE-2832&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs (updated)&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  trunk/src/main/java/org/apache/hadoop/hbase/executor/HBaseEventHandler.java 963507 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/executor/HBaseExecutorService.java 963507 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/master/HMaster.java 963507 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/regionserver/CompactSplitThread.java 963507 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java 963507 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/regionserver/MemStoreFlusher.java 963507 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/regionserver/handler/FlushHandler.java PRE-CREATION &lt;br/&gt;
  trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestFlushHandler.java PRE-CREATION &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;http://review.hbase.org/r/301/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/301/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Adds TestFlushHandler which passes.  Working on getting unit tests passing now, something related to the ExecutorService.&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Jonathan&lt;/p&gt;

</comment>
                            <comment id="12887667" author="hbasereviewboard" created="Tue, 13 Jul 2010 05:50:58 +0000"  >&lt;p&gt;Message from: &quot;Jonathan Gray&quot; &amp;lt;jgray@apache.org&amp;gt;&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.hbase.org/r/301/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/301/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;(Updated 2010-07-12 22:44:39.027666)&lt;/p&gt;


&lt;p&gt;Review request for hbase, stack, Karthik Ranganathan, and Kannan Muthukkaruppan.&lt;/p&gt;


&lt;p&gt;Changes&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Unit tests are now passing.&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Adds support for priorities and concurrency to regionserver flushing.&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Adds support for RS-side events/handlers/executors&lt;/li&gt;
	&lt;li&gt;Adds support for prioritized HBaseEventHandlers&lt;/li&gt;
	&lt;li&gt;Flushing now happens through FlushHandler, a new HBaseEventHandler.  There is an RS_FLUSHER executor pool that defaults to two threads right now but is also checking a conf value.  There is a good bit of documentation in FlushHandler.&lt;/li&gt;
	&lt;li&gt;Adds unit test TestFlushHandler.  There is a nicer way to detect when flushes finish now for other tests.&lt;/li&gt;
	&lt;li&gt;Handling of FS errors is pushed into FlushHandler now.  The changes happening with the master rewrite introduce a ServerStatus interface (probably a RegionStatus for rs side) that will contain the necessary methods rather than using HRegionServer directly as is required for now.&lt;/li&gt;
	&lt;li&gt;Something weird not passing in tests with multiple masters and regionservers, still working that out.&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2832&quot; title=&quot;Priorities and multi-threading for MemStore flushing&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2832&quot;&gt;&lt;del&gt;HBASE-2832&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;http://issues.apache.org/jira/browse/HBASE-2832&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/browse/HBASE-2832&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  trunk/src/main/java/org/apache/hadoop/hbase/executor/HBaseEventHandler.java 963507 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/executor/HBaseExecutorService.java 963507 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/master/HMaster.java 963507 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/regionserver/CompactSplitThread.java 963507 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java 963507 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/regionserver/MemStoreFlusher.java 963507 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/regionserver/handler/FlushHandler.java PRE-CREATION &lt;br/&gt;
  trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestFlushHandler.java PRE-CREATION &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;http://review.hbase.org/r/301/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/301/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing (updated)&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Adds TestFlushHandler which passes.  Unit tests now passing.&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Jonathan&lt;/p&gt;

</comment>
                            <comment id="12887798" author="hbasereviewboard" created="Tue, 13 Jul 2010 15:18:13 +0000"  >&lt;p&gt;Message from: stack@duboce.net&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-07-12 21:55:02, stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; trunk/src/main/java/org/apache/hadoop/hbase/executor/HBaseEventHandler.java, line 20&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.hbase.org/r/301/diff/2/?file=2551#file2551line20&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/301/diff/2/?file=2551#file2551line20&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     You couldn&apos;t call it EventHandler in the end?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Jonathan Gray wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Yup, we can.  Will be EventType/EventHandler with master changes.  Requires the rest of the ZK cleanup to do the full changeover.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;ok&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-07-12 21:55:02, stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; trunk/src/main/java/org/apache/hadoop/hbase/executor/HBaseEventHandler.java, line 41&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.hbase.org/r/301/diff/2/?file=2551#file2551line41&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/301/diff/2/?file=2551#file2551line41&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Does the base class have to know of all subclasses?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &lt;a href=&quot;http://download.oracle.com/docs/cd/E17409_01/javase/6/docs/api/java/beans/EventHandler.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://download.oracle.com/docs/cd/E17409_01/javase/6/docs/api/java/beans/EventHandler.html&lt;/a&gt; and &lt;a href=&quot;http://download.oracle.com/docs/cd/E17409_01/javase/6/docs/api/java/util/EventObject.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://download.oracle.com/docs/cd/E17409_01/javase/6/docs/api/java/util/EventObject.html&lt;/a&gt; are not of use here?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Jonathan Gray wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Not sure what you&apos;re saying with java beans classes?  You want to reuse those?  These are quite specialized.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;We went over this stuff a few times when we did that big group review of that first master zk patch.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Basically what we ended up doing was trying to keep the places things are tied together (handlers, executors, types) in enums and in as few places as possible.  You add new executor service types in the ExecutorService class, but otherwise all the declaring/connecting of these things is done within HBaseEventHandler.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Regards the bean classes, they cannot be used here or there is nothing in them that can help here?&lt;/p&gt;

&lt;p&gt;Yeah, we went over this stuff in reviews and there were the same problems then.  I thought we&apos;d agreed to address them.  My review is just surfacing again what was issue then.&lt;/p&gt;

&lt;p&gt;I thought we&apos;d agreed to stuff like a handler per event type.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-07-12 21:55:02, stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; trunk/src/main/java/org/apache/hadoop/hbase/executor/HBaseEventHandler.java, line 52&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.hbase.org/r/301/diff/2/?file=2551#file2551line52&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/301/diff/2/?file=2551#file2551line52&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     A Comparable Runnable?  Thats kinda odd?  Runnable is a faceless Interface.. has nothing but a run in it... how could it be comparable?  Should be Comparable&amp;lt;HBaseEventHandler&amp;gt;?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Jonathan Gray wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;I tried a few different approaches to have prioritized stuff.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;The underlying data structure expected by the java executor services are BlockingQueue&amp;lt;Runnable&amp;gt;.  It&apos;s trivial then to make the actual queue a PriorityBlockingQueue&amp;lt;Runnable&amp;gt; which then just requires whatever you put in there to implement Comparable&amp;lt;Runnable&amp;gt;.  In the compareTo we know that we will only be compared to other HBaseEventHandlers, so we can cast and do priority/FIFO comparisons.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;I&apos;m pretty open to other approaches (I did Comparable&amp;lt;HBaseEventHandler&amp;gt; in one attempt already) but this turned out to be the cleanest.  Now the handlers need only override a single getPriority() method rather than also be comparables themselves.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Being a Comparable&amp;lt;HBEventHandler&amp;gt; means we&apos;ll have to not use a java executor service directly, or have two separate queues.  It always starts to get a bit awkward which is why I ended up this way.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Comparable&amp;lt;Runnable&amp;gt; punts completely on type checking.  It says less than nothing about whats going on.  We can&apos;t have an Interface that implements Comparable and Runnable and pass that?&lt;/p&gt;

&lt;p&gt;My sense is that the design is broke if we&apos;re doing weird stuff like this (I&apos;ve not dug in as you have &amp;#8211; just passing my sense).&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-07-12 21:55:02, stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; trunk/src/main/java/org/apache/hadoop/hbase/executor/HBaseEventHandler.java, line 151&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.hbase.org/r/301/diff/2/?file=2551#file2551line151&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/301/diff/2/?file=2551#file2551line151&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Why only this one handled in here?  All others in subclass?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Jonathan Gray wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;hmm, not so?  this is only RS event right now.  method immediately above it, getMasterExecutorForEvent(), is the same style and is already committed doing master open/close handlers.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;ok&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-07-12 21:55:02, stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; trunk/src/main/java/org/apache/hadoop/hbase/executor/HBaseEventHandler.java, line 198&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.hbase.org/r/301/diff/2/?file=2551#file2551line198&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/301/diff/2/?file=2551#file2551line198&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Can you not use enums here?  RS_FLUSH_REGION.value rather than 64?  (where value is datamember of the enum?)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Jonathan Gray wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;case statements must use constants.  i could switch to else if?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Can&apos;t you use enums in switch statements?&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-07-12 21:55:02, stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; trunk/src/main/java/org/apache/hadoop/hbase/executor/HBaseExecutorService.java, line 78&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.hbase.org/r/301/diff/2/?file=2552#file2552line78&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/301/diff/2/?file=2552#file2552line78&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     As above, this passed in int should be settting a data member (whats it setting otherwise, the enum index?)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Jonathan Gray wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;i&apos;m not totally clear on this int stuff with the enums.  on the event types, we actually persist them, so I understand wanting the byte/int value.  not sure here, we can just take it out?  there is intValue/value in there.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;It seems odd.  I can understand not wanting to use enum ordinals in case you want to insert events later but should be better way of doing this...&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-07-12 21:55:02, stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; trunk/src/main/java/org/apache/hadoop/hbase/executor/HBaseExecutorService.java, line 157&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.hbase.org/r/301/diff/2/?file=2552#file2552line157&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/301/diff/2/?file=2552#file2552line157&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Whats this wait for 60 seconds about?  Hoping for an interrupt?  Why hardcoded?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Jonathan Gray wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Need to figure out what to do here.  Wait indefinitely?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Basically, we shutdown the executor services gracefully at first (we let running and submitted tasks finish).  Then we&apos;ll wait for a certain period of time before interrupting the threads running.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;I felt like it was weird to wait indefinitely but this was the behavior previously.  I guess I should set to 0?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(For example, MemStoreFlusher has a lock that prevents interruption while a flush is running, so it&apos;s equivalent to a graceful shutdown)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;I suppose there is a difference here which is this also includes items waiting in the queue.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I ain&apos;t sure whats going on here exactly.  Just commenting that the 60 seconds is odd.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-07-12 21:55:02, stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java, line 1032&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.hbase.org/r/301/diff/2/?file=2555#file2555line1032&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/301/diff/2/?file=2555#file2555line1032&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Why ain&apos;t this FlushEventType.startExecutorService?  There are no master flushes so why this RS stuff in here?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Jonathan Gray wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;There is separation between what runs on master side and what runs on RS side.  Different mapings.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This may not even be necessary anymore, there was some reason for the separation, need to ask Karthik on this.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;ok&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-07-12 21:55:02, stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; trunk/src/main/java/org/apache/hadoop/hbase/regionserver/MemStoreFlusher.java, line 270&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.hbase.org/r/301/diff/2/?file=2556#file2556line270&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/301/diff/2/?file=2556#file2556line270&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Whats up?  We just let the DroppedSnapshotException out now?  Or do we not throw them anymore?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Jonathan Gray wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;As per description, handling of this moved to FlushHandler.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;ok&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-07-12 21:55:02, stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; trunk/src/main/java/org/apache/hadoop/hbase/regionserver/handler/FlushHandler.java, line 76&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.hbase.org/r/301/diff/2/?file=2557#file2557line76&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/301/diff/2/?file=2557#file2557line76&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Your nice formatting here will not come out in javadoc.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Jonathan Gray wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;throwing &amp;lt;pre&amp;gt; tags around it enough?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;yes&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-07-12 21:55:02, stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; trunk/src/main/java/org/apache/hadoop/hbase/regionserver/handler/FlushHandler.java, line 178&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.hbase.org/r/301/diff/2/?file=2557#file2557line178&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/301/diff/2/?file=2557#file2557line178&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     If 1, 2, 3, you don&apos;t need to specify?  Just use enum ordinal?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Jonathan Gray wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;yeah it does.  seemed clearer to have the ints here i think.  i have gone back and forth several times and whether to have these ints in the enums or not, i&apos;m not sure why i ended up with all of them having it.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;so you think it&apos;s better i completely remove the ints?  what about in EventHandler where we persist it sometimes?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;You can persist the ordinal... Thats fine.  There is even method in enum to give you enum if you only have ordinal.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-07-12 21:55:02, stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; trunk/src/main/java/org/apache/hadoop/hbase/regionserver/handler/FlushHandler.java, line 220&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.hbase.org/r/301/diff/2/?file=2557#file2557line220&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/301/diff/2/?file=2557#file2557line220&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Low and high priority do same thing?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Jonathan Gray wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;yup.  i had/have bigger plans to get rid of MemStoreFlusher so that FlushHandler actually does the checks and stuff.  For now it&apos;s still in the MemStoreFlusher thread and just the flushing is multi-threaded in here.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;until that happens, same thing, that&apos;s why they call the same method, just a different log message.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;so they do the same flush but they carry a different priority so will be executed in priority order.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;k. maybe more comment so others ain&apos;t baffled as I?&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;stack&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.hbase.org/r/301/#review377&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/301/#review377&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


</comment>
                            <comment id="12902194" author="jdcryans" created="Wed, 25 Aug 2010 00:20:46 +0000"  >&lt;p&gt;Is this currently integrated in the master branch? If not, then either we finish and close it or punt to 0.92.0 as we have enough patches in flight.&lt;/p&gt;</comment>
                            <comment id="12902241" author="streamy" created="Wed, 25 Aug 2010 01:03:59 +0000"  >&lt;p&gt;Priorities and multi-threading is added through EventHandlers/ExecutorService in the master branch.&lt;/p&gt;

&lt;p&gt;This jira and &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2375&quot; title=&quot;Revisit compaction configuration parameters&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2375&quot;&gt;&lt;del&gt;HBASE-2375&lt;/del&gt;&lt;/a&gt; (and &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2399&quot; title=&quot;Forced splits only act on the first family in a table&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2399&quot;&gt;&lt;del&gt;HBASE-2399&lt;/del&gt;&lt;/a&gt;) will hopefully be done for 0.90 but cannot be done until after the master is merged in.  This should not be a blocker but I hope to do it for 0.90.  Will punt in a few weeks if it doesn&apos;t look likely.&lt;/p&gt;</comment>
                            <comment id="12918176" author="streamy" created="Tue, 5 Oct 2010 20:56:12 +0000"  >&lt;p&gt;Punting to 0.92 for now.  The bigger compaction/flush improvements should happen in that version.&lt;/p&gt;</comment>
                            <comment id="12980377" author="nspiegelberg" created="Tue, 11 Jan 2011 22:19:54 +0000"  >&lt;p&gt;Not sure about the state of this JIRA (Review Board seems to be down).  I believe the current design is to have thread-pools for compactions and to have one thread dedicated to kick in when we hit the block storefiles limit.  One idea thrown around internally is having a dedicated compaction thread with a lowered &apos;hbase.hstore.compaction.max.size&apos; that will kick in earlier and only compact small files.  The idea is to keep the storefile count low for reads in the face of a couple long compactions (e.g. major compaction storm).&lt;/p&gt;</comment>
                            <comment id="12980393" author="tlipcon" created="Tue, 11 Jan 2011 22:38:47 +0000"  >&lt;p&gt;fyi you can access the review using review.cloudera.org instead of review.hbase.org as the hostname. I just asked Stack to update the DNS.&lt;/p&gt;</comment>
                            <comment id="13009430" author="streamy" created="Mon, 21 Mar 2011 22:03:39 +0000"  >&lt;p&gt;punting from 0.92.  still needs to be done but should not be tied to a version until work is being actively done&lt;/p&gt;</comment>
                            <comment id="13632323" author="jdcryans" created="Mon, 15 Apr 2013 22:44:09 +0000"  >&lt;p&gt;Solved in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6466&quot; title=&quot;Enable multi-thread for memstore flush&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6466&quot;&gt;&lt;del&gt;HBASE-6466&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12465893">HBASE-2646</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12426953">HBASE-1476</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 13 Jul 2010 03:43:13 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>32794</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            3 years, 33 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0hjfj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>100410</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>