<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Thu Dec 01 21:32:50 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-16095/HBASE-16095.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-16095] Add priority to TableDescriptor and priority region open thread pool</title>
                <link>https://issues.apache.org/jira/browse/HBASE-16095</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;This is in the similar area with &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-15816&quot; title=&quot;Provide client with ability to set priority on Operations &quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-15816&quot;&gt;HBASE-15816&lt;/a&gt;, and also required with the current secondary indexing for Phoenix. &lt;/p&gt;

&lt;p&gt;The problem with P secondary indexes is that data table regions depend on index regions to be able to make progress. Possible distributed deadlocks can be prevented via custom RpcScheduler + RpcController configuration via &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11048&quot; title=&quot;Support setting custom priority per client RPC&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11048&quot;&gt;&lt;del&gt;HBASE-11048&lt;/del&gt;&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/browse/PHOENIX-938&quot; title=&quot;Use higher priority queue for index updates to prevent deadlock&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PHOENIX-938&quot;&gt;&lt;del&gt;PHOENIX-938&lt;/del&gt;&lt;/a&gt;. However, region opening also has the same deadlock situation, because data region open has to replay the WAL edits to the index regions. There is only 1 thread pool to open regions with 3 workers by default. So if the cluster is recovering / restarting from scratch, the deadlock happens because some index regions cannot be opened due to them being in the same queue waiting for data regions to open (which waits for  RPC&apos;ing to index regions which is not open). This is reproduced in almost all Phoenix secondary index clusters (mutable table w/o transactions) that we see. &lt;/p&gt;

&lt;p&gt;The proposal is to have a &quot;high priority&quot; region opening thread pool, and have the HTD carry the relative priority of a table. This maybe useful for other &quot;framework&quot; level tables from Phoenix, Tephra, Trafodian, etc if they want some specific tables to become online faster. &lt;/p&gt;

&lt;p&gt;As a follow up patch, we can also take a look at how this priority information can be used by the rpc scheduler on the server side or rpc controller on the client side, so that we do not have to set priorities manually per-operation. &lt;/p&gt;</description>
                <environment></environment>
        <key id="12982450">HBASE-16095</key>
            <summary>Add priority to TableDescriptor and priority region open thread pool</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="enis">Enis Soztutar</assignee>
                                    <reporter username="enis">Enis Soztutar</reporter>
                        <labels>
                    </labels>
                <created>Thu, 23 Jun 2016 20:28:49 +0000</created>
                <updated>Fri, 22 Jul 2016 02:16:08 +0000</updated>
                            <resolved>Thu, 14 Jul 2016 01:31:24 +0000</resolved>
                                                    <fixVersion>2.0.0</fixVersion>
                    <fixVersion>1.3.0</fixVersion>
                    <fixVersion>1.4.0</fixVersion>
                    <fixVersion>0.98.21</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>12</watches>
                                                                <comments>
                            <comment id="15347126" author="enis" created="Thu, 23 Jun 2016 20:33:32 +0000"  >&lt;p&gt;Here is a v0 patch which is pretty straightforward. Tests coming in v1. &lt;/p&gt;</comment>
                            <comment id="15347388" author="ghelmling" created="Thu, 23 Jun 2016 23:03:09 +0000"  >&lt;p&gt;Do the data regions really need to block opening before index regions are available?  At any given point in time, the indexing implementation needs to be able to deal with an index region being offline right?  Can&apos;t they just reject operations while the index region cannot be reached?  This seems like a brittle way to approach this.  In general, building dependency ordering into distributed systems has a bit of a code smell to it.  Better to make each part of a distributed system resilient to failure.  Is there another way to approach this from the phoenix side?&lt;/p&gt;</comment>
                            <comment id="15347538" author="enis" created="Fri, 24 Jun 2016 01:28:50 +0000"  >&lt;blockquote&gt;&lt;p&gt;Do the data regions really need to block opening before index regions are available?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Right now, the index consistency to make sure that all data is safely reflected in indexes relies on the WAL replay which happens in the region opening code. That is when the deadlock becomes a problem. &lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;This seems like a brittle way to approach this. In general, building dependency ordering into distributed systems has a bit of a code smell to it. Better to make each part of a distributed system resilient to failure. Is there another way to approach this from the phoenix side?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Completely agree. I think the current mutable secondary index implementation (without trx) is broken for Phoenix, not just because of deadlocks, but because of the fact that the handlers are occupied for doing the RPCs to the index regions. Due to the way HRegion MVCC works, no writes can complete until the longest running RPC completes (MVCC writes commit in serial order). I have a write up and an (upcoming) proposal to evaluate replication based secondary indexing. &lt;/p&gt;

&lt;p&gt;However, until we implement a better approach, we still have to fix the deadlock issue with the current implementation. I feel that the priority region opening might still be useful for other contexts as well (like opening framework level tables sooner), hence we should still pursue this.  &lt;/p&gt;</comment>
                            <comment id="15347551" author="enis" created="Fri, 24 Jun 2016 02:00:21 +0000"  >&lt;p&gt;Here is v1 with test. &lt;/p&gt;</comment>
                            <comment id="15363238" author="hadoopqa" created="Tue, 5 Jul 2016 20:59:29 +0000"  >&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/error.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; &lt;b&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;&lt;/b&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;&lt;br class=&quot;atl-forced-newline&quot; /&gt;
&lt;br class=&quot;atl-forced-newline&quot; /&gt;&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Vote &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Subsystem &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Runtime &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Comment &lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; hbaseanti &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 0s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; Patch does not have any anti-patterns. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; @author &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 0s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; The patch does not contain any @author tags. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; test4tests &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 0s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; The patch appears to include 2 new or modified test files. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt;0&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt; mvndep &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt; 0m 10s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt; Maven dependency ordering for branch &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; mvninstall &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 3m 19s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; master passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; compile &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 1m 20s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; master passed with JDK v1.8.0 &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; compile &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 55s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; master passed with JDK v1.7.0_80 &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; checkstyle &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 53s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; master passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; mvneclipse &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 27s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; master passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; findbugs &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 2m 55s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; master passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; javadoc &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 44s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; master passed with JDK v1.8.0 &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; javadoc &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 52s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; master passed with JDK v1.7.0_80 &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt;0&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt; mvndep &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt; 0m 9s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt; Maven dependency ordering for patch &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; mvninstall &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 1m 4s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; compile &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 57s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed with JDK v1.8.0 &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; javac &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 57s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; compile &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 54s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed with JDK v1.7.0_80 &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; javac &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 54s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; checkstyle &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 51s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; mvneclipse &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 28s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; whitespace &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 0s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; Patch has no whitespace issues. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; hadoopcheck &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 29m 27s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; Patch does not cause any errors with Hadoop 2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.1 2.6.2 2.6.3 2.7.1. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; findbugs &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 3m 39s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; javadoc &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 57s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed with JDK v1.8.0 &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; javadoc &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 55s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed with JDK v1.7.0_80 &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; unit &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 1m 4s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; hbase-client in the patch passed. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt;-1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; unit &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; 17m 23s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; hbase-server in the patch failed. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; asflicense &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 18s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; Patch does not generate ASF License warnings. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;black&quot;&gt;&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;black&quot;&gt; &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;black&quot;&gt; 70m 23s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;black&quot;&gt; &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;&lt;br class=&quot;atl-forced-newline&quot; /&gt;
&lt;br class=&quot;atl-forced-newline&quot; /&gt;&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Reason &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Tests &lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Failed junit tests &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; hadoop.hbase.TestCheckTestClasses &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;&lt;br class=&quot;atl-forced-newline&quot; /&gt;
&lt;br class=&quot;atl-forced-newline&quot; /&gt;&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Subsystem &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Report/Notes &lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; JIRA Patch URL &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://issues.apache.org/jira/secure/attachment/12812976/hbase-16095_v1.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/secure/attachment/12812976/hbase-16095_v1.patch&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; JIRA Issue &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-16095&quot; title=&quot;Add priority to TableDescriptor and priority region open thread pool&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-16095&quot;&gt;&lt;del&gt;HBASE-16095&lt;/del&gt;&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Optional Tests &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; uname &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Linux asf900.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Build tool &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; maven &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Personality &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; git revision &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; master / 2eef339 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Default Java &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; 1.7.0_80 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Multi-JDK versions &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  /home/jenkins/tools/java/jdk1.8.0:1.8.0 /home/jenkins/jenkins-slave/tools/hudson.model.JDK/JDK_1.7_latest_:1.7.0_80 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; findbugs &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; v3.0.0 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; unit &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2527/artifact/patchprocess/patch-unit-hbase-server.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2527/artifact/patchprocess/patch-unit-hbase-server.txt&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; unit test logs &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2527/artifact/patchprocess/patch-unit-hbase-server.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2527/artifact/patchprocess/patch-unit-hbase-server.txt&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  Test Results &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2527/testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2527/testReport/&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; modules &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; C: hbase-client hbase-server U: . &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Console output &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2527/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2527/console&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Powered by &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Apache Yetus 0.2.1   &lt;a href=&quot;http://yetus.apache.org&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://yetus.apache.org&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;



&lt;p&gt;This message was automatically generated.&lt;/p&gt;
</comment>
                            <comment id="15364875" author="enis" created="Wed, 6 Jul 2016 18:49:51 +0000"  >&lt;p&gt;v2 adds test category. &lt;/p&gt;</comment>
                            <comment id="15365145" author="hadoopqa" created="Wed, 6 Jul 2016 21:27:32 +0000"  >&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/error.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; &lt;b&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;&lt;/b&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;&lt;br class=&quot;atl-forced-newline&quot; /&gt;
&lt;br class=&quot;atl-forced-newline&quot; /&gt;&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Vote &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Subsystem &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Runtime &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Comment &lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; hbaseanti &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 0s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; Patch does not have any anti-patterns. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; @author &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 0s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; The patch does not contain any @author tags. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; test4tests &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 0s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; The patch appears to include 2 new or modified test files. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt;0&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt; mvndep &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt; 0m 23s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt; Maven dependency ordering for branch &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; mvninstall &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 3m 20s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; master passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; compile &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 1m 3s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; master passed with JDK v1.8.0 &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; compile &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 49s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; master passed with JDK v1.7.0_80 &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; checkstyle &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 51s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; master passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; mvneclipse &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 27s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; master passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; findbugs &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 2m 52s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; master passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; javadoc &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 56s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; master passed with JDK v1.8.0 &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; javadoc &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 54s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; master passed with JDK v1.7.0_80 &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt;0&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt; mvndep &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt; 0m 9s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt; Maven dependency ordering for patch &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; mvninstall &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 1m 9s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; compile &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 1m 4s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed with JDK v1.8.0 &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; javac &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 1m 4s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; compile &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 52s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed with JDK v1.7.0_80 &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; javac &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 52s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; checkstyle &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 52s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; mvneclipse &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 24s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; whitespace &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 0s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; Patch has no whitespace issues. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; hadoopcheck &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 27m 16s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; Patch does not cause any errors with Hadoop 2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.1 2.6.2 2.6.3 2.7.1. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; findbugs &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 3m 18s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; javadoc &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 51s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed with JDK v1.8.0 &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; javadoc &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 51s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed with JDK v1.7.0_80 &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; unit &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 56s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; hbase-client in the patch passed. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt;-1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; unit &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; 101m 0s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; hbase-server in the patch failed. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; asflicense &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 32s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; Patch does not generate ASF License warnings. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;black&quot;&gt;&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;black&quot;&gt; &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;black&quot;&gt; 151m 35s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;black&quot;&gt; &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;&lt;br class=&quot;atl-forced-newline&quot; /&gt;
&lt;br class=&quot;atl-forced-newline&quot; /&gt;&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Reason &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Tests &lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Failed junit tests &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; hadoop.hbase.snapshot.TestMobFlushSnapshotFromClient &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&amp;nbsp;&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; hadoop.hbase.replication.TestReplicationSmallTests &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&amp;nbsp;&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; hadoop.hbase.replication.TestMasterReplication &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;&lt;br class=&quot;atl-forced-newline&quot; /&gt;
&lt;br class=&quot;atl-forced-newline&quot; /&gt;&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Subsystem &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Report/Notes &lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; JIRA Patch URL &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://issues.apache.org/jira/secure/attachment/12816474/hbase-16095_v2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/secure/attachment/12816474/hbase-16095_v2.patch&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; JIRA Issue &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-16095&quot; title=&quot;Add priority to TableDescriptor and priority region open thread pool&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-16095&quot;&gt;&lt;del&gt;HBASE-16095&lt;/del&gt;&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Optional Tests &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; uname &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Linux asf904.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Build tool &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; maven &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Personality &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; git revision &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; master / c137baf &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Default Java &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; 1.7.0_80 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Multi-JDK versions &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  /home/jenkins/tools/java/jdk1.8.0:1.8.0 /home/jenkins/jenkins-slave/tools/hudson.model.JDK/JDK_1.7_latest_:1.7.0_80 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; findbugs &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; v3.0.0 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; unit &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2546/artifact/patchprocess/patch-unit-hbase-server.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2546/artifact/patchprocess/patch-unit-hbase-server.txt&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; unit test logs &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2546/artifact/patchprocess/patch-unit-hbase-server.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2546/artifact/patchprocess/patch-unit-hbase-server.txt&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  Test Results &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2546/testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2546/testReport/&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; modules &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; C: hbase-client hbase-server U: . &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Console output &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2546/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2546/console&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Powered by &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Apache Yetus 0.2.1   &lt;a href=&quot;http://yetus.apache.org&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://yetus.apache.org&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;



&lt;p&gt;This message was automatically generated.&lt;/p&gt;
</comment>
                            <comment id="15367135" author="enis" created="Fri, 8 Jul 2016 02:56:01 +0000"  >&lt;p&gt;I have run the failed tests locally. it passes except for &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-16185&quot; title=&quot;TestReplicationSmallTests fails in master branch&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-16185&quot;&gt;&lt;del&gt;HBASE-16185&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Any interest in reviewing this? &lt;/p&gt;</comment>
                            <comment id="15369222" author="apurtell" created="Sat, 9 Jul 2016 18:06:53 +0000"  >&lt;blockquote&gt;&lt;p&gt;I feel that the priority region opening might still be useful for other contexts as well (like opening framework level tables sooner), hence we should still pursue this.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This makes sense IMHO. &lt;br/&gt;
This is not per request priorities (&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-15816&quot; title=&quot;Provide client with ability to set priority on Operations &quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-15816&quot;&gt;HBASE-15816&lt;/a&gt;), and we may have an (orthogonal) use case for those someday, but it&apos;s also possible this change alone is useful enough to Phoenix: Assign index tables a higher priority than the primary table and that may solve their deadlock challenges. &lt;/p&gt;

&lt;p&gt;Not thrilled about the new event type but alternatives seem worse IMHO&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
M_RS_OPEN_PRIORITY_REGION          (26, ExecutorType.RS_OPEN_PRIORITY_REGION),
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We handle priority opens of META with its own pool, and will have another priority pool after this change. The two priority pools aren&apos;t aware of each other and may contend for the same resources. Offhand I don&apos;t have a thought on how to do better.&lt;/p&gt;

&lt;p&gt;In general we are approaching this in an ad hoc manner with static pools, predefined and limited QoS levels, and magic constants. Why not have a dynamic dispatch. Allocate a handler pool at every distinct priority level supplied by htd.getPriority(). Such pools could have only one core thread and a configurable upper bound on pool size, with the additional workers terminating after like one minute of inactivity. Use the same approach for dispatch to META: META handlers would become just a pool allocated at the highest priority level. The downside is more work at dispatch than simple test-and-branch with precompiled constants.  Just a thought.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
            &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (htd.getPriority() &amp;gt;= HConstants.ADMIN_QOS) {
	              regionServer.service.submit(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; OpenPriorityRegionHandler(
	                regionServer, regionServer, region, htd, masterSystemTime));
	            } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; {
	              regionServer.service.submit(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; OpenRegionHandler(
	                regionServer, regionServer, region, htd, masterSystemTime));
	            }
           }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="15372046" author="enis" created="Tue, 12 Jul 2016 01:44:50 +0000"  >&lt;blockquote&gt;&lt;p&gt;In general we are approaching this in an ad hoc manner with static pools, predefined and limited QoS levels, and magic constants.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Agreed, this is not the cleanest approach. I&apos;ve thought about doing an unlimited thread pool cache, but there is no out-of-the-box thread pool that does what we want in the executor service. We would like something like keep a thread pool cache with max size N, and have a unbounded linked queue to queue up events. &lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Use the same approach for dispatch to META: META handlers would become just a pool allocated at the highest priority level. The downside is more work at dispatch than simple test-and-branch with precompiled constants. Just a thought.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;This is similar, except for one-per-priority, there is three groups of fixed priority. &lt;/p&gt;</comment>
                            <comment id="15372079" author="apurtell" created="Tue, 12 Jul 2016 02:34:11 +0000"  >&lt;p&gt;Well, it&apos;s not really similar, there are three groups of fixed priority as you mention (smile), as opposed to, potentially, more. &lt;/p&gt;

&lt;p&gt;Let me clarify my &apos;This makes sense IMHO.&apos; above as a +1. The approach here follows current practice with an incremental change. I would like to see us move to a different approach but that is not the problem you want to solve and I won&apos;t insist on Y for X.&lt;/p&gt;</comment>
                            <comment id="15376147" author="enis" created="Thu, 14 Jul 2016 01:30:25 +0000"  >&lt;p&gt;Thanks Andrew for the clarification. I&apos;ve just committed this with a small change: &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+            &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (htd.getPriority() &amp;gt;= HConstants.ADMIN_QOS || region.getTable().isSystemTable()) {
+              regionServer.service.submit(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; OpenPriorityRegionHandler(
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;so that we use the priority handler pool for system tables that are not meta. &lt;/p&gt;</comment>
                            <comment id="15376175" author="apurtell" created="Thu, 14 Jul 2016 02:05:04 +0000"  >&lt;p&gt;Attaching what I am going to push to 0.98 after tests check out. New units pass. &lt;/p&gt;

&lt;p&gt;I brought back HConstants.ADMIN_QOS for functional parity with later branches when using this feature even though ADMIN_QOS isn&apos;t used elsewhere in 0.98. &lt;/p&gt;</comment>
                            <comment id="15376178" author="apurtell" created="Thu, 14 Jul 2016 02:08:02 +0000"  >&lt;p&gt;Here&apos;s another version of the 0.98 patch that keeps the value of HIGH_QOS the same and adds ADMIN_QOS as half of that, like we do on later branches. &lt;/p&gt;</comment>
                            <comment id="15376250" author="hudson" created="Thu, 14 Jul 2016 03:21:06 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-1.3-IT #755 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-1.3-IT/755/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-1.3-IT/755/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-16095&quot; title=&quot;Add priority to TableDescriptor and priority region open thread pool&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-16095&quot;&gt;&lt;del&gt;HBASE-16095&lt;/del&gt;&lt;/a&gt; Add priority to TableDescriptor and priority region open (enis: rev ab1e0dd440ee53e03d0ebfa8f0f0b27d585880a5)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/executor/ExecutorType.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/executor/EventType.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RSRpcServices.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/handler/OpenPriorityRegionHandler.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestRegionOpen.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/executor/ExecutorService.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/test/java/org/apache/hadoop/hbase/TestHTableDescriptor.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="15376384" author="hudson" created="Thu, 14 Jul 2016 06:12:23 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-1.4 #287 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-1.4/287/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-1.4/287/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-16095&quot; title=&quot;Add priority to TableDescriptor and priority region open thread pool&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-16095&quot;&gt;&lt;del&gt;HBASE-16095&lt;/del&gt;&lt;/a&gt; Add priority to TableDescriptor and priority region open (enis: rev 09c7b1e962e9c8dd2bd8749553a0c79c5518ae99)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RSRpcServices.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/executor/EventType.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestRegionOpen.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/executor/ExecutorType.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/test/java/org/apache/hadoop/hbase/TestHTableDescriptor.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/handler/OpenPriorityRegionHandler.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/executor/ExecutorService.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="15376440" author="hudson" created="Thu, 14 Jul 2016 06:54:12 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-1.3 #784 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-1.3/784/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-1.3/784/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-16095&quot; title=&quot;Add priority to TableDescriptor and priority region open thread pool&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-16095&quot;&gt;&lt;del&gt;HBASE-16095&lt;/del&gt;&lt;/a&gt; Add priority to TableDescriptor and priority region open (enis: rev ab1e0dd440ee53e03d0ebfa8f0f0b27d585880a5)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/handler/OpenPriorityRegionHandler.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RSRpcServices.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/test/java/org/apache/hadoop/hbase/TestHTableDescriptor.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/executor/EventType.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestRegionOpen.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/executor/ExecutorService.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/executor/ExecutorType.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="15376476" author="hudson" created="Thu, 14 Jul 2016 07:20:55 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-Trunk_matrix #1225 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-Trunk_matrix/1225/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-Trunk_matrix/1225/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-16095&quot; title=&quot;Add priority to TableDescriptor and priority region open thread pool&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-16095&quot;&gt;&lt;del&gt;HBASE-16095&lt;/del&gt;&lt;/a&gt; Add priority to TableDescriptor and priority region open (enis: rev a07892558b2edbec9b0da4c03426fe8ba8a14a8d)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/handler/OpenPriorityRegionHandler.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestRegionOpen.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/test/java/org/apache/hadoop/hbase/TestHTableDescriptor.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/executor/EventType.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/executor/ExecutorService.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RSRpcServices.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/executor/ExecutorType.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="15377321" author="hudson" created="Thu, 14 Jul 2016 17:22:48 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-0.98-on-Hadoop-1.1 #1242 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.98-on-Hadoop-1.1/1242/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.98-on-Hadoop-1.1/1242/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-16095&quot; title=&quot;Add priority to TableDescriptor and priority region open thread pool&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-16095&quot;&gt;&lt;del&gt;HBASE-16095&lt;/del&gt;&lt;/a&gt; Add priority to TableDescriptor and priority region open (apurtell: rev ebe603f05c3669bb0aad8897e2cad8ddb56eea60)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/executor/ExecutorService.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/HConstants.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/executor/EventType.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/executor/ExecutorType.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/handler/OpenPriorityRegionHandler.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestRegionOpen.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/TestHTableDescriptor.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="15377327" author="hudson" created="Thu, 14 Jul 2016 17:24:09 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-0.98-matrix #370 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.98-matrix/370/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.98-matrix/370/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-16095&quot; title=&quot;Add priority to TableDescriptor and priority region open thread pool&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-16095&quot;&gt;&lt;del&gt;HBASE-16095&lt;/del&gt;&lt;/a&gt; Add priority to TableDescriptor and priority region open (apurtell: rev ebe603f05c3669bb0aad8897e2cad8ddb56eea60)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/TestHTableDescriptor.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestRegionOpen.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/executor/EventType.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/HConstants.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/executor/ExecutorType.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/handler/OpenPriorityRegionHandler.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/executor/ExecutorService.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="15383653" author="stack" created="Tue, 19 Jul 2016 06:32:12 +0000"  >&lt;p&gt;This is another attempt at changing hbase to fix broken phoenix secondary indices. Do we have to do this? As per &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ghelmling&quot; class=&quot;user-hover&quot; rel=&quot;ghelmling&quot;&gt;Gary Helmling&lt;/a&gt; comment, can&apos;t we keep phoenix stuff up in phoenix? Secondary indices via transaction are almost here. Isn&apos;t that the proper fix rather than adding new pools to hbase (we don&apos;t need more pools), etc.&lt;/p&gt;

&lt;p&gt;Why we need this change if configuring below could address deadlock?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;....Possible distributed deadlocks can be prevented via custom RpcScheduler + RpcController configuration via &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11048&quot; title=&quot;Support setting custom priority per client RPC&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11048&quot;&gt;&lt;del&gt;HBASE-11048&lt;/del&gt;&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/browse/PHOENIX-938&quot; title=&quot;Use higher priority queue for index updates to prevent deadlock&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PHOENIX-938&quot;&gt;&lt;del&gt;PHOENIX-938&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Regards the below...&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;However, region opening also has the same deadlock situation, because data region open has to replay the WAL edits to the index regions.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This sort of dependence amongst regions &amp;#8211; i.e. the index has to be online before data region can come on line &amp;#8211; is not supported in hbase; what happens if server carrying index region crashes... and other scenarios, etc. Has it been worked through? If so, where can I read about it?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;This maybe useful for other &quot;framework&quot; level tables from Phoenix, Tephra, Trafodian, etc if they want some specific tables to become online faster.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;We have a mechanism for onlining important regions already that has loads of holes in it (meta, namespace, etc.). The new AMv2 will go a long ways toward plugging a bunch of them. In this issue we are proposing a new means of doing a similar thing but on an even shakier foundation.&lt;/p&gt;

&lt;p&gt;Seems dodgy &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=enis&quot; class=&quot;user-hover&quot; rel=&quot;enis&quot;&gt;Enis Soztutar&lt;/a&gt;, brittle as &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ghelmling&quot; class=&quot;user-hover&quot; rel=&quot;ghelmling&quot;&gt;Gary Helmling&lt;/a&gt; says. Phoenix users will have to ensure they configure all index tables as PRIORITY (making index tables &apos;high priority&apos; is a little unexpected)? For preexisting tables they&apos;ll have to go through and enable this everywhere? How you going to message that?&lt;/p&gt;
</comment>
                            <comment id="15384679" author="enis" created="Tue, 19 Jul 2016 18:58:59 +0000"  >&lt;p&gt;Thanks Stack for taking a look. &lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;can&apos;t we keep phoenix stuff up in phoenix? Secondary indices via transaction are almost here. Isn&apos;t that the proper fix rather than adding new pools to hbase (we don&apos;t need more pools), etc.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Unfortunately no. This happens in region open, so we need a mechanism to inject / configure region opening, nothing related to RPC scheduling. &lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Why we need this change if configuring below could address deadlock?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;That is deadlock on RPC&apos;s and regular index writes. This particular issue is about the writes happening to the index region when we are opening the data region. The secondary index recovery mechanism depends on the index region(s) being online. The writes are happening in a blocking manner, so we block the actual region opener thread. Since the same region opener threads are used to open both data and index regions deadlock happens. &lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;This sort of dependence amongst regions &#8211; i.e. the index has to be online before data region can come on line &#8211; is not supported in hbase; what happens if server carrying index region crashes... and other scenarios, etc. Has it been worked through? If so, where can I read about it?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I am not sure where you can read more. There were presentations online, but the implementation in P is some years old with some changes.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;We have a mechanism for onlining important regions already that has loads of holes in it (meta, namespace, etc.). The new AMv2 will go a long ways toward plugging a bunch of them. In this issue we are proposing a new means of doing a similar thing but on an even shakier foundation.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Not quite the same thing. AM / Master can prioritize the opening of regions, but we cannot control all the timing from a master perspective. We cannot time new tables being created while servers going down and WAL recovery happening, etc. So there will never be perfect-and-strict ordering that can be done from a master perspective if for example we want to ensure index table regions are assigned first before the data table regions from AM. AM can do a best effort job. On the other hand though, region servers do not need to order the incoming region open requests. If there is no dependency then, having a fixed thread pool to open regions works. If there is dependency, then it does not. &lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Seems dodgy Enis Soztutar, brittle as Gary Helmling says.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;See my comment at &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-16095?focusedCommentId=15347538&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15347538&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-16095?focusedCommentId=15347538&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15347538&lt;/a&gt;. Transactions is an optional concept in Phoenix, and it is still not GA. Even if it was, not all use cases need transactions. We should still support secondary indexes without transactions in Phoenix for some time. I agree that the mutable index architecture as is today should be redesigned to remove the inter-region dependency and blocking the handlers. Working on a proposal to do this using replication, but getting that fully working will take some time. Until then, we have real users and customers running with the current stuff that needs the fix. &lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Phoenix users will have to ensure they configure all index tables as PRIORITY (making index tables &apos;high priority&apos; is a little unexpected)? For preexisting tables they&apos;ll have to go through and enable this everywhere? &lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I should have linked the Phoenix issue. My b. &lt;a href=&quot;https://issues.apache.org/jira/browse/PHOENIX-3072&quot; title=&quot;Deadlock on region opening with secondary index recovery&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PHOENIX-3072&quot;&gt;&lt;del&gt;PHOENIX-3072&lt;/del&gt;&lt;/a&gt; is the fix in Phoenix that would automatically configure the priorities in Phoenix.&lt;/p&gt;

&lt;p&gt;BTW, I think that the priority definition in the table descriptor also serves another purpose. We can use that in RPC scheduling itself, so that should be useful in itself regardless of P. Moreover, I was thinking that although HBase &quot;does not support&quot; region interdependencies, we still have important tables with dependencies for most of the frameworks, like commit table in omid, catalog/stats table in Phoenix as well as hbase-level system tables that uses this.    &lt;/p&gt;</comment>
                            <comment id="15384755" author="ghelmling" created="Tue, 19 Jul 2016 19:56:59 +0000"  >&lt;blockquote&gt;&lt;p&gt;The secondary index recovery mechanism depends on the index region(s) being online. The writes are happening in a blocking manner, so we block the actual region opener thread. Since the same region opener threads are used to open both data and index regions deadlock happens.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Then the &quot;deadlock&quot; here is entirely due to Phoenix&apos;s handling, and I don&apos;t think it&apos;s something we should be trying to address with HBase.  We&apos;ve always said that doing blocking operations in coprocessor hooks is bad practice.  I don&apos;t think trying to paper over that for a specific use-case here really helps HBase.  Trying to impose ordering on operations in a distributed system just adds complexity and problems.&lt;/p&gt;

&lt;p&gt;I think the better way for Phoenix to approach this is to fail the region open for the data table if the required index region is not online yet.  Yes, this is a problem with current HBase, where regions that go into FAILED_OPEN are never retried by assignment manager.  If we fix this so that FAILED_OPEN regions just get retried later, you wind up with a convergent system where each region can open naturally when it&apos;s dependencies are online.  This will be much more robust than trying to do ordering for all possible cases, and makes HBase better for everyone.  We&apos;re doing some work towards this in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-16209&quot; title=&quot;Provide an ExponentialBackOffPolicy sleep between failed region open requests&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-16209&quot;&gt;HBASE-16209&lt;/a&gt;, would appreciate any thoughts over there.&lt;/p&gt;</comment>
                            <comment id="15385053" author="stack" created="Tue, 19 Jul 2016 23:20:23 +0000"  >&lt;p&gt;Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=enis&quot; class=&quot;user-hover&quot; rel=&quot;enis&quot;&gt;Enis Soztutar&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Transactions can&apos;t be optional in phoenix. They need them to do secondary indices.&lt;/p&gt;

&lt;p&gt;We already have priority region opening pool for meta (and closing). This is another tier? For user tables and/or system tables?&lt;/p&gt;

&lt;p&gt;I like the later @ghelmling &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-16209&quot; title=&quot;Provide an ExponentialBackOffPolicy sleep between failed region open requests&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-16209&quot;&gt;HBASE-16209&lt;/a&gt; suggestion. It&apos;d get you over your dilemma of having to support a flawed, deployed secondary index implementation. WDYT?&lt;/p&gt;</comment>
                            <comment id="15385076" author="enis" created="Tue, 19 Jul 2016 23:48:24 +0000"  >&lt;blockquote&gt;&lt;p&gt;Then the &quot;deadlock&quot; here is entirely due to Phoenix&apos;s handling, and I don&apos;t think it&apos;s something we should be trying to address with HBase. We&apos;ve always said that doing blocking operations in coprocessor hooks is bad practice. I don&apos;t think trying to paper over that for a specific use-case here really helps HBase. Trying to impose ordering on operations in a distributed system just adds complexity and problems.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Agreed. As I said above, we should fix that in Phoenix. However that would be a big work item. We will hopefully get to it sooner rather than later, but unless we untangle that we will have to deal with the problem. Only this week, some other client was doing a &quot;secondary index&quot; coprocessor to do update in &lt;tt&gt;postPut()&lt;/tt&gt; causing the exact same deadlock condition as in Phoenix.This has both the deadlock problem as well as the lack of handling failure conditions problem. I feel that we have ignored &quot;secondary index&quot; problem in HBase so far, but it is a real issue that we have to have at least a working guideline that would work for all hbase users (with or without phoenix). &lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;I think the better way for Phoenix to approach this is to fail the region open for the data table if the required index region is not online yet. Yes, this is a problem with current HBase, where regions that go into FAILED_OPEN are never retried by assignment manager.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yep, we have to make it so that FAILED_OPEN is retried forever. However, one complication with &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-16209&quot; title=&quot;Provide an ExponentialBackOffPolicy sleep between failed region open requests&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-16209&quot;&gt;HBASE-16209&lt;/a&gt; or similar solutions is that we do not know which index regions we will depend on unless we start the recover and compute all the index updates from the recovered WAL edits from the data table updates and find the regions that these updates belong to. Realistically, a single data table region will depend on almost ALL of the index regions to be available. That would mean mean that we will spend a lot of time starting recovery failing, starting again, failing again, etc. &lt;/p&gt;</comment>
                            <comment id="15385077" author="enis" created="Tue, 19 Jul 2016 23:49:24 +0000"  >&lt;blockquote&gt;&lt;p&gt;We already have priority region opening pool for meta (and closing). This is another tier? For user tables and/or system tables?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yes this tear is between meta and regular tables. HBase system table regions and all regions of tables marked with high priority uses this tier. &lt;/p&gt;</comment>
                            <comment id="15385397" author="stack" created="Wed, 20 Jul 2016 05:50:03 +0000"  >&lt;blockquote&gt;&lt;p&gt;However, one complication with &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-16209&quot; title=&quot;Provide an ExponentialBackOffPolicy sleep between failed region open requests&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-16209&quot;&gt;HBASE-16209&lt;/a&gt; or similar solutions is that we do not know which index regions we will depend on unless we start the recover and compute all the index updates from the recovered WAL edits from the data table updates and find the regions that these updates belong to. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;So it is worse than one region depending on another; rather, a whole table has to be up first.&lt;/p&gt;

&lt;p&gt;I&apos;d be ok w/ this in branch-1 as a hack to get over support burden imposed by a deployed dodgy secondary index implementation. I don&apos;t think we should commit to branch-2 though. That should be time enough to get off this misbehavior.&lt;/p&gt;

&lt;p&gt;On some user tables being able to be opened before others, won&apos;t this always be sloppy when regionserver-determined? One slow regionserver would for sure mess up any x-server expectation and put a nail in an index table being up before any data region tries to open.&lt;/p&gt;</comment>
                            <comment id="15386548" author="apurtell" created="Wed, 20 Jul 2016 20:19:56 +0000"  >&lt;blockquote&gt;&lt;p&gt;I&apos;d be ok w/ this in branch-1 as a hack to get over support burden imposed by a deployed dodgy secondary index implementation. I don&apos;t think we should commit to branch-2 though. That should be time enough to get off this misbehavior.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This is reasonable IMHO&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;On some user tables being able to be opened before others, won&apos;t this always be sloppy when regionserver-determined&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes&lt;/p&gt;</comment>
                            <comment id="15386715" author="stack" created="Wed, 20 Jul 2016 22:10:34 +0000"  >&lt;p&gt;Thinking on this more, I think the change itself innocuous as long as it clear that the table marking is a &apos;guidance&apos; only and not to be depended upon. If anything, it would be better if it were done more thoroughly with priority done on all admin functions. So, I think it fine going into 2.0.  Suggest a release note that this &apos;guidance&apos; only, that it can&apos;t be depended upon being honored given this a distributed system (see Gary comments).&lt;/p&gt;</comment>
                            <comment id="15388758" author="enis" created="Fri, 22 Jul 2016 02:11:28 +0000"  >&lt;p&gt;Allright thanks. Let me write up a release note. &lt;/p&gt;</comment>
                            <comment id="15388761" author="enis" created="Fri, 22 Jul 2016 02:16:08 +0000"  >&lt;p&gt;Updated the release notes. Let me know whether if it makes sense or not. &lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12967976">HBASE-15816</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12817866" name="HBASE-16095-0.98.patch" size="18293" author="apurtell" created="Thu, 14 Jul 2016 02:08:02 +0000"/>
                            <attachment id="12817865" name="HBASE-16095-0.98.patch" size="18346" author="apurtell" created="Thu, 14 Jul 2016 02:05:04 +0000"/>
                            <attachment id="12812915" name="hbase-16095_v0.patch" size="8721" author="enis" created="Thu, 23 Jun 2016 20:33:32 +0000"/>
                            <attachment id="12812976" name="hbase-16095_v1.patch" size="15434" author="enis" created="Fri, 24 Jun 2016 02:00:21 +0000"/>
                            <attachment id="12816474" name="hbase-16095_v2.patch" size="15708" author="enis" created="Wed, 6 Jul 2016 18:49:51 +0000"/>
                            <attachment id="12817860" name="hbase-16095_v3.patch" size="17042" author="enis" created="Thu, 14 Jul 2016 01:31:15 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>6.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 23 Jun 2016 23:03:09 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            18 weeks, 6 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2zzrz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Adds a PRIORITY property to the HTableDescriptor. PRIORITY should be in the same range as the RpcScheduler defines it (HConstants.XXX_QOS). &lt;br/&gt;
&lt;br/&gt;
Table priorities are only used for region opening for now. There can be other uses later (like RpcScheduling). &lt;br/&gt;
&lt;br/&gt;
Regions of high priority tables (priority &amp;gt;= than HIGH_QOS) are opened from a different thread pool than the regular region open thread pool. However, table priorities are not used as a global order for region assigning or opening. </customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>