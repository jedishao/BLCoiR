<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 02 20:01:49 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-910/HBASE-910.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-910] Scanner misses columns / rows when the scanner is obtained durring a memcache flush</title>
                <link>https://issues.apache.org/jira/browse/HBASE-910</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;I first noticed that some columns for a row were missing if they are coming from a scanner that was obtained while a memecache flush on the region was in progress. I tried to write a simple unit test to reproduce, however the problem I get in the unit test is that some rows are being missed.&lt;/p&gt;</description>
                <environment>&lt;p&gt;latest trunk&lt;/p&gt;</environment>
        <key id="12405584">HBASE-910</key>
            <summary>Scanner misses columns / rows when the scanner is obtained durring a memcache flush</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="1" iconUrl="https://issues.apache.org/jira/images/icons/priorities/blocker.png">Blocker</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="stack">stack</assignee>
                                    <reporter username="clint.morgan">Clint Morgan</reporter>
                        <labels>
                    </labels>
                <created>Wed, 1 Oct 2008 20:33:50 +0000</created>
                <updated>Sun, 13 Sep 2009 22:26:28 +0000</updated>
                            <resolved>Wed, 19 Nov 2008 06:49:14 +0000</resolved>
                                                    <fixVersion>0.19.0</fixVersion>
                                    <component>regionserver</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12636155" author="clint.morgan" created="Wed, 1 Oct 2008 20:35:40 +0000"  >&lt;p&gt;patch to provoke the issue. The relevant piece of the log is:&lt;/p&gt;

&lt;p&gt;2008-10-01 13:25:32,728 INFO org.apache.hadoop.hbase.TestScannerWhileMemcacheFlush: got scanner&lt;br/&gt;
2008-10-01 13:25:32,792 INFO org.apache.hadoop.hbase.TestScannerWhileMemcacheFlush: got scanner&lt;br/&gt;
2008-10-01 13:25:32,856 DEBUG org.apache.hadoop.hbase.regionserver.HRegion: Started memcache flush for region table,,1222892721305. Current region memcache size 25.3k&lt;br/&gt;
2008-10-01 13:25:32,857 INFO org.apache.hadoop.hbase.TestScannerWhileMemcacheFlush: got scanner&lt;br/&gt;
2008-10-01 13:25:32,995 DEBUG org.apache.hadoop.hbase.regionserver.HStore: Added /user/clint.morgan/table/215004990/family/mapfiles/2754371528337048417 with 1000 entries, sequence id 1012, data size 25.3k, file size 39.4k&lt;br/&gt;
2008-10-01 13:25:32,996 DEBUG org.apache.hadoop.hbase.regionserver.HRegion: Finished memcache flush for region table,,1222892721305 in 141ms, sequence id=1012, compaction requested=false&lt;br/&gt;
2008-10-01 13:25:32,997 WARN org.apache.hadoop.hbase.TestScannerWhileMemcacheFlush: Failing assert&lt;/p&gt;</comment>
                            <comment id="12640877" author="jimk" created="Sun, 19 Oct 2008 21:06:10 +0000"  >&lt;p&gt;When a cache flush starts, it uses the current state of the cache as a snapshot, and creates a new cache so that updates will not be blocked during the flush.&lt;/p&gt;

&lt;p&gt;A scanner can (and does) use that snapshot until the snapshot is fully written to disk. When the flush is complete the snapshot is deleted to reclaim memory. If the scanner had not yet reached the end of the snapshot before it is deleted, Some rows may be missed in the interval between the flush completes and the scanner is made aware of the new file that was just created.&lt;/p&gt;

&lt;p&gt;Closing this window would be very difficult for a couple of reasons:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;holding on to the snapshot until the scanner is done would increase memory pressure on the region server which could lead to the region server running out of memory&lt;/li&gt;
	&lt;li&gt;it is inherently difficult to close the window between cache flush completion and notification of the scanner as each is running in a different thread. Increasing synchronization would lead to an overall degredation in performance.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;It is my impression that Bigtable does not allow client reads to &quot;see&quot; concurrent updates as each row in the memtable is copy on write so that reads and writes proceed in parallel.&lt;/p&gt;

&lt;p&gt;In short, this is a very thorny issue, and HBase is much better in this respect than it was. Scanners used to get a view of the data as it was when the scanner was taken out which did not include data from flushes in progress and did not pick up new files created by cache flushes (at all) when the flush completed. Fixing this issue would require a significant amount of work.&lt;/p&gt;</comment>
                            <comment id="12640882" author="stack" created="Sun, 19 Oct 2008 23:14:48 +0000"  >&lt;p&gt;Good one Jim for digging in.&lt;/p&gt;

&lt;p&gt;Don&apos;t you think it critical that we fix the hole Jim?  That it become a blocker?  Otherwise, scanners get different view of the data dependent upon when they run?&lt;/p&gt;</comment>
                            <comment id="12640886" author="jimk" created="Sun, 19 Oct 2008 23:55:29 +0000"  >&lt;p&gt;Should the hole be fixed? Yes.&lt;/p&gt;

&lt;p&gt;Is it a blocker for 0.18.1? No I don&apos;t think so because this behavior has been around for quite some time, and fixing this problem will be time consuming and consequently hold up other critical fixes that are in 0.18.1 which people really need.&lt;/p&gt;

&lt;p&gt;I would make it a blocker for 0.19.0 and 0.18.2, though.&lt;/p&gt;</comment>
                            <comment id="12640890" author="stack" created="Mon, 20 Oct 2008 00:22:39 +0000"  >&lt;p&gt;Agreed Jim.... blocker for 0.19.0.&lt;/p&gt;

&lt;p&gt;Clint, you down with that?&lt;/p&gt;</comment>
                            <comment id="12640893" author="clint.morgan" created="Mon, 20 Oct 2008 00:42:17 +0000"  >&lt;p&gt;Yeah thats fine by me. Thanks for looking into this.&lt;/p&gt;</comment>
                            <comment id="12648707" author="stack" created="Tue, 18 Nov 2008 19:08:41 +0000"  >&lt;p&gt;Test no longer fails because depended on optional flush which has since been removed.  Trying to rereplicate.&lt;/p&gt;</comment>
                            <comment id="12648921" author="stack" created="Wed, 19 Nov 2008 06:48:01 +0000"  >&lt;p&gt;Adds test to replicate and the the fix.&lt;/p&gt;

&lt;p&gt;This turns out to be a case we&apos;ve handled elsewhere over in compactions.  When we finish a compaction and there are outstanding scanners, we slot the change in Store readers in under the running scanner.  Here, whats happening is that memcache contents are flushed and a new store file is created but outstanding scanners were set up with a memcache scanner only; when the new flush file is added, outstanding scanners are blind to its content &amp;#8211; but not to the fact that the memcache has been rotated out.&lt;/p&gt;

&lt;p&gt;I exploited the mechanism that worked for compaction adding in a store file scanner to outstanding scanner when new reader is added.&lt;/p&gt;</comment>
                            <comment id="12648922" author="stack" created="Wed, 19 Nov 2008 06:49:14 +0000"  >&lt;p&gt;Committed.&lt;/p&gt;</comment>
                            <comment id="12719833" author="stack" created="Mon, 15 Jun 2009 22:46:43 +0000"  >&lt;p&gt;Chatting more with Ryan, a simple fix to get around case where on a snapshot, scanners will miss what has been moved from memcache to snapshot would be the following:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
durruti:cleantrunk stack$ svn diff src
Index: src/java/org/apache/hadoop/hbase/regionserver/Memcache.java
===================================================================
--- src/java/org/apache/hadoop/hbase/regionserver/Memcache.java (revision 785009)
+++ src/java/org/apache/hadoop/hbase/regionserver/Memcache.java (working copy)
@@ -539,17 +539,14 @@
   }
 
   /**
-   * @&lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; scanner on memcache and snapshot in &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; order (&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; snapshot is
-   * empty, returns only memcache scanner).
+   * @&lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; scanner on memcache and snapshot in &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; order.
    */
   KeyValueScanner [] getScanners() {
     &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.lock.readLock().lock();
     &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
-      &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; noss = &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.snapshot == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; || &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.snapshot.isEmpty();
-      KeyValueScanner [] scanners =
-        &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; KeyValueScanner[noss? 1: 2];
+      KeyValueScanner [] scanners = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; KeyValueScanner[2];
       scanners[0] = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; MemcacheScanner(&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.memcache);
-      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (!noss) scanners[1] = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; MemcacheScanner(&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.snapshot);
+      scanners[1] = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; MemcacheScanner(&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.snapshot);
       &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; scanners;
     } &lt;span class=&quot;code-keyword&quot;&gt;finally&lt;/span&gt; {
       &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.lock.readLock().unlock();
durruti:cleantrunk stack$ svn up
At revision 785013.
durruti:cleantrunk stack$ svn diff src
Index: src/java/org/apache/hadoop/hbase/regionserver/Memcache.java
===================================================================
--- src/java/org/apache/hadoop/hbase/regionserver/Memcache.java (revision 785013)
+++ src/java/org/apache/hadoop/hbase/regionserver/Memcache.java (working copy)
@@ -539,17 +539,14 @@
   }
 
   /**
-   * @&lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; scanner on memcache and snapshot in &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; order (&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; snapshot is
-   * empty, returns only memcache scanner).
+   * @&lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; scanner on memcache and snapshot in &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; order.
    */
   KeyValueScanner [] getScanners() {
     &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.lock.readLock().lock();
     &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
-      &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; noss = &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.snapshot == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; || &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.snapshot.isEmpty();
-      KeyValueScanner [] scanners =
-        &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; KeyValueScanner[noss? 1: 2];
+      KeyValueScanner [] scanners = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; KeyValueScanner[2];
       scanners[0] = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; MemcacheScanner(&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.memcache);
-      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (!noss) scanners[1] = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; MemcacheScanner(&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.snapshot);
+      scanners[1] = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; MemcacheScanner(&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.snapshot);
       &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; scanners;
     } &lt;span class=&quot;code-keyword&quot;&gt;finally&lt;/span&gt; {
       &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.lock.readLock().unlock();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In above, we always have open scanner on memcache and snapshot.  Usual case is snapshot is empty so nothing comes from here but if a snapshot happened, scanner would start getting its answers here rather than from memcache.  Closes a hole.  Don&apos;t need to call updateReaders.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12394225" name="910-v2.patch" size="10815" author="stack" created="Wed, 19 Nov 2008 06:48:01 +0000"/>
                            <attachment id="12391308" name="hbase-910.patch" size="3678" author="clint.morgan" created="Wed, 1 Oct 2008 20:35:39 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sun, 19 Oct 2008 21:06:10 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>25471</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            7 years, 25 weeks, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0ha73:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>98914</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>