<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 02 20:43:46 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-1626/HBASE-1626.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-1626] Allow emitting Deletes out of new TableReducer</title>
                <link>https://issues.apache.org/jira/browse/HBASE-1626</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Do&#287;acan G&#252;ney (nutch) wants to emit Delete from TableReduce.  Currently we only do Put.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12429777">HBASE-1626</key>
            <summary>Allow emitting Deletes out of new TableReducer</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="larsgeorge">Lars George</assignee>
                                    <reporter username="stack">stack</reporter>
                        <labels>
                    </labels>
                <created>Wed, 8 Jul 2009 05:06:05 +0000</created>
                <updated>Wed, 2 Jun 2010 19:33:14 +0000</updated>
                            <resolved>Thu, 9 Jul 2009 04:09:37 +0000</resolved>
                                                    <fixVersion>0.20.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12728517" author="stack" created="Wed, 8 Jul 2009 05:37:40 +0000"  >&lt;p&gt;Do&#287;acan had interesting idea where hbase subclassed the new hadoop context.&lt;/p&gt;

&lt;p&gt;A lesser suggestion was to add a Marker interface to Delete and Put.&lt;/p&gt;

&lt;p&gt;Playing around with it, a Marker interface would be a bit messy.  It&apos;d have to be in the client package and be public.  It&apos;d have to be something like Update or UpdateMarker (yuck).  But maybe this is the way to go?&lt;/p&gt;

&lt;p&gt;Otherwise, make the hbase reducer generic so can pass anything &amp;#8211; e.g. a Delete or a Put &amp;#8211; and not specify types which might not be that bad.  Here&apos;s why.&lt;/p&gt;

&lt;p&gt;Looking at the TableOutputFormat, turns out the key is not used at all so no need to specify a Type; i.e. ImmutableByteWritable.  And for the value, we could leave it as Writable.  If not a Put or Delete, throw an IOE.  Means we lose some of power of generics.&lt;/p&gt;

&lt;p&gt;This is what the attached patch does.&lt;/p&gt;

&lt;p&gt;Lars, any chance you&apos;d take a look?  Do we even need a TableReducer if its all generic types?  I can see point of the TableMapper because value will be Result (Here too, Key is redundant...).  Is it wrong to specialize the TableOutputFormat?  Rather, leave it generic (though value must be a Delete or a Put)?&lt;/p&gt;</comment>
                            <comment id="12728518" author="stack" created="Wed, 8 Jul 2009 05:38:10 +0000"  >&lt;p&gt;Assigning lars so he&apos;ll take a look at this issue.&lt;/p&gt;</comment>
                            <comment id="12728544" author="dogacan" created="Wed, 8 Jul 2009 07:49:36 +0000"  >&lt;p&gt;I couldn&apos;t figure out how to put HTable in Context &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; so I added HTable as an extra argument to reduce. This way is probably way too confusing but may give you an idea of what I am talking about.&lt;/p&gt;</comment>
                            <comment id="12728695" author="larsgeorge" created="Wed, 8 Jul 2009 13:36:54 +0000"  >&lt;p&gt;Seems like there are two issues buried here, one is to be able to &quot;generalize&quot; the class that is handed into the reduce phase. The other is how to access a table. For the latter - correct me if I am wrong Do&#287;acan - you seem to have tackled the wrong end of the stick. Instead of extending TableReducer and make use of a table in the IdentityTableReducer you leave that as is and simply add a custom TableReducer that creates the the table in the &quot;setup()&quot; method, does the put&apos;s etc. in the &quot;reduce()&quot; call and closes/flushes in the &quot;cleanup()&quot; method.&lt;/p&gt;

&lt;p&gt;In other words you do not need to do anything but create a simple job that uses IdentityTableReducer together with TableOutputFormat - which takes care of the table.put(). As long as I do not miss anything else that is pretty much what you are doing. Use the TableMapReduceUtil class to set up the job and also the name of the table etc.&lt;/p&gt;

&lt;p&gt;The crucial part is abstracting the type of the class the reducer actually receives, so instead of assuming a Put it should be a Delete as well if possible. I think Stack has that down 100% in his patch. So his patch together with using the above classes you are fine. &lt;/p&gt;

&lt;p&gt;Question for Stack&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (value &lt;span class=&quot;code-keyword&quot;&gt;instanceof&lt;/span&gt; Put) &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.table.put(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Put((Put)value));
+      &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (value &lt;span class=&quot;code-keyword&quot;&gt;instanceof&lt;/span&gt; Delete) &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.table.delete(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Delete((Delete)value));
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;why doing that and not &lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (value &lt;span class=&quot;code-keyword&quot;&gt;instanceof&lt;/span&gt; Put) &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.table.put((Put) value);
+      &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (value &lt;span class=&quot;code-keyword&quot;&gt;instanceof&lt;/span&gt; Delete) &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.table.delete((Delete) value);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Just wondering if there is a reason to create a new object. Are the cached in the framework and the object reference causes them to be modified before written? They are already written to an intermediate during the map/reduce cross over so they are already copies. &lt;/p&gt;</comment>
                            <comment id="12728699" author="larsgeorge" created="Wed, 8 Jul 2009 13:53:13 +0000"  >&lt;p&gt;Oops looking at the IdentityTableReducer, I think the issue is it has the same bug I had in my own classes, i.e. missing the @Override on the &quot;reduce()&quot; and hence missing it is not used at all! Means that I think the reason for Do&#287;acan to extend the classes was that the expected results did not work. I&apos;ll attach a patch to fix in the existing mapreduce code, please apply that first before applying the generics patch.&lt;/p&gt;

&lt;p&gt;Also, while the key is not used, users could still extend our classes and make use of it, so not sure why touch it or not. If you leave TableReduce generic then there is really no need for it anymore. It could be left as this?&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;abstract&lt;/span&gt; class TableReducer&amp;lt;KEYIN, VALUEIN&amp;gt;
&lt;span class=&quot;code-keyword&quot;&gt;extends&lt;/span&gt; Reducer&amp;lt;KEYIN, VALUEIN, ImmutableBytesWritable, Writable&amp;gt; {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Then defining a reducer class &lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; class IdentityTableReducer 
&lt;span class=&quot;code-keyword&quot;&gt;extends&lt;/span&gt; TableReducer&amp;lt;ImmutableBytesWritable, Writable&amp;gt; {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You have still Put&apos;s in there, so I guess that should also be change to be Writables?&lt;/p&gt;</comment>
                            <comment id="12728701" author="larsgeorge" created="Wed, 8 Jul 2009 13:55:12 +0000"  >&lt;p&gt;reducer.patch fixes the usage of the old outdated reduce() call.&lt;/p&gt;</comment>
                            <comment id="12728707" author="larsgeorge" created="Wed, 8 Jul 2009 14:02:40 +0000"  >&lt;p&gt;Ah, I see &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-940&quot; title=&quot;Make the TableOutputFormat batching-aware&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-940&quot;&gt;&lt;del&gt;HBASE-940&lt;/del&gt;&lt;/a&gt; which added the cloning because of the BatchUpdate being reused. This was copied as is to Put/Delete. All I am asking is if this still valid or could be saved.&lt;/p&gt;</comment>
                            <comment id="12728715" author="larsgeorge" created="Wed, 8 Jul 2009 14:19:13 +0000"  >&lt;p&gt;Patch 1626.patch combines the fix to IdentityTableReduce and applies the changes Stack did to allow for Put&apos;s and Delete&apos;s to be passed to the TOF. I kept the key type as is but only changed the value. That way the change is less intrusive - it is to be discussed if that is what we want or not. We could still decide to do away with TableReducer - but the TableMapper would stay so the change would be introducing a slight imbalance.&lt;/p&gt;

&lt;p&gt;As far as not enforcing the value type but now use a generic Writable - well I think that is OK given an exception is thrown if someone really stuffs that up. While we do not have a base class for Put and Delete we have to go down this route.&lt;/p&gt;</comment>
                            <comment id="12728750" author="larsgeorge" created="Wed, 8 Jul 2009 15:37:38 +0000"  >&lt;p&gt;Patch 1626-v2.patch is the same as before but fixes a really outdated JavaDoc comment.&lt;/p&gt;</comment>
                            <comment id="12728802" author="larsgeorge" created="Wed, 8 Jul 2009 17:16:35 +0000"  >&lt;p&gt;Patch 1626-v3.patch adds different generics structure as discussed with Stack.&lt;/p&gt;</comment>
                            <comment id="12728803" author="larsgeorge" created="Wed, 8 Jul 2009 17:17:58 +0000"  >&lt;p&gt;Do&#287;acan please let me know if I (we) can help you get the MR job sorted out. &lt;/p&gt;</comment>
                            <comment id="12728809" author="stack" created="Wed, 8 Jul 2009 17:27:55 +0000"  >&lt;p&gt;Made the TableReducer Key Generic since we don&apos;t use it so don&apos;t care what it is.&lt;/p&gt;</comment>
                            <comment id="12728817" author="stack" created="Wed, 8 Jul 2009 17:44:35 +0000"  >&lt;p&gt;Add in the delete.  Got rid of a warning in eclipse about not specifying type.&lt;/p&gt;</comment>
                            <comment id="12728831" author="larsgeorge" created="Wed, 8 Jul 2009 18:05:49 +0000"  >&lt;p&gt;Patch 1626-v5.patch combines Stack details with proper ITR class, using solely Writable.&lt;/p&gt;</comment>
                            <comment id="12728842" author="streamy" created="Wed, 8 Jul 2009 18:32:21 +0000"  >&lt;p&gt;Can we add more documentation / class comments / etc?&lt;/p&gt;

&lt;p&gt;Our TableReduce now just takes a Writable but there&apos;s not really any documentation in the class about what the intent is / how it should be used.&lt;/p&gt;

&lt;p&gt;We ignore Key in both Map input and Reduce output?  If so, let&apos;s advertise that in javadocs all over the place.  Our comments are super generic but our usage/implementation is not generic.&lt;/p&gt;

&lt;p&gt;We just need to be explicit and verbose in the comments about how this should be used.&lt;/p&gt;

&lt;p&gt;For example:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;+   * Writes the reducer output to an HBase table.
+   * 
+   * @param &amp;lt;KEY&amp;gt;  The type of the key.
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This KEY is actually not used for anything, anywhere.  Why don&apos;t we say that?  Are there actually cases it could be used?&lt;/p&gt;

&lt;p&gt;And we don&apos;t make mention that the output Value is fixed as a Writable, and that this Writable must be either a Put or Delete.&lt;/p&gt;


&lt;p&gt;Comments aside, I think the patch is good.  Base class for Put/Delete would be more explicit, but easier to just use Writable with lots of javadoc.&lt;/p&gt;</comment>
                            <comment id="12728856" author="larsgeorge" created="Wed, 8 Jul 2009 19:14:39 +0000"  >&lt;p&gt;Patch 1626-v7.patch adds the missing Delete change (sorry, missed that earlier) and adds an empty TableOutputCommitter. Test are passing now:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&amp;gt;ant -Dtestcase=mapreduce/Test* compile-core-test test
...
test-core:
   [delete] Deleting directory C:\workspace\hbase-trunk\build\test\logs
    [mkdir] Created dir: C:\workspace\hbase-trunk\build\test\logs
    [junit] Running org.apache.hadoop.hbase.mapreduce.TestTableIndex
    [junit] Tests run: 1, Failures: 0, Errors: 0, Time elapsed: 66.765 sec
    [junit] Running org.apache.hadoop.hbase.mapreduce.TestTableMapReduce
    [junit] Tests run: 1, Failures: 0, Errors: 0, Time elapsed: 71.688 sec
    [junit] Running org.apache.hadoop.hbase.mapreduce.TestTimeRangeMapRed
    [junit] Tests run: 1, Failures: 0, Errors: 0, Time elapsed: 28.64 sec

test:

BUILD SUCCESSFUL
Total time: 2 minutes 57 seconds
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Also added comments to classes about what the class types should be as per Jon&apos;s comment - I assume though this is not everywhere where it could be added. Please suggest where else you would like to see it.&lt;/p&gt;</comment>
                            <comment id="12728870" author="stack" created="Wed, 8 Jul 2009 19:50:20 +0000"  >&lt;p&gt;TR imports Put and Delete though doesn&apos;t use them.&lt;/p&gt;

&lt;p&gt;Do you think we should cache the new TableOutputCommitter?  That seems to be what FOF does.  Synchronizes the method and hands out same each time (probably minor).&lt;/p&gt;

&lt;p&gt;Otherwise, +1 on patch, good stuff Lars.  I can fix above when I commit.  Lets see what Do&#287;acan says before commit.  Will assign it to him for comment.&lt;/p&gt;</comment>
                            <comment id="12728871" author="stack" created="Wed, 8 Jul 2009 19:50:44 +0000"  >&lt;p&gt;So Do&#287;acan will take a look&lt;/p&gt;</comment>
                            <comment id="12728872" author="larsgeorge" created="Wed, 8 Jul 2009 19:54:02 +0000"  >&lt;p&gt;Patch 1626-v8.patch adds better JavaDocs with basic examples. Jon, I did not add the comment that key is not used in ITR as that is decided in the TOF. &lt;/p&gt;</comment>
                            <comment id="12728873" author="larsgeorge" created="Wed, 8 Jul 2009 19:57:16 +0000"  >&lt;p&gt;Stack, I imported Put and Delete into TR so the JavaDoc warning would go away in Eclipse. I think this is for ambiguity and could be done also with a fully specified class reference. What do you prefer?&lt;/p&gt;</comment>
                            <comment id="12728874" author="larsgeorge" created="Wed, 8 Jul 2009 20:00:48 +0000"  >&lt;p&gt;I checked the above and if you put the fully specified class into the @link it works too, but then you also have to add a short name, like so&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
{@link org.apache.hadoop.hbase.client.Put Put}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="12728875" author="larsgeorge" created="Wed, 8 Jul 2009 20:04:23 +0000"  >&lt;p&gt;Patch 1626-v9.patch removes the not needed imports and adds fully specified paths to the Put and Delete links.&lt;/p&gt;</comment>
                            <comment id="12728899" author="larsgeorge" created="Wed, 8 Jul 2009 20:56:24 +0000"  >&lt;p&gt;Patch 1626-v10.patch adds an improved JavaDoc comment to ITR as per Jon.&lt;/p&gt;</comment>
                            <comment id="12728918" author="dogacan" created="Wed, 8 Jul 2009 21:48:24 +0000"  >&lt;p&gt;Sorry guys, I was out all day.&lt;/p&gt;

&lt;p&gt;Last patch looks great!&lt;/p&gt;

&lt;p&gt;+1 from me.&lt;/p&gt;</comment>
                            <comment id="12729042" author="stack" created="Thu, 9 Jul 2009 04:08:40 +0000"  >&lt;p&gt;Assigning back to Lars, the man that did the work.&lt;/p&gt;</comment>
                            <comment id="12729043" author="stack" created="Thu, 9 Jul 2009 04:09:37 +0000"  >&lt;p&gt;Committed.  Thanks for the patch Lars.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12465912">HBASE-2648</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12412912" name="1626-v10.patch" size="12644" author="larsgeorge" created="Wed, 8 Jul 2009 20:56:24 +0000"/>
                            <attachment id="12412877" name="1626-v2.patch" size="5249" author="larsgeorge" created="Wed, 8 Jul 2009 15:37:38 +0000"/>
                            <attachment id="12412886" name="1626-v3.patch" size="5848" author="larsgeorge" created="Wed, 8 Jul 2009 17:16:35 +0000"/>
                            <attachment id="12412887" name="1626-v4.patch" size="5937" author="stack" created="Wed, 8 Jul 2009 17:27:55 +0000"/>
                            <attachment id="12412889" name="1626-v5.patch" size="6791" author="stack" created="Wed, 8 Jul 2009 17:44:35 +0000"/>
                            <attachment id="12412893" name="1626-v6.patch" size="7051" author="larsgeorge" created="Wed, 8 Jul 2009 18:12:14 +0000"/>
                            <attachment id="12412897" name="1626-v7.patch" size="10521" author="larsgeorge" created="Wed, 8 Jul 2009 19:14:39 +0000"/>
                            <attachment id="12412901" name="1626-v8.patch" size="12067" author="larsgeorge" created="Wed, 8 Jul 2009 19:54:02 +0000"/>
                            <attachment id="12412902" name="1626-v9.patch" size="12383" author="larsgeorge" created="Wed, 8 Jul 2009 20:04:23 +0000"/>
                            <attachment id="12412873" name="1626.patch" size="5052" author="larsgeorge" created="Wed, 8 Jul 2009 14:19:13 +0000"/>
                            <attachment id="12412830" name="deletes.patch" size="5027" author="stack" created="Wed, 8 Jul 2009 05:37:40 +0000"/>
                            <attachment id="12412867" name="reducer.patch" size="857" author="larsgeorge" created="Wed, 8 Jul 2009 13:55:12 +0000"/>
                            <attachment id="12412837" name="table-reduce.patch" size="3386" author="dogacan" created="Wed, 8 Jul 2009 07:49:36 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>13.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 8 Jul 2009 07:49:36 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>25872</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            7 years, 22 weeks, 1 day ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0hecv:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>99588</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Undoes alot of the stipulation regards types coming out of TableMapper and in and out of TableReducer going into TableOutputFormat.  See javadoc.</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>