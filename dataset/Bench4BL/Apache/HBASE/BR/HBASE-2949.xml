<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sat Dec 03 16:42:15 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-2949/HBASE-2949.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-2949] Add synchronous compact/split/flush or add a callback that gets pulled when compact/split/flush completes (and a progressable on how much is done)</title>
                <link>https://issues.apache.org/jira/browse/HBASE-2949</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Users have asked for this w/ a while.  They start a major compaction and are a little baffled when the shell returns immediately.  We need to make the call synchronous or add a callback or provide a progressable so user can see how complete the task is.  Should we include a cancel task?  &quot;Hey! Why did everything go slow of a sudden?&quot; .... 5 minutes later &quot;A major compaction started on hbase... how do we turn it off?&quot;&lt;/p&gt;

&lt;p&gt;The need for this feature was also mentioned in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2701&quot; title=&quot;Move user-triggered region admin methods (compact/split/flush) to go directly to RS&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2701&quot;&gt;&lt;del&gt;HBASE-2701&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;</description>
                <environment></environment>
        <key id="12473043">HBASE-2949</key>
            <summary>Add synchronous compact/split/flush or add a callback that gets pulled when compact/split/flush completes (and a progressable on how much is done)</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="3">Duplicate</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="stack">stack</reporter>
                        <labels>
                    </labels>
                <created>Wed, 1 Sep 2010 14:54:17 +0000</created>
                <updated>Tue, 29 Jul 2014 20:55:14 +0000</updated>
                            <resolved>Wed, 16 Jul 2014 22:19:28 +0000</resolved>
                                                                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="12905086" author="streamy" created="Wed, 1 Sep 2010 16:47:33 +0000"  >&lt;p&gt;New ExecutorService and EventHandlers from master rewrite provide a mechanism to execute as async (in an executor service thread pool) or sync (in the callers thread).&lt;/p&gt;

&lt;p&gt;Other jiras like &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2832&quot; title=&quot;Priorities and multi-threading for MemStore flushing&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2832&quot;&gt;&lt;del&gt;HBASE-2832&lt;/del&gt;&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1476&quot; title=&quot;scaling compaction with multiple threads&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-1476&quot;&gt;&lt;del&gt;HBASE-1476&lt;/del&gt;&lt;/a&gt;, and &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2375&quot; title=&quot;Revisit compaction configuration parameters&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2375&quot;&gt;&lt;del&gt;HBASE-2375&lt;/del&gt;&lt;/a&gt; will deal with moving flush/split/compact into handlers.  Once that is done, it would be trivial to make the calls synchronous.  However the naive implementation would hold the RPC open the whole time.  We may want to make the request async but then have another call to check, as stack says above.&lt;/p&gt;

&lt;p&gt;There&apos;s been discussion about adding status into ZK about what RSs and masters are doing (compactions, log splitting, etc).  Maybe we could use that mechanism?&lt;/p&gt;

&lt;p&gt;As far as progress, that would require bigger changes to flush/compact code but would definitely be something to think about while re-implementing them in handlers.&lt;/p&gt;

&lt;p&gt;I think for first cut, let&apos;s not worry about canceling or progress, just a single blocking call would be significantly better than what we have available today.&lt;/p&gt;</comment>
                            <comment id="14064233" author="apurtell" created="Wed, 16 Jul 2014 22:20:09 +0000"  >&lt;p&gt;Deleted comment on wrong issue. Still dup of newer issues. What goes around comes around&lt;/p&gt;</comment>
                            <comment id="14076446" author="jinghe" created="Mon, 28 Jul 2014 17:41:28 +0000"  >&lt;p&gt;Hi, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=apurtell%40yahoo.com&quot; class=&quot;user-hover&quot; rel=&quot;apurtell@yahoo.com&quot;&gt;Andrew Purtell&lt;/a&gt;]&lt;br/&gt;
I am going to work on providing a synchronous split.  Should I open a new JIRA or re-open this one?&lt;br/&gt;
We have an internal request for a synchronous split.&lt;/p&gt;</comment>
                            <comment id="14076654" author="stack" created="Mon, 28 Jul 2014 19:26:28 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jerryhe&quot; class=&quot;user-hover&quot; rel=&quot;jerryhe&quot;&gt;Jerry He&lt;/a&gt; Do new issue that references this one.  The comments and context are stale in here boss.  Thanks.&lt;/p&gt;</comment>
                            <comment id="14076657" author="stack" created="Mon, 28 Jul 2014 19:27:51 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jerryhe&quot; class=&quot;user-hover&quot; rel=&quot;jerryhe&quot;&gt;Jerry He&lt;/a&gt; You have a one-page write up on how you are thinking of doing it?  Stick up a sketch at least.  Fellas have loads of ideas on how this should be done so you might get input is you do up an outline first.  Thanks.&lt;/p&gt;</comment>
                            <comment id="14076985" author="jinghe" created="Mon, 28 Jul 2014 22:07:04 +0000"  >&lt;p&gt;Hi, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thanks for the input.&lt;/p&gt;

&lt;p&gt;I was just looking into the code and started with some experimental code. Here is the what I think on providing a user triggered synchronous split.&lt;br/&gt;
(Will carry over to the a new JIRA afterwards).&lt;/p&gt;

&lt;p&gt;&lt;ins&gt;Current implementation on the client side&lt;/ins&gt;&lt;/p&gt;

&lt;p&gt;In HBaseAdmin.split(), &lt;br/&gt;
1.   Input is a region name&lt;br/&gt;
1a.     If a split key is given, we will send a split request to the region server hosting the region containing the key. Asynchronous operation.&lt;br/&gt;
2b.     If no split key, we will send a split request to the region server hosting the region to split based split policy.  Asynchronous operation.&lt;br/&gt;
2.   Input is a table name&lt;br/&gt;
1a.     If a split key is given, we will send a split request to the region server hosting the region containing the key.  Asynchronous operation.&lt;br/&gt;
2b.     If no split key, we will send split requests in a loop to (region, rs) pair for all the regions of the table to split based split policy. Asynchronous operation.&lt;/p&gt;

&lt;p&gt;&lt;ins&gt;Current implementation on the region server side&lt;/ins&gt;&lt;/p&gt;

&lt;p&gt;HRegionServer -&amp;gt; RSRpcServices.splitRegion() -&amp;gt; compactSplitThread.requestSplit() --&amp;gt; CompactSplitThread.splits.execute(new SplitRequest())&lt;br/&gt;
CompactSplitThread.splits is a ThreadPoolExecutor.&lt;br/&gt;
SplitRequest is a Runnable that does all the slit work.&lt;/p&gt;

&lt;p&gt;&lt;ins&gt;Goal&lt;/ins&gt;&lt;/p&gt;

&lt;p&gt;Backward compatible, no impact on existing system triggered split, minimum overall impact, more??&lt;/p&gt;

&lt;p&gt;&lt;ins&gt;Proposed change on the region server side&lt;/ins&gt;&lt;/p&gt;

&lt;p&gt;Provide a synchronous&lt;br/&gt;
compactSplitThread.requestSplitSynchronous() --&amp;gt; CompactSplitThread.splits.submit(new SplitRequest()) and wait for &apos;future&apos; completion.&lt;br/&gt;
SplitRequest currently is a Runnable.  &lt;br/&gt;
Possibly change it to Callable&amp;lt;Void&amp;gt; so that we can propagate up any exceptions during split operation&lt;br/&gt;
as we want get any errors/exceptions synchronously as well. &lt;/p&gt;

&lt;p&gt;HRegionServer -&amp;gt; RSRpcServices.splitRegionSynchronous() will use the new requestSplitSynchronous().&lt;/p&gt;

&lt;p&gt;&lt;ins&gt;On the HBaseAdmin side&lt;/ins&gt;&lt;/p&gt;

&lt;p&gt;If we go synchronous in HBaseAdmin.split(), one use case scenario will become less efficient. i.e. the 2.b case from above:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;2b.     If no split key, we will send split requests in a loop to (region, rs) pair for all the regions of the table to split based split policy.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Because in this case, each (region, rs) pair will be requested serially and synchronously.&lt;/p&gt;

&lt;p&gt;We&apos;ll provide a HBaseAdmin.splitSynchronous() and keep the current asynchronous HBaseAdmin.split(). &lt;br/&gt;
Users are kept aware of the choices they have.&lt;br/&gt;
In the future HBaseAdmin.splitSynchronous() can be improved (e.g. using Global procedure in split regions in parallel).&lt;/p&gt;

&lt;p&gt;This is my initial thinking.   &lt;br/&gt;
Your comments please, if this is doable, if there is any concern, if I miss or misunderstand anything.  I am I ado &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="14078340" author="jinghe" created="Tue, 29 Jul 2014 20:55:14 +0000"  >&lt;p&gt;Opened &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11608&quot; title=&quot;Add synchronous split&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11608&quot;&gt;HBASE-11608&lt;/a&gt;&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12730571">HBASE-11608</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 1 Sep 2010 16:47:33 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>32846</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            2 years, 18 weeks, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0hjzr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>100501</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>