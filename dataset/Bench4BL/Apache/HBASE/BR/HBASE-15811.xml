<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Thu Dec 01 21:05:14 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-15811/HBASE-15811.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-15811] Batch Get after batch Put does not fetch all Cells</title>
                <link>https://issues.apache.org/jira/browse/HBASE-15811</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;A big batch put followed by a batch get does not always return all Cells put. See attached test program by Robert Farr that reproduces the issue. It seems to be an issue to do with a cluster of more than one machine. Running against a single machine does not have the problem (though the single machine may have many regions). Robert was unable to make his program fail with a single machine only.&lt;/p&gt;

&lt;p&gt;I reproduced what Robert was seeing running his program. I was also unable to make a single machine fail. In a batch of 1000 puts, I see one to three Gets fail. I noticed too that if I wait a second after a fail and then re-get, the Get succeeds.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12967158">HBASE-15811</key>
            <summary>Batch Get after batch Put does not fetch all Cells</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="1" iconUrl="https://issues.apache.org/jira/images/icons/priorities/blocker.png">Blocker</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="stack">stack</assignee>
                                    <reporter username="stack">stack</reporter>
                        <labels>
                    </labels>
                <created>Tue, 10 May 2016 18:36:37 +0000</created>
                <updated>Tue, 31 May 2016 13:13:08 +0000</updated>
                            <resolved>Sat, 14 May 2016 01:06:13 +0000</resolved>
                                    <version>1.0.0</version>
                    <version>1.3.0</version>
                    <version>1.2.1</version>
                    <version>0.98.19</version>
                                    <fixVersion>1.3.0</fixVersion>
                    <fixVersion>1.2.2</fixVersion>
                    <fixVersion>1.1.6</fixVersion>
                                    <component>Client</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>17</watches>
                                                                <comments>
                            <comment id="15278655" author="stack" created="Tue, 10 May 2016 18:37:05 +0000"  >&lt;p&gt;Program to reproduce by Robert Farr.&lt;/p&gt;</comment>
                            <comment id="15279307" author="mantonov" created="Wed, 11 May 2016 00:42:46 +0000"  >&lt;p&gt;I assume it affects 1.3 too&lt;/p&gt;</comment>
                            <comment id="15279309" author="mantonov" created="Wed, 11 May 2016 00:43:37 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt; you tried that on 1.2.1 branch only or...? just to make sure&lt;/p&gt;</comment>
                            <comment id="15279572" author="stack" created="Wed, 11 May 2016 05:29:29 +0000"  >&lt;p&gt;This is a bit ugly. Its mvcc. If I immediately go back again when I get an empty result, it works. If I log the mvcc between the get that fails and the one that succeeds, we&apos;ve moved on by a single point. Here is my hack patch:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
diff --git a/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java b/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java
index e620c60..93319c3 100644
--- a/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java
+++ b/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java
@@ -6868,13 +6868,24 @@ &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; class HRegion &lt;span class=&quot;code-keyword&quot;&gt;implements&lt;/span&gt; HeapSize, PropagatingConfigurationObserver, Regi
     &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; before =  EnvironmentEdgeManager.currentTime();
     Scan scan = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Scan(get);

-    RegionScanner scanner = &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;;
-    &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
-      scanner = getScanner(scan);
-      scanner.next(results);
-    } &lt;span class=&quot;code-keyword&quot;&gt;finally&lt;/span&gt; {
-      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (scanner != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;)
-        scanner.close();
+    &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; lastmvcc = -1l;
+    &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; (&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;) {
+      RegionScanner scanner = &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;;
+      &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
+        scanner = getScanner(scan);
+        scanner.next(results);
+        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (!results.isEmpty() &amp;amp;&amp;amp; results.get(0).getRow() != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
+          &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (lastmvcc != -1l) {
+            LOG.info(&lt;span class=&quot;code-quote&quot;&gt;&quot;SPIN EXIT CURRENT MVCC &quot;&lt;/span&gt; + scanner.getMvccReadPoint() + &lt;span class=&quot;code-quote&quot;&gt;&quot;; last mvcc=&quot;&lt;/span&gt; + lastmvcc);
+          }
+          &lt;span class=&quot;code-keyword&quot;&gt;break&lt;/span&gt;;
+        }
+        lastmvcc = scanner.getMvccReadPoint();
+        LOG.info(&lt;span class=&quot;code-quote&quot;&gt;&quot;SPIN EMPTY &quot;&lt;/span&gt; + lastmvcc);
+      } &lt;span class=&quot;code-keyword&quot;&gt;finally&lt;/span&gt; {
+        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (scanner != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;)
+          scanner.close();
+      }
     }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Here is the output:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
 10 2016-05-10 22:25:18,283 INFO  [B.defaultRpcServer.handler=45,queue=45,port=16020] regionserver.HRegion: SPIN EMPTY 662
 11 2016-05-10 22:25:18,284 INFO  [B.defaultRpcServer.handler=45,queue=45,port=16020] regionserver.HRegion: SPIN EXIT CURRENT MVCC 663; last mvcc=662
 12 2016-05-10 22:25:18,286 INFO  [B.defaultRpcServer.handler=45,queue=45,port=16020] regionserver.HRegion: SPIN EMPTY 666
 13 2016-05-10 22:25:18,286 INFO  [B.defaultRpcServer.handler=45,queue=45,port=16020] regionserver.HRegion: SPIN EXIT CURRENT MVCC 667; last mvcc=666
 14 2016-05-10 22:25:18,287 INFO  [B.defaultRpcServer.handler=45,queue=45,port=16020] regionserver.HRegion: SPIN EMPTY 666
 15 2016-05-10 22:25:18,288 INFO  [B.defaultRpcServer.handler=45,queue=45,port=16020] regionserver.HRegion: SPIN EXIT CURRENT MVCC 667; last mvcc=666
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;... in other words, after getting new Scanner, we&apos;ve moved the read point on by one so we see the Put that just happened.&lt;/p&gt;</comment>
                            <comment id="15279573" author="stack" created="Wed, 11 May 2016 05:30:23 +0000"  >&lt;p&gt;I&apos;m on branch-1 &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mantonov&quot; class=&quot;user-hover&quot; rel=&quot;mantonov&quot;&gt;Mikhail Antonov&lt;/a&gt; so yeah, 1.3 and 1.2.1. This seems to be an old issue so may not be worth holding up your 1.3...&lt;/p&gt;</comment>
                            <comment id="15280829" author="rfarrjr" created="Wed, 11 May 2016 21:05:06 +0000"  >&lt;p&gt;Program to reproduce when updating existing cells.&lt;/p&gt;</comment>
                            <comment id="15281060" author="stack" created="Thu, 12 May 2016 00:40:47 +0000"  >&lt;p&gt;Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rfarrjr&quot; class=&quot;user-hover&quot; rel=&quot;rfarrjr&quot;&gt;Robert Farr&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This issue is a good one.&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;A batch of Puts come in.&lt;/li&gt;
	&lt;li&gt;We make it to HRegion#doMiniBatchMutation&lt;/li&gt;
	&lt;li&gt;It adds the edits to WAL with append, then to memstore, then calls sync, and then updates mvcc.&lt;/li&gt;
	&lt;li&gt;Down in the sync, we add our sync request to the running sync threads.&lt;/li&gt;
	&lt;li&gt;They send the sync and wait on return.&lt;/li&gt;
	&lt;li&gt;It returns. We let blocked handlers go.&lt;/li&gt;
	&lt;li&gt;They return to the client.&lt;/li&gt;
	&lt;li&gt;Client comes back in to read its own writes.&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;TO BE CONFIRMED, it seems like the remote client and make a query IN BETWEEN sync and update of mvcc.&lt;/p&gt;

&lt;p&gt;I captures this in log:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
 7357 2016-05-11 16:19:51,511 INFO  [B.defaultRpcServer.handler=151,queue=151,port=16020] regionserver.HRegion: mvcc.readPoint=638, a12e7c7829e37a16f4144b03e35e3532
 7358 2016-05-11 16:19:51,512 INFO  [B.defaultRpcServer.handler=36,queue=36,port=16020] regionserver.HRegion: SPIN EMPTY 637 test_farr,0,1463008764533.a12e7c7829e37a16f4144b03e      35e3532.
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The first line is logging I added just after we&apos;d updated the mvcc in doMiniBatchMutation&lt;/p&gt;

&lt;p&gt;The second line is the case where a Get got nothing back when though it had just written the value. See how the readPoint at write is at 638 but the read point for the Scan/Get is at 637... Somehow at creation of the Scan, it got a readpoint before it was updated.  Or there is something wrong w/ AtomicLong (smile).&lt;/p&gt;

&lt;p&gt;Let me see if I can artificially recreate.&lt;/p&gt;</comment>
                            <comment id="15281110" author="jingcheng.du@intel.com" created="Thu, 12 May 2016 02:06:36 +0000"  >&lt;p&gt;Hi, MultiVersionConsistencyControl has a private lock readWaiters, it only used in advanceMemstore(WriteEntry e),&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (nextReadValue &amp;gt; 0) {
      &lt;span class=&quot;code-keyword&quot;&gt;synchronized&lt;/span&gt; (readWaiters) {
        readWaiters.notifyAll();
      }
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I guess this code is not necessary any more? Or we miss something in somewhere else?&lt;/p&gt;</comment>
                            <comment id="15281121" author="jingcheng.du@intel.com" created="Thu, 12 May 2016 02:30:48 +0000"  >&lt;blockquote&gt;&lt;p&gt;Or there is something wrong w/ AtomicLong (smile).&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;In branch-1.x, the memstoreRead is not AtomicLong, it is only volatile long.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;volatile&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; memstoreRead = 0;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="15281149" author="stack" created="Thu, 12 May 2016 03:11:13 +0000"  >&lt;p&gt;Thanks for the extra set of eyes &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jingcheng.du%40intel.com&quot; class=&quot;user-hover&quot; rel=&quot;jingcheng.du@intel.com&quot;&gt;Jingcheng Du&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I&apos;ve been working off the tip of branch-1 where read point is an AtomicLong. Was going to try and fix here first then work backward.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;I guess this code is not necessary any more? Or we miss something in somewhere else?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Thinking on it, the Handler is currently running the batch Put in doMiniBatchMutation. It has to run to the end before it returns and before the client will come back and ask for all Cells that were just put. Not sure now how client could come back in between sync and mvcc update. &lt;/p&gt;

</comment>
                            <comment id="15281322" author="jingcheng.du@intel.com" created="Thu, 12 May 2016 08:39:16 +0000"  >&lt;p&gt;So sorry, my mistake. I looked into the old code of branch-1.2...&lt;/p&gt;</comment>
                            <comment id="15281613" author="stack" created="Thu, 12 May 2016 15:30:22 +0000"  >&lt;p&gt;No harm done. Your patch removing readWaiters is interesting. In branch-1 we double-down on readWaiters... let me look after i get over this item. Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jingcheng.du%40intel.com&quot; class=&quot;user-hover&quot; rel=&quot;jingcheng.du@intel.com&quot;&gt;Jingcheng Du&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="15281712" author="eclark" created="Thu, 12 May 2016 16:37:15 +0000"  >&lt;p&gt;If this is dependent on data size then I would start to look at the batching logic in the client side. &lt;/p&gt;</comment>
                            <comment id="15281806" author="stack" created="Thu, 12 May 2016 17:32:13 +0000"  >&lt;p&gt;This is a single thread that does batch put followed by batch get of the just put data. I am seeing overlap on the server in that the get starts before the put is finished (it is not a matter of autoflush on the table being false).  This would explain cases where we&apos;d go to read a value but mvcc read point did not yet include it. Looking at BatchMutatorImpl#backgroundFlushCommits with synchronous flush set to true, I don&apos;t see us waiting on the executor to complete before returning. If I add logging if outstanding executor count is &amp;gt; 0 just before return from flush, I see incidence in the Test class where an executor is still running when we return from put to start the get. This I currently suspect as the issue.&lt;/p&gt;</comment>
                            <comment id="15281834" author="stack" created="Thu, 12 May 2016 17:51:29 +0000"  >&lt;p&gt;Here is a hack that won&apos;t work for general case &amp;#8211; executor is not exclusive to HTable always &amp;#8211; but that I&apos;m currently testing with... &lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
 1 diff --git a/hbase-client/src/main/java/org/apache/hadoop/hbase/client/AsyncProcess.java b/hbase-client/src/main/java/org/apache/hadoop/hbase/client/AsyncProcess.java
  2 index fb46365..56b8d67 100644
  3 --- a/hbase-client/src/main/java/org/apache/hadoop/hbase/client/AsyncProcess.java
  4 +++ b/hbase-client/src/main/java/org/apache/hadoop/hbase/client/AsyncProcess.java
  5 @@ -193,6 +193,9 @@ class AsyncProcess {
  6    &lt;span class=&quot;code-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; ExecutorService pool;
  7
  8    &lt;span class=&quot;code-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; AtomicLong tasksInProgress = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; AtomicLong(0);
  9 +  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; AtomicLong getTasksInProgress() {
 10 +      &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.tasksInProgress;
 11 +  }
 12    &lt;span class=&quot;code-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; ConcurrentMap&amp;lt;&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[], AtomicInteger&amp;gt; taskCounterPerRegion =
 13        &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ConcurrentSkipListMap&amp;lt;&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[], AtomicInteger&amp;gt;(Bytes.BYTES_COMPARATOR);
 14    &lt;span class=&quot;code-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; ConcurrentMap&amp;lt;ServerName, AtomicInteger&amp;gt; taskCounterPerServer =
 15 diff --git a/hbase-client/src/main/java/org/apache/hadoop/hbase/client/BufferedMutatorImpl.java b/hbase-client/src/main/java/org/apache/hadoop/hbase/client/BufferedMutatorI    mpl.java
 16 index 6220cd6..6a21d80 100644
 17 --- a/hbase-client/src/main/java/org/apache/hadoop/hbase/client/BufferedMutatorImpl.java
 18 +++ b/hbase-client/src/main/java/org/apache/hadoop/hbase/client/BufferedMutatorImpl.java
 19 @@ -253,6 +253,10 @@ &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; class BufferedMutatorImpl &lt;span class=&quot;code-keyword&quot;&gt;implements&lt;/span&gt; BufferedMutator {
 20          dequeuedSize -= size;
 21          writeAsyncBuffer.add(mut);
 22        }
 23 +      &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; (ap.getTasksInProgress().get() &amp;gt; 0) {
 24 +          LOG.info(&lt;span class=&quot;code-quote&quot;&gt;&quot;TASKS IN PROGRESS &quot;&lt;/span&gt; + ap.getTasksInProgress().get());
 25 +          org.apache.hadoop.hbase.util.Threads.sleep(1);
 26 +      }
 27      }
 28    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Seems to work which would mean we&apos;ve figured the issue here. Let me do some more extensive testing.&lt;/p&gt;</comment>
                            <comment id="15281941" author="stack" created="Thu, 12 May 2016 19:34:46 +0000"  >&lt;p&gt;Yeah, this is it. Ran a loop for last hour or so w/ above in place and not asserts thrown by client.... Let me make a fix.&lt;/p&gt;</comment>
                            <comment id="15282077" author="stack" created="Thu, 12 May 2016 21:23:37 +0000"  >&lt;p&gt;This seems to be the issue (since 0.99 and 0.98.4)&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
commit ab72babd97838317fa0a380fc4d49bf2703ad17c
Author: Nicolas Liochon &amp;lt;nkeywal@gmail.com&amp;gt;
Date:   Tue Jun 24 11:37:02 2014 +0200

    HBASE-11403 Fix race conditions around &lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;#notify

diff --git a/hbase-client/src/main/java/org/apache/hadoop/hbase/client/AsyncProcess.java b/hbase-client/src/main/java/org/apache/hadoop/hbase/client/AsyncProcess.java
index 42c1546..7b153ec 100644
--- a/hbase-client/src/main/java/org/apache/hadoop/hbase/client/AsyncProcess.java
+++ b/hbase-client/src/main/java/org/apache/hadoop/hbase/client/AsyncProcess.java
...
@@ -979,6 +980,7 @@ class AsyncProcess {
       oldInProgress = currentInProgress;
       &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
         &lt;span class=&quot;code-keyword&quot;&gt;synchronized&lt;/span&gt; (&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.tasksInProgress) {
+          &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (tasksInProgress.get() != oldInProgress) &lt;span class=&quot;code-keyword&quot;&gt;break&lt;/span&gt;;
           &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.tasksInProgress.wait(100);
         }
       } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (InterruptedException e) {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We have a supposed wait till done but the above change broke it in AsyncProcess.java. We break out of the while loop completely when we are supposed to wait until there are no more tasks in flight &amp;#8211; tasks (the max param passed in) is zero.&lt;/p&gt;</comment>
                            <comment id="15282110" author="stack" created="Thu, 12 May 2016 21:43:57 +0000"  >&lt;p&gt;Patch for branch-1 (that is what I have been working on).&lt;/p&gt;</comment>
                            <comment id="15282152" author="mantonov" created="Thu, 12 May 2016 22:20:08 +0000"  >&lt;p&gt;Yeah, that&apos;s bad..we had it for 2 years? Patch looks good to me (100ms wait looks a bit high?). &lt;/p&gt;</comment>
                            <comment id="15282249" author="stack" created="Thu, 12 May 2016 23:40:44 +0000"  >&lt;p&gt;v2 changing all waits from 100ms to 10ms... addressing &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mantonov&quot; class=&quot;user-hover&quot; rel=&quot;mantonov&quot;&gt;Mikhail Antonov&lt;/a&gt; issue&lt;/p&gt;</comment>
                            <comment id="15282251" author="mantonov" created="Thu, 12 May 2016 23:44:39 +0000"  >&lt;p&gt;Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt;, that looks good to me (that said I didn&apos;t to repro the tests you tried, so I rely on your results &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; ). +1.&lt;/p&gt;</comment>
                            <comment id="15282869" author="stack" created="Fri, 13 May 2016 16:57:35 +0000"  >&lt;p&gt;Try and get a hadoop qa run in against master branch&lt;/p&gt;</comment>
                            <comment id="15283286" author="mantonov" created="Fri, 13 May 2016 23:04:05 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt; Looks like build bot didn&apos;t bother to post results here, &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1884/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1884/console&lt;/a&gt;, all +1 except 1 extand findbug warning.&lt;/p&gt;</comment>
                            <comment id="15283347" author="stack" created="Sat, 14 May 2016 00:50:54 +0000"  >&lt;p&gt;Thank you &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mantonov&quot; class=&quot;user-hover&quot; rel=&quot;mantonov&quot;&gt;Mikhail Antonov&lt;/a&gt; &lt;/p&gt;</comment>
                            <comment id="15283350" author="stack" created="Sat, 14 May 2016 01:06:14 +0000"  >&lt;p&gt;Pushed to branch-1.1+&lt;/p&gt;

&lt;p&gt;As it happens 0.98 doesn&apos;t have this issue after all after looking at the patch that was applied to branch 0.98 for &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11403&quot; title=&quot;Fix race conditions around Object#notify&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11403&quot;&gt;&lt;del&gt;HBASE-11403&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="15283390" author="hudson" created="Sat, 14 May 2016 02:54:57 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-1.3-IT #660 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-1.3-IT/660/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-1.3-IT/660/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-15811&quot; title=&quot;Batch Get after batch Put does not fetch all Cells&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-15811&quot;&gt;&lt;del&gt;HBASE-15811&lt;/del&gt;&lt;/a&gt; Batch Get after batch Put does not fetch all Cells We were (stack: rev 09934af5c7e9c9d5bd46b20db8ce17f7b96aee58)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/client/AsyncProcess.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/test/java/org/apache/hadoop/hbase/client/TestAsyncProcess.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="15283397" author="hudson" created="Sat, 14 May 2016 03:41:26 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-1.2-IT #507 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-1.2-IT/507/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-1.2-IT/507/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-15811&quot; title=&quot;Batch Get after batch Put does not fetch all Cells&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-15811&quot;&gt;&lt;del&gt;HBASE-15811&lt;/del&gt;&lt;/a&gt; Batch Get after batch Put does not fetch all Cells We were (stack: rev df634737cc019a6ca088b640f23b4acb96331043)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-client/src/test/java/org/apache/hadoop/hbase/client/TestAsyncProcess.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/client/AsyncProcess.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="15283403" author="hudson" created="Sat, 14 May 2016 04:03:20 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-Trunk_matrix #918 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-Trunk_matrix/918/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-Trunk_matrix/918/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-15811&quot; title=&quot;Batch Get after batch Put does not fetch all Cells&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-15811&quot;&gt;&lt;del&gt;HBASE-15811&lt;/del&gt;&lt;/a&gt; Batch Get after batch Put does not fetch all Cells We were (stack: rev 6904430a3d2bd87190b5f5d51a85d929684caae1)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/client/AsyncProcess.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/test/java/org/apache/hadoop/hbase/client/TestAsyncProcess.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="15283427" author="mantonov" created="Sat, 14 May 2016 04:52:56 +0000"  >&lt;p&gt;Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rfarrjr&quot; class=&quot;user-hover&quot; rel=&quot;rfarrjr&quot;&gt;Robert Farr&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt;!&lt;/p&gt;</comment>
                            <comment id="15283444" author="hudson" created="Sat, 14 May 2016 06:13:41 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-1.2 #625 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-1.2/625/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-1.2/625/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-15811&quot; title=&quot;Batch Get after batch Put does not fetch all Cells&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-15811&quot;&gt;&lt;del&gt;HBASE-15811&lt;/del&gt;&lt;/a&gt; Batch Get after batch Put does not fetch all Cells We were (stack: rev df634737cc019a6ca088b640f23b4acb96331043)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-client/src/test/java/org/apache/hadoop/hbase/client/TestAsyncProcess.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/client/AsyncProcess.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="15283445" author="hudson" created="Sat, 14 May 2016 06:23:00 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-1.4 #152 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-1.4/152/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-1.4/152/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-15811&quot; title=&quot;Batch Get after batch Put does not fetch all Cells&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-15811&quot;&gt;&lt;del&gt;HBASE-15811&lt;/del&gt;&lt;/a&gt; Batch Get after batch Put does not fetch all Cells We were (stack: rev 77f511fcebcc391ed92e5dfc5998b7006afed2c9)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/client/AsyncProcess.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/test/java/org/apache/hadoop/hbase/client/TestAsyncProcess.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="15283461" author="hudson" created="Sat, 14 May 2016 07:17:02 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-1.3 #697 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-1.3/697/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-1.3/697/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-15811&quot; title=&quot;Batch Get after batch Put does not fetch all Cells&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-15811&quot;&gt;&lt;del&gt;HBASE-15811&lt;/del&gt;&lt;/a&gt; Batch Get after batch Put does not fetch all Cells We were (stack: rev 09934af5c7e9c9d5bd46b20db8ce17f7b96aee58)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-client/src/test/java/org/apache/hadoop/hbase/client/TestAsyncProcess.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/client/AsyncProcess.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="15283474" author="hudson" created="Sat, 14 May 2016 08:03:29 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-1.1-JDK8 #1801 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-1.1-JDK8/1801/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-1.1-JDK8/1801/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-15811&quot; title=&quot;Batch Get after batch Put does not fetch all Cells&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-15811&quot;&gt;&lt;del&gt;HBASE-15811&lt;/del&gt;&lt;/a&gt; Batch Get after batch Put does not fetch all Cells We were (stack: rev 4e9ee734734741d9d662ba76bec0eb29e96221b5)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/client/AsyncProcess.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/test/java/org/apache/hadoop/hbase/client/TestAsyncProcess.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="15283483" author="hudson" created="Sat, 14 May 2016 08:22:36 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-1.1-JDK7 #1715 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-1.1-JDK7/1715/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-1.1-JDK7/1715/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-15811&quot; title=&quot;Batch Get after batch Put does not fetch all Cells&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-15811&quot;&gt;&lt;del&gt;HBASE-15811&lt;/del&gt;&lt;/a&gt; Batch Get after batch Put does not fetch all Cells We were (stack: rev 4e9ee734734741d9d662ba76bec0eb29e96221b5)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-client/src/test/java/org/apache/hadoop/hbase/client/TestAsyncProcess.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/client/AsyncProcess.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310000">
                    <name>Duplicate</name>
                                                                <inwardlinks description="is duplicated by">
                                        <issuelink>
            <issuekey id="12974214">HBASE-15922</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12803754" name="15811.branch-1.patch" size="7865" author="stack" created="Thu, 12 May 2016 21:43:57 +0000"/>
                            <attachment id="12803765" name="15811.branch-1.v2.patch" size="8294" author="stack" created="Thu, 12 May 2016 23:40:44 +0000"/>
                            <attachment id="12803892" name="15811.patch" size="5835" author="stack" created="Fri, 13 May 2016 16:57:35 +0000"/>
                            <attachment id="12803289" name="Test.java" size="6915" author="stack" created="Tue, 10 May 2016 18:37:05 +0000"/>
                            <attachment id="12803513" name="Test2.java" size="6953" author="rfarrjr" created="Wed, 11 May 2016 21:05:06 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 11 May 2016 00:42:46 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            28 weeks, 5 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2xj3b:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>We were not waiting on all executors in a batch to complete which meant a read-your-own-writes could sometimes fail -- especially if client is loaded; i.e. putting to multiple machines in a cluster. The test for no-more-executors was damaged by the 0.99/0.98.4 fix &amp;quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11403&quot; title=&quot;Fix race conditions around Object#notify&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11403&quot;&gt;&lt;strike&gt;HBASE-11403&lt;/strike&gt;&lt;/a&gt; Fix race conditions around Object#notify&amp;quot;</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>