<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sat Dec 03 19:36:39 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-5954/HBASE-5954.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-5954] Allow proper fsync support for HBase</title>
                <link>https://issues.apache.org/jira/browse/HBASE-5954</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;At least get recommendation into 0.96 doc and some numbers running w/ this hdfs feature enabled.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12554266">HBASE-5954</key>
            <summary>Allow proper fsync support for HBase</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="2" iconUrl="https://issues.apache.org/jira/images/icons/priorities/critical.png">Critical</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="2">Won&apos;t Fix</resolution>
                                        <assignee username="lhofhansl">Lars Hofhansl</assignee>
                                    <reporter username="lhofhansl">Lars Hofhansl</reporter>
                        <labels>
                    </labels>
                <created>Tue, 8 May 2012 01:03:51 +0000</created>
                <updated>Mon, 18 Jul 2016 09:22:09 +0000</updated>
                            <resolved>Mon, 18 Jul 2016 09:22:08 +0000</resolved>
                                                                    <component>HFile</component>
                    <component>wal</component>
                        <due></due>
                            <votes>2</votes>
                                    <watches>45</watches>
                                                                                                            <comments>
                            <comment id="13270116" author="lhofhansl" created="Tue, 8 May 2012 01:06:05 +0000"  >&lt;p&gt;Over in &lt;a href=&quot;https://issues.apache.org/jira/browse/HDFS-744&quot; title=&quot;Support hsync in HDFS&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HDFS-744&quot;&gt;&lt;del&gt;HDFS-744&lt;/del&gt;&lt;/a&gt; I propose changes to HDFS to allow fsync on files.&lt;br/&gt;
Without that both WAL and HFiles (resulting from compactions/flushes) are not guaranteed to be on disk at the DFS replicas.&lt;/p&gt;

&lt;p&gt;The &lt;a href=&quot;https://issues.apache.org/jira/browse/HDFS-744&quot; title=&quot;Support hsync in HDFS&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HDFS-744&quot;&gt;&lt;del&gt;HDFS-744&lt;/del&gt;&lt;/a&gt; is becoming big, so I&apos;m not sure how the hadoop folks will receive it. I any case, this issues tracks the necessary changes on the HBase side.&lt;/p&gt;</comment>
                            <comment id="13270119" author="lhofhansl" created="Tue, 8 May 2012 01:19:49 +0000"  >&lt;p&gt;Here&apos;s what I have. Not configurable.&lt;br/&gt;
With this and &lt;a href=&quot;https://issues.apache.org/jira/browse/HDFS-744&quot; title=&quot;Support hsync in HDFS&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HDFS-744&quot;&gt;&lt;del&gt;HDFS-744&lt;/del&gt;&lt;/a&gt;, it should be possible to test this out.&lt;/p&gt;

&lt;p&gt;I will be doing that.&lt;/p&gt;</comment>
                            <comment id="13272888" author="lhofhansl" created="Thu, 10 May 2012 23:26:02 +0000"  >&lt;p&gt;Here&apos;s a patch against HBase-trunk matching the v2-trunk patch in &lt;a href=&quot;https://issues.apache.org/jira/browse/HDFS-744&quot; title=&quot;Support hsync in HDFS&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HDFS-744&quot;&gt;&lt;del&gt;HDFS-744&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Again, this is not yet configurable and just for testing.&lt;/p&gt;</comment>
                            <comment id="13273840" author="lhofhansl" created="Sat, 12 May 2012 05:19:55 +0000"  >&lt;p&gt;Btw. the last attached patch also includes a changed pom.xml file. -Dhadoop.profile=30 can be used to build HBase against hadoop 3.0.0 snapshots.&lt;/p&gt;

&lt;p&gt;In order to build hadoop-trunk and hbase-trunk just do:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;mvn -Pnative -Pdist -Dtar -DskipTests clean install&lt;/li&gt;
	&lt;li&gt;mvn clean install -Dhadoop.profile=30 -DskipTests&lt;/li&gt;
&lt;/ol&gt;
</comment>
                            <comment id="13274452" author="lhofhansl" created="Mon, 14 May 2012 05:07:32 +0000"  >&lt;p&gt;Patch that makes durable sync configurable (separately for WAL and HFiles).&lt;/p&gt;

&lt;p&gt;Should probably allow all file creation to be durable (losing tableinfo or regioninfo files would be bad too).&lt;/p&gt;</comment>
                            <comment id="13275105" author="vicaya" created="Tue, 15 May 2012 00:58:17 +0000"  >&lt;p&gt;Hi Lars, could you post some preliminary benchmark numbers for hsync vs hflush? Thanks.&lt;/p&gt;</comment>
                            <comment id="13275123" author="lhofhansl" created="Tue, 15 May 2012 01:41:54 +0000"  >&lt;p&gt;Will do. I assume the result will be devastating &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;br/&gt;
With the HDFS replica chaining we&apos;d eat the fsync time N times (for N replicas).&lt;/p&gt;</comment>
                            <comment id="13275228" author="lhofhansl" created="Tue, 15 May 2012 06:54:20 +0000"  >&lt;p&gt;It&apos;s hard to get even a single run of PE run to completion (even without durable sync enabled). I&apos;m getting various exceptions. Sometimes: &quot;could only replicate to 0 datanodes&quot;, sometime name node problems: &quot;LeaseExpiredException&quot; on an HLog file.&lt;/p&gt;

&lt;p&gt;At this point I do not think these are due to my HDFS changes, this is all in code that I did not touch.&lt;/p&gt;</comment>
                            <comment id="13275245" author="vicaya" created="Tue, 15 May 2012 07:31:18 +0000"  >&lt;p&gt;Actually, I don&apos;t think the result should be too bad (within an order of magnitude), as fsync on replicas should happen in parallel (upstream DN should forward the sync packet before doing its own fsync and wait for the ack from downstream DN). I do expect that the increased sync latency would expose more bugs (especially lock contention and races) both in HDFS and HBase.&lt;/p&gt;</comment>
                            <comment id="13276059" author="lhofhansl" created="Tue, 15 May 2012 17:57:37 +0000"  >&lt;p&gt;This is only partially true. It is true for the sync packet stuff that I added, because this does not require closing the block.&lt;/p&gt;

&lt;p&gt;If the block needs to be closed (which causes it to be fsync&apos;ed) it is done after the ack from the downstream DN and before the ack to the upstream DN. Here in that case the fsyncs are serial. Looking at the code, that part seems hard to change.&lt;/p&gt;

&lt;p&gt;Good news is: HLog files are smaller than a DFS block, so for HBase we never run into the 2nd issue.&lt;br/&gt;
Semi bad news: HFiles also need to fsync&apos;ed at least on block close, so here we&apos;d see the issue. But since HFiles are written asynchronously it should be OK.&lt;/p&gt;</comment>
                            <comment id="13276333" author="lhofhansl" created="Tue, 15 May 2012 23:36:20 +0000"  >&lt;p&gt;Finally some numbers for &quot;PerformanceEvaluation --nomapred --rows=100000 --presplit=3 randomWrite 10&quot;&lt;br/&gt;
Without WAL/HFile sync: ~18s&lt;br/&gt;
With WAL sync: ~34s&lt;/p&gt;

&lt;p&gt;With WAL sync on, I see a constant ~70mb/s write load. Without WAL sync I see a few spikes of far higher IO load.&lt;/p&gt;

&lt;p&gt;This is all on a single machine with HBase in fully distributed mode on top of a pseudo distributed HDFS.&lt;/p&gt;

&lt;p&gt;Note that my patch does not yet do HFile sync&apos;ing correctly.&lt;/p&gt;</comment>
                            <comment id="13276348" author="lhofhansl" created="Tue, 15 May 2012 23:55:31 +0000"  >&lt;p&gt;Ok... Now with HFile sync.&lt;br/&gt;
With HFile sync: ~20s&lt;br/&gt;
Both WAL and HFile sync: ~35s&lt;/p&gt;

&lt;p&gt;With HFile sync enabled, I seek occasional IO spikes on top of the constant WAL IO.&lt;/p&gt;</comment>
                            <comment id="13276350" author="lhofhansl" created="Tue, 15 May 2012 23:57:21 +0000"  >&lt;p&gt;Patch that works correctly for WAL and HFile sync. (This is the one I used for above performance tests)&lt;/p&gt;</comment>
                            <comment id="13276950" author="vicaya" created="Wed, 16 May 2012 18:08:04 +0000"  >&lt;p&gt;Thanks for the numbers, Lars! Are you using ext3? I wonder what the numbers would look like if you enable barrier=1 in the mount options or just use ext4 (with barrier turned on by default). If the underlying fs doesn&apos;t do barrier, the result is somewhat meaningless (you might as well use hflush).&lt;/p&gt;</comment>
                            <comment id="13277206" author="lhofhansl" created="Wed, 16 May 2012 22:21:34 +0000"  >&lt;p&gt;I&apos;m using ext4 with default mount options (indeed the numbers would be useless otherwise)&lt;/p&gt;</comment>
                            <comment id="13279326" author="lhofhansl" created="Fri, 18 May 2012 23:18:57 +0000"  >&lt;p&gt;Patch matching latest patch on &lt;a href=&quot;https://issues.apache.org/jira/browse/HDFS-744&quot; title=&quot;Support hsync in HDFS&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HDFS-744&quot;&gt;&lt;del&gt;HDFS-744&lt;/del&gt;&lt;/a&gt;. Will probably change again soon.&lt;/p&gt;</comment>
                            <comment id="13279940" author="lhofhansl" created="Mon, 21 May 2012 03:26:44 +0000"  >&lt;p&gt;Minor change, matching latest &lt;a href=&quot;https://issues.apache.org/jira/browse/HDFS-744&quot; title=&quot;Support hsync in HDFS&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HDFS-744&quot;&gt;&lt;del&gt;HDFS-744&lt;/del&gt;&lt;/a&gt; patch.&lt;/p&gt;</comment>
                            <comment id="13280636" author="lhofhansl" created="Mon, 21 May 2012 23:59:28 +0000"  >&lt;p&gt;Previous patch accidentally always enable WAL sync if &lt;a href=&quot;https://issues.apache.org/jira/browse/HDFS-744&quot; title=&quot;Support hsync in HDFS&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HDFS-744&quot;&gt;&lt;del&gt;HDFS-744&lt;/del&gt;&lt;/a&gt; is present.&lt;/p&gt;</comment>
                            <comment id="13286056" author="lhofhansl" created="Wed, 30 May 2012 21:08:02 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HDFS-744&quot; title=&quot;Support hsync in HDFS&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HDFS-744&quot;&gt;&lt;del&gt;HDFS-744&lt;/del&gt;&lt;/a&gt; was committed. Time to finalize this patch.&lt;br/&gt;
Todd suggested at the hack-a-thon to have a sync option per column family rather than per HBase cluster.&lt;/p&gt;</comment>
                            <comment id="13286923" author="tlipcon" created="Thu, 31 May 2012 20:52:17 +0000"  >&lt;p&gt;Even per-put would be pretty nice, actually &amp;#8211; I can imagine some applications where most updates are &quot;unimportant&quot; but the occasional one should be hard-persisted.&lt;/p&gt;</comment>
                            <comment id="13288916" author="lhofhansl" created="Mon, 4 Jun 2012 21:27:05 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HDFS-744&quot; title=&quot;Support hsync in HDFS&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HDFS-744&quot;&gt;&lt;del&gt;HDFS-744&lt;/del&gt;&lt;/a&gt; is in Hadoop-2.0 now.&lt;br/&gt;
I&apos;d like to make a clean patch with only the cluster wide option first. That way, this can be enabled and allow HBase to still be a nice HDFS citizen.&lt;/p&gt;

&lt;p&gt;Then we can add other options (per CF, per Put, etc).&lt;/p&gt;</comment>
                            <comment id="13401923" author="lhofhansl" created="Wed, 27 Jun 2012 03:03:37 +0000"  >&lt;p&gt;I almost feel like the HFile sync should be enabled by default. This ensures that after an HFile is written and closed all of its blocks are sync&apos;ed to disk. The overhead of this is &quot;fairly&quot; minimal.&lt;br/&gt;
The edit-by-edit sync for the WAL is definitely optional.&lt;/p&gt;</comment>
                            <comment id="13409053" author="lhofhansl" created="Sun, 8 Jul 2012 19:52:22 +0000"  >&lt;p&gt;Would be nice to be able to enable this (when using Hadoop-2).&lt;br/&gt;
Not sure about the 0.94 target, but since the change is not disruptive to HBase and purely optional it would be a good addition.&lt;/p&gt;</comment>
                            <comment id="13419738" author="lhofhansl" created="Sat, 21 Jul 2012 03:58:46 +0000"  >&lt;p&gt;I think the API going multiple ways (these are not mutually exclusive):&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;hsync for HFiles (would guard compactions, etc, very lightweight), enabled with a config option (default on I think)&lt;/li&gt;
	&lt;li&gt;hsync all WAL edits (very expensive, but would not require client changes), enabled with a config option (default off)&lt;/li&gt;
	&lt;li&gt;hsync for tables or column families for HFiles (configured in the table/column descriptor)&lt;/li&gt;
	&lt;li&gt;hsync for tables or column families for the WAL (configured in the table/column descriptor)&lt;/li&gt;
	&lt;li&gt;WAL hsync per Put. Gives control to the application. A batch put would hsync the WAL if at least one Put in the batch was market with hsync. What about deletes? In 0.94 they are not batched; could it at the end of operation there.&lt;/li&gt;
	&lt;li&gt;WAL hsync per RPC. Could send flag with the RPC from the client. I.e. HTable would have a Put(List&amp;lt;Put&amp;gt; puts, boolean hsync) method&lt;/li&gt;
	&lt;li&gt;HTable.hsync. Client calls this when WAL must be sync&apos;ed. Most flexible, but incurs an extra RPC to the RegionServer just to force the hsync.&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;Comments welcome.&lt;/p&gt;

&lt;p&gt;Edit: Forgot some options.&lt;/p&gt;</comment>
                            <comment id="13420348" author="stack" created="Sun, 22 Jul 2012 22:10:02 +0000"  >&lt;blockquote&gt;&lt;p&gt;Would be nice to be able to enable this (when using Hadoop-2).&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Can we do it in the hadoop2 compatibility module?&lt;/p&gt;

&lt;p&gt;I think its fine its optionally off in 0.94 and that in 0.96 its on by default.&lt;/p&gt;

&lt;p&gt;I like your list.  Would think a CF/Table option and the HTable#hsync the more important options to offer (though on the latter, perhaps a Put+hsync would be better given extra rpc).&lt;/p&gt;
</comment>
                            <comment id="13423201" author="lhofhansl" created="Thu, 26 Jul 2012 16:32:02 +0000"  >&lt;p&gt;Thinking more about HTable#hsync, I think that would hard to make useful to an application. The application would need to do know which RegionServers to hsync the WAL on (unless we want to flush for a Table, which means all RegionServer hosting regions for this table need to hsync their WAL, and that does not seem to be useful).&lt;/p&gt;

&lt;p&gt;A similar argument goes for the RPCs (which will be split to multiple RegionServers).&lt;br/&gt;
So #6 and #7 are out I think.&lt;/p&gt;

&lt;p&gt;I think Todd was right after all (just took me a long time to come around to it), a flag per Put/Delete/Increment/Append/etc, would be best option.&lt;/p&gt;</comment>
                            <comment id="13423241" author="lhofhansl" created="Thu, 26 Jul 2012 17:05:54 +0000"  >&lt;p&gt;Another question: HBase 0.96 now has the hadoop&lt;/p&gt;
{1|2}
&lt;p&gt;-compat projects.&lt;br/&gt;
On the other hand I do not want to have completely diverging implementations for this for 0.94 and 0.96 (which would mean to use reflection in both branches). Any thoughts on that?&lt;/p&gt;</comment>
                            <comment id="13423272" author="apurtell" created="Thu, 26 Jul 2012 17:38:38 +0000"  >&lt;blockquote&gt;&lt;p&gt;a flag per Put/Delete/Increment/Append/etc, would be best option&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Makes sense, since both you and Todd got here after giving it consideration.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;On the other hand I do not want to have completely diverging implementations for this for 0.94 and 0.96 &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I think we have to take this pain, a reflection based strategy in 0.94 and a module based strategy in 0.96. I this case I&apos;d judge it worth it. But that&apos;s going to be a high bar for other things.&lt;/p&gt;</comment>
                            <comment id="13423275" author="apurtell" created="Thu, 26 Jul 2012 17:40:46 +0000"  >&lt;p&gt;More on my comment above. We have two options: we can start breaking out reflection into modules in 0.94 too, or save all of that for 0.96. I don&apos;t have a strong opinion but if I had to make a choice the refactoring should be in next major version / trunk / currently unstable.&lt;/p&gt;</comment>
                            <comment id="13426949" author="lhofhansl" created="Wed, 1 Aug 2012 22:04:50 +0000"  >&lt;p&gt;Created &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6492&quot; title=&quot;Remove Reflection based Hadoop abstractions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6492&quot;&gt;HBASE-6492&lt;/a&gt;.&lt;br/&gt;
Since I am interested in having this in 0.94 I&apos;ll start with the reflection based approach (but still in trunk for HadoopQA).&lt;/p&gt;

&lt;p&gt;This is what I am going to do:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;global HFiles hsync option upon close block (this will also apply sync&apos;ing the WAL on close)&lt;/li&gt;
	&lt;li&gt;global WAL edit hsync opion&lt;/li&gt;
	&lt;li&gt;hsync CF&apos;s HFiles&lt;/li&gt;
	&lt;li&gt;hsync CF&apos;s WAL edits&lt;/li&gt;
	&lt;li&gt;WAL hsync per Put/Delete/Append/Increment/etc&lt;/li&gt;
&lt;/ol&gt;
</comment>
                            <comment id="13426966" author="lhofhansl" created="Wed, 1 Aug 2012 22:35:28 +0000"  >&lt;p&gt;Sigh... The WAL files would still need to be sync&apos;ed upon blockclose. Since they mix data from different stores, there&apos;s no telling ahead of time. Which leads to:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;global hsync option upon close block for HFiles and Hlogs (makes no sense to sync HLogs but not HFiles or vice versa)&lt;/li&gt;
	&lt;li&gt;global WAL edit hsync option&lt;/li&gt;
	&lt;li&gt;hsync CF&apos;s WAL edits&lt;/li&gt;
	&lt;li&gt;WAL hsync per Put/Delete/Append/Increment/etc&lt;/li&gt;
&lt;/ol&gt;
</comment>
                            <comment id="13462584" author="vicaya" created="Tue, 25 Sep 2012 09:05:01 +0000"  >&lt;p&gt;Hi Lars,&lt;/p&gt;

&lt;p&gt;We just noticed that &lt;a href=&quot;https://issues.apache.org/jira/browse/HDFS-744&quot; title=&quot;Support hsync in HDFS&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HDFS-744&quot;&gt;&lt;del&gt;HDFS-744&lt;/del&gt;&lt;/a&gt; did not implement the correct hsync semantics (mostly due to &lt;a href=&quot;https://issues.apache.org/jira/browse/HDFS-265&quot; title=&quot;Revisit append&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HDFS-265&quot;&gt;&lt;del&gt;HDFS-265&lt;/del&gt;&lt;/a&gt;) so that the hsync is slower AND (arguably) less durable than hflush in Hadoop 1.x.&lt;/p&gt;</comment>
                            <comment id="13474827" author="lhofhansl" created="Fri, 12 Oct 2012 05:56:25 +0000"  >&lt;p&gt;Hi Luke,&lt;/p&gt;

&lt;p&gt;you mean hflush in hadoop 2 less durable than hflush in hadoop 1. hsync is still better (even when it is not on the synchronous path, so there&apos;s a little gap where a client was told that everything is on disk when in fact it isn&apos;t).&lt;/p&gt;

&lt;p&gt;Filed &lt;a href=&quot;https://issues.apache.org/jira/browse/HDFS-3979&quot; title=&quot;Fix hsync semantics&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HDFS-3979&quot;&gt;&lt;del&gt;HDFS-3979&lt;/del&gt;&lt;/a&gt; (you know that &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;, just for the benefit of others reading here), which needs some testing to be committed.&lt;/p&gt;

&lt;p&gt;Since the hsync code is only in hadoop 2.1.0+ we&apos;d need a new shim here for that version (or reflect the sh*t out of it).&lt;/p&gt;

&lt;p&gt;I&apos;m still happy to commit this to 0.94.x.&lt;/p&gt;</comment>
                            <comment id="13474886" author="vicaya" created="Fri, 12 Oct 2012 08:33:50 +0000"  >&lt;blockquote&gt;&lt;p&gt;hsync is still better (even when it is not on the synchronous path, so there&apos;s a little gap where a client was told that everything is on disk when in fact it isn&apos;t).&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;No. It (hsync) is worse in the sense that there will be data loss (i.e., inconsistency: acked writes missing) if people bounce hdfs, while hbase is still writing. Bouncing hdfs happens much more often in practice than actual machine/pdu failures. To put it more strongly, hsync in the current hadoop 2 is semantically wrong.&lt;/p&gt;</comment>
                            <comment id="13475114" author="lhofhansl" created="Fri, 12 Oct 2012 16:23:55 +0000"  >&lt;p&gt;I disagree, having the signal out for the DNs to sync durably to disk now (even if they only do as soon as they get to it) is better than having an indefinite amount in which the data on only in volatile memory (which is as good as we can get with only hflush).&lt;/p&gt;

&lt;p&gt;But let&apos;s not harp this point... We all agree that it needs to be fixed.&lt;/p&gt;

&lt;p&gt;I could use some help testing &lt;a href=&quot;https://issues.apache.org/jira/browse/HDFS-3979&quot; title=&quot;Fix hsync semantics&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HDFS-3979&quot;&gt;&lt;del&gt;HDFS-3979&lt;/del&gt;&lt;/a&gt;. I believe the pipeline tests cover the failure scenarios (which are the same whether we flush/sync or not), the test needed there is verifying that the fsync is on the synchronous path of the client.&lt;/p&gt;</comment>
                            <comment id="13475338" author="kzhang" created="Fri, 12 Oct 2012 20:43:27 +0000"  >&lt;p&gt;It&apos;s true hsync is better than hflush in terms of persisting to disk. However, IMO, what&apos;s important for apps is whether it is safe to discard data from their buffers when acknowledged (without having to worry about retrying the writes in case of cluster failures). The current hsync doesn&apos;t give you that assurance, while both pre and after &lt;a href=&quot;https://issues.apache.org/jira/browse/HDFS-265&quot; title=&quot;Revisit append&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HDFS-265&quot;&gt;&lt;del&gt;HDFS-265&lt;/del&gt;&lt;/a&gt; hflush implementations do with respect to the semantics they support.&lt;/p&gt;</comment>
                            <comment id="13475475" author="lhofhansl" created="Sat, 13 Oct 2012 00:58:38 +0000"  >&lt;p&gt;Wait, in all cases the data was flushed to the DN. hsync and hflush give exactly the same guarantees here (it&apos;s the same code path).&lt;br/&gt;
If hsync is broken here, so it hflush.&lt;/p&gt;

&lt;p&gt;What can currently happen (past &lt;a href=&quot;https://issues.apache.org/jira/browse/HDFS-265&quot; title=&quot;Revisit append&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HDFS-265&quot;&gt;&lt;del&gt;HDFS-265&lt;/del&gt;&lt;/a&gt;) for both hflush and hsync is that the data is still in the DN buffers (not in the OS buffers - in case of hflush,  or on disk - in case of hsync)... Unless I seriously misunderstand.&lt;/p&gt;</comment>
                            <comment id="13475491" author="kzhang" created="Sat, 13 Oct 2012 01:48:43 +0000"  >&lt;p&gt;Hi Lars, I think you did misunderstand what I said, esp. on the part &quot;... with respect to the semantics they support.&quot; &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; As you know, post &lt;a href=&quot;https://issues.apache.org/jira/browse/HDFS-265&quot; title=&quot;Revisit append&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HDFS-265&quot;&gt;&lt;del&gt;HDFS-265&lt;/del&gt;&lt;/a&gt; hflush implements API3 and when hflush returns data is guaranteed to be in the DN buffers on all replica nodes, which is what API3 promises and client can&apos;t expect anything more than that by calling hflush. But client would expect data to hit disk by calling hsync, which is not guaranteed to happen in the current implementation. The expected semantics are simply different for hflush and hsync.&lt;/p&gt;</comment>
                            <comment id="13475511" author="lhofhansl" created="Sat, 13 Oct 2012 03:20:27 +0000"  >&lt;p&gt;I see, you&apos;re right, the expectations are different. Let&apos;s fix &lt;a href=&quot;https://issues.apache.org/jira/browse/HDFS-3979&quot; title=&quot;Fix hsync semantics&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HDFS-3979&quot;&gt;&lt;del&gt;HDFS-3979&lt;/del&gt;&lt;/a&gt; already &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13482973" author="lhofhansl" created="Wed, 24 Oct 2012 05:05:07 +0000"  >&lt;p&gt;Unscheduling from both 0.94 and 0.96 until &lt;a href=&quot;https://issues.apache.org/jira/browse/HDFS-3979&quot; title=&quot;Fix hsync semantics&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HDFS-3979&quot;&gt;&lt;del&gt;HDFS-3979&lt;/del&gt;&lt;/a&gt; is committed.&lt;/p&gt;</comment>
                            <comment id="13493707" author="xieliang007" created="Fri, 9 Nov 2012 03:22:18 +0000"  >&lt;p&gt;Hi &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt;,the &lt;a href=&quot;https://issues.apache.org/jira/browse/HDFS-3979&quot; title=&quot;Fix hsync semantics&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HDFS-3979&quot;&gt;&lt;del&gt;HDFS-3979&lt;/del&gt;&lt;/a&gt; has been committed, so maybe we can have a more clear target/fix version plan on &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5954&quot; title=&quot;Allow proper fsync support for HBase&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5954&quot;&gt;&lt;del&gt;HBASE-5954&lt;/del&gt;&lt;/a&gt; now, right?&lt;/p&gt;</comment>
                            <comment id="13494390" author="lhofhansl" created="Fri, 9 Nov 2012 22:49:49 +0000"  >&lt;p&gt;I&apos;m planning to pick this up again, soon.&lt;/p&gt;</comment>
                            <comment id="13503321" author="lhofhansl" created="Sat, 24 Nov 2012 02:06:37 +0000"  >&lt;p&gt;While I&apos;m at it, I&apos;d like to add deferred log flush as a per operation option as well.&lt;br/&gt;
So we&apos;d have:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;No WAL update (for the existing option to disable writing to the WAL)&lt;/li&gt;
	&lt;li&gt;deferred log flush&lt;/li&gt;
	&lt;li&gt;flush WAL (default)&lt;/li&gt;
	&lt;li&gt;sync WAL&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;If there are multiple mutations in a batch the highest option will be used for the entire batch.&lt;/p&gt;

&lt;p&gt;Since these options cannot be combined in a sensible way. This is best represented by an enum.&lt;br/&gt;
In 0.96, we can break wire compatibility. I&apos;ll just add a protobuf enum, and remove the current writeToWal bit. The actual logic will be put in the hadoop-2 shim module.&lt;/p&gt;

&lt;p&gt;In 0.94 this is a bit more tricky. Both in terms of doing this in a wire compatible way and in terms of being forced to use reflection to detect and use Hadoop-2 vs Hadoop-1. Leaning towards only doing this in 0.96, even though I really wanted this in 0.94. &lt;/p&gt;

&lt;p&gt;Comments?&lt;/p&gt;</comment>
                            <comment id="13503326" author="xieliang007" created="Sat, 24 Nov 2012 03:08:13 +0000"  >&lt;p&gt;sound good for me.  hope more guys have an eye on it&lt;/p&gt;</comment>
                            <comment id="13503461" author="lhofhansl" created="Sun, 25 Nov 2012 05:35:48 +0000"  >&lt;p&gt;In 0.96 Put.java, Delete.java, and Increment.java still have readFields() and write() methods from writable.&lt;br/&gt;
Were they left over by accident? I assume those can be removed now?&lt;/p&gt;</comment>
                            <comment id="13503528" author="jxiang" created="Sun, 25 Nov 2012 17:41:25 +0000"  >&lt;p&gt;Those methods should be removed. But old applications may not compile any more if someone happens to use them. Are we ok with that?&lt;/p&gt;</comment>
                            <comment id="13503557" author="lhofhansl" created="Sun, 25 Nov 2012 21:23:07 +0000"  >&lt;p&gt;I&apos;d vote for removing them. If we keep these we have failed with wire compatibility and all the protofuf stuff was for nothing.&lt;/p&gt;

&lt;p&gt;Put/Delete is still used as writable at least in these cases:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;IdentityTableReduce.java&lt;/li&gt;
	&lt;li&gt;MultiPut.java&lt;/li&gt;
	&lt;li&gt;HRegionServer.checkAndMutate&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13503558" author="apurtell" created="Sun, 25 Nov 2012 21:26:40 +0000"  >&lt;blockquote&gt;&lt;p&gt;I&apos;d vote for removing them. If we keep these we have failed with wire compatibility and all the protofuf stuff was for nothing.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;+1&lt;/p&gt;</comment>
                            <comment id="13503613" author="lhofhansl" created="Mon, 26 Nov 2012 03:08:56 +0000"  >&lt;p&gt;Filed &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7215&quot; title=&quot;Put, Delete, Increment, Result, all all HBase M/R classes still implement/use Writable&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7215&quot;&gt;&lt;del&gt;HBASE-7215&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="13532908" author="varunsharma" created="Sat, 15 Dec 2012 02:23:51 +0000"  >&lt;p&gt;Btw, are we going to provide a hard option of whether to do either a &quot;sync&quot; or a &quot;flush&quot; per transaction ? A middle ground feature like syncing every N seconds (like there is in REDIS) or every N edits (like there is in MySQL) would be a nice to have. This might also be doable on the client side by forcing the N-th RPC to be a sync operation but would be nice on the server side.&lt;/p&gt;</comment>
                            <comment id="13532911" author="qwertymaniac" created="Sat, 15 Dec 2012 02:30:01 +0000"  >&lt;blockquote&gt;&lt;p&gt;A middle ground feature like syncing every N seconds (like there is in REDIS) or every N edits (like there is in MySQL) would be a nice to have.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Are you looking for deferred WAL flush (per-CF property)?&lt;/p&gt;</comment>
                            <comment id="13532914" author="varunsharma" created="Sat, 15 Dec 2012 02:43:21 +0000"  >&lt;p&gt;No I am not talking about deferred WAL flush. This is what I know but i maybe wrong:&lt;br/&gt;
1) HBase uses hflush for WAL which ensures that data is in OS buffers and leaves the data in the hands of the OS - after that the time from OS cache -&amp;gt; disk persistence is variable&lt;br/&gt;
2) With sync, we will synchronize the WAL to disk so there is no data loss&lt;/p&gt;

&lt;p&gt;I am asking about the possibility of intermittent sync(s) performed by the region server every N edits - so N edits where we do hflush and then we do hsync or every N seconds. Because, going from hflush -&amp;gt; hsync for WAL will kill performance. If we can have gaurantees that say last 1 or 0.5 second worth of data is intact and similarly, you can lose 1000 edits in case of power failure - that is a nice to have.&lt;/p&gt;</comment>
                            <comment id="13532941" author="lhofhansl" created="Sat, 15 Dec 2012 05:25:30 +0000"  >&lt;p&gt;We can make this arbitrarily complicated. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;A flush or deferred log flush gets us pretty far. It&apos;ll flush the data to the data nodes, which will then asynchronously (but ASAP) flush it to the OS buffers. In Linux the dirty page cache is periodically flushed to disk (that can be configured - default is 30s). I am not sure what else you want?&lt;/p&gt;

&lt;p&gt;sync&apos;ing only really makes sense (IMHO) when it is done synchronously.&lt;/p&gt;</comment>
                            <comment id="13532989" author="varunsharma" created="Sat, 15 Dec 2012 11:13:41 +0000"  >&lt;p&gt;Firstly, I certainly don&apos;t want to complicate this too much - this is a really nice functionality to have and we can worry about the details later.&lt;/p&gt;

&lt;p&gt;So, in a lot of systems, there is variability of amount of edits per second - lets say high in the night but low during the day, so the you lose more data during the night than day if this is only time bound. Some systems like mySQL have a bound on the number of edits before syncing - that saidm I am happy with what we have, in its current form. What I suggest is only a nice to have...&lt;/p&gt;

&lt;p&gt;THanks&lt;/p&gt;</comment>
                            <comment id="13697289" author="davelatham" created="Mon, 1 Jul 2013 22:46:34 +0000"  >&lt;p&gt;Would be great to see this go in to 0.96.  Lars or anyone still chewing on it?&lt;br/&gt;
(Recently suffered a datacenter wide power loss and lost some hfiles from regions that completed a major compaction seconds beforehand).&lt;/p&gt;</comment>
                            <comment id="13697293" author="lhofhansl" created="Mon, 1 Jul 2013 22:58:24 +0000"  >&lt;p&gt;With &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7801&quot; title=&quot;Allow a deferred sync option per Mutation.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7801&quot;&gt;&lt;del&gt;HBASE-7801&lt;/del&gt;&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8375&quot; title=&quot;Durability setting per table&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-8375&quot;&gt;&lt;del&gt;HBASE-8375&lt;/del&gt;&lt;/a&gt; we&apos;re almost there.&lt;br/&gt;
The only part missing is to actually hook in the fsync part.&lt;br/&gt;
Did not do it yet, because of reflection hell. In 0.96 we have separate modules for hadoop versions, so we can avoid reflection there.&lt;/p&gt;</comment>
                            <comment id="13697294" author="lhofhansl" created="Mon, 1 Jul 2013 22:59:58 +0000"  >&lt;p&gt;Note that for performance reasons you probably do not want this (sync edits in the WAL). You probably just want to enable sync-on-close in HDFS.&lt;/p&gt;</comment>
                            <comment id="13697300" author="enis" created="Mon, 1 Jul 2013 23:04:50 +0000"  >&lt;blockquote&gt;&lt;p&gt;Would be great to see this go in to 0.96.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Agreed. Initially not performant, this will enable us to work on the performance issues as well. &lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;You probably just want to enable sync-on-close in HDFS.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Should we make this default?&lt;/p&gt;</comment>
                            <comment id="13697304" author="stack" created="Mon, 1 Jul 2013 23:07:52 +0000"  >&lt;blockquote&gt;&lt;p&gt;Should we make this default?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I&apos;d vote for that.&lt;/p&gt;</comment>
                            <comment id="13697343" author="sureshms" created="Mon, 1 Jul 2013 23:52:05 +0000"  >&lt;blockquote&gt;&lt;p&gt;Should we make this default?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;+1 from me as well. &lt;/p&gt;</comment>
                            <comment id="13697361" author="davelatham" created="Tue, 2 Jul 2013 00:31:16 +0000"  >&lt;blockquote&gt;&lt;p&gt;You probably just want to enable sync-on-close in HDFS.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Referring to &lt;a href=&quot;https://issues.apache.org/jira/browse/HDFS-1539&quot; title=&quot;prevent data loss when a cluster suffers a power loss&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HDFS-1539&quot;&gt;&lt;del&gt;HDFS-1539&lt;/del&gt;&lt;/a&gt;?&lt;/p&gt;

&lt;p&gt;+1&lt;/p&gt;</comment>
                            <comment id="13697588" author="lhofhansl" created="Tue, 2 Jul 2013 07:53:56 +0000"  >&lt;p&gt;This is a HDFS server side setting, though, so we cannot enforce that via an HBase config.&lt;br/&gt;
From my tests I found that this must be paired with the sync behind writes hint, otherwise file creation is quite slow (50 or more ms per file in a real cluster).&lt;/p&gt;

&lt;p&gt;And obviously this does not help with last edits in the WAL, as they are not in a closed block.&lt;/p&gt;</comment>
                            <comment id="13697591" author="lhofhansl" created="Tue, 2 Jul 2013 07:56:53 +0000"  >&lt;p&gt;And yes &lt;a href=&quot;https://issues.apache.org/jira/browse/HDFS-1539&quot; title=&quot;prevent data loss when a cluster suffers a power loss&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HDFS-1539&quot;&gt;&lt;del&gt;HDFS-1539&lt;/del&gt;&lt;/a&gt; as well as &lt;a href=&quot;https://issues.apache.org/jira/browse/HDFS-2465&quot; title=&quot;Add HDFS support for fadvise readahead and drop-behind&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HDFS-2465&quot;&gt;&lt;del&gt;HDFS-2465&lt;/del&gt;&lt;/a&gt; for the fadvice hints.&lt;/p&gt;</comment>
                            <comment id="13726428" author="davelatham" created="Thu, 1 Aug 2013 13:44:43 +0000"  >&lt;p&gt;Should update the recommended HDFS configuration in the book then?  I think losing a region of data after a compaction and power failure should be prevented by default.&lt;/p&gt;</comment>
                            <comment id="13728628" author="stack" created="Sat, 3 Aug 2013 20:21:47 +0000"  >&lt;p&gt;What is to be done to finish this up for 0.95?  I&apos;ve marked it critical so gets attention.&lt;/p&gt;</comment>
                            <comment id="13728717" author="lhofhansl" created="Sun, 4 Aug 2013 01:32:29 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7801&quot; title=&quot;Allow a deferred sync option per Mutation.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7801&quot;&gt;&lt;del&gt;HBASE-7801&lt;/del&gt;&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8375&quot; title=&quot;Durability setting per table&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-8375&quot;&gt;&lt;del&gt;HBASE-8375&lt;/del&gt;&lt;/a&gt; put the right client APIs in place, and in 0.95+ we have the Hadoop1/Hadoop2 modules to avoid reflection hell.&lt;/p&gt;

&lt;p&gt;This is then just a matter of:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;Instantiate a Writer with sync-on-close enabled&lt;/li&gt;
	&lt;li&gt;pass the fsync through to our log syncer and issue the sync when requested&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;I think we would not allow pairing fsync with asynchronous sync&apos;ing (the current API would not support it anyway).&lt;/p&gt;

&lt;p&gt;I&apos;ll see if I can find some time next week. Although my guess is that most folks want global sync-on-close and global sync-behind-writes on the HDFS cluster backing HBase.&lt;/p&gt;</comment>
                            <comment id="13752931" author="stack" created="Wed, 28 Aug 2013 22:01:43 +0000"  >&lt;p&gt;This can go in any time.  Doesn&apos;t have to be plugged against 0.96.0&lt;/p&gt;</comment>
                            <comment id="13754419" author="haosdent@gmail.com" created="Fri, 30 Aug 2013 06:16:04 +0000"  >&lt;p&gt;hi, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt;, whether your disks have raid or not? I have tested the hsync of hdfs again and again. I found it will spent nearly 50ms while hflush just spent 2ms on non-raid disks.&lt;/p&gt;</comment>
                            <comment id="13754467" author="haosdent@gmail.com" created="Fri, 30 Aug 2013 07:43:58 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt; My test result:&lt;br/&gt;
Without WAL/HFile sync: ~13s&lt;br/&gt;
With WAL/HFile sync: ~120s&lt;/p&gt;

&lt;p&gt;Anything wrong?&lt;/p&gt;</comment>
                            <comment id="13754475" author="haosdent@gmail.com" created="Fri, 30 Aug 2013 07:52:24 +0000"  >&lt;p&gt;Only when we open write barrier and mount disk with &quot;data=ordered&quot;, we could make sure that the data have been flush to physics disk after we call fsync system call.&lt;/p&gt;</comment>
                            <comment id="13754495" author="xieliang007" created="Fri, 30 Aug 2013 08:30:17 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=haosdent%40gmail.com&quot; class=&quot;user-hover&quot; rel=&quot;haosdent@gmail.com&quot;&gt;haosdent&lt;/a&gt;, IMHO, fsync + write barrier combination should has guarantee the data be written to disk (with issuing a disk cache flush instruction).  is it relatived with &quot;data=ordered&quot; mount option?  thanks&lt;/p&gt;</comment>
                            <comment id="13754646" author="haosdent@gmail.com" created="Fri, 30 Aug 2013 12:35:23 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=xieliang007&quot; class=&quot;user-hover&quot; rel=&quot;xieliang007&quot;&gt;Liang Xie&lt;/a&gt;If mount disk with &quot;data=writeback&quot;, the dirty data may be in disk cache after fsync system call return. Until the data more than a ratio in disk cache or timer is trigger, them will flush to physics storage. We could improve the performance of hsync by disable journal and write cache. But after disable write cache, the whole write performance is worse than before. Fsync is a very heavy system call, I think it is unfeasible to call fsync after every write operation. Just post my test result about fsync roughly below:&lt;/p&gt;

&lt;p&gt;1.ext4,noatime,barrier=1,data=ordered, enable disk write cache, enable journal, append 4k to a file&lt;br/&gt;
fdatasync 25ms&lt;br/&gt;
fsync 25ms&lt;br/&gt;
2.ext4,noatime,barrier=0,data=writeback, disable disk write cache, enable journal, append 4k to a file&lt;br/&gt;
fdatasync 33ms&lt;br/&gt;
fsync 33ms&lt;br/&gt;
3.ext4,noatime,barrier=0,data=writeback, disable disk write cache, disable journal, append 4k to a file&lt;br/&gt;
fdatasync 8ms&lt;br/&gt;
fsync 8ms&lt;/p&gt;</comment>
                            <comment id="13754654" author="haosdent@gmail.com" created="Fri, 30 Aug 2013 12:46:10 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=xieliang007&quot; class=&quot;user-hover&quot; rel=&quot;xieliang007&quot;&gt;Liang Xie&lt;/a&gt;Because there is only have a journal file on every disk in extN, the system will commit all files metadata transactions when we open write barrier. After flush all files metadata transactions to the journal file in physics disk, the system will flush data(both metadata and block) of the special file to disk. So the fsync would spent more time when we have a lot of IO in a disk. My weibo is &lt;a href=&quot;http://weibo.com/haosdent&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://weibo.com/haosdent&lt;/a&gt; , welcome for more discussion. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13754869" author="lhofhansl" created="Fri, 30 Aug 2013 16:34:32 +0000"  >&lt;p&gt;@haosdent, we can&apos;t break the laws of physics. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;br/&gt;
If you sync &lt;b&gt;every single edit&lt;/b&gt; you&apos;ll see terrible performance, how can we expect otherwise?&lt;br/&gt;
HBase (even without fsync) wants things in batches, in PE HTable is doing it&apos;s default batching (2m batches), so that&apos;s where the cost is amortized.&lt;/p&gt;

&lt;p&gt;Enabling sync behind writes should improve this too (since we&apos;re writing immutable data), since by the time we issue the sync some data will already be sync&apos;ed.&lt;/p&gt;

&lt;p&gt;Lastly, fsync is fsync (or rather fdatasync and friends since we&apos;re sync&apos;ing files and not filesystems)... Once executed, previously cached data is on disk no matter what the filesystem chooses to cache during normal operations; only barriers are needed for correctness (AFAIK).&lt;/p&gt;</comment>
                            <comment id="13755411" author="haosdent@gmail.com" created="Sat, 31 Aug 2013 05:07:25 +0000"  >&lt;p&gt;When we use the hsync of HDFS, the JVM in datanode will call fsync or fdatasync to ensure the dirty data of file is flush to stable storage. When I do the test as same as &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt;, I have this test result:&lt;br/&gt;
Without WAL/HFile sync: ~13s&lt;br/&gt;
With WAL sync, Without HFile sync: ~120s (Sorry, I make some input mistakes before.)&lt;/p&gt;

&lt;p&gt;I think you may unclear about the differences between &quot;data=writeback&quot; and &quot;data=order, barrier=1&quot;. These posts may be help you understand them.&lt;br/&gt;
1.&lt;a href=&quot;https://access.redhat.com/site/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Storage_Administration_Guide/writebarr.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://access.redhat.com/site/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Storage_Administration_Guide/writebarr.html&lt;/a&gt;&lt;br/&gt;
2.&lt;a href=&quot;http://lwn.net/Articles/457667/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://lwn.net/Articles/457667/&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13760865" author="vicaya" created="Sat, 7 Sep 2013 02:05:46 +0000"  >&lt;p&gt;As you&apos;ve found out, the fsync performance is very sensitive to the disk controller and its settings. You need a SATA/SAS controller (RAID or not) with battery or (recently) flash (FBWC in HP cards, nvcache in Dell cards) backed write cache to get good and safe sync performance on HDFS as the additional seek to sync the checksum file is really expensive without a write cache to queue the writes, which calls for &lt;a href=&quot;https://issues.apache.org/jira/browse/HDFS-2699&quot; title=&quot;Store data and checksums together in block file&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HDFS-2699&quot;&gt;HDFS-2699&lt;/a&gt;, which I think should be an per file option.&lt;/p&gt;</comment>
                            <comment id="13760918" author="lhofhansl" created="Sat, 7 Sep 2013 04:47:59 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=haosdent%40gmail.com&quot; class=&quot;user-hover&quot; rel=&quot;haosdent@gmail.com&quot;&gt;haosdent&lt;/a&gt; From the article you linked: &quot;With barriers enabled, an fsync() call will also issue a storage cache flush.&quot;, which is exactly what I said.&lt;/p&gt;</comment>
                            <comment id="13760919" author="lhofhansl" created="Sat, 7 Sep 2013 04:50:21 +0000"  >&lt;p&gt;Also, my tests above were run with write barriers enabled and data=ordered. Did you run PE, or a different test?&lt;/p&gt;</comment>
                            <comment id="13761704" author="haosdent@gmail.com" created="Mon, 9 Sep 2013 08:39:16 +0000"  >&lt;p&gt;&amp;gt;my tests above were run with write barriers enabled and data=ordered.&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt;It seems very interesting. Did you use RAID?&lt;/p&gt;</comment>
                            <comment id="13762049" author="lhofhansl" created="Mon, 9 Sep 2013 17:16:10 +0000"  >&lt;p&gt;Not sure on which machine I ran this now. I can redo. On my work machine I have 4 disks in RAID10.&lt;/p&gt;</comment>
                            <comment id="13762652" author="haosdent@gmail.com" created="Tue, 10 Sep 2013 02:27:56 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt;Haha, I have test hsync() in RAID10 before. A hsync() call would spent 4ms. Because the data are written to RAID card cache, it is very fast.&lt;/p&gt;</comment>
                            <comment id="13762719" author="lhofhansl" created="Tue, 10 Sep 2013 04:44:38 +0000"  >&lt;p&gt;Nope. Software RAID.&lt;/p&gt;</comment>
                            <comment id="13764643" author="haosdent@gmail.com" created="Wed, 11 Sep 2013 19:12:04 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt; Oh, are you sure you disks didn&apos;t have RAID card? I test hsync() again and again. The test result shows hsync() is a very heavy operation.&lt;/p&gt;</comment>
                            <comment id="13834246" author="apurtell" created="Wed, 27 Nov 2013 22:31:42 +0000"  >&lt;p&gt;Where are we with this issue?&lt;/p&gt;</comment>
                            <comment id="13834271" author="lhofhansl" created="Wed, 27 Nov 2013 22:48:29 +0000"  >&lt;p&gt;It&apos;s probably best to unschedule this for now.&lt;/p&gt;</comment>
                            <comment id="13835187" author="apurtell" created="Fri, 29 Nov 2013 05:35:05 +0000"  >&lt;p&gt;Unscheduled.&lt;/p&gt;</comment>
                            <comment id="14164816" author="lhofhansl" created="Thu, 9 Oct 2014 06:22:24 +0000"  >&lt;p&gt;I&apos;d like to pick this up again.&lt;br/&gt;
In HBase trunk (2.x) can I assume we&apos;ll only support versions of Hadoop that have &lt;a href=&quot;https://issues.apache.org/jira/browse/HDFS-744&quot; title=&quot;Support hsync in HDFS&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HDFS-744&quot;&gt;&lt;del&gt;HDFS-744&lt;/del&gt;&lt;/a&gt; (i.e. 2.0.2 or later). I think that is the case. If that is indeed the case I can do away with all reflection and just use the APIs that allow me to set.&lt;/p&gt;

&lt;p&gt;Note that this puts the performance burden on the client. The client can force &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;sync every edit -&amp;gt; slow&lt;/li&gt;
	&lt;li&gt;batch the edits -&amp;gt; caused only one fsync&lt;/li&gt;
	&lt;li&gt;perform write with flush only followed by an write with forced sync -&amp;gt; that will force all prior edit to disk as well (works as we&apos;ll automatically sync a block when closed in this mode)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I need to check whether sync-behind-writes can be enabled on a per file basis in HDFS. Sync-on-close without sync-behind-writes is extremely slow.&lt;/p&gt;

&lt;p&gt;In fact as discussed above sync-on-close and sync-behind-writes should be enabled by default in all HDFS installations. Since HDFS writes immutable files only there is no use hanging on dirty blocks (in the hopes that they&apos;ll be updated again before they get written to disk, and thus sync-behind-writes should not slow things down - it&apos;s possible that there&apos;re other effects of course).&lt;/p&gt;</comment>
                            <comment id="14167248" author="enis" created="Fri, 10 Oct 2014 18:20:06 +0000"  >&lt;blockquote&gt;&lt;p&gt;In HBase trunk (2.x) can I assume we&apos;ll only support versions of Hadoop that have &lt;a href=&quot;https://issues.apache.org/jira/browse/HDFS-744&quot; title=&quot;Support hsync in HDFS&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HDFS-744&quot;&gt;&lt;del&gt;HDFS-744&lt;/del&gt;&lt;/a&gt; (i.e. 2.0.2 or later). I think that is the case. If that is indeed the case I can do away with all reflection and just use the APIs that allow me to set.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;We have dropped support for hadoop-1, and all hadoop versions before 2.2 is alpha or beta anyway. Only exception is FB&apos;s hadoop. cc&apos;ing &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=eclark&quot; class=&quot;user-hover&quot; rel=&quot;eclark&quot;&gt;Elliott Clark&lt;/a&gt;. &lt;/p&gt;
</comment>
                            <comment id="14167260" author="busbey" created="Fri, 10 Oct 2014 18:28:14 +0000"  >&lt;p&gt;Lars around when are you planning to get work on this going? I&apos;m hoping to wrap up &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10378&quot; title=&quot;Divide HLog interface into User and Implementor specific interfaces&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10378&quot;&gt;&lt;del&gt;HBASE-10378&lt;/del&gt;&lt;/a&gt; early next week and it changes some APIs.&lt;/p&gt;</comment>
                            <comment id="14168005" author="lhofhansl" created="Sat, 11 Oct 2014 05:09:51 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=busbey&quot; class=&quot;user-hover&quot; rel=&quot;busbey&quot;&gt;Sean Busbey&lt;/a&gt;, I&apos;ll wait until your changes are in.&lt;/p&gt;</comment>
                            <comment id="14168006" author="eclark" created="Sat, 11 Oct 2014 05:15:00 +0000"  >&lt;p&gt;So I have to have split personality here. Though for the most part they agree.&lt;br/&gt;
&lt;b&gt;apache hat on&lt;/b&gt; Facebook&apos;s hdfs is ancient and shouldn&apos;t hold the apache hbase project back&lt;br/&gt;
&lt;b&gt;fb hat on&lt;/b&gt; Facebook has to keep a small patch on top of anything from Apache HBase. So as long as things are pretty contained we&apos;ll be alright.&lt;/p&gt;</comment>
                            <comment id="14168007" author="lhofhansl" created="Sat, 11 Oct 2014 05:21:30 +0000"  >&lt;p&gt;The alternative is that fold this into the hadoop/hadoop2 compat modules, not sure even that would help with FBs version of Hadoop.&lt;/p&gt;</comment>
                            <comment id="14222246" author="lhofhansl" created="Sat, 22 Nov 2014 23:18:36 +0000"  >&lt;p&gt;Looking at trunk this is a whole lot more complicated now. We need to keep two highest sequence numbers now, one for a normal sync (i.e. hflush) and fsync (i.e. hsync). The SyncFutures have to carry an fsync flag. And if FSLog.SyncRunner.run() need to keep track of two sequence numbers as well. As well as the logic to release other futures in the queue... Looks pretty tricky to merge this in.&lt;/p&gt;</comment>
                            <comment id="14222289" author="stack" created="Sun, 23 Nov 2014 02:33:07 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt; I don&apos;t mind having a go at it if you want; its my mess.&lt;/p&gt;</comment>
                            <comment id="14222294" author="lhofhansl" created="Sun, 23 Nov 2014 02:48:04 +0000"  >&lt;p&gt;I don&apos;t mind having a look. Still looking into how it fits best. Seems that the options are:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;have each SyncRunner keep two sequences and sequence numbers (sync and fsync) and work off a single queue&lt;/li&gt;
	&lt;li&gt;have different SyncRunners for sync and fsync and have two sync queues as well&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;#1 will be easier but a bit messy&lt;br/&gt;
#2 bit cleaner potentially will make it to share work between threads&lt;/p&gt;

&lt;p&gt;I have a half baked patch for #1.&lt;/p&gt;

&lt;p&gt;As we approach a world with ubiquitous SSDs this will become important.&lt;/p&gt;</comment>
                            <comment id="14222296" author="stack" created="Sun, 23 Nov 2014 03:24:04 +0000"  >&lt;p&gt;We have to support a mix of sync and fsync? I suppose we do.&lt;/p&gt;

&lt;p&gt;A successful fsync can let go of all handlers with sequenceid &amp;lt; fsync sequenceid; this would work as our sync currently does.&lt;/p&gt;

&lt;p&gt;A successful sync can only let go of all handlers waiting on sync &amp;#8211; can&apos;t release handlers waiting on an fsync.&lt;/p&gt;

&lt;p&gt;For #1 above, you&apos;d have highest sync sequenceid and highest fsync sequenceid?&lt;/p&gt;</comment>
                            <comment id="14222307" author="lhofhansl" created="Sun, 23 Nov 2014 04:43:50 +0000"  >&lt;p&gt;Yes, something like that.&lt;/p&gt;

&lt;p&gt;Here&apos;s a patch. Not pretty (I think), and &lt;b&gt;entirely&lt;/b&gt; untested.&lt;br/&gt;
It&apos;s likely that I have missed something as well.&lt;br/&gt;
Didn&apos;t pay attention to java doc or variable naming, yet.&lt;/p&gt;</comment>
                            <comment id="14222311" author="busbey" created="Sun, 23 Nov 2014 05:12:30 +0000"  >&lt;p&gt;Why support the mix though?&lt;/p&gt;

&lt;p&gt;The last time we checked the relative cost of hflush vs hsync over in Accumulo it was a severe penalty. Once we&apos;re in a world of prevalent SSDs and hsync is cheaper, why wouldn&apos;t we do it always, atleast for a given cluster?&lt;/p&gt;

&lt;p&gt;I&apos;m just wondering how many different practical use cases we gain by allowing the flexibility of per-request no-wal vs flush vs sync compared to a cluster-wide setting of flush vs sync and then per-request no-wal or whichever is configured.&lt;/p&gt;

&lt;p&gt;Since this would presumably be a configurable property on the wal provider, we could still make meta always hsync.&lt;/p&gt;</comment>
                            <comment id="14222321" author="lhofhansl" created="Sun, 23 Nov 2014 05:43:58 +0000"  >&lt;p&gt;Well... We do have the APIs already. We do not have a &quot;sync always means hsync&quot; flag, that would have been easier, but less flexible.&lt;br/&gt;
We could remove the API again (as FSYNC_WAL is identical to SYNC_WAL right now anyway, see the Durability class)... I.e. deprecating FSYNC_WAL.&lt;/p&gt;

&lt;p&gt;The idea was that the application knows best. It might do ASYNC_WAL most of the time, then issue a SYNC_WAL, and occasionally an FSYNC_WAL when it knows that this is necessary.&lt;/p&gt;

&lt;p&gt;Thinking about it, it would nice to get rid of this complexity (and I would no longer hate this patch either &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; ). This needs to be a careful decision, though. If we want to avoid the mixed handling we could not allow this on a per column family or even table level, it would need be on or off per cluster. In earlier discussions we wanted to avoid this due to the high cost of an fsync (until we have storage classes in HDFS or SSDs everywhere). I&apos;d be in favor of having this discussion again.&lt;/p&gt;

&lt;p&gt;BTW. My patch already has hsync for META always &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="14222326" author="lhofhansl" created="Sun, 23 Nov 2014 06:02:27 +0000"  >&lt;p&gt;Other related setting that would be absolutely required is HDFS&apos;s sync on close. Originally I thought we only need to put the WAL into sync on close mode (see &lt;a href=&quot;https://issues.apache.org/jira/browse/HDFS-744&quot; title=&quot;Support hsync in HDFS&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HDFS-744&quot;&gt;&lt;del&gt;HDFS-744&lt;/del&gt;&lt;/a&gt;), but since any compaction can randomly re-write old data and not sync it to disk unless instructed, it does not make much sense, unless we review every write in HBase and tag the DFS stream with the correct flags.&lt;br/&gt;
(If sync on close is paired with sync behind writes its performance effect is not too bad)&lt;/p&gt;</comment>
                            <comment id="14222459" author="stack" created="Sun, 23 Nov 2014 18:51:07 +0000"  >&lt;p&gt;Thinking on it, blanket fsync, or not, would be a little obnoxious.  Fine if all is running ssd but for the majority for a while to come who have less than this, they&apos;d appreciate no-sync, deferred-sync, sync, and fsync on a per-cf or even per-edit basis (&quot;application knows best&quot;).  Stuff like fsync on close we should do for sure under the covers.&lt;/p&gt;</comment>
                            <comment id="14229310" author="lhofhansl" created="Mon, 1 Dec 2014 00:54:18 +0000"  >&lt;p&gt;Yeah, we probably need the mixed handling.&lt;/p&gt;

&lt;p&gt;So any comment on the WIP patch? &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="14248882" author="lhofhansl" created="Tue, 16 Dec 2014 20:38:42 +0000"  >&lt;p&gt;After thinking about this for a little bit, I think we need to do this by edit and column family, the way my patch has it.&lt;br/&gt;
Please have a look at this patch, I think we should get this in. Along with this we need to document that you &lt;b&gt;have&lt;/b&gt; to run HDFS with sync-on-close and sync-behind-writes. (In fact everybody should do that in any case!)&lt;/p&gt;</comment>
                            <comment id="14248907" author="busbey" created="Tue, 16 Dec 2014 20:47:56 +0000"  >&lt;p&gt;Can you update the patch to include changes to WALPerformanceEvaluation to allow a mix of sync / fsync calls so we can see what the perf impact will look like?&lt;/p&gt;</comment>
                            <comment id="14248994" author="lhofhansl" created="Tue, 16 Dec 2014 21:34:37 +0000"  >&lt;p&gt;That&apos;s a good idea. Will do.&lt;br/&gt;
(In the end... We know there will be a non-trivial impact on rotating disks, we&apos;re doing this for to guard against power outages).&lt;/p&gt;</comment>
                            <comment id="14248998" author="busbey" created="Tue, 16 Dec 2014 21:37:07 +0000"  >&lt;p&gt;Oh certainly. I expect there&apos;s going to be a follow on ticket to add docs to the ref guide explaining the basic trade off and I want to make sure the code bits are in place so that whoever has to write that section can focus on tests rather than code gaps.&lt;/p&gt;</comment>
                            <comment id="14249518" author="lhofhansl" created="Wed, 17 Dec 2014 05:43:12 +0000"  >&lt;p&gt;rebased patch... Doesn&apos;t compile because of &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5162&quot; title=&quot;Basic client pushback mechanism&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5162&quot;&gt;&lt;del&gt;HBASE-5162&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
Just want to park it.&lt;/p&gt;</comment>
                            <comment id="14249523" author="lhofhansl" created="Wed, 17 Dec 2014 05:59:24 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt; since you mention it&apos;s more mess. Mind having a look? &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;br/&gt;
I&apos;ll get to some actual testing hopefully this week.&lt;/p&gt;</comment>
                            <comment id="14295425" author="stack" created="Wed, 28 Jan 2015 17:26:02 +0000"  >&lt;p&gt;fsync every meta edit? I suppose that makes sense.  Something we&apos;ve always wanted even.&lt;/p&gt;

&lt;p&gt;Do we want to keep a syncCount and an fSyncCount?&lt;/p&gt;

&lt;p&gt;It looks like&lt;/p&gt;

&lt;p&gt;            currentSequence = updateHighestSyncedSequence(currentSequence);&lt;/p&gt;

&lt;p&gt;highestSyncedSequence is the absolute highest, the highest for sync and fsync, which (I think) I follow.&lt;/p&gt;

&lt;p&gt;The patch looks good. I can&apos;t see anything obviously wrong. Lets get it in.  As per &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=busbey&quot; class=&quot;user-hover&quot; rel=&quot;busbey&quot;&gt;Sean Busbey&lt;/a&gt;, need write up that this long-wanted facility is now available. Would be cool to get numbers but that can be post-commit too.&lt;/p&gt;
</comment>
                            <comment id="14296377" author="lhofhansl" created="Thu, 29 Jan 2015 05:01:10 +0000"  >&lt;p&gt;I&apos;ll rebase the patch (if needed), and get a precommit run.&lt;br/&gt;
It&apos;ll be hard to verify with a test that this is doing what it should.&lt;br/&gt;
Maybe we should generally add some metrics around WALEdit, how many log entries, how many edits flushed and sync&apos;ed, etc. That would be generally useful, and let us write unittests.&lt;/p&gt;</comment>
                            <comment id="14296411" author="lhofhansl" created="Thu, 29 Jan 2015 05:42:23 +0000"  >&lt;p&gt;Updated patch. Let&apos;s get a test run.&lt;/p&gt;</comment>
                            <comment id="14296412" author="lhofhansl" created="Thu, 29 Jan 2015 05:43:20 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt;, can I use the traces to get the metrics I want? If so how do I enable that and get the metrics?&lt;/p&gt;</comment>
                            <comment id="14296413" author="lhofhansl" created="Thu, 29 Jan 2015 05:50:17 +0000"  >&lt;p&gt;Another thought. If we had HDFS storage classes and thus the ability to place the WAL on SSD, would we still want to allow (and force) the application to decide between hflush and hsync? We could simplify and offer two options:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;hflush (what we have now)&lt;/li&gt;
	&lt;li&gt;hsync on SSD&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;That would be a global HBase option.&lt;br/&gt;
We might want to think about a group commit option as well: Wait a bit (a few ms, maybe, in the ballpark of a disk rotation or so), and then sync all accumulated edits in one go. Callers would wait until the accumulated batch is done. Almost all relational databases do that. In that case we can allow fsync even with rotating disks and lose less or none of the throughput, at the expense of a slight increase tail latency (those callers who got into the batch first and have to wait until it filled up or reached its time limit).&lt;/p&gt;

&lt;p&gt;Here&apos;s the Postgres blurb on that: &lt;a href=&quot;http://www.postgresql.org/message-id/CAEYLb_V5Q8Zdjnkb4+30_dpD3NrgfoXhEurney3HsrCQsyDLWw@mail.gmail.com&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.postgresql.org/message-id/CAEYLb_V5Q8Zdjnkb4+30_dpD3NrgfoXhEurney3HsrCQsyDLWw@mail.gmail.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Just saying. I&apos;m also happy enough with this patch for now, and this patch would allow the application to strategically sync some of the edits even on rotating media.&lt;/p&gt;</comment>
                            <comment id="14296531" author="hadoopqa" created="Thu, 29 Jan 2015 07:43:40 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12695192/5954-v3-trunk.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12695192/5954-v3-trunk.txt&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 15a4738470ac02e8354e92998f0899072d8f4716.&lt;br/&gt;
  ATTACHMENT ID: 12695192&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 6 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javac&lt;/font&gt;.  The applied patch generated 112 javac compiler warnings (more than the master&apos;s current 111 warnings).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 1937 checkstyle errors (more than the master&apos;s current 1936 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces the following lines longer than 100:&lt;br/&gt;
    +    private int releaseSyncFutures(final long currentSequence, final long currentFSequence, final Throwable t) {&lt;br/&gt;
+      put.setDurability(opts.writeToWAL ? opts.fsyncWAL ? Durability.FSYNC_WAL : Durability.SYNC_WAL : Durability.SKIP_WAL);&lt;br/&gt;
+      put.setDurability(opts.writeToWAL ? opts.fsyncWAL ? Durability.FSYNC_WAL : Durability.SYNC_WAL : Durability.SKIP_WAL);&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.regionserver.TestSCVFWithMiniCluster&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestTimeRangeMapRed&lt;br/&gt;
                  org.apache.hadoop.hbase.replication.TestReplicationDisableInactivePeer&lt;br/&gt;
                  org.apache.hadoop.hbase.coprocessor.TestRegionObserverBypass&lt;br/&gt;
                  org.apache.hadoop.hbase.replication.TestReplicationSmallTests&lt;br/&gt;
                  org.apache.hadoop.hbase.wal.TestDefaultWALProviderWithHLogKey&lt;br/&gt;
                  org.apache.hadoop.hbase.replication.TestReplicationKillMasterRSCompressed&lt;br/&gt;
                  org.apache.hadoop.hbase.replication.TestReplicationEndpoint&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat&lt;br/&gt;
                  org.apache.hadoop.hbase.replication.TestReplicationKillMasterRS&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestCellCounter&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestMultiTableInputFormat&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestMultithreadedTableMapper&lt;br/&gt;
                  org.apache.hadoop.hbase.replication.TestReplicationKillSlaveRS&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 13 zombie test(s): 	at org.apache.hadoop.hbase.mapreduce.TestImportTsv.testMROnTableWithCustomMapper(TestImportTsv.java:153)&lt;br/&gt;
	at org.apache.hadoop.hbase.mapreduce.TestLoadIncrementalHFiles.testRegionCrossingHFileSplit(TestLoadIncrementalHFiles.java:193)&lt;br/&gt;
	at org.apache.hadoop.hbase.mapreduce.TestLoadIncrementalHFiles.testRegionCrossingHFileSplitRowColBloom(TestLoadIncrementalHFiles.java:189)&lt;br/&gt;
	at org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat2.testMRIncrementalLoad(TestHFileOutputFormat2.java:374)&lt;br/&gt;
	at org.apache.hadoop.hbase.mapreduce.TableSnapshotInputFormatTestBase.testWithMapReduce(TableSnapshotInputFormatTestBase.java:116)&lt;br/&gt;
	at org.apache.hadoop.hbase.mapreduce.TableSnapshotInputFormatTestBase.testWithMapReduceMultiRegion(TableSnapshotInputFormatTestBase.java:96)&lt;br/&gt;
	at org.apache.hadoop.hbase.mapreduce.TestLoadIncrementalHFiles.testTableWithCFNameStartWithUnderScore(TestLoadIncrementalHFiles.java:460)&lt;br/&gt;
	at org.apache.hadoop.hbase.mapreduce.TestLoadIncrementalHFiles.testRegionCrossingRowBloom(TestLoadIncrementalHFiles.java:128)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12631//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12631//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12631//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12631//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12631//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12631//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12631//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12631//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12631//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12631//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12631//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12631//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12631//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12631//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12631//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12631//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12631//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12631//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12631//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12631//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12631//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12631//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12631//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12631//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12631//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12631//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12631//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12631//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14297123" author="lhofhansl" created="Thu, 29 Jan 2015 16:50:15 +0000"  >&lt;p&gt;Now, that does not look too swell. Looking.&lt;/p&gt;</comment>
                            <comment id="14297219" author="lhofhansl" created="Thu, 29 Jan 2015 17:48:57 +0000"  >&lt;p&gt;These actually looks environmental. Trying again.&lt;/p&gt;</comment>
                            <comment id="14297220" author="lhofhansl" created="Thu, 29 Jan 2015 17:49:28 +0000"  >&lt;p&gt;Re-attaching to trigger another run.&lt;/p&gt;</comment>
                            <comment id="14297357" author="hadoopqa" created="Thu, 29 Jan 2015 19:07:22 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12695313/5954-v3-trunk.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12695313/5954-v3-trunk.txt&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 6bfa8ea977e991c372c0bef7faa49d6142befebc.&lt;br/&gt;
  ATTACHMENT ID: 12695313&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 6 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javac&lt;/font&gt;.  The applied patch generated 112 javac compiler warnings (more than the master&apos;s current 111 warnings).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 1940 checkstyle errors (more than the master&apos;s current 1939 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces the following lines longer than 100:&lt;br/&gt;
    +    private int releaseSyncFutures(final long currentSequence, final long currentFSequence, final Throwable t) {&lt;br/&gt;
+      put.setDurability(opts.writeToWAL ? opts.fsyncWAL ? Durability.FSYNC_WAL : Durability.SYNC_WAL : Durability.SKIP_WAL);&lt;br/&gt;
+      put.setDurability(opts.writeToWAL ? opts.fsyncWAL ? Durability.FSYNC_WAL : Durability.SYNC_WAL : Durability.SKIP_WAL);&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.util.TestMergeTable&lt;br/&gt;
                  org.apache.hadoop.hbase.util.TestMiniClusterLoadSequential&lt;br/&gt;
                  org.apache.hadoop.hbase.TestZooKeeper&lt;br/&gt;
                  org.apache.hadoop.hbase.util.TestRegionSplitter&lt;br/&gt;
                  org.apache.hadoop.hbase.util.TestMiniClusterLoadParallel&lt;br/&gt;
                  org.apache.hadoop.hbase.util.TestMiniClusterLoadEncoded&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 6 zombie test(s): &lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12634//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12634//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12634//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12634//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12634//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12634//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12634//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12634//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12634//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12634//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12634//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12634//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12634//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12634//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12634//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12634//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12634//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12634//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12634//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12634//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12634//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12634//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12634//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12634//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12634//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12634//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12634//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12634//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14297780" author="lhofhansl" created="Thu, 29 Jan 2015 22:01:10 +0000"  >&lt;p&gt;Hmm... &quot;Cannot create native thread&quot;? I fail to see how this is related.&lt;/p&gt;</comment>
                            <comment id="14297789" author="busbey" created="Thu, 29 Jan 2015 22:05:43 +0000"  >&lt;p&gt;that&apos;s usually a memory problem.&lt;/p&gt;</comment>
                            <comment id="14297893" author="lhofhansl" created="Thu, 29 Jan 2015 23:28:00 +0000"  >&lt;p&gt;Found it &lt;tt&gt;SyncRunner.releaseSyncFutures&lt;/tt&gt; would not terminate with the patch.&lt;br/&gt;
The idea is that if we synced to sequence number A and fsynced to sequence number B, it is safe to release all syncFuture before A or B, but only fsyncFutures before B.&lt;/p&gt;</comment>
                            <comment id="14298037" author="hadoopqa" created="Fri, 30 Jan 2015 01:29:37 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12695395/5954-v4-trunk.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12695395/5954-v4-trunk.txt&lt;/a&gt;&lt;br/&gt;
  against master branch at commit a5613efa7b22a31811cd326e9ad231911afdbde2.&lt;br/&gt;
  ATTACHMENT ID: 12695395&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 6 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javac&lt;/font&gt;.  The applied patch generated 112 javac compiler warnings (more than the master&apos;s current 111 warnings).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 1942 checkstyle errors (more than the master&apos;s current 1941 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces the following lines longer than 100:&lt;br/&gt;
    +    private int releaseSyncFutures(final long currentSequence, final long currentFSequence, final Throwable t) {&lt;br/&gt;
+      put.setDurability(opts.writeToWAL ? opts.fsyncWAL ? Durability.FSYNC_WAL : Durability.SYNC_WAL : Durability.SKIP_WAL);&lt;br/&gt;
+      put.setDurability(opts.writeToWAL ? opts.fsyncWAL ? Durability.FSYNC_WAL : Durability.SYNC_WAL : Durability.SKIP_WAL);&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12639//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12639//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12639//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12639//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12639//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12639//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12639//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12639//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12639//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12639//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12639//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12639//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12639//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12639//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12639//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12639//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12639//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12639//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12639//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12639//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12639//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12639//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12639//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12639//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12639//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12639//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12639//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12639//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14298050" author="lhofhansl" created="Fri, 30 Jan 2015 01:35:24 +0000"  >&lt;p&gt;Much better. Thinking about metrics now. At least a count of hflushes and hsyncs and how many edit edit we had for each in total.&lt;/p&gt;</comment>
                            <comment id="14298100" author="yuzhihong@gmail.com" created="Fri, 30 Jan 2015 02:10:17 +0000"  >&lt;p&gt;Good work, Lars&lt;/p&gt;</comment>
                            <comment id="14298191" author="lhofhansl" created="Fri, 30 Jan 2015 04:35:47 +0000"  >&lt;p&gt;First part for gathering metrics. Still need to update MetricsWalXXX will do that tomorrow. Parking this WIP patch here.&lt;/p&gt;</comment>
                            <comment id="14298283" author="lhofhansl" created="Fri, 30 Jan 2015 06:48:08 +0000"  >&lt;p&gt;v5 has the metrics updated. Keep tracks of number of sync and fsync (number of edits that is)&lt;/p&gt;

&lt;p&gt;Tomorrow I&apos;ll try to add a unittest based on that.&lt;/p&gt;</comment>
                            <comment id="14298379" author="hadoopqa" created="Fri, 30 Jan 2015 08:52:16 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12695466/5954-v5-trunk.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12695466/5954-v5-trunk.txt&lt;/a&gt;&lt;br/&gt;
  against master branch at commit b08802a3e8e522f84519415b83455870b49bf8da.&lt;br/&gt;
  ATTACHMENT ID: 12695466&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 12 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javac&lt;/font&gt;.  The applied patch generated 112 javac compiler warnings (more than the master&apos;s current 111 warnings).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 1941 checkstyle errors (more than the master&apos;s current 1939 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces the following lines longer than 100:&lt;br/&gt;
    +      put.setDurability(opts.writeToWAL ? opts.fsyncWAL ? Durability.FSYNC_WAL : Durability.SYNC_WAL : Durability.SKIP_WAL);&lt;br/&gt;
+      put.setDurability(opts.writeToWAL ? opts.fsyncWAL ? Durability.FSYNC_WAL : Durability.SYNC_WAL : Durability.SKIP_WAL);&lt;br/&gt;
+        public void postSync(final long timeInNanos, final int handlerSyncs, final int handlerFsyncs) {&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;/p&gt;


&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 1 zombie test(s): 	at org.apache.hadoop.hbase.regionserver.wal.TestWALReplay.testReplayEditsAfterRegionMovedWithMultiCF(TestWALReplay.java:245)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12647//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12647//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12647//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12647//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12647//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12647//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12647//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12647//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12647//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12647//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12647//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12647//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12647//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12647//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12647//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12647//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12647//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12647//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12647//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12647//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12647//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12647//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12647//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12647//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12647//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12647//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12647//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12647//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14299270" author="lhofhansl" created="Fri, 30 Jan 2015 21:58:41 +0000"  >&lt;p&gt;TestWALReplay passes locally every time I run it (and takes the same amount of time with or without the patch). So that looks to be unrelated.&lt;/p&gt;</comment>
                            <comment id="14299438" author="stack" created="Sat, 31 Jan 2015 00:27:54 +0000"  >&lt;p&gt;What checkstyle, javadoc, and extra compiler warnings?&lt;/p&gt;</comment>
                            <comment id="14299445" author="stack" created="Sat, 31 Jan 2015 00:32:56 +0000"  >&lt;p&gt;I took a look at that patch. LGTM.  This stuff is hard to review. It is tricky.  Proof is in the pudding.  For sure the failure is unrelated? Its in the WAL?  I&apos;m +1 on commit.  Suggest try hadoopqa a few more times before commit.&lt;/p&gt;</comment>
                            <comment id="14299496" author="lhofhansl" created="Sat, 31 Jan 2015 01:01:53 +0000"  >&lt;p&gt;v6 has a very basic unittest, verifying that the metrics are updated correctly&lt;/p&gt;</comment>
                            <comment id="14299610" author="hadoopqa" created="Sat, 31 Jan 2015 03:06:10 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12695691/5954-v6-trunk.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12695691/5954-v6-trunk.txt&lt;/a&gt;&lt;br/&gt;
  against master branch at commit b08802a3e8e522f84519415b83455870b49bf8da.&lt;br/&gt;
  ATTACHMENT ID: 12695691&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 15 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javac&lt;/font&gt;.  The applied patch generated 112 javac compiler warnings (more than the master&apos;s current 111 warnings).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 1941 checkstyle errors (more than the master&apos;s current 1939 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;/p&gt;


&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12655//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12655//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12655//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12655//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12655//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12655//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12655//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12655//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12655//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12655//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12655//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12655//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12655//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12655//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12655//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12655//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12655//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12655//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12655//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12655//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12655//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12655//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12655//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12655//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12655//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12655//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12655//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12655//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14299620" author="lhofhansl" created="Sat, 31 Jan 2015 03:24:48 +0000"  >&lt;p&gt;This time TestAcidGuarantees did not finish.&lt;/p&gt;</comment>
                            <comment id="14299644" author="lhofhansl" created="Sat, 31 Jan 2015 03:52:07 +0000"  >&lt;p&gt;Passed locally a few time with patch applied. Hung once &lt;b&gt;without&lt;/b&gt; patch applied. Same memory profile with and without the patch. Same amount of time spent with and without patch. Unrelated I think. I&apos;ll get some more runs in.&lt;/p&gt;</comment>
                            <comment id="14299684" author="hadoopqa" created="Sat, 31 Jan 2015 05:56:49 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12695726/5954-v6-trunk.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12695726/5954-v6-trunk.txt&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 825871431ec48036fd3e3cd9625c451b50cbe308.&lt;br/&gt;
  ATTACHMENT ID: 12695726&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 15 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javac&lt;/font&gt;.  The applied patch generated 112 javac compiler warnings (more than the master&apos;s current 111 warnings).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 1938 checkstyle errors (more than the master&apos;s current 1936 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 release audit&lt;/font&gt;.  The applied patch generated 1 release audit warnings (more than the master&apos;s current 0 warnings).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;/p&gt;


&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12659//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12659//testReport/&lt;/a&gt;&lt;br/&gt;
Release audit warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12659//artifact/patchprocess/patchReleaseAuditWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12659//artifact/patchprocess/patchReleaseAuditWarnings.txt&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12659//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12659//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12659//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12659//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12659//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12659//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12659//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12659//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12659//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12659//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12659//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12659//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12659//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12659//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12659//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12659//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12659//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12659//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12659//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12659//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12659//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12659//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12659//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12659//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12659//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12659//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14299884" author="stack" created="Sat, 31 Jan 2015 16:29:48 +0000"  >&lt;p&gt;Retry&lt;/p&gt;

&lt;p&gt;Are the checkstyle and javac items yours?&lt;/p&gt;</comment>
                            <comment id="14299886" author="stack" created="Sat, 31 Jan 2015 16:30:54 +0000"  >&lt;p&gt;Says this failed...&lt;/p&gt;

&lt;p&gt;  TestEndToEndSplitTransaction.blockUntilRegionSplit:460 IO Failed to get daught...&lt;/p&gt;</comment>
                            <comment id="14299931" author="hadoopqa" created="Sat, 31 Jan 2015 18:36:19 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12695754/5954-v6-trunk.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12695754/5954-v6-trunk.txt&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 825871431ec48036fd3e3cd9625c451b50cbe308.&lt;br/&gt;
  ATTACHMENT ID: 12695754&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 15 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javac&lt;/font&gt;.  The applied patch generated 112 javac compiler warnings (more than the master&apos;s current 111 warnings).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 1938 checkstyle errors (more than the master&apos;s current 1936 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 release audit&lt;/font&gt;.  The applied patch generated 1 release audit warnings (more than the master&apos;s current 0 warnings).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12661//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12661//testReport/&lt;/a&gt;&lt;br/&gt;
Release audit warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12661//artifact/patchprocess/patchReleaseAuditWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12661//artifact/patchprocess/patchReleaseAuditWarnings.txt&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12661//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12661//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12661//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12661//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12661//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12661//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12661//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12661//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12661//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12661//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12661//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12661//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12661//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12661//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12661//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12661//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12661//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12661//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12661//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12661//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12661//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12661//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12661//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12661//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12661//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12661//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14300032" author="hadoopqa" created="Sat, 31 Jan 2015 23:38:43 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12695772/5954-v6-trunk.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12695772/5954-v6-trunk.txt&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 86b8b8da0082bea9e8b9c43df917acd67a680cd1.&lt;br/&gt;
  ATTACHMENT ID: 12695772&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 15 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javac&lt;/font&gt;.  The applied patch generated 112 javac compiler warnings (more than the master&apos;s current 111 warnings).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 1938 checkstyle errors (more than the master&apos;s current 1936 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;/p&gt;


&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 1 zombie test(s): 	at org.apache.hama.bsp.TestKeyValueTextInputFormat.testInput(TestKeyValueTextInputFormat.java:180)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12662//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12662//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12662//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12662//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12662//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12662//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12662//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12662//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12662//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12662//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12662//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12662//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12662//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12662//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12662//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12662//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12662//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12662//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12662//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12662//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12662//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12662//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12662//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12662//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12662//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12662//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12662//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12662//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14300058" author="hadoopqa" created="Sun, 1 Feb 2015 02:07:02 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12695775/5954-v6-trunk.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12695775/5954-v6-trunk.txt&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 86b8b8da0082bea9e8b9c43df917acd67a680cd1.&lt;br/&gt;
  ATTACHMENT ID: 12695775&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 15 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javac&lt;/font&gt;.  The applied patch generated 112 javac compiler warnings (more than the master&apos;s current 111 warnings).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 1938 checkstyle errors (more than the master&apos;s current 1936 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;/p&gt;


&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 1 zombie test(s): 	at org.apache.hadoop.hbase.TestAcidGuarantees.testScanAtomicity(TestAcidGuarantees.java:354)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12663//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12663//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12663//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12663//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12663//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12663//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12663//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12663//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12663//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12663//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12663//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12663//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12663//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12663//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12663//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12663//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12663//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12663//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12663//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12663//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12663//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12663//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12663//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12663//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12663//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12663//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12663//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12663//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14300742" author="lhofhansl" created="Sun, 1 Feb 2015 21:26:49 +0000"  >&lt;p&gt;I am having a bit of hard time convincing myself that this is a safe change. The tests do not make me feel better about it either.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt; you seem to feel the same, wanna sit together in front of a screen next week and go over it.&lt;/p&gt;</comment>
                            <comment id="14300776" author="stack" created="Sun, 1 Feb 2015 22:54:27 +0000"  >&lt;p&gt;I think that is a good idea &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt;  I wouldn&apos;t be surprised if you &apos;got&apos; it but this was tricky stuff keeping one type of state going and now you&apos;d interleave another.  I&apos;ll come by your shop.  Just say when suits.&lt;/p&gt;</comment>
                            <comment id="14300777" author="stack" created="Sun, 1 Feb 2015 22:54:59 +0000"  >&lt;p&gt;Oh, BTW, this is a critical improvement.&lt;/p&gt;</comment>
                            <comment id="14300935" author="lhofhansl" created="Mon, 2 Feb 2015 06:43:08 +0000"  >&lt;p&gt;We can dramatically simplify this if we make this a global only switch, with no mixed operation. In that case the API we invented is a bit useless, but so be it. What do you think? It would make this patch a nobrainer.&lt;/p&gt;

&lt;p&gt;I think my comment: &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5954?focusedCommentId=14296413&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-14296413&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-5954?focusedCommentId=14296413&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-14296413&lt;/a&gt;  got lost in the noise.&lt;/p&gt;</comment>
                            <comment id="14301435" author="stack" created="Mon, 2 Feb 2015 16:33:48 +0000"  >&lt;p&gt;We could. Lets do that if can&apos;t make the API as is work.&lt;/p&gt;</comment>
                            <comment id="14321262" author="lhofhansl" created="Sat, 14 Feb 2015 06:12:31 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt; and I looked at this patch together and we could not convince ourselves that it is correct (namely that we&apos;ll never declared an fsync done when not all entries are fsync&apos;ed).&lt;/p&gt;

&lt;p&gt;What makes that really hard is the disruptor pattern with sync threads working on individual patterns. That is a really nice design for performance. Although it makes it really hard to fit in this change.&lt;/p&gt;

&lt;p&gt;We&apos;ll look again and see if we can make it work.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10032">
                    <name>Blocker</name>
                                                                <inwardlinks description="is blocked by">
                                        <issuelink>
            <issuekey id="12617554">HBASE-7215</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12609173">HDFS-3979</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="12310000">
                    <name>Duplicate</name>
                                            <outwardlinks description="duplicates">
                                        <issuelink>
            <issuekey id="12629012">HBASE-7652</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12558321">HBASE-6116</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12601119">HBASE-6492</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12841977">HBASE-14004</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12439560">HDFS-744</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12683209" name="5954-WIP-trunk.txt" size="17792" author="lhofhansl" created="Sun, 23 Nov 2014 04:43:50 +0000"/>
                            <attachment id="12687677" name="5954-WIP-v2-trunk.txt" size="19473" author="lhofhansl" created="Wed, 17 Dec 2014 05:43:12 +0000"/>
                            <attachment id="12526713" name="5954-trunk-hdfs-trunk-v2.txt" size="17073" author="lhofhansl" created="Mon, 14 May 2012 05:07:32 +0000"/>
                            <attachment id="12527546" name="5954-trunk-hdfs-trunk-v3.txt" size="17258" author="lhofhansl" created="Tue, 15 May 2012 23:57:21 +0000"/>
                            <attachment id="12528191" name="5954-trunk-hdfs-trunk-v4.txt" size="18363" author="lhofhansl" created="Fri, 18 May 2012 23:18:57 +0000"/>
                            <attachment id="12528377" name="5954-trunk-hdfs-trunk-v5.txt" size="18466" author="lhofhansl" created="Mon, 21 May 2012 03:26:44 +0000"/>
                            <attachment id="12528536" name="5954-trunk-hdfs-trunk-v6.txt" size="18396" author="lhofhansl" created="Mon, 21 May 2012 23:59:28 +0000"/>
                            <attachment id="12526452" name="5954-trunk-hdfs-trunk.txt" size="14845" author="lhofhansl" created="Thu, 10 May 2012 23:26:02 +0000"/>
                            <attachment id="12695313" name="5954-v3-trunk.txt" size="19832" author="lhofhansl" created="Thu, 29 Jan 2015 17:49:28 +0000"/>
                            <attachment id="12695192" name="5954-v3-trunk.txt" size="19832" author="lhofhansl" created="Thu, 29 Jan 2015 05:42:23 +0000"/>
                            <attachment id="12695395" name="5954-v4-trunk.txt" size="19756" author="lhofhansl" created="Thu, 29 Jan 2015 23:28:00 +0000"/>
                            <attachment id="12695466" name="5954-v5-trunk.txt" size="27990" author="lhofhansl" created="Fri, 30 Jan 2015 06:48:08 +0000"/>
                            <attachment id="12695775" name="5954-v6-trunk.txt" size="30563" author="stack" created="Sun, 1 Feb 2015 00:07:54 +0000"/>
                            <attachment id="12695772" name="5954-v6-trunk.txt" size="30563" author="stack" created="Sat, 31 Jan 2015 21:46:04 +0000"/>
                            <attachment id="12695754" name="5954-v6-trunk.txt" size="30563" author="stack" created="Sat, 31 Jan 2015 16:29:48 +0000"/>
                            <attachment id="12695726" name="5954-v6-trunk.txt" size="30563" author="lhofhansl" created="Sat, 31 Jan 2015 03:52:32 +0000"/>
                            <attachment id="12695691" name="5954-v6-trunk.txt" size="30563" author="lhofhansl" created="Sat, 31 Jan 2015 01:01:53 +0000"/>
                            <attachment id="12525939" name="hbase-hdfs-744.txt" size="7384" author="lhofhansl" created="Tue, 8 May 2012 01:19:48 +0000"/>
                    </attachments>
                <subtasks>
                            <subtask id="12631569">HBASE-7801</subtask>
                            <subtask id="12643288">HBASE-8375</subtask>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>18.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 15 May 2012 00:58:17 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>238495</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 42 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i02gcn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>12250</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>