7392	JDIThreads show  not responding  at startup  Some of our threads are showing as  not responding  startup because our model thinks they are suspended but when the out of synch code tries to get stack frames  we get an incompatible thread state exception
8683	NPE after suspending VM attempting to step on system thread  20020124   Suspend the VM  Select the SignalDispatcher thread  Hit step over  Our code assumes that there is a top stack frame  java lang NullPointerException
12695	Need to get full set of breakpoints hit from thread  When creating super adapters on top of the Java debug adapter we set hidden temporary breakpoints in order to control the Java debug adapter  If the user also sets a breakpoint at the same spot as one of our temporary breakpoints then when we get a suspend event due to a breakpoint from the Java thread we need to be able to ask the thread for the list of breakpoints that were hit  Currently we can only get one breakpoint from the thread  If we only see our temporary breakpoint which we might choose to ignore and don t see the user breakpoint then we will run away
16930	Eval  incompatible thread state  When I pause a thread  manually   and perform an evaluation  I get an InvalidThreadStateException   which is expected  We should provide a better error message for the user  as the  toString  area does   i e  must be suspended after a step or breakpoint to perform an evaluation
21801	ThreadGroupReference related data should be cached  In the current implementation of the JDI client  a jdwp command is send each time the thread group of a thread  the name or the parent of a thread group is asked  These data are never modify  there is no API for that in the base java library   they should be cached for reduce the number of jdwp command
22005	Review UI runnables  We should review the runnables we post to the UI thread via calls to Display asynchExec and Display synchExec  It is important to Eclipse s UI performance that we run as little code as necessary in the UI thread
24579	Deadlock on first checkout of java project  Build 20021008 Exact steps followed  1  Open new workspace 2  Go to Preferences   Plugin Development    Java Build Path Control 3  Uncheck all check boxes 4  Open new CVS perspective 5  Create anonymous connect to eclipse org 6  Checkout org eclipse core resources Deadlock  Note  this is not a core bug  I m just logging it here until I can investigate further  The problem is that someone is launching a ModalContext thread from the UI  and not blocking until it finishes  Then another ModalContext is forked  so we have  ModalContext1  holding Workspace lock  attempts syncExec ModalContext2  waiting on workspace lock UI thread  blocked on ModalContext 2
33297	Unneccessary error logging from detail formatter manager  There are two places in the detail formatter manager where errors are logged and displayed to the user when a  toString    evaluation fails  Since the error is displayed to the user  we do not need to log the errors  We currently do not log  thread not suspended errors   but no errors need to be logged  see  resolveFormatter & EvaluationListener evaluationComplete try   valueToString result getValue       catch  DebugException e    if  e getStatus   getCode   !  IJavaThread ERR_THREAD_NOT_SUSPENDED       don t log  thread not suspended  errors JDIDebugUIPlugin log e     fListener detailComputed fValue  e getStatus   getMessage
33712	The resource tree is locked for modifications  from JavaDebugOptionsManager  I found the following in my log  I d recently created a new Java Project and then created a new Main method  following the steps in Bug 33612 comment  5  !SESSION Mar 03  2003 16 40 03 154                                               java version 1 4 1 rc java vendor Sun Microsystems Inc  BootLoader constants  OS linux  ARCH x86  WS gtk  NL en_US Command line arguments   dev bin  feature org eclipse platform  data  home jburns runtime workspace  os linux  ws gtk  arch x86  nl en_US  configuration file  home jburns target  metadata  plugins org eclipse pde core _home_jburns_runtime workspace platform cfg  install file  home jburns host eclipse  !ENTRY org eclipse ant core 4 3 Mar 03  2003 16 40 03 158 !MESSAGE The library file  home jburns target org eclipse jdt core jdtCompilerAdapter jar specified via the extraClasspathEntries extension point of Java Development Tools Core does not exist !ENTRY org eclipse jdt debug ui 4 150 Mar 03  2003 16 47 16 45 !MESSAGE Internal Error !STACK 1 org eclipse core internal resources ResourceException  The resource tree is locked for modifications
43197	Race condition between console line tracker and debug terminate event  I have both a console line tracker and a debug event listener registered for the same process  When the process terminates  I want to do different things in the plugin based on the messages that were written out by the process  However  sometimes I m getting the process terminated event before the last call to the line tracker is made  It looks like the process termination event is handled by a Job worker thread  while the console line comes in on the main thread  They appear to happen at about the same time so it s a race to see which is actually called first  I tried to use the IConsoleLineTracker dispose   method to perform the action but that is not called until the launch is removed  There doesn t appear to be a way for the console line tracker to know if it has the last line or not  If the code that fires the termination event were changed to wait until the last IConsoleLineTracker lineAppended   method was called and returns first  that would take care of it  Another way would be to have a new method  say IConsoleLineTracker term    to mirror the init   method  It would be called after the last lines had been appended and the process was terminated  and I could put my what to do after termination logic there
52474	UI Blocked when opening Java Perspective during CVS check out  build I20040218   start eclipse with a new workspace   switch to CVS Repository Exploring perspective   check out a number of projects  i checkout Platform UI module    now attempt to switch to the Java Perspective NOTE that at this point the  UI is blocked  dialog is opened  Probably due to the fact that starting the Java Perspective requires the workbench lock  The point here is that this will be a common pattern and it would be nice if we could investigate makeing this scenario work more smoothly
57467	race condition causes invalid stack frames  I was finding that I got  transisent   invalid stack frame  exceptions when I ran the debug tests  I traced it down to this  two threads are asking a thread for stack frames at the same time   the ui is populating frame labels in the background  and the test methods is accessing testing something about the top stack frame  The issue is in deciding whether to  preserve  stack frames in the  computeStackFrames  method of JDIThread  We compare the current TOS with the old TOS and attempt to re use stack frames  To compare frames  we use the underlying method  or  fLastMethod   in the case of the old stack frames  However  the  fLastMethod  is only populated the first time we retrieve the underlying method for a stack frame  Thus  if we ask for stack frames twice  before an underlying method has been retrieved  the second requestor will always get invalid frames  as our logic compares  currMethod equals  lastMethod   where lastMethod is null  which fails  and thus invalidates the previously computed stack frames   The fix is to say that if the  last method  is null  then the frames are equal since the index of the frames is the same  and no info of the underlying frame has been retrieved yet  so it cannot be stale yet
64951	suspended thread while evaluating condition   no labels  RC1 IBM1 4 2   condition in for loop on line breakpoint  i    53    selected thread while debugging and paused it   all labels appear as       and never update   variables appear for the stack frame  but toString    details  do not work will attach screen shot
65107	ClassCastException processing async thread queue  Debugging some  horrible  code I got the following exception  Error Jun 01  2004 13 30 30 703 Exception processing async thread queue java lang ClassCastException Steps to reproduce    1 Debug this  public class WatchpointTest   int total  public static void main String   args    startThread  T1!    startThread  T2!      private static void startThread String threadName    Thread t   new Thread new Runnable     public void run     new WatchpointTest   doHighschoolMath         threadName   t start      private void doHighschoolMath     for  int i   0  i   30  i      total  i                  breakpoint here!!       2  In DebugView switch stack frames a few times  alternating between  T1!  and  T2!  Note  I had watches on total and i when I discovered this bug
65149	Resource exception in JavaDebugOptionsManager initializeProblemHandling  3 0 RC1 Got the following in my log after replacing a local project with a project at some other date in CVS  org eclipse core internal resources ResourceException  The resource tree is locked for modifications  at at at at at at at at at at at at at at at at at at at
66413	Illegal thread state when debugging to conditional BP on startup  Further strangeness to bug 64951   condition is i    57   change to Java perspective   shutdown workspace   restart workspace   re launch last  debug mode    Error dialog appears claiming a runtime exception occurred in the condition  The error dialog appears 4 to 6 times  stacked  and this is in the log  com sun jdi IncompatibleThreadStateException  Thread was not suspended at java lang Throwable  init  Throwable java  at java lang Throwable  init  Throwable java  at org eclipse jdt internal debug core model JDIThread computeStackFrames JDIThread java  at org eclipse jdt internal debug core EventDispatcher dispatch EventDispatcher java  Terminating and restarting the target works OK  Seems to be a problem with evaluating the condition on startup
78534	ConcurrentModificationException in ThreadMonitorManager  I got this exception while debugging a test case  Apparently  HashMap clone   is not thread safe  !ENTRY org eclipse debug core 4 120 2004 11 12 09 51 02 64 !MESSAGE An exception occurred while dispatching debug events  !STACK 0 java util ConcurrentModificationException at at at at at at at at at at at at at
88923	Evaluations create compiled expression in UI thread  The  evaluate     methods on IEvaluationEngine create compiled expressions in the UI thread before performing an evaluation asynchronously  All evaluation processing should be done asynchronously
101118	eclipse SDK 3 1RC3 win32   Exception processing async thread queue  Hi  Using eclipse SDK 3 1RC3 win32 in a multithreaded application  Have problem when trying debug the source code  Have tried with older version of Eclipse  RC1 and M7  but nothing changed  !SESSION 2005 06 21 20 52 46 761                                                 eclipse buildId I20050617 1618 java version 1 5 0_02 java vendor Sun Microsystems Inc  BootLoader constants  OS win32  ARCH x86  WS win32  NL sv_SE Command line arguments    os win32  ws win32  arch x86 !ENTRY org eclipse jdt debug 4 120 2005 06 21 21 05 22 147 !MESSAGE Exception processing async thread queue !SUBENTRY 1 org eclipse jdt debug 4 120 2005 06 21 21 05 22 147 !MESSAGE Exception processing async thread queue !STACK 0 java lang NullPointerException !ENTRY org eclipse jdt debug 4 120 2005 06 21 21 23 40 206 !MESSAGE Exception processing async thread queue !SUBENTRY 1 org eclipse jdt debug 4 120 2005 06 21 21 23 40 206 !MESSAGE Exception processing async thread queue !STACK 0 java lang NullPointerException
125868	Invalid Thread Access when launching  Running HEAD  1  restart eclipse 2  start a jdt debug session and resulted in this exception It seems to only happen on the first launch  Subsequent launches do not result in exceptions  org eclipse swt SWTException  Invalid thread access at java lang Throwable  init  Throwable java  at java lang Throwable  init  Throwable java  at org eclipse swt widgets Display checkDevice Display java  at org eclipse debug internal ui elements adapters AsynchronousDebugLabelAdapter computeLabels AsynchronousDebugLabelAdapter java
148006	deadlock in ConsoleDocument during ant execution in autobuild  I20060620 1010 Got this after starting up with the build  importing plug ins as binary  and waiting for autobuild to complete  Full thread dump Java HotSpot TM  Client VM  1 4 2_06 b02 mixed mode        Found one Java level deadlock                                 Thread 12   waiting to lock monitor 0x080930fc  object 0x48ac6540  a org eclipse ui internal console ConsoleDocument   which is held by  Worker 8   Worker 8   waiting to lock monitor 0x08092cd4  object 0x56c9ddb0  a java lang Class   which is held by  Thread 12  Java stack information for the threads listed above                                                       Thread 12     waiting to lock  0x48ac6540   a org eclipse ui internal console ConsoleDocument    locked  0x56c9ddb0   a java lang Class    locked  0x48abcae0   a org apache tools ant Project   Worker 8     waiting to lock  0x56c9ddb0   a java lang Class    locked  0x48ac6540   a org eclipse ui internal console ConsoleDocument  Found 1 deadlock
161781	Suspend status ignored on initial remote debug connection  I have a modified VM with a  waitForDebugger    function that suspends the current thread  The idea is to leave it suspended until the debugger arrives  so the debugger can inspect the current state before continuing  When Eclipse attaches  through a socket on port 8000   it queries with a JDWP ThreadReference Status message  The VM sends back RUNNING SUSPEND_STATUS_SUSPENDED for the main thread and WAIT 0 for the other  VM  threads  However  Eclipse shows all threads as  running   If I ask Eclipse to suspend the thread  everything works as expected  but when I hit  resume  it won t actually resume because the  suspend count  is still nonzero  At no time does Eclipse issue a SuspendCount query  I can modify the VM to  fake  the first suspend  which will leave the books in order  but it doesn t help with the initial condition    you still have to suspend the thread  or VM  manually  Eclipse should use the suspend status from the Status call to set its initial concept of thread state
165174	selection is lost in launch view after stepping into sync block  using the following code  selection in the launch view is lost after stepping into the sync block with show monitors turned on  public class Main   public static void main String   args    System out println  bp on this line    synchronized  new Object      System out println  bp on this line          will attach a screenshot
169542	A ThreadGroup  and all its Threads  is not displayed in the Debug view when its parent didn t contain any threads  Build ID  M20060629 1905 Steps To Reproduce  1 Create new ThreadGroup first  using the code  new ThreadGroup   some name       the parent of the newly created thread group will be the  main  thread group 2  After that create another thread group second  under the first one 3  Create and start one or more threads under the second thread group 4  After running the program in debug mode and looking to the Debug view one will note that nor first nor second thread groups appear  More information  In my opinion  the bug is not in JVM  because I checked   entire thread groups and thread hierarchy is correct and traversable in the Variables view  More careful research resulted in a simple workaround found  before creating the second thread group  one must create and start at least one thread under the first thread group and then both thread groups appear in the Debug view correctly
178912	IVMInstallType api and AbstractVMInstallType impl are not thread safe  The IVMInstallType createVMInstall  id   method call immediately makes the vm install visible to everyone  I hit a race condition that looked like this  Thread 1          IVMInstall vm   type createVMInstall vmId   vm setInstallLocation  vmLocation    vm setName vmName   Thread 2          java lang NullPointerException public IVMInstall findVMInstallByName String name    for  int i  0  i   fVMs size    i      IVMInstall vm   IVMInstall fVMs get i   if  vm getName   equals name           NPE right here return vm      return null    There are two thread safety problems here  1  IVMInstallType api causes new runtimes to be made available to everyone before they can be fully initialized  2  AbstractVMInstallType internally does not use synchronization  Most specifically  access to fVMs list member variable is not synchronized  Potential fix  Can t change existing IVMInstallType api  but the AbstractVMInstallType implementation can be changed to synchronize on the vm type object for all getter and setter methods that deal with vm instances  That directly addresses  2 and allows  1 to be worked around by adding a synchronized block around code in Thread 1 above    synchronized  type     IVMInstall vm   type createVMInstall vmId   vm setInstallLocation  vmLocation    vm setName vmName
182237	Invalid thread access exceptions in Java Variables view  Since updating to M6  I have been getting these exceptions when I first open the variables view  org eclipse swt SWTException  Invalid thread access
187000	Debugger looses selection focus a lot on the thread stack where you debug  Build ID   I20070503 1400 Steps To Reproduce  Just start debugging and press with the mouse the step over constantly  In my enviroment windows xp java 6  and i have seen it now also on a co workers linux machine  many times the debugger looses the selection focus on a stacktrace  Even the complete tree is collapsed and i really have to search for what thread is in suspend so that i can select it press step over once and then the tree expands again  I always had some problems with this in older releases  But currently it is really bad it pretty much happens multiply times when i debug  The selection and focus should just stick as much as possible because if it looses focus i can t press step over  I have to wait and select the right thread again before i can go on  More information
229394	NPE from JFace when using cell editor in variables view  Steps do not consistently reproduce  but I have encontered the NPE multiple times while debugging  Possible race condition in JFace  There is a null check before the NPE location  but another thread could call dispose  1  Run a java program with an array of chars  2  Stop on a breakpoint  display the array of chars in the var view  3  Select an array entry s value in the var view to open cell editor 4  Delete the value 5  Click outside of the cell 6  Two errors  first error  Invalid Type  is correct  second is NPE eclipse buildId I20080429 0100 java version 1 5 0_09 java vendor Sun Microsystems Inc  BootLoader constants  OS win32  ARCH x86  WS win32  NL en_US Command line arguments    os win32  ws win32  arch x86 Error Tue Apr 29 11 40 28 CDT 2008 Problems occurred when invoking code from plug in   org eclipse jface   java lang NullPointerException
312038	JREContainer hasChildren locks up the UI for more than 30s  Created attachment 167452  details  backtrace and example of recursive stat 3 6M7 I m seeing this very frequently  Changing a Manifest MF  for example  causes the entire Eclipse UI to lockup  There seems to be an issue in the way that the JDT discovers whether a source directory is available  Using jstack multiple times  I see that the main thread is locked up in java io File isFile    called as a result of TreeViewer isExpandable    java lang Thread State  RUNNABLE     Stracing the process shows that s it s iterating up the tree recursively looking for src zip   src jar  When it hits a NFS automount directory the thread main thread is context switched out  and the stat is 100  times slower  It seems to be doing this again and again on the UI thread   pid  4095  11 08 21 stat   tools oss packages x86_64 rhel4 java jdk1 6 0_11 jre lib src jar   0x402288d0     1 ENOENT  No such file or directory   0 000017   pid  4095  11 08 21 stat   tools oss packages x86_64 rhel4 java jdk1 6 0_11 jre lib src zip   0x402288d0     1 ENOENT  No such file or directory   0 000013   pid  4095  11 08 21 stat   tools oss packages x86_64 rhel4 java jdk1 6 0_11 jre src jar   0x402288d0     1 ENOENT  No such file or directory   0 000012   pid  4095  11 08 21 stat   tools oss packages x86_64 rhel4 java jdk1 6 0_11 jre src zip   0x402288d0     1 ENOENT  No such file or directory   0 000012   pid  4095  11 08 21 stat   tools oss packages x86_64 rhel4 java jdk1 6 0_11 src jar   0x402288d0     1 ENOENT  No such file or directory   0 000011   pid  4095  11 08 21 stat   tools oss packages x86_64 rhel4 java jdk1 6 0_11 src zip   0x402288d0     1 ENOENT  No such file or directory   0 000012   pid  4095  11 08 21 stat   tools oss packages x86_64 rhel4 java src jar   0x402288d0     1 ENOENT  No such file or directory   0 000015   pid  4095  11 08 21 stat   tools oss packages x86_64 rhel4 java src zip   0x402288d0     1 ENOENT  No such file or directory   0 000010   pid  4095  11 08 21 stat   tools oss packages x86_64 rhel4 src jar   0x402288d0     1 ENOENT  No such file or directory   0 000013   pid  4095  11 08 21 stat   tools oss packages x86_64 rhel4 src zip   0x402288d0     1 ENOENT  No such file or directory   0 000010   pid  4095  11 08 21 stat   tools oss packages src jar   0x402288d0     1 ENOENT  No such file or directory   0 000011   pid  4095  11 08 21 stat   tools oss packages src zip   0x402288d0     1 ENOENT  No such file or directory   0 000010   pid  4095  11 08 21 stat   tools oss src jar   0x402288d0     1 ENOENT  No such file or directory   0 000007   pid  4095  11 08 21 stat   tools oss src zip   0x402288d0     1 ENOENT  No such file or directory   0 000008   pid  4095  11 08 21 stat   tools src jar     unfinished      This is really bad for performance  and hurts automounters badly  I attached strace some time after the start of the hang and I have 28M of stat  s
343039	Turn on monitors by default  The JDT debugger has the ability to show monitors owned by a thread  this is turned off by default  Dunno how long this option has been here but many people  including me  never knew it was there and would have greatly benefitted from its use in time consuming race and deadlock debugging sessions  Please consider turning it on by default
446040	Invalid thread access in RuntimeClasspathViewer 1 preferenceChange  err_grp  87791828   Hello committers  we received a new error report for Eclipse 4 4 1 M20140925 0400  General Information  anonymous id          24ad43ce 0a9e 4ffd a544 d73b21063102 eclipse build id      4 4 1 M20140925 0400 eclipse product       org eclipse epp package jee product operating system      Windows7 6 1 0  x86_64    win32 java runtime version  1 8 0_20 b26 The following plug ins were present on the execution stack      1  org eclipse core runtime_3 10 0 v20140318 2214 2  org eclipse jdt debug ui_3 6 300 v20140512 1926 3  org eclipse jdt debug_3 8 101 v20140902 1548 4  org eclipse jdt_3 10 0 v20140925 0400 5  org eclipse jface_3 10 1 v20140813 1009 6  org eclipse swt_3 103 1 v20140903 1938 Error Status  code                    2 plugin                  org eclipse equinox preferences_3 5 200 v20140224 1527 message                 Problems occurred when invoking code from plug in   org eclipse equinox preferences   fingerprint             87791828 exception class         org eclipse swt SWTException exception message       Invalid thread access number of children      0 org eclipse swt SWTException  Invalid thread access Messages  stacktraces  and nested status objects may be shortened  Please visit http   dev eclipse org recommenders committers confess 0 5 reports 54328c1ee4b0a33678b204b7 for the complete error log  Some general information and guidelines about how to use this bug report  1  Feel free to move this bug to your own product and components  Please note that this bug is only accessible to Eclipse committers  If you move this bug please make sure that it s still in the  Security Advisor  group  2  The bug contents of the fields status  resolution  keywords  and whitelist are presented to reporters  If you needs more information  please set the keyword  needinfo   This will trigger a specialized dialog asking the user to provide further details  3  Use the following resolutions for the following situations    CLOSED   FIXED  This bug has been fixed  Please provide additional information in the whiteboard field    CLOSED   WORKSFORME  Use this resolution if you can t reproduce this issue and request further information  Please use the whiteboard text to specify more details what a user should provide and how    CLOSED   INVALID  Use this resolution if the reported problem is a  user configuration  problem  Please consider giving hints how to fix these issues in the whiteboard field    CLOSED   NOT ECLIPSE  Use this if the problem is caused by another plugin not developed at Eclipse org   CLOSED   MOVED  If this bug has been moved else where  Please provide more information  e g  a link  in the whiteboard field  4  Please remember that only committers can view and comment on this bug  You may  however  manually add the reporting user to the bug s cc list  But keep in mind that the report may contains sensitive information  5  If you are missing a feature  please file a enhancement request here  https   bugs eclipse org bugs enter_bug cgi product Recommenders Incubator&component Stacktraces Thank you for your assistance  Your friendly error reports inbox       Note  The list of present bundles and their respective versions was calculated by package naming heuristics  This may or may not reflect reality
506865	Race condition in AbstractVMInstallType createVMInstall  AbstractVMInstallType createVMInstall may cause creation of two VMs with the same id since checking for existence of the VM being created is done outside of the synchronized block