367	FastDateFormat thread safety FastDateFormat has static HashMaps are is guarantee be threads Patch follow make class shares SimpleDateFormat instances threads does document is apos m guessing assumes instances SimpleDateFormat class are thread provided have attributes is documented is case  s is assumption
459	Issue HashCodeBuilder shows load multi threaded usage found were having problems HashCodeBuilder load narrowed following attached test case dug code found problem was solved commenting method break loop problem did lot digging wont bore replaced HashSet ArrayList added object toIdentityHashCodeInteger object results lines change code assumes return value causes problem loads like submit fix have verified improved am convinced is fix have seen show loads regards Andrew suspicion is identityHashCode does return values is hashcode method downside is List Set believe is
481	race conditions hashCode range classes hashCode methods range classes look value is initialized calculation is done value timing caller get hash sequence Code be something T1 hashCode T2 hashCode hashCode was set T2 return hashCode return T1 T2 are threads accessing method T2 gets hash Affected classes are fix calculate hash variable assign member T1 hashCode hashCode DoubleRange FloatRange IntRange LongRange NumberRange Range
584	ExceptionUtils uses lock targetExceptionUtils uses lock target methods removeCauseMethodName addCauseMethodName take lock CAUSE_METHOD_NAMES modify does work locks need be
1230	Remove synchronization registry lookup EqualsBuilder HashCodeBuilder  re running contention issues registry lookup EqualsBuilder HashCodeBuilder believe synchronization registry lookup is ThreadLocals are thread thread gets value thread read change value thread consequence access ThreadLocals does need be synchronized IDKey uses object identity identity hashCode does use EqualsBuilder HashCodeBuilder means calls register unregister are objects use EqualsBuilder HashCodeBuilder makes re reading redundant issue was introduced LANG is version select
1251	ClassLoaderAwareObjectInputStream use initializer initialize primitiveTypes map ClassLoaderAwareObjectInputStream use initializer initialize primitiveTypes map initializing map constructor ClassLoaderAwareObjectInputStream break thread safety HashMap is thread