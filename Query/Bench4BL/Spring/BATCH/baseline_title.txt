170	Concurrent modification of StepExecution when running an asynchrounous step operationUse of a hibernateJobDao eventually results in a StaleObjectStateException when running an asynchrounous step operation
449	skip synchronization between reader and writer
603	JobExecution fields could be modified in another Thread and are not volatile
782	Synchronization issue in ItemOrientedStep if exception is throw in chunk processing
912	Thread safety issue in JobRegistryBackgroundJobRunner
1272	Write skips do not work in a multi threaded step
1278	RepeatTemplate aborts early if multiple threads throw ignorable exceptionsRepeatTemplate aborts early if multiple threads throw ignorable exceptions
1362	Threads spinning doing nothing at end of multi threaded StepThreads spinning doing nothing at end of multi threaded Step   When a multi threaded step is waiting for its last chunk to process it needs to wait on threads that are FINISHED  rather than spinning round asking them over and over if they want to do more work   The visible effect is often a large disparity between commit count and read count at the end of a step   One user even reported an apparently infinite loop  probably it was just the JVM scheduler not giving priority to the real worker thread
1526	Memory leak in web deployments because ThreadLocal is not nulled out in ChunkMonitorThe Tomcat leak detection in 6 0 24 caught this one
1542	Thread safety in JobExecution and StepExecution collectionsThe collections inside JobExecution and StepExecution should have copy on write concurrency protection
1572	Step not failing on org springframework transaction UnexpectedRollbackExceptionThe transaction is timing out for a read by the reader in a step due to a lock
1709	BeanWrapperFieldSetMapper race condition in cache
1724	Multithreaded step re processing chunk without skip or retry limitI sort of understand this  and it s quite an amusing little bug  if rather irritating
1725	SubclassClassifier should use ConcurrentHashMapSubclassClassifier should use ConcurrentHashMap  otherwise there can be concurrent modification exceptions when it is used concurrently
2126	DefaultJobParametersConverter is not thread safe and the SimpleJobOperator either DefaultJobParametersConverter is not thread safe due to usage of instance variable for numberFormat  dateFormat and longNumberFormat
2153	StepSynchronizationManager uses static HashMap   NullPointerException with multiple Threadsorg springframework batch core scope context StepSynchronizationManager produces NullPointerException  because it uses static java util HashMap to increment and decrement variables for the current Thread  which is not threadsafe
2156	ConcurrencyFailureException when multithreaded tasklet updates  PREFIX STEP_EXECUTION_CONTEXT tableNeed to synchronize the stepExecution in org springframework batch core repository dao JdbcExecutionContextDao in the method updateExecutionContext final StepExecution stepExecution   in order to prevent concurrency failures if two threads are trying to update the same step execution context record
2313	Possible race condition leading to NullPointerException in SynchronizationManagerSupport