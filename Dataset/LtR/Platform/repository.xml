<bugrepository name="Platform">
  <bug id="306738" opendate="2010-03-22 12:37:09" fixdate="2010-03-24 14:48:09" resolution="Fixed">
      <buginformation>
          <summary>Renderer does not synchronize ToolItem selection state with MToolItemBuild: I20100318-2100.
          </summary>
          <description>
              I have an app with an MToolBar defining a set of tool items of type "radio".
              When I select a different tool item, the button states change.
              Upon quitting the application, however, the change of state is not written to the delta.
              As a result, when running the application again, the toolbar item states are not what they should be.
          </description>
          <version>1.1.0</version>
          <fixedVersion>3.6 M7</fixedVersion>
          <type>Bug</type>
      </buginformation>
      <fixedFiles>
          <file type="M">org.eclipse.e4.workbench.ui.renderers.swt.MenuItemRenderer.java</file>
          <file type="M">org.eclipse.e4.workbench.ui.renderers.swt.ToolItemRenderer.java</file>
          <file type="M">org.eclipse.e4.ui.tests.workbench.MMenuItemTest.java</file>
          <file type="M">org.eclipse.e4.ui.tests.workbench.MToolItemTest.java</file>
      </fixedFiles>
  </bug>
  <bug id="230472" opendate="2008-05-06 15:38:13" fixdate="2008-05-20 10:29:12" resolution="Fixed">
      <buginformation>
          <summary>Expression controlled Activities aren't correctly synchronized with the internal enabled list when
              they are persisted and reloaded.
          </summary>
          <description></description>
          <version>1.1.0</version>
          <fixedVersion>3.6 M7</fixedVersion>
          <type>Bug</type>
      </buginformation>
      <fixedFiles>
          <file type="M">org.eclipse.ui.internal.ActivityPersistanceHelper.java</file>
      </fixedFiles>
  </bug>
  <bug id="114813" opendate="2005-11-02 13:55:44" fixdate="2005-12-13 11:14:33" resolution="Fixed">
      <buginformation>
          <summary>Incorrect synchronization will lead to JUnit failure
              (org.eclipse.ui.tests.dynamicplugins.DynamicPluginsTestSuite).
          </summary>
          <description>The DynamicTestCase (org.eclipse.ui.tests.dynamicplugins) provides synchronization on the
              registry events that is not quite correct.

              To ensure that all registry events for the bundles added or removed have been processed, it adds a
              registry listener in the doSetUp() and waits for the listener to be called assuming that it is going to
              be the last listener in the chain.

              This work most of the time, however, in some instances (i.e.
              ObjectContributionTest.testViewerContributions()) new registry listeners are added between the doSetUp()
              and the getBundle() calls.

              Such listeners would fall outside of the synchronization mechanism and JUnit(s) will fail.

              The simple solution is to do addition of the synchronization registry listener at the begining of the
              getBundle() / removeBundle() and remove that listener before returning from those methods.
          </description>
          <version>1.1.0</version>
          <fixedVersion>3.6 M7</fixedVersion>
          <type>Bug</type>
      </buginformation>
      <fixedFiles>
          <file type="M">org.eclipse.ui.tests.dynamicplugins.DynamicTestCase.java</file>
      </fixedFiles>
  </bug>
  <bug id="33942" opendate="2003-03-05 23:35:09" fixdate="2005-05-10 14:54:15" resolution="Fixed">
      <buginformation>
          <summary>Javadoc for IDecoratorManager#update should state threading requirements.
          </summary>
          <description>I get an SWTException if I call IDecoratorManager form a thread other then the UI thread.
              The javadoc should be updated to mention this restriction.
          </description>
          <version>1.1.0</version>
          <fixedVersion>3.6 M7</fixedVersion>
          <type>Bug</type>
      </buginformation>
      <fixedFiles>
          <file type="M">org.eclipse.ui.IDecoratorManager.java</file>
      </fixedFiles>
  </bug>
  <bug id="59782" opendate="2004-04-23 10:19:09" fixdate="2004-05-18 11:41:34" resolution="Fixed">
      <buginformation>
          <summary>Deadlock in reentrant workspace.runbuild I20040420-1300.
          </summary>
          <description>- started eclipse in Java perspective
              - I believe I selected a project in the packager explorer, then chose Window > Preferences
              - when the prefs dialog came up (with the Workbench page selected), I then got a progress dialog
              - it showed a waiting user operation and a waiting workspace build

              Full thread dump Java HotSpot(TM) Client VM (1.4.2_01-b06 mixed mode):

              "All Types Caching" prio=4 tid=0x21125410 nid=0x7cc in Object.wait()
              [2266f000..2266fd90]
              at java.lang.Object.wait(Native Method)
              - waiting on#0x11a81550> (a org.eclipse.core.internal.jobs.ImplicitJobs$ThreadJob)
              at
              org.eclipse.core.internal.jobs.ImplicitJobs$ThreadJob.joinRun(ImplicitJobs.java:122)
              - locked#0x11a81550> (a
              org.eclipse.core.internal.jobs.ImplicitJobs$ThreadJob)
              at org.eclipse.core.internal.jobs.ImplicitJobs.begin(ImplicitJobs.java:295)
              at org.eclipse.core.internal.jobs.JobManager.beginRule(JobManager.java:155)
              at
              org.eclipse.core.internal.resources.WorkManager.checkIn(WorkManager.java:95)
              at
              org.eclipse.core.internal.resources.Workspace.prepareOperation(Workspace.java:1595)
              at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1635)
              at
              org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:744)
              at
              org.eclipse.jdt.internal.core.JavaProject.setRawClasspath(JavaProject.java:2605)
              at org.eclipse.jdt.core.JavaCore$5.run(JavaCore.java:3448)
              at
              org.eclipse.jdt.internal.core.BatchOperation.executeOperation(BatchOperation.java:34)
              at
              org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:700)
              at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1640)
              at org.eclipse.jdt.core.JavaCore.run(JavaCore.java:3262)
              at org.eclipse.jdt.core.JavaCore.setClasspathContainer(JavaCore.java:3431)
              at
              org.eclipse.pde.internal.core.ModelEntry.updateClasspathContainer(ModelEntry.java:109)
              at
              org.eclipse.pde.internal.core.RequiredPluginsInitializer.initialize(RequiredPluginsInitializer.java:40)
              at org.eclipse.jdt.core.JavaCore$1.run(JavaCore.java:1178)
              at
              org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:609)
              at org.eclipse.core.runtime.Platform.run(Platform.java:541)
              at org.eclipse.jdt.core.JavaCore.getClasspathContainer(JavaCore.java:1173)
              at
              org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath(JavaProject.java:1841)
              at
              org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath(JavaProject.java:1755)
              at
              org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath(JavaProject.java:1727)
              at
              org.eclipse.jdt.internal.core.search.JavaSearchScope.add(JavaSearchScope.java:78)
              at
              org.eclipse.jdt.internal.core.search.JavaWorkspaceScope.initialize(JavaWorkspaceScope.java:79)
              at
              org.eclipse.jdt.internal.core.search.JavaSearchScope.#init#(JavaSearchScope.java:52)
              at
              org.eclipse.jdt.internal.core.search.JavaWorkspaceScope.#init#(JavaWorkspaceScope.java:30)
              at
              org.eclipse.jdt.core.search.SearchEngine.createWorkspaceScope(SearchEngine.java:423)
              at
              org.eclipse.jdt.internal.corext.util.AllTypesCache.search(AllTypesCache.java:502)
              at
              org.eclipse.jdt.internal.corext.util.AllTypesCache$TypeCacher.doSearchTypes(AllTypesCache.java:180)
              at
              org.eclipse.jdt.internal.corext.util.AllTypesCache$TypeCacher.run(AllTypesCache.java:149)

              "Worker-4" prio=5 tid=0x211a3bf8 nid=0x7c4 in Object.wait() [2249f000..2249fd90]
              at java.lang.Object.wait(Native Method)
              - waiting on#x127c5690> (a
              org.eclipse.core.internal.jobs.ImplicitJobs$ThreadJob)
              at
              org.eclipse.core.internal.jobs.ImplicitJobs$ThreadJob.joinRun(ImplicitJobs.java:122)
              - locked#x127c5690> (a
              org.eclipse.core.internal.jobs.ImplicitJobs$ThreadJob)
              at org.eclipse.core.internal.jobs.ImplicitJobs.begin(ImplicitJobs.java:295)
              at org.eclipse.core.internal.jobs.JobManager.beginRule(JobManager.java:155)
              at
              org.eclipse.ui.views.markers.internal.MarkerView.internalRefresh(MarkerView.java:162)
              at
              org.eclipse.ui.views.markers.internal.MarkerView.access$2(MarkerView.java:151)
              at
              org.eclipse.ui.views.markers.internal.MarkerView$3.run(MarkerView.java:237)
              at
              org.eclipse.ui.views.markers.internal.RestartableJob$2.run(RestartableJob.java:86)
              at org.eclipse.core.internal.jobs.Worker.run(Worker.java:66)

              "Worker-2" prio=5 tid=0x21c14458 nid=0x7bc in Object.wait() [223bf000..223bfd90]
              at java.lang.Object.wait(Native Method)
              - waiting on#x112015e0> (a org.eclipse.core.internal.jobs.WorkerPool)
              at org.eclipse.core.internal.jobs.WorkerPool.sleep(WorkerPool.java:209)
              - locked#x112015e0> (a org.eclipse.core.internal.jobs.WorkerPool)
              at org.eclipse.core.internal.jobs.WorkerPool.startJob(WorkerPool.java:236)
              at org.eclipse.core.internal.jobs.Worker.run(Worker.java:59)

              "Java indexing" daemon prio=4 tid=0x2110be20 nid=0x76c in Object.wait()
              [222bf000..222bfd90]
              at java.lang.Object.wait(Native Method)
              - waiting on#x11be9bc8> (a
              org.eclipse.jdt.internal.core.search.indexing.IndexManager)
              at java.lang.Object.wait(Object.java:429)
              at
              org.eclipse.jdt.internal.core.search.processing.JobManager.run(JobManager.java:323)
              - locked#x11be9bc8> (a
              org.eclipse.jdt.internal.core.search.indexing.IndexManager)
              at java.lang.Thread.run(Thread.java:534)

              "Start Level Event Dispatcher" daemon prio=5 tid=0x21137410 nid=0x7b0 in
              Object.wait() [2124f000..2124fd90]
              at java.lang.Object.wait(Native Method)
              - waiting on#x10f90fb0> (a
              org.eclipse.osgi.framework.eventmgr.EventThread)
              at java.lang.Object.wait(Object.java:429)
              at
              org.eclipse.osgi.framework.eventmgr.EventThread.getNextEvent(EventThread.java:149)
              - locked#x10f90fb0> (a org.eclipse.osgi.framework.eventmgr.EventThread)
              at org.eclipse.osgi.framework.eventmgr.EventThread.run(EventThread.java:107)

              "Framework Event Dispatcher" daemon prio=5 tid=0x21025410 nid=0x7ac in
              Object.wait() [2120f000..2120fd90]
              at java.lang.Object.wait(Native Method)
              - waiting on#x10f91000> (a
              org.eclipse.osgi.framework.eventmgr.EventThread)
              at java.lang.Object.wait(Object.java:429)
              at
              org.eclipse.osgi.framework.eventmgr.EventThread.getNextEvent(EventThread.java:149)
              - locked#x10f91000> (a org.eclipse.osgi.framework.eventmgr.EventThread)
              at org.eclipse.osgi.framework.eventmgr.EventThread.run(EventThread.java:107)

              "Signal Dispatcher" daemon prio=10 tid=0x00970e90 nid=0x7a0 waiting on condition
              [0..0]

              "YJP CPU Sampler" daemon prio=5 tid=0x0023fdb0 nid=0x798 runnable [0..0]

              "YJP RequestServer" daemon prio=5 tid=0x00970c18 nid=0x794 runnable
              [20e6f000..20e6fd90]
              at java.net.PlainSocketImpl.socketAccept(Native Method)
              at java.net.PlainSocketImpl.accept(PlainSocketImpl.java:353)
              - locked#x10f911a8> (a java.net.PlainSocketImpl)
              at java.net.ServerSocket.implAccept(ServerSocket.java:448)
              at java.net.ServerSocket.accept(ServerSocket.java:419)
              at com.yourkit.runtime.RequestServer.startServerImpl(RequestServer.java:180)
              at com.yourkit.runtime.RequestServer.access$000(RequestServer.java:18)
              at com.yourkit.runtime.RequestServer$1.run(RequestServer.java:56)

              "Finalizer" daemon prio=9 tid=0x0091e1e8 nid=0x790 in Object.wait()
              [209ef000..209efd90]
              at java.lang.Object.wait(Native Method)
              - waiting on#x10f912c0> (a java.lang.ref.ReferenceQueue$Lock)
              at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:111)
              - locked#x10f912c0> (a java.lang.ref.ReferenceQueue$Lock)
              at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:127)
              at java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:159)

              "Reference Handler" daemon prio=10 tid=0x0091ce38 nid=0x78c in Object.wait()
              [209af000..209afd90]
              at java.lang.Object.wait(Native Method)
              - waiting on#x10f91328> (a java.lang.ref.Reference$Lock)
              at java.lang.Object.wait(Object.java:429)
              at java.lang.ref.Reference$ReferenceHandler.run(Reference.java:115)
              - locked#x10f91328> (a java.lang.ref.Reference$Lock)

              "main" prio=7 tid=0x00234dc0 nid=0x780 runnable [6e000..6fc3c]
              at org.eclipse.swt.internal.win32.OS.WaitMessage(Native Method)
              at org.eclipse.swt.widgets.Display.sleep(Display.java:2896)
              at org.eclipse.jface.window.Window.runEventLoop(Window.java:671)
              at org.eclipse.jface.window.Window.open(Window.java:650)
              at
              org.eclipse.ui.internal.OpenPreferencesAction.run(OpenPreferencesAction.java:72)
              at org.eclipse.jface.action.Action.runWithEvent(Action.java:881)
              at
              org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:550)
              at
              org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:502)
              at
              org.eclipse.jface.action.ActionContributionItem$5.handleEvent(ActionContributionItem.java:435)
              at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
              at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:769)
              at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2592)
              at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2270)
              at
              org.eclipse.ui.internal.dialogs.EventLoopProgressMonitor.runEventLoop(EventLoopProgressMonitor.java:114)
              at
              org.eclipse.ui.internal.dialogs.EventLoopProgressMonitor.isCanceled(EventLoopProgressMonitor.java:94)
              at
              org.eclipse.core.internal.jobs.ImplicitJobs$ThreadJob.isCanceled(ImplicitJobs.java:142)
              at
              org.eclipse.core.internal.jobs.ImplicitJobs$ThreadJob.joinRun(ImplicitJobs.java:110)
              at org.eclipse.core.internal.jobs.ImplicitJobs.begin(ImplicitJobs.java:295)
              at org.eclipse.core.internal.jobs.JobManager.beginRule(JobManager.java:155)
              at
              org.eclipse.core.internal.resources.WorkManager.checkIn(WorkManager.java:95)
              at
              org.eclipse.core.internal.resources.Workspace.prepareOperation(Workspace.java:1595)
              at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1635)
              at
              org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:744)
              at
              org.eclipse.jdt.internal.core.JavaProject.setRawClasspath(JavaProject.java:2605)
              at org.eclipse.jdt.core.JavaCore$5.run(JavaCore.java:3448)
              at
              org.eclipse.jdt.internal.core.BatchOperation.executeOperation(BatchOperation.java:34)
              at
              org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:700)
              at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1640)
              at org.eclipse.jdt.core.JavaCore.run(JavaCore.java:3262)
              at org.eclipse.jdt.core.JavaCore.setClasspathContainer(JavaCore.java:3431)
              at
              org.eclipse.pde.internal.core.ModelEntry.updateUnknownClasspathContainer(ModelEntry.java:151)
              at
              org.eclipse.pde.internal.core.RequiredPluginsInitializer.initialize(RequiredPluginsInitializer.java:38)
              at org.eclipse.jdt.core.JavaCore$1.run(JavaCore.java:1178)
              at
              org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:609)
              at org.eclipse.core.runtime.Platform.run(Platform.java:541)
              at org.eclipse.jdt.core.JavaCore.getClasspathContainer(JavaCore.java:1173)
              at
              org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath(JavaProject.java:1841)
              at
              org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath(JavaProject.java:1755)
              at
              org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath(JavaProject.java:1727)
              at
              org.eclipse.jdt.internal.core.JavaProject.buildStructure(JavaProject.java:261)
              at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:183)
              at
              org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:567)
              at
              org.eclipse.jdt.internal.core.JavaElement.getElementInfo(JavaElement.java:304)
              at
              org.eclipse.jdt.internal.core.JavaElement.getElementInfo(JavaElement.java:290)
              at
              org.eclipse.jdt.internal.core.JavaElement.getChildren(JavaElement.java:245)
              at
              org.eclipse.jdt.internal.core.JavaProject.getPackageFragmentRoots(JavaProject.java:1557)
              at
              org.eclipse.jdt.ui.actions.OrganizeImportsAction.hasSourceFolders(OrganizeImportsAction.java:251)
              at
              org.eclipse.jdt.ui.actions.OrganizeImportsAction.isEnabled(OrganizeImportsAction.java:237)
              at
              org.eclipse.jdt.ui.actions.OrganizeImportsAction.selectionChanged(OrganizeImportsAction.java:150)
              at
              org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchSelectionChanged(SelectionDispatchAction.java:200)
              at
              org.eclipse.jdt.ui.actions.SelectionDispatchAction.selectionChanged(SelectionDispatchAction.java:195)
              at org.eclipse.jface.viewers.Viewer$2.run(Viewer.java:159)
              at
              org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:609)
              at org.eclipse.core.runtime.Platform.run(Platform.java:541)
              at org.eclipse.jface.viewers.Viewer.fireSelectionChanged(Viewer.java:157)
              at
              org.eclipse.jface.viewers.StructuredViewer.updateSelection(StructuredViewer.java:1310)
              at
              org.eclipse.jface.viewers.StructuredViewer.handleSelect(StructuredViewer.java:666)
              at
              org.eclipse.jface.viewers.StructuredViewer$4.widgetSelected(StructuredViewer.java:690)
              at
              org.eclipse.jface.util.OpenStrategy.fireSelectionEvent(OpenStrategy.java:178)
              at org.eclipse.jface.util.OpenStrategy.access$3(OpenStrategy.java:173)
              at org.eclipse.jface.util.OpenStrategy$1.handleEvent(OpenStrategy.java:309)
              at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
              at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:769)
              at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2592)
              at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2270)
              at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1437)
              at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1408)
              at
              org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:244)
              at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:140)
              at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:90)
              at
              org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:280)
              at
              org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:240)
              at
              org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:117)
              at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
              at
              sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
              at
              sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
              at java.lang.reflect.Method.invoke(Method.java:324)
              at org.eclipse.core.launcher.Main.basicRun(Main.java:267)
              at org.eclipse.core.launcher.Main.run(Main.java:699)
              at org.eclipse.core.launcher.Main.main(Main.java:683)

              "VM Thread" prio=5 tid=0x0095cd38 nid=0x788 runnable

              "VM Periodic Task Thread" prio=10 tid=0x0095e168 nid=0x7a8 waiting on condition
              "Suspend Checker Thread" prio=10 tid=0x00970d80 nid=0x79c runnable
          </description>
          <version>1.1.0</version>
          <fixedVersion>3.6 M7</fixedVersion>
          <type>Bug</type>
      </buginformation>
      <fixedFiles>
          <file type="M">org.eclipse.ui.internal.dialogs.EventLoopProgressMonitor.java</file>
          <file type="M">org.eclipse.ui.internal.progress.BlockedJobsDialog.java</file>
          <file type="M">org.eclipse.ui.internal.progress.ErrorNotificationDialog.java</file>
          <file type="M">org.eclipse.ui.internal.progress.ProgressManager.java</file>
          <file type="M">org.eclipse.ui.internal.progress.ProgressManagerUtil.java</file>
          <file type="M">org.eclipse.ui.internal.progress.ProgressMonitorFocusJobDialog.java</file>
      </fixedFiles>
  </bug>
  <bug id="171452" opendate="2007-01-23 15:35:53" fixdate="2007-02-06 10:45:03" resolution="Fixed">
      <buginformation>
          <summary>Deadlock on startup using I20070123-1030.
          </summary>
          <description>I got a couple of deadlocks on startup using I20070123-1030.
              It appears to be a syncExec from the Splash handler that is causing the deadlock. I will attach a trace.
          </description>
          <version>1.1.0</version>
          <fixedVersion>3.6 M7</fixedVersion>
          <type>Bug</type>
      </buginformation>
      <fixedFiles>
          <file type="M">org.eclipse.ui.splash.AbstractSplashHandler.java</file>
      </fixedFiles>
  </bug>
  <bug id="67053" opendate="2004-06-14 13:51:58" fixdate="2004-12-15 14:54:59" resolution="Fixed">
      <buginformation>
          <summary>when locking fails with exception, wrong message is shown3.0 RC2.
          </summary>
          <description>
              The same message will be shown by UI when locking fails, regardless the nature of the failure.
              case 1) Location#lock returns false - the "Current workspace is already in use" is shown
              case 2) Location#lock throws an IOException - something like "An error happened trying to lock the
              workspace" should be shown to the user, and the IOException should be logged.
              The same message (case 1) is being shown in both cases.

              Follows the code I am talking about:

              public final class IDEApplication ... {
              ...
              private boolean checkInstanceLocation(Shell shell) {
              ...
              try {
              if (instanceLoc.lock()) {
              writeWorkspaceVersion();
              return true;
              }
              } catch (IOException e) {
              // do nothing
              }
              MessageDialog.openError(
              shell,
              IDEWorkbenchMessages
              .getString("IDEApplication.workspaceCannotLockTitle"), //$NON-NLS-1$
              IDEWorkbenchMessages
              .getString("IDEApplication.workspaceCannotLockMessage")); //$NON-NLS-1$
              return false;
              ...
              }
              ...
              }
          </description>
          <version>1.1.0</version>
          <fixedVersion>3.6 M7</fixedVersion>
          <type>Bug</type>
      </buginformation>
      <fixedFiles>
          <file type="M">org.eclipse.ui.internal.ide.IDEApplication.java</file>
      </fixedFiles>
  </bug>
  <bug id="46562" opendate="2003-11-13 05:57:26" fixdate="2005-05-10 14:56:21" resolution="Fixed">
      <buginformation>
          <summary>Deadlock in modal cvs dialogI20031111.
          </summary>
          <description>
              I was using "Update and Overwrite" on a conflicting resource from the sync view.
              As you can see from the dump the modal CVS dialog locks itself up.

              Full thread dump Java HotSpot(TM) Client VM (1.4.2-b28 mixed mode):

              "ModalContext" prio=7 tid=0x039dc658 nid=0xf44 in Object.wait() [441f000..441fd94]
              at java.lang.Object.wait(Native Method)
              - waiting on#x1019bd10> (a org.eclipse.ui.internal.Semaphore)
              at org.eclipse.ui.internal.Semaphore.acquire(Semaphore.java:37)
              - locked#x1019bd10> (a org.eclipse.ui.internal.Semaphore)
              at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:42)
              at org.eclipse.swt.widgets.Display.syncExec(Display.java:2504)
              at
              org.eclipse.team.internal.ccvs.ui.subscriber.CVSSubscriberAction.promptForOverwrite(CVSSubscriberAction.java
              at
              org.eclipse.team.internal.ccvs.ui.subscriber.OverrideAndUpdateAction.run(OverrideAndUpdateAction.java:42)
              at
              org.eclipse.team.internal.ccvs.ui.subscriber.CVSSubscriberAction$2.run(CVSSubscriberAction.java:157)
              at
              org.eclipse.team.internal.ccvs.core.resources.EclipseSynchronizer.run(EclipseSynchronizer.java:1381)
              at
              org.eclipse.team.internal.ccvs.ui.subscriber.CVSSubscriberAction$1.run(CVSSubscriberAction.java:152)
              at
              org.eclipse.team.internal.ccvs.ui.operations.CVSBlockingRunnableContext$3.run(CVSBlockingRunnableContext.jav
              at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1557)
              at
              org.eclipse.team.internal.ccvs.ui.operations.CVSBlockingRunnableContext$2.run(CVSBlockingRunnableContext.jav
              at
              org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:101)

              "Worker-10" prio=5 tid=0x03446060 nid=0xca0 in Object.wait() [380f000..380fd94]
              at java.lang.Object.wait(Native Method)
              - waiting on#x11af4c18> (a org.eclipse.core.internal.jobs.WorkerPool)
              at org.eclipse.core.internal.jobs.WorkerPool.sleep(WorkerPool.java:155)
              - locked#x11af4c18> (a org.eclipse.core.internal.jobs.WorkerPool)
              at org.eclipse.core.internal.jobs.WorkerPool.startJob(WorkerPool.java:181)
              at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)

              "Worker-9" prio=5 tid=0x03a23990 nid=0xec8 in Object.wait() [45cf000..45cfd94]
              at java.lang.Object.wait(Native Method)
              - waiting on#x11af4c18> (a org.eclipse.core.internal.jobs.WorkerPool)
              at org.eclipse.core.internal.jobs.WorkerPool.sleep(WorkerPool.java:155)
              - locked#x11af4c18> (a org.eclipse.core.internal.jobs.WorkerPool)
              at org.eclipse.core.internal.jobs.WorkerPool.startJob(WorkerPool.java:181)
              at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)

              "Worker-8" prio=5 tid=0x039fd518 nid=0xea4 in Object.wait() [458f000..458fd94]
              at java.lang.Object.wait(Native Method)
              - waiting on#x11af4c18> (a org.eclipse.core.internal.jobs.WorkerPool)
              at org.eclipse.core.internal.jobs.WorkerPool.sleep(WorkerPool.java:155)
              - locked#x11af4c18> (a org.eclipse.core.internal.jobs.WorkerPool)
              at org.eclipse.core.internal.jobs.WorkerPool.startJob(WorkerPool.java:181)
              at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)

              "org.eclipse.jdt.internal.ui.text.JavaReconciler" daemon prio=2 tid=0x038fb770
              nid=0xf54 in Object.wait() [431f000..431
              at java.lang.Object.wait(Native Method)
              at
              org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:161)
              - locked#x1430dcb0> (a org.eclipse.jface.text.reconciler.DirtyRegionQueue)

              "Worker-5" prio=5 tid=0x0337f5e0 nid=0xbd4 in Object.wait() [450f000..450fd94]
              at java.lang.Object.wait(Native Method)
              - waiting on#x11af4c18> (a org.eclipse.core.internal.jobs.WorkerPool)
              at org.eclipse.core.internal.jobs.WorkerPool.sleep(WorkerPool.java:155)
              - locked#x11af4c18> (a org.eclipse.core.internal.jobs.WorkerPool)
              at org.eclipse.core.internal.jobs.WorkerPool.startJob(WorkerPool.java:181)
              at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)

              "Java indexing" daemon prio=4 tid=0x02e62938 nid=0xb84 in Object.wait()
              [379f000..379fd94]
              at java.lang.Object.wait(Native Method)
              - waiting on#x120dc728> (a
              org.eclipse.jdt.internal.core.search.indexing.IndexManager)
              at java.lang.Object.wait(Object.java:429)
              at
              org.eclipse.jdt.internal.core.search.processing.JobManager.run(JobManager.java:331)
              - locked#x120dc728> (a
              org.eclipse.jdt.internal.core.search.indexing.IndexManager)
              at java.lang.Thread.run(Thread.java:534)

              "Signal Dispatcher" daemon prio=10 tid=0x00a13e88 nid=0x5c4 waiting on condition
              [0..0]

              "Finalizer" daemon prio=9 tid=0x00a0f0e8 nid=0x6a4 in Object.wait()
              [2c6f000..2c6fd94]
              at java.lang.Object.wait(Native Method)
              at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:111)
              - locked#x11af0138> (a java.lang.ref.ReferenceQueue$Lock)
              at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:127)
              at java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:159)

              "Reference Handler" daemon prio=10 tid=0x009c1a20 nid=0x5ac in Object.wait()
              [2c2f000..2c2fd94]
              at java.lang.Object.wait(Native Method)
              - waiting on#x11af01a0> (a java.lang.ref.Reference$Lock)
              at java.lang.Object.wait(Object.java:429)
              at java.lang.ref.Reference$ReferenceHandler.run(Reference.java:115)
              - locked#x11af01a0> (a java.lang.ref.Reference$Lock)

              "main" prio=7 tid=0x000350d8 nid=0xe48 runnable [7e000..7fc3c]
              at org.eclipse.swt.internal.win32.OS.WaitMessage(Native Method)
              at org.eclipse.swt.widgets.Display.sleep(Display.java:2484)
              at org.eclipse.jface.window.Window.runEventLoop(Window.java:584)
              at org.eclipse.jface.window.Window.open(Window.java:563)
              at
              org.eclipse.team.internal.ccvs.ui.subscriber.CVSSubscriberAction$3.run(CVSSubscriberAction.java:275)
              at
              org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:101)
              at org.eclipse.ui.internal.UISynchronizer$1.run(UISynchronizer.java:33)
              at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
              at
              org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:102)
              - locked#x1019bd38> (a org.eclipse.swt.widgets.RunnableLock)
              at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2164)
              at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1881)
              at
              org.eclipse.jface.operation.ModalContext$ModalContextThread.block(ModalContext.java:136)
              at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:261)
              at
              org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:386)
              at
              org.eclipse.ui.internal.progress.ProgressManager$4.run(ProgressManager.java:794)
              at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84)
              at
              org.eclipse.ui.internal.progress.ProgressManager.busyCursorWhile(ProgressManager.java:785)
              at
              org.eclipse.team.internal.ccvs.ui.operations.CVSBlockingRunnableContext$1.run(CVSBlockingRunnableContext.jav
              at
              org.eclipse.team.internal.ccvs.ui.operations.CVSBlockingRunnableContext.run(CVSBlockingRunnableContext.java:
              at
              org.eclipse.team.internal.ccvs.ui.subscriber.CVSSubscriberAction.run(CVSSubscriberAction.java:130)
              at
              org.eclipse.ui.actions.ActionDelegate.runWithEvent(ActionDelegate.java:71)
              at org.eclipse.ui.internal.PluginAction.runWithEvent(PluginAction.java:260)
              at
              org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:542)
              at
              org.eclipse.jface.action.ActionContributionItem.access$4(ActionContributionItem.java:494)
              at
              org.eclipse.jface.action.ActionContributionItem$6.handleEvent(ActionContributionItem.java:466)
              at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
              at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)
              at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2187)
              at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1877)
              at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1402)
              at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1378)
              at
              org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:240)
              at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)
              at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:47)
              at
              org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:858)
              at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
              at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
              at
              sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
              at
              sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
              at java.lang.reflect.Method.invoke(Method.java:324)
              at org.eclipse.core.launcher.Main.basicRun(Main.java:299)
              at org.eclipse.core.launcher.Main.run(Main.java:767)
              at org.eclipse.core.launcher.Main.main(Main.java:601)

              "VM Thread" prio=5 tid=0x009bd970 nid=0x690 runnable

              "VM Periodic Task Thread" prio=10 tid=0x00a10498 nid=0x5bc waiting on condition
              "Suspend Checker Thread" prio=10 tid=0x00a02540 nid=0x720 runnable
          </description>
          <version>1.1.0</version>
          <fixedVersion>3.6 M7</fixedVersion>
          <type>Bug</type>
      </buginformation>
      <fixedFiles>
          <file type="M">org.eclipse.ui.internal.progress.ProgressManager.java</file>
      </fixedFiles>
  </bug>
  <bug id="296822" opendate="2009-12-03 10:47:18" fixdate="2019-11-15 04:30:50" resolution="Fixed">
      <buginformation>
          <summary>NullProgressMonitor is not thread safe for expected usage.
          </summary>
          <description>NullProgressMonitor.setCanceled and isCanceled access the cancelled field, but there's no
              synchronization.
              The expected use is that setCanceled is called from a thread other than the one doing the work, which
              polls isCanceled(), so this needs to be thread safe.

              Could either make these two methods synchronized or make the field volatile.

              Should check other progress monitor implementations too.
          </description>
          <version>1.1.0</version>
          <fixedVersion>3.6 M7</fixedVersion>
          <type>Bug</type>
      </buginformation>
      <fixedFiles>
          <file type="M">org.eclipse.jface.action.StatusLine.java</file>
          <file type="M">org.eclipse.jface.dialogs.ProgressMonitorDialog.java</file>
          <file type="M">org.eclipse.jface.wizard.ProgressMonitorPart.java</file>
      </fixedFiles>
  </bug>
  <bug id="312063" opendate="2010-05-07 09:49:37" fixdate="2010-05-07 10:39:14" resolution="Fixed">
      <buginformation>
          <summary>SelectionServiceImpl should use ListenerList instead of a HashSetHashSets are not thread-safe and
              does not guarantee event order.
          </summary>
          <description></description>
          <version>1.1.0</version>
          <fixedVersion>3.6 M7</fixedVersion>
          <type>Bug</type>
      </buginformation>
      <fixedFiles>
          <file type="M">org.eclipse.e4.workbench.ui.internal.SelectionServiceImpl.java</file>
      </fixedFiles>
  </bug>
  <bug id="262032" opendate="2009-01-22 11:03:28" fixdate="2011-07-18 04:09:40" resolution="Fixed">
      <buginformation>
          <summary>DeadlockDetector may create deadlock.</summary>
          <description></description>
          <version>1.1.0</version>
          <fixedVersion>3.6 M7</fixedVersion>
          <type>Bug</type>
      </buginformation>
      <fixedFiles>
          <file type="M">org.eclipse.ui.tests.concurrency.Bug_262032.java</file>
          <file type="M">org.eclipse.ui.tests.concurrency.ConcurrencyTestSuite.java</file>
      </fixedFiles>
  </bug>
  <bug id="114527" opendate="2005-11-01 09:54:29" fixdate="2005-12-13 11:08:48" resolution="Fixed">
      <buginformation>
          <summary>Race condition in Workbench leads to intermittent crashes (org.eclipse.ui.startup).</summary>
          <description></description>
          <version>1.1.0</version>
          <fixedVersion>3.6 M7</fixedVersion>
          <type>Bug</type>
      </buginformation>
      <fixedFiles>
          <file type="M">org.eclipse.ui.internal.Workbench.java</file>
      </fixedFiles>
  </bug>
  <bug id="164361" opendate="2006-11-13 12:48:31" fixdate="2007-01-30 08:22:01" resolution="Fixed">
      <buginformation>
          <summary>Task name not shown in user job progress dialog3.2.
          </summary>
          <description>The progress dialog for a user job often does not show the task name passed to
              IProgressMonitor.beginTask.
              This appears to be due to a race condition in the optimization in ProgressMonitorDialog that tries to
              avoid trimming and setting the message in the label if the dialog is not visible. It's possible for the
              message to get set but never get shown, due to the SWT.Show handler running before
              messageLabel.isVisible() is true.

              I suggest that the SWT.Show handler always set the last message in the label, even if it's not yet
              visible. That is, avoid the isVisible() check in setMessage when coming from the SWT.Show handler in
              configureShell.

              Can this get addressed for the next milestone? I'd be happy to sit down and help with this one.
          </description>
          <version>1.1.0</version>
          <fixedVersion>3.6 M7</fixedVersion>
          <type>Bug</type>
      </buginformation>
      <fixedFiles>
          <file type="M">org.eclipse.jface.dialogs.ProgressMonitorDialog.java</file>
      </fixedFiles>
  </bug>
  <bug id="258352" opendate="2008-12-10 15:15:42" fixdate="2012-12-03 18:21:05" resolution="Fixed">
      <buginformation>
          <summary>synchronization in ProgressManager too expensive.</summary>
          <description></description>
          <version>1.1.0</version>
          <fixedVersion>3.6 M7</fixedVersion>
          <type>Bug</type>
      </buginformation>
      <fixedFiles>
          <file type="M">org.eclipse.ui.internal.progress.ProgressManager.java</file>
          <file type="M">org.eclipse.ui.internal.progress.ProgressViewUpdater.java</file>
      </fixedFiles>
  </bug>
  <bug id="84141" opendate="2005-02-01 10:43:37" fixdate="2005-02-16 14:38:14" resolution="Fixed">
      <buginformation>
          <summary>DecoratorScheduler should not lock UI Thread20050125.
          </summary>
          <description>Currently the DecoratorScheduler locks the UI Thread sometimes while decorations are running.
              We should remove this lock and use a scheduling rule instead.
          </description>
          <version>1.1.0</version>
          <fixedVersion>3.6 M7</fixedVersion>
          <type>Bug</type>
      </buginformation>
      <fixedFiles>
          <file type="M">org.eclipse.ui.internal.decorators.DecorationScheduler.java</file>
          <file type="M">org.eclipse.ui.internal.decorators.DecoratorManager.java</file>
          <file type="M">org.eclipse.ui.tests.decorators.DecoratorTableTreeTest.java</file>
          <file type="M">org.eclipse.ui.tests.decorators.DecoratorTableTreeView.java</file>
          <file type="M">org.eclipse.ui.tests.decorators.DecoratorTableView.java</file>
          <file type="M">org.eclipse.ui.tests.decorators.DecoratorTestPart.java</file>
          <file type="M">org.eclipse.ui.tests.decorators.DecoratorTreeView.java</file>
          <file type="M">org.eclipse.ui.tests.decorators.DecoratorViewerTest.java</file>
          <file type="M">org.eclipse.ui.tests.decorators.FontDecorator.java</file>
          <file type="M">org.eclipse.ui.tests.decorators.ForegroundColorDecorator.java</file>
      </fixedFiles>
  </bug>
  <bug id="168806" opendate="2006-12-20 22:23:09" fixdate="2006-12-20 22:52:07" resolution="Fixed">
      <buginformation>
          <summary>Realm.ensureWorkerThreadIsRunning() doesn't start a new thread.</summary>
          <description></description>
          <version>1.1.0</version>
          <fixedVersion>3.6 M7</fixedVersion>
          <type>Bug</type>
      </buginformation>
      <fixedFiles>
          <file type="M">org.eclipse.core.databinding.observable.Realm.java</file>
          <file type="M">org.eclipse.core.databinding.observable.Realm.java</file>
      </fixedFiles>
  </bug>
  <bug id="48382" opendate="2003-12-09 19:14:18" fixdate="2004-01-07 18:55:08" resolution="Fixed">
      <buginformation>
          <summary>Deadlock running automated testsI20031209.
          </summary>
          <description>The automated tests for this build failed due to a deadlock. The stack trace is attached.
              All of the jobs involved are from the new marker view work.
              The problematic pattern is in Worker-4 and Worker-1, both of which are trying to join another job while
              owning an ILock.
              I recommend releasing the ILock before attempting to join the job.
          </description>
          <version>1.1.0</version>
          <fixedVersion>3.6 M7</fixedVersion>
          <type>Bug</type>
      </buginformation>
      <fixedFiles>
          <file type="M">org.eclipse.ui.views.markers.internal.TableContentProvider.java</file>
      </fixedFiles>
  </bug>
  <bug id="6623" opendate="2001-12-06 05:34:27" fixdate="2002-01-29 11:58:39" resolution="Fixed">
      <buginformation>
          <summary>Threading problems on plugin startup.
          </summary>
          <description>Plugin-startup can be called in the UI-thread, but AbstractUIPlugin.refreshPluginActions then
              fails.

              org.eclipse.swt.SWTException: Invalid thread access
              at org.eclipse.swt.SWT.error(SWT.java:1887)
              at org.eclipse.swt.SWT.error(SWT.java:1819)
              at org.eclipse.swt.widgets.Widget.error(Widget.java:366)
              at org.eclipse.swt.widgets.Widget.checkWidget(Widget.java(Compiled
              Code))
              at org.eclipse.swt.widgets.Tree.getSelection(Tree.java(Compiled Code))
              at org.eclipse.jface.viewers.TreeViewer.getSelection
              (TreeViewer.java:158)
              at org.eclipse.jface.viewers.AbstractTreeViewer.getSelectionFromWidget
              (AbstractTreeViewer.java:586)
              at org.eclipse.jface.viewers.StructuredViewer.getSelection
              (StructuredViewer.java:365)
              at org.eclipse.ui.internal.SelectionService.getSelection
              (SelectionService.java:64)
              at org.eclipse.ui.internal.WWinPluginAction.refreshSelection
              (WWinPluginAction.java:128)
              at org.eclipse.ui.internal.WWinPluginAction.refreshActionList
              (WWinPluginAction.java:52)
              at org.eclipse.ui.internal.Workbench.refreshPluginActions
              (Workbench.java:978)
              at org.eclipse.ui.plugin.AbstractUIPlugin.refreshPluginActions
              (AbstractUIPlugin.java:382)
              at org.eclipse.ui.plugin.AbstractUIPlugin.startup
              (AbstractUIPlugin.java:421)
              at org.eclipse.pde.selfhosting.internal.SelfHostingPlugin.startup
              (SelfHostingPlugin.java:176)
              at org.eclipse.core.internal.plugins.PluginDescriptor$1.run
              (PluginDescriptor.java:643)
              at org.eclipse.core.internal.runtime.InternalPlatform.run
              (InternalPlatform.java:818)
              at
              org.eclipse.core.internal.plugins.PluginDescriptor.internalDoPluginActivation
              (PluginDescriptor.java:655)
              at org.eclipse.core.internal.plugins.PluginDescriptor.doPluginActivation
              (PluginDescriptor.java:135)
              at org.eclipse.core.internal.plugins.PluginClassLoader.activatePlugin
              (PluginClassLoader.java:52)
              at
              org.eclipse.core.internal.plugins.PluginClassLoader.findClassParentsSelf
              (PluginClassLoader.java(Compiled Code))
              at org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass
              (DelegatingURLClassLoader.java(Compiled Code))
              at org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass
              (DelegatingURLClassLoader.java(Compiled Code))
              at java.lang.ClassLoader.loadClass(ClassLoader.java(Compiled Code))
              at
              org.eclipse.core.internal.plugins.PluginDescriptor.createExecutableExtension
              (PluginDescriptor.java:79)
              at
              org.eclipse.core.internal.plugins.PluginDescriptor.createExecutableExtension
              (PluginDescriptor.java:116)
              at
              org.eclipse.core.internal.plugins.ConfigurationElement.createExecutableExtension
              (ConfigurationElement.java:96)
              at org.eclipse.debug.internal.core.Launcher.getDelegate
              (Launcher.java:92)
              at org.eclipse.debug.internal.ui.LaunchHistoryElement.getLaunchElement
              (LaunchHistoryElement.java:111)
              at org.eclipse.debug.internal.ui.DebugUIPlugin.removeDeletedHistories
              (DebugUIPlugin.java:1352)
              at org.eclipse.debug.internal.ui.DebugUIPlugin.removeDeletedHistories
              (DebugUIPlugin.java:1340)
              at
              org.eclipse.debug.internal.ui.DebugUIPlugin$ResourceDeletedVisitor.visit
              (DebugUIPlugin.java:202)
              at org.eclipse.core.internal.events.ResourceDelta.accept
              (ResourceDelta.java(Compiled Code))
              at org.eclipse.core.internal.events.ResourceDelta.accept
              (ResourceDelta.java(Compiled Code))
              at org.eclipse.core.internal.events.ResourceDelta.accept
              (ResourceDelta.java(Compiled Code))
              at org.eclipse.core.internal.events.ResourceDelta.accept
              (ResourceDelta.java(Compiled Code))
              at org.eclipse.core.internal.events.ResourceDelta.accept
              (ResourceDelta.java(Compiled Code))
              at org.eclipse.core.internal.events.ResourceDelta.accept
              (ResourceDelta.java(Compiled Code))
              at org.eclipse.core.internal.events.ResourceDelta.accept
              (ResourceDelta.java(Compiled Code))
              at org.eclipse.core.internal.events.ResourceDelta.accept
              (ResourceDelta.java(Compiled Code))
              at org.eclipse.core.internal.events.ResourceDelta.accept
              (ResourceDelta.java(Compiled Code))
              at org.eclipse.core.internal.events.ResourceDelta.accept
              (ResourceDelta.java(Compiled Code))
              at org.eclipse.debug.internal.ui.DebugUIPlugin.resourceChanged
              (DebugUIPlugin.java:1178)
              at org.eclipse.core.internal.events.NotificationManager$1.run
              (NotificationManager.java:125)
              at org.eclipse.core.internal.runtime.InternalPlatform.run
              (InternalPlatform.java:818)
              at org.eclipse.core.runtime.Platform.run(Platform.java:395)
              at org.eclipse.core.internal.events.NotificationManager.notify
              (NotificationManager.java:140)
              at org.eclipse.core.internal.events.NotificationManager.broadcastChanges
              (NotificationManager.java:43)
              at org.eclipse.core.internal.events.NotificationManager.broadcastChanges
              (NotificationManager.java:64)
              at org.eclipse.core.internal.resources.Workspace.broadcastChanges
              (Workspace.java:110)
              at org.eclipse.core.internal.resources.Workspace.endOperation
              (Workspace.java(Compiled Code))
              at org.eclipse.core.internal.resources.Workspace.build
              (Workspace.java:122)
              at org.eclipse.debug.internal.ui.DebugUIPlugin$9.run
              (DebugUIPlugin.java:1677)
              at org.eclipse.jface.operation.ModalContext$ModalContextThread.run
              (ModalContext.java:98)
          </description>
          <version>1.1.0</version>
          <fixedVersion>3.6 M7</fixedVersion>
          <type>Bug</type>
      </buginformation>
      <fixedFiles>
          <file type="M">org.eclipse.ui.plugin.AbstractUIPlugin.java</file>
      </fixedFiles>
  </bug>
  <bug id="302536" opendate="2010-02-10 22:19:18" fixdate="2013-10-29 09:49:23" resolution="Fixed">
      <buginformation>
          <summary>Broken double checked locking in MarkerSupportRegistry.</summary>
          <description></description>
          <version>1.1.0</version>
          <fixedVersion>3.6 M7</fixedVersion>
          <type>Bug</type>
      </buginformation>
      <fixedFiles>
          <file type="M">org.eclipse.ui.views.markers.internal.MarkerSupportRegistry.java</file>
      </fixedFiles>
  </bug>
  <bug id="118414" opendate="2005-11-29 09:06:14" fixdate="2005-12-13 16:03:40" resolution="Fixed">
      <buginformation>
          <summary>Deadlock on each startup caused by AbstractWorkingSetManagerI20051129-0800.
          </summary>
          <description>
              I always get a deadlock caused by AbstractWorkingSetManager when starting an existing workspace:

              Full thread dump Java HotSpot(TM) Client VM (1.5.0_05-b03 mixed mode):

              "Java indexing" daemon prio=4 tid=0x02e3f338 nid=0x28c in Object.wait() [0x0492f000..0x0492fb68]
              at java.lang.Object.wait(Native Method)
              - waiting on#x12dd1b00> (a org.eclipse.jdt.internal.core.search.indexing.IndexManager)
              at java.lang.Object.wait(Object.java:474)
              at org.eclipse.jdt.internal.core.search.processing.JobManager.run(JobManager.java:349)
              - locked#x12dd1b00> (a org.eclipse.jdt.internal.core.search.indexing.IndexManager)
              at java.lang.Thread.run(Thread.java:595)

              "Worker-3" daemon prio=5 tid=0x03907ca0 nid=0x948 in Object.wait() [0x03d8f000..0x03d8fbe8]
              at java.lang.Object.wait(Native Method)
              - waiting on#x11b4ff60> (a org.eclipse.core.internal.jobs.WorkerPool)
              at org.eclipse.core.internal.jobs.WorkerPool.sleep(WorkerPool.java:173)
              - locked#x11b4ff60> (a org.eclipse.core.internal.jobs.WorkerPool)
              at org.eclipse.core.internal.jobs.WorkerPool.startJob(WorkerPool.java:205)
              at org.eclipse.core.internal.jobs.Worker.run(Worker.java:51)

              "Worker-2" daemon prio=5 tid=0x0377d0a8 nid=0x11e0 in Object.wait() [0x03d4f000..0x03d4fc68]
              at java.lang.Object.wait(Native Method)
              - waiting on#x11b4ff60> (a org.eclipse.core.internal.jobs.WorkerPool)
              at org.eclipse.core.internal.jobs.WorkerPool.sleep(WorkerPool.java:173)
              - locked#x11b4ff60> (a org.eclipse.core.internal.jobs.WorkerPool)
              at org.eclipse.core.internal.jobs.WorkerPool.startJob(WorkerPool.java:205)
              at org.eclipse.core.internal.jobs.Worker.run(Worker.java:51)

              "Worker-1" daemon prio=5 tid=0x0371f570 nid=0x988 in Object.wait() [0x0350f000..0x0350fce8]
              at java.lang.Object.wait(Native Method)
              - waiting on#x11b4ff60> (a org.eclipse.core.internal.jobs.WorkerPool)
              at org.eclipse.core.internal.jobs.WorkerPool.sleep(WorkerPool.java:173)
              - locked#x11b4ff60> (a org.eclipse.core.internal.jobs.WorkerPool)
              at org.eclipse.core.internal.jobs.WorkerPool.startJob(WorkerPool.java:205)
              at org.eclipse.core.internal.jobs.Worker.run(Worker.java:51)

              "Worker-0" daemon prio=5 tid=0x036d4408 nid=0x1430 in Object.wait() [0x034cf000..0x034cfd68]
              at java.lang.Object.wait(Native Method)
              - waiting on#x11b4ff60> (a org.eclipse.core.internal.jobs.WorkerPool)
              at org.eclipse.core.internal.jobs.WorkerPool.sleep(WorkerPool.java:173)
              - locked#x11b4ff60> (a org.eclipse.core.internal.jobs.WorkerPool)
              at org.eclipse.core.internal.jobs.WorkerPool.startJob(WorkerPool.java:205)
              at org.eclipse.core.internal.jobs.Worker.run(Worker.java:51)

              "Start Level Event Dispatcher" daemon prio=5 tid=0x02dc7870 nid=0x1428 in Object.wait()
              [0x0344f000..0x0344fae8]
              at java.lang.Object.wait(Native Method)
              - waiting on#x11b364a8> (a org.eclipse.osgi.framework.eventmgr.EventManager$EventThread)
              at java.lang.Object.wait(Object.java:474)
              at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.getNextEvent(EventManager.java:349)
              - locked#x11b364a8> (a org.eclipse.osgi.framework.eventmgr.EventManager$EventThread)
              at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:287)

              "State Saver" prio=5 tid=0x02dc57b0 nid=0xea4 in Object.wait() [0x0340f000..0x0340fb68]
              at java.lang.Object.wait(Native Method)
              - waiting on#x11b365f8> (a org.eclipse.osgi.internal.resolver.SystemState)
              at org.eclipse.core.runtime.adaptor.EclipseAdaptor$StateSaver.run(EclipseAdaptor.java:929)
              - locked#x11b365f8> (a org.eclipse.osgi.internal.resolver.SystemState)
              at java.lang.Thread.run(Thread.java:595)

              "Framework Event Dispatcher" daemon prio=5 tid=0x02dd8560 nid=0xa80 in Object.wait()
              [0x033cf000..0x033cfbe8]
              at java.lang.Object.wait(Native Method)
              - waiting on#x13113e28> (a org.eclipse.swt.widgets.RunnableLock)
              at java.lang.Object.wait(Object.java:474)
              at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:169)
              - locked#x13113e28> (a org.eclipse.swt.widgets.RunnableLock)
              at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:28)
              at org.eclipse.swt.widgets.Display.syncExec(Display.java:3656)
              at
              org.eclipse.ui.internal.AbstractWorkingSetManager.firePropertyChange(AbstractWorkingSetManager.java:301)
              at org.eclipse.ui.internal.AbstractWorkingSetManager.getUpdater(AbstractWorkingSetManager.java:585)
              at org.eclipse.ui.internal.AbstractWorkingSetManager.bundleChanged(AbstractWorkingSetManager.java:546)
              - locked#x12d83968> (a org.eclipse.ui.internal.WorkingSetManager)
              at org.eclipse.osgi.framework.internal.core.BundleContextImpl.dispatchEvent(BundleContextImpl.java:1205)
              at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:189)
              at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:291)

              "Low Memory Detector" daemon prio=5 tid=0x00a92fd0 nid=0x1768 runnable [0x00000000..0x00000000]

              "CompilerThread0" daemon prio=10 tid=0x00a91ba8 nid=0xe6c waiting on condition [0x00000000..0x02d0f6cc]

              "Signal Dispatcher" daemon prio=10 tid=0x00a90f98 nid=0xe1c waiting on condition
              [0x00000000..0x00000000]

              "Finalizer" daemon prio=9 tid=0x00a48850 nid=0x1774 in Object.wait() [0x02c8f000..0x02c8fa68]
              at java.lang.Object.wait(Native Method)
              - waiting on#x11af0310> (a java.lang.ref.ReferenceQueue$Lock)
              at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:116)
              - locked#x11af0310> (a java.lang.ref.ReferenceQueue$Lock)
              at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:132)
              at java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:159)

              "Reference Handler" daemon prio=10 tid=0x00a87b58 nid=0x15c0 in Object.wait() [0x02c4f000..0x02c4fae8]
              at java.lang.Object.wait(Native Method)
              - waiting on#x11af0070> (a java.lang.ref.Reference$Lock)
              at java.lang.Object.wait(Object.java:474)
              at java.lang.ref.Reference$ReferenceHandler.run(Reference.java:116)
              - locked#x11af0070> (a java.lang.ref.Reference$Lock)

              "main" prio=7 tid=0x00036d78 nid=0xd50 waiting for monitor entry [0x0007e000..0x0007fc3c]
              at org.eclipse.core.commands.common.EventManager.addListenerObject(EventManager.java:56)
              - waiting to lock#x12d83968> (a org.eclipse.ui.internal.WorkingSetManager)
              at
              org.eclipse.ui.internal.AbstractWorkingSetManager.addPropertyChangeListener(AbstractWorkingSetManager.java:272)
              at org.eclipse.jdt.internal.ui.workingsets.WorkingSetFilterActionGroup.#init#
              (WorkingSetFilterActionGroup.java:89)
              at org.eclipse.jdt.internal.ui.browsing.JavaBrowsingPart.createActions(JavaBrowsingPart.java:578)
              at org.eclipse.jdt.internal.ui.browsing.PackagesView.createActions(PackagesView.java:426)
              at org.eclipse.jdt.internal.ui.browsing.JavaBrowsingPart.createPartControl(JavaBrowsingPart.java:352)
              at org.eclipse.ui.internal.ViewReference.createPartHelper(ViewReference.java:305)
              at org.eclipse.ui.internal.ViewReference.createPart(ViewReference.java:180)
              at org.eclipse.ui.internal.WorkbenchPartReference.getPart(WorkbenchPartReference.java:552)
              at org.eclipse.ui.internal.PartPane.setVisible(PartPane.java:285)
              at org.eclipse.ui.internal.ViewPane.setVisible(ViewPane.java:503)
              at org.eclipse.ui.internal.presentations.PresentablePart.setVisible(PresentablePart.java:140)
              at
              org.eclipse.ui.internal.presentations.util.PresentablePartFolder.select(PresentablePartFolder.java:263)
              at org.eclipse.ui.internal.presentations.util.LeftToRightTabOrder.select(LeftToRightTabOrder.java:65)
              at
              org.eclipse.ui.internal.presentations.util.TabbedStackPresentation.selectPart(TabbedStackPresentation.java:394)
              at org.eclipse.ui.internal.PartStack.refreshPresentationSelection(PartStack.java:1140)
              at org.eclipse.ui.internal.PartStack.createControl(PartStack.java:621)
              at org.eclipse.ui.internal.PartStack.createControl(PartStack.java:530)
              at org.eclipse.ui.internal.PartSashContainer.createControl(PartSashContainer.java:557)
              at org.eclipse.ui.internal.PerspectiveHelper.activate(PerspectiveHelper.java:227)
              at org.eclipse.ui.internal.Perspective.onActivate(Perspective.java:813)
              at org.eclipse.ui.internal.WorkbenchPage.onActivate(WorkbenchPage.java:2217)
              at org.eclipse.ui.internal.WorkbenchWindow$6.run(WorkbenchWindow.java:2461)
              at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
              at org.eclipse.ui.internal.WorkbenchWindow.setActivePage(WorkbenchWindow.java:2443)
              at org.eclipse.ui.internal.WorkbenchWindow.restoreState(WorkbenchWindow.java:1893)
              at org.eclipse.ui.internal.Workbench.doRestoreState(Workbench.java:2644)
              at org.eclipse.ui.internal.Workbench.access$14(Workbench.java:2593)
              at org.eclipse.ui.internal.Workbench$17.run(Workbench.java:1542)
              at org.eclipse.ui.internal.Workbench.runStartupWithProgress(Workbench.java:1287)
              at org.eclipse.ui.internal.Workbench.restoreState(Workbench.java:1540)
              at org.eclipse.ui.internal.Workbench.access$12(Workbench.java:1519)
              at org.eclipse.ui.internal.Workbench$15.run(Workbench.java:1402)
              at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:37)
              at org.eclipse.core.runtime.Platform.run(Platform.java:785)
              at org.eclipse.ui.internal.Workbench.restoreState(Workbench.java:1346)
              at org.eclipse.ui.internal.WorkbenchConfigurer.restoreState(WorkbenchConfigurer.java:183)
              at org.eclipse.ui.application.WorkbenchAdvisor.openWindows(WorkbenchAdvisor.java:700)
              at org.eclipse.ui.internal.Workbench.init(Workbench.java:1074)
              at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1696)
              at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:396)
              at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:143)
              at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:106)
              at org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:109)
              at
              org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:92)
              at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:68)
              at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:369)
              at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:167)
              at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
              at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
              at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
              at java.lang.reflect.Method.invoke(Method.java:585)
              at org.eclipse.core.launcher.Main.invokeFramework(Main.java:338)
              at org.eclipse.core.launcher.Main.basicRun(Main.java:282)
              at org.eclipse.core.launcher.Main.run(Main.java:977)
              at org.eclipse.core.launcher.Main.main(Main.java:952)

              "VM Thread" prio=10 tid=0x0003f2a0 nid=0x9dc runnable

              "VM Periodic Task Thread" prio=10 tid=0x00a8f3d0 nid=0xeec waiting on condition
          </description>
          <version>1.1.0</version>
          <fixedVersion>3.6 M7</fixedVersion>
          <type>Bug</type>
      </buginformation>
      <fixedFiles>
          <file type="M">org.eclipse.ui.internal.AbstractWorkingSetManager.java</file>
      </fixedFiles>
  </bug>
  <bug id="113582" opendate="2005-10-24 15:13:12" fixdate="2005-11-01 09:41:21" resolution="Fixed">
      <buginformation>
          <summary>Deadlock updating marker list during builds.
          </summary>
          <description>I hot a deadlock involving jobs.
              The only two parties involved appear to be the problems view and the editor being saved.
              From the stacktrace, It's not obvious to me why the deadlock has occurred.
              I'm assigning it to Tod since the Problems view is involved but it could also be a problem in the Jobs
              framework so I've copied John as well. Here's the stacktrace.

              Full thread dump Java HotSpot(TM) Client VM (1.4.2_10-ea-b01 mixed mode):

              "org.eclipse.jdt.internal.ui.text.JavaReconciler" daemon prio=2 tid=0x041fbb68
              n
              id=0x9e0 in Object.wait() [5b7f000..5b7fd68]
              at java.lang.Object.wait(Native Method)
              at
              org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread
              .run(AbstractReconciler.java:176)
              - locked#x17197160> (a
              org.eclipse.jface.text.reconciler.DirtyRegionQu
              eue)

              "org.eclipse.jdt.internal.ui.text.JavaReconciler" daemon prio=2 tid=0x046ff530
              n
              id=0xca8 in Object.wait() [5daf000..5dafd68]
              at java.lang.Object.wait(Native Method)
              at
              org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread
              .run(AbstractReconciler.java:176)
              - locked#x16eac480> (a
              org.eclipse.jface.text.reconciler.DirtyRegionQu
              eue)

              "org.eclipse.jface.text.reconciler.MonoReconciler" daemon prio=2 tid=0x041ea010
              nid=0x8c8 in Object.wait() [5d6f000..5d6fd68]
              at java.lang.Object.wait(Native Method)
              at
              org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread
              .run(AbstractReconciler.java:176)
              - locked#x16d75488> (a
              org.eclipse.jface.text.reconciler.DirtyRegionQu
              eue)

              "org.eclipse.jface.text.reconciler.MonoReconciler" daemon prio=2 tid=0x0451ad30
              nid=0xd7c in Object.wait() [5d2f000..5d2fd68]
              at java.lang.Object.wait(Native Method)
              at
              org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread
              .run(AbstractReconciler.java:176)
              - locked#x16d754e8> (a
              org.eclipse.jface.text.reconciler.DirtyRegionQu
              eue)

              "org.eclipse.jface.text.reconciler.MonoReconciler" daemon prio=2 tid=0x04691d80
              nid=0x544 in Object.wait() [583f000..583fd68]
              at java.lang.Object.wait(Native Method)
              at
              org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread
              .run(AbstractReconciler.java:176)
              - locked#x16d75548> (a
              org.eclipse.jface.text.reconciler.DirtyRegionQu
              eue)

              "org.eclipse.jface.text.reconciler.MonoReconciler" daemon prio=2 tid=0x04734928
              nid=0x540 in Object.wait() [531f000..531fd68]
              at java.lang.Object.wait(Native Method)
              at
              org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread
              .run(AbstractReconciler.java:176)
              - locked#x16c98228> (a
              org.eclipse.jface.text.reconciler.DirtyRegionQu
              eue)

              "org.eclipse.jface.text.reconciler.MonoReconciler" daemon prio=2 tid=0x0402d8d8
              nid=0x208 in Object.wait() [3dff000..3dffd68]
              at java.lang.Object.wait(Native Method)
              at
              org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread
              .run(AbstractReconciler.java:176)
              - locked#x16c98470> (a
              org.eclipse.jface.text.reconciler.DirtyRegionQu
              eue)

              "Worker-779" prio=5 tid=0x04799308 nid=0x5dc in Object.wait()
              [77df000..77dfd68]

              at java.lang.Object.wait(Native Method)
              at org.eclipse.core.internal.jobs.Semaphore.acquire(Semaphore.java:38)
              - locked#x1a18c4e8> (a org.eclipse.core.internal.jobs.Semaphore)
              at org.eclipse.core.internal.jobs.JobManager.join(JobManager.java:611)
              at org.eclipse.core.internal.jobs.InternalJob.join
              (InternalJob.java:305)

              at org.eclipse.core.runtime.jobs.Job.join(Job.java:353)
              at org.eclipse.ui.views.markers.internal.MarkerView.scheduleCountUpdate
              (
              MarkerView.java:1329)
              at
              org.eclipse.ui.views.markers.internal.MarkerAdapter.fetchDeferredChil
              dren(MarkerAdapter.java:107)
              at org.eclipse.ui.progress.DeferredTreeContentManager$1.run
              (DeferredTree
              ContentManager.java:192)
              at org.eclipse.core.internal.jobs.Worker.run(Worker.java:76)

              "Worker-775" prio=5 tid=0x04723c08 nid=0x72c in Object.wait()
              [613f000..613fd68]

              at java.lang.Object.wait(Native Method)
              - waiting on#x16cec7f0> (a
              org.eclipse.ui.console.IOConsoleInputStream
              )
              at java.lang.Object.wait(Object.java:429)
              at org.eclipse.ui.console.IOConsoleInputStream.waitForData
              (IOConsoleInpu
              tStream.java:147)
              at org.eclipse.ui.console.IOConsoleInputStream.read
              (IOConsoleInputStream
              .java:93)
              - locked#x16cec7f0> (a org.eclipse.ui.console.IOConsoleInputStream)
              at org.eclipse.ui.console.IOConsoleInputStream.read
              (IOConsoleInputStream
              .java:118)
              at
              org.eclipse.debug.internal.ui.views.console.ProcessConsole$InputReadJ
              ob.run(ProcessConsole.java:666)
              at org.eclipse.core.internal.jobs.Worker.run(Worker.java:76)

              "Worker-769" prio=5 tid=0x04859c18 nid=0x44c waiting on condition
              [779f000..779f
              d68]
              at java.lang.Thread.sleep(Native Method)
              at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run
              (Decorati
              onScheduler.java:249)
              at org.eclipse.core.internal.jobs.Worker.run(Worker.java:76)

              "Java indexing" daemon prio=4 tid=0x03f81de8 nid=0x26c in Object.wait()
              [571f000
              ..571fd68]
              at java.lang.Object.wait(Native Method)
              - waiting on#x138b6f80> (a
              org.eclipse.jdt.internal.core.search.indexi
              ng.IndexManager)
              at java.lang.Object.wait(Object.java:429)
              at org.eclipse.jdt.internal.core.search.processing.JobManager.run
              (JobMan
              ager.java:349)
              - locked#x138b6f80> (a
              org.eclipse.jdt.internal.core.search.indexing.I
              ndexManager)
              at java.lang.Thread.run(Thread.java:534)

              "Start Level Event Dispatcher" daemon prio=5 tid=0x02fa0fb8 nid=0xb98 in
              Object.
              wait() [316f000..316fd68]
              at java.lang.Object.wait(Native Method)
              - waiting on#x127b0b08> (a
              org.eclipse.osgi.framework.eventmgr.EventMa
              nager$EventThread)
              at java.lang.Object.wait(Object.java:429)
              at
              org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.getNextE
              vent(EventManager.java:349)
              - locked#x127b0b08> (a
              org.eclipse.osgi.framework.eventmgr.EventManage
              r$EventThread)
              at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run
              (Even
              tManager.java:287)

              "Framework Event Dispatcher" daemon prio=5 tid=0x00a49c00 nid=0x94c in
              Object.wa
              it() [30af000..30afd68]
              at java.lang.Object.wait(Native Method)
              - waiting on#x127a1ad0> (a
              org.eclipse.osgi.framework.eventmgr.EventMa
              nager$EventThread)
              at java.lang.Object.wait(Object.java:429)
              at
              org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.getNextE
              vent(EventManager.java:349)
              - locked#x127a1ad0> (a
              org.eclipse.osgi.framework.eventmgr.EventManage
              r$EventThread)
              at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run
              (Even
              tManager.java:287)

              "Signal Dispatcher" daemon prio=10 tid=0x009d00c8 nid=0xa94 waiting on
              condition
              [0..0]

              "Finalizer" daemon prio=9 tid=0x009cd700 nid=0x17c in Object.wait()
              [2d5f000..2d
              5fd68]
              at java.lang.Object.wait(Native Method)
              at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:111)
              - locked#x12778a48> (a java.lang.ref.ReferenceQueue$Lock)
              at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:127)
              at java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:159)

              "Reference Handler" daemon prio=10 tid=0x009cc378 nid=0xa1c in Object.wait()
              [2d
              1f000..2d1fd68]
              at java.lang.Object.wait(Native Method)
              at java.lang.Object.wait(Object.java:429)
              at java.lang.ref.Reference$ReferenceHandler.run(Reference.java:115)
              - locked#x12778ab0> (a java.lang.ref.Reference$Lock)

              "main" prio=5 tid=0x00034b50 nid=0xc54 runnable [7e000..7fc3c]
              at java.lang.Object.wait(Native Method)
              - waiting on#x16de07e8> (a org.eclipse.core.internal.jobs.ThreadJob)
              at org.eclipse.core.internal.jobs.ThreadJob.joinRun(ThreadJob.java:183)
              - locked#x16de07e8> (a org.eclipse.core.internal.jobs.ThreadJob)
              at org.eclipse.core.internal.jobs.ImplicitJobs.begin
              (ImplicitJobs.java:8
              8)
              at org.eclipse.core.internal.jobs.JobManager.beginRule
              (JobManager.java:1
              90)
              at org.eclipse.core.internal.resources.WorkManager.checkIn
              (WorkManager.j
              ava:96)
              at org.eclipse.core.internal.resources.Workspace.prepareOperation
              (Worksp
              ace.java:1663)
              at org.eclipse.core.internal.resources.Workspace.run
              (Workspace.java:1703
              )
              at org.eclipse.ui.actions.WorkspaceModifyOperation.run
              (WorkspaceModifyOp
              eration.java:110)
              - locked#x1005bb40> (a
              org.eclipse.ui.actions.WorkspaceModifyDelegatin
              gOperation)
              at org.eclipse.ui.internal.editors.text.WorkspaceOperationRunner.run
              (Wor
              kspaceOperationRunner.java:73)
              at org.eclipse.ui.internal.editors.text.WorkspaceOperationRunner.run
              (Wor
              kspaceOperationRunner.java:63)
              at
              org.eclipse.ui.editors.text.TextFileDocumentProvider.executeOperation
              (TextFileDocumentProvider.java:447)
              at org.eclipse.ui.editors.text.TextFileDocumentProvider.saveDocument
              (Tex
              tFileDocumentProvider.java:706)
              at org.eclipse.ui.texteditor.AbstractTextEditor.performSave
              (AbstractText
              Editor.java:3758)
              at
              org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.performS
              ave(CompilationUnitEditor.java:1468)
              at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.doSave
              (C
              ompilationUnitEditor.java:1521)
              - locked#x17197008> (a org.eclipse.jdt.internal.core.CompilationUnit)
              at org.eclipse.ui.internal.SaveableHelper$1.run(SaveableHelper.java:95)
              at org.eclipse.ui.internal.SaveableHelper$2.run
              (SaveableHelper.java:116)

              at org.eclipse.jface.operation.ModalContext.runInCurrentThread
              (ModalCont
              ext.java:346)
              at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:291)
              at org.eclipse.jface.window.ApplicationWindow$1.run
              (ApplicationWindow.ja
              va:631)
              at org.eclipse.swt.custom.BusyIndicator.showWhile
              (BusyIndicator.java:69)

              at org.eclipse.jface.window.ApplicationWindow.run
              (ApplicationWindow.java
              :628)
              at org.eclipse.ui.internal.WorkbenchWindow.run
              (WorkbenchWindow.java:2137
              )
              at org.eclipse.ui.internal.SaveableHelper.runProgressMonitorOperation
              (Sa
              veableHelper.java:122)
              at org.eclipse.ui.internal.SaveableHelper.savePart
              (SaveableHelper.java:1
              00)
              at org.eclipse.ui.internal.EditorManager.savePart
              (EditorManager.java:114
              0)
              at org.eclipse.ui.internal.WorkbenchPage.savePart
              (WorkbenchPage.java:274
              1)
              at org.eclipse.ui.internal.WorkbenchPage.saveEditor
              (WorkbenchPage.java:2
              754)
              at org.eclipse.ui.internal.SaveAction.run(SaveAction.java:69)
              at org.eclipse.jface.action.Action.runWithEvent(Action.java:996)
              at org.eclipse.jface.commands.ActionHandler.execute
              (ActionHandler.java:1
              17)
              at org.eclipse.core.commands.Command.execute(Command.java:311)
              at org.eclipse.core.commands.ParameterizedCommand.execute
              (ParameterizedC
              ommand.java:401)
              at org.eclipse.ui.internal.keys.WorkbenchKeyboard.executeCommand
              (Workben
              chKeyboard.java:459)
              at org.eclipse.ui.internal.keys.WorkbenchKeyboard.press
              (WorkbenchKeyboar
              d.java:781)
              at org.eclipse.ui.internal.keys.WorkbenchKeyboard.processKeyEvent
              (Workbe
              nchKeyboard.java:828)
              at
              org.eclipse.ui.internal.keys.WorkbenchKeyboard.filterKeySequenceBindi
              ngs(WorkbenchKeyboard.java:550)
              at org.eclipse.ui.internal.keys.WorkbenchKeyboard.access$3
              (WorkbenchKeyb
              oard.java:493)
              at
              org.eclipse.ui.internal.keys.WorkbenchKeyboard$KeyDownFilter.handleEv
              ent(WorkbenchKeyboard.java:117)
              at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)
              at org.eclipse.swt.widgets.Display.filterEvent(Display.java:975)
              at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:892)
              at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:917)
              at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:902)
              at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:930)
              at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:926)
              at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1240)
              at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:3155)
              at org.eclipse.swt.widgets.Control.windowProc(Control.java:3056)
              at org.eclipse.swt.widgets.Display.windowProc(Display.java:3910)
              at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
              at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1697)
              at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2856)
              at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1763)
              at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1727)
              at org.eclipse.ui.internal.Workbench.createAndRunWorkbench
              (Workbench.jav
              a:371)
              at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:143)
              at org.eclipse.ui.internal.ide.IDEApplication.run
              (IDEApplication.java:10
              6)
              at org.eclipse.core.internal.runtime.PlatformActivator$1.run
              (PlatformAct
              ivator.java:226)
              at org.eclipse.core.runtime.adaptor.EclipseStarter.run
              (EclipseStarter.ja
              va:375)
              at org.eclipse.core.runtime.adaptor.EclipseStarter.run
              (EclipseStarter.ja
              va:164)
              at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
              at sun.reflect.NativeMethodAccessorImpl.invoke
              (NativeMethodAccessorImpl.
              java:39)
              at sun.reflect.DelegatingMethodAccessorImpl.invoke
              (DelegatingMethodAcces
              sorImpl.java:25)
              at java.lang.reflect.Method.invoke(Method.java:324)
              at org.eclipse.core.launcher.Main.invokeFramework(Main.java:338)
              at org.eclipse.core.launcher.Main.basicRun(Main.java:282)
              at org.eclipse.core.launcher.Main.run(Main.java:977)
              at org.eclipse.core.launcher.Main.main(Main.java:952)

              "VM Thread" prio=5 tid=0x00a0b720 nid=0xaa0 runnable

              "VM Periodic Task Thread" prio=10 tid=0x00a0c9b0 nid=0x70 waiting on condition
              "Suspend Checker Thread" prio=10 tid=0x009cf780 nid=0xf24 runnable
          </description>
          <version>1.1.0</version>
          <fixedVersion>3.6 M7</fixedVersion>
          <type>Bug</type>
      </buginformation>
      <fixedFiles>
          <file type="M">org.eclipse.ui.views.markers.internal.MarkerAdapter.java</file>
      </fixedFiles>
  </bug>
  <bug id="108162" opendate="2005-08-26 14:27:00" fixdate="2008-10-16 10:07:01" resolution="Fixed">
      <buginformation>
          <summary>eadlock using MoveFilesAndFoldersOperation from a refactoring participant.
          </summary>
          <description>We provide a Resource Move refactoring participant for resources managed by our plug-in.
              The following line of code in the participant causes the deadlock:

              new MoveFilesAndFoldersOperation(#the active shell>).copyResources(#some
                      resources>,#destination container>);

              The MoveFilesAndFoldersOperation class is from the "org.eclipse.ui.actions" package.
          </description>
          <version>1.1.0</version>
          <fixedVersion>3.6 M7</fixedVersion>
          <type>Bug</type>
      </buginformation>
      <fixedFiles>
          <file type="M">org.eclipse.ui.actions.WorkspaceModifyOperation.java</file>
          <file type="M">org.eclipse.ui.tests.concurrency.ConcurrencyTestSuite.java</file>
      </fixedFiles>
  </bug>
  <bug id="15379" opendate="2002-05-06 17:33:48" fixdate="2002-05-07 18:50:55" resolution="Fixed">
      <buginformation>
          <summary>WorkingSetManager resource change listener not thread safe.
          </summary>
          <description>Resource changes can occur in any thread, and so the resource change listener installed by
              WorkingSetManager can be called in any thread.
              However, the ResourceNavigator listens to working set changes and tries to update its viewer, which can
              only happen in the UI thread.
              The result is an illegal thread access exception from SWT.

              To reproduce:

              1) Create a java project
              2) Add that project to a working set
              3) Make the navigator or packages view show only that working set
              4) Delete the project.

              Attaching log...
          </description>
          <version>1.1.0</version>
          <fixedVersion>3.6 M7</fixedVersion>
          <type>Bug</type>
      </buginformation>
      <fixedFiles>
          <file type="M">org.eclipse.ui.internal.WorkingSetManager.java</file>
      </fixedFiles>
  </bug>
  <bug id="307405" opendate="2010-03-29 11:06:29" fixdate="2010-04-27 16:09:36" resolution="Fixed">
      <buginformation>
          <summary>Deadlock in NavigatorContentServiceContentProvider.
          </summary>
          <description>We are using an adopting product and one of our users encountered this deadlock when starting
              up their workspace:

              1LKDEADLOCK Deadlock detected !!!
              NULL ---------------------
              NULL
              2LKDEADLOCKTHR Thread "main" (0x41591300)
              3LKDEADLOCKWTR is waiting for:
              4LKDEADLOCKMON sys_mon_t:0x43134548 infl_mon_t: 0x43134580:
              4LKDEADLOCKOBJ org/eclipse/ui/internal/navigator/NavigatorSaveablesService@0x05DB48A8/0x05DB48B4:
              3LKDEADLOCKOWN which is owned by:
              2LKDEADLOCKTHR Thread "Framework Event Dispatcher" (0x42467700)
              3LKDEADLOCKWTR which is waiting for:
              4LKDEADLOCKMON sys_mon_t:0x43BA6AB8 infl_mon_t: 0x43BA6AF0:
              4LKDEADLOCKOBJ
              org/eclipse/ui/internal/navigator/NavigatorContentServiceContentProvider@0x0306F6E8/0x0306F6F4:
              3LKDEADLOCKOWN which is owned by:
              2LKDEADLOCKTHR Thread "main" (0x41591300)

              I will attach the stack trace.
          </description>
          <version>1.1.0</version>
          <fixedVersion>3.6 M7</fixedVersion>
          <type>Bug</type>
      </buginformation>
      <fixedFiles>
          <file type="M">org.eclipse.ui.internal.navigator.NavigatorContentService.java</file>
          <file type="M">org.eclipse.ui.internal.navigator.NavigatorContentServiceContentProvider.java</file>
      </fixedFiles>
  </bug>
  <bug id="296056" opendate="2009-11-24 16:02:10" fixdate="2009-11-25 15:38:32" resolution="Fixed">
      <buginformation>
          <summary>Deadlock between syncExec and IJobManager.beginRuleThe following case now produces a deadlock
              (since N20091120-2000):
          </summary>
          <description>
              1) The UI is waiting to begin a scheduling rule
              2) The thread that owns the scheduling rule attempts to perform a syncExec.
          </description>
          <version>1.1.0</version>
          <fixedVersion>3.6 M7</fixedVersion>
          <type>Bug</type>
      </buginformation>
      <fixedFiles>
          <file type="M">org.eclipse.ui.tests.concurrency.ConcurrencyTestSuite.java</file>
          <file type="M">org.eclipse.ui.tests.concurrency.SyncExecWhileUIThreadWaitsForRuleTest.java</file>
      </fixedFiles>
  </bug>
  <bug id="76378" opendate="2004-10-15 13:44:23" fixdate="2005-03-14 16:56:36" resolution="Fixed">
      <buginformation>
          <summary>Deadlock in interaction between ModalContext, UIThread, and background NotifyJob.
          </summary>
          <description>org.eclipse.ui.internal.UILockListener seems to contain code that allows the UI thread to
              obtain locks that are held by another thread, if the UI thread is currently servicing a syncExec request
              from that other thread.
              However, when a third thread gets involved this seems to sometimes deadlock.
              In particular, if workspace background notification is triggered during an workspace operation that
              contains multiple nested operations, deadlock occurs.
              Since background notification is timing related, changes in timing can cause otherwise OK code to
              suddenly begin deadlocking.
              I've included a JUnit test to reproduce the problem, and a patch that seems to solve it.
          </description>
          <version>1.1.0</version>
          <fixedVersion>3.6 M7</fixedVersion>
          <type>Bug</type>
      </buginformation>
      <fixedFiles>
          <file type="M">org.eclipse.ui.internal.UILockListener.java</file>
          <file type="M">org.eclipse.ui.tests.UiTestSuite.java</file>
          <file type="M">org.eclipse.ui.tests.deadlock.NestedSyncExecDeadlockTest.java</file>
      </fixedFiles>
  </bug>
  <bug id="74185" opendate="2004-09-17 10:44:34" fixdate="2004-09-23 13:16:25" resolution="Fixed">
      <buginformation>
          <summary>UIJobTest has potential concurrency failure.
          </summary>
          <description>The UIJobTest is testing flags prematurely.

              The assertions wait until

              while (!testJobRan) {

              }

              Is complete
              testJobRan is set to true within testJob so it is possible for the while loop to break out before the
              join is completed here:

              delayJob.join();

              thereby checking the flag before the job is done and preventing backgroundThreadFinished from getting
              set.

              Removing this test altogether fixes this and keeps the main test (for a join).

              Also all of the booleans should be volatile to prevent copies being created in dual processors.
          </description>
          <version>1.1.0</version>
          <fixedVersion>3.6 M7</fixedVersion>
          <type>Bug</type>
      </buginformation>
      <fixedFiles>
          <file type="M">org.eclipse.ui.tests.api.UIJobTest.java</file>
      </fixedFiles>
  </bug>
  <bug id="273752" opendate="2009-04-26 19:12:02" fixdate="2009-04-26 19:35:20" resolution="Fixed">
      <buginformation>
          <summary>syncExec in
              org.eclipse.ui.internal.navigator.NavigatorContentService.getSourceOfContribution(Object) causes
              deadlock in test suite.
          </summary>
          <description>The Platform UI test suite does not complete anymore - it hangs in the
              org.eclipse.ui.tests.dynamicplugins.EditorTests.testEditorClosure() test case.
              The hang is in the following code:

              final boolean[] flag = new boolean[] { false };
              FrameworkListener listener = new FrameworkListener() {
              public void frameworkEvent(FrameworkEvent event) {
              if (event.getType() == FrameworkEvent.PACKAGES_REFRESHED)
              synchronized (flag) {
              flag[0] = true;
              flag.notifyAll();
              }
              }
              };
              context.addFrameworkListener(listener);
              packageAdmin.refreshPackages(bundles);
              synchronized (flag) {
              while (!flag[0]) {
              try {
              flag.wait();
              } catch (InterruptedException e) {
              }
              }
              }

              The flag[0] is never set to true, which probably means that the PACKAGES_REFRESHED event is not fired.
          </description>
          <version>1.1.0</version>
          <fixedVersion>3.6 M7</fixedVersion>
          <type>Bug</type>
      </buginformation>
      <fixedFiles>
          <file type="M">org.eclipse.ui.internal.navigator.NavigatorContentService.java</file>
      </fixedFiles>
  </bug>
  <bug id="248908" opendate="2008-09-29 05:42:27" fixdate="2009-06-08 10:28:36" resolution="Fixed">
      <buginformation>
          <summary>BusyIndicator deadlocks UI threadBuild ID: 3.4.0.</summary>
          <description>
              Steps To Reproduce:
              1. Create a Form editor
              2. Listen for PROP_DIRTY events
              3. when form is dirty show the BusyIndicator by calling form.setBusy(true)
              3. then when editor is not dirty anymore disable the BusyIndicator by calling form.setBusy(false)
              4. the application will lock, UI thread is waiting on th synchronized setBusy() while the BusyIndicator
              thread is also waiting on syncExec().


              More information:
              I have been debugging my RCP application during a whole day to find why the application was freezing. I
              like to have the BusyIndicator shown when the editor is dirty, and when i save it, the UI locked.
              Disabling the BusyIndicator solved my problem, i took time to test the BusyIndicator because i thought
              the problem can not come from the Eclipse Framework itself, but it seems it's a bug !

              Thanks.
          </description>
          <version>1.1.0</version>
          <fixedVersion>3.6 M7</fixedVersion>
          <type>Bug</type>
      </buginformation>
      <fixedFiles>
          <file type="M">org.eclipse.ui.internal.forms.widgets.BusyIndicator.java</file>
      </fixedFiles>
  </bug>
  <bug id="136855" opendate="2006-04-14 11:58:06" fixdate="2006-05-26 14:52:21" resolution="Fixed">
      <buginformation>
          <summary>Deadlock caused by IDEIdleHelper and HeapStatus calls to runFinalization from UI thread.</summary>
          <description>Plugins that have multi-threaded access to a COM server dll whose ThreadingModel=Apartment are
              broken in Eclipse 3.2.

              COM implements cross-apartment COM calls using Windows messages.
              Thus the IUnknown::Release() calls from a thread in the multi-threaded-apartment (MTA) to an object
              owned by the single-threaded-apartment (STA) actually post a message to the main thread's dispatch loop
              and then block waiting for a response.
              The IUnknown::Release() calls typically happen during finalization of the Java objects that are
              accessing the COM server via JNI.

              The IDEIdleHelper and HeapStatus calls to System.runFinalization() from the UI thread cause it to block,
              thus its dispatch loop (i.e. Workbench.runEventLoop) is no longer functioning when objects are
              finalized.

              Result: deadlock.

              The System.runFinalization() method, unlike the System.gc() method, causes the calling thread to block
              on a Thread.join() call:

              Thread [main] (Suspended)
              Object.wait(long) line: not available [native method]
              Thread.join(long) line: 1038
              Thread.join() line: 1091
              Finalizer$1.run() line: 164
              AccessController.doPrivileged1(PrivilegedAction) line: not available [native method]
              AccessController.doPrivileged(PrivilegedAction) line: 287
              Finalizer.forkSecondaryFinalizer(Runnable) line: 170
              Finalizer.runFinalization() line: 175
              Runtime.runFinalization0() line: not available [native method]
              Runtime.runFinalization() line: 692
              System.runFinalization() line: 833
              IDEIdleHelper.performGC() line: 154
              IDEIdleHelper$1.run() line: 125
              Display.runTimer(int) line: 3409
              Display.messageProc(int, int, int, int) line: 2691
              OS.DispatchMessageW(MSG) line: not available [native method]
              OS.DispatchMessage(MSG) line: 1879
              Display.readAndDispatch() line: 2964
              Workbench.runEventLoop(Window$IExceptionHandler, Display) line: 1914
              Workbench.runUI() line: 1878
              Workbench.createAndRunWorkbench(Display, WorkbenchAdvisor) line: 419
              PlatformUI.createAndRunWorkbench(Display, WorkbenchAdvisor) line: 143
              IDEApplication.run(Object) line: 95
              PlatformActivator$1.run(Object) line: 78
              EclipseAppLauncher.runApplication(Object) line: 92
              EclipseAppLauncher.start(Object) line: 68
              EclipseStarter.run(Object) line: 376
              EclipseStarter.run(String[], Runnable) line: 169
              NativeMethodAccessorImpl.invoke0(Method, Object, Object[]) line: not available [native method]
              NativeMethodAccessorImpl.invoke(Object, Object[]) line: 85
              NativeMethodAccessorImpl.invoke(Method, Object, Object[]) line: 58
              DelegatingMethodAccessorImpl.invoke(Method, Object, Object[]) line: 60
              Method.invoke(Object, Object[]) line: 391
              Main.invokeFramework(String[], URL[]) line: 336
              Main.basicRun(String[]) line: 280
              Main.run(String[]) line: 977
              Main.main(String[]) line: 952

              Here's the relevent code from the Finalizer class:

              private static void forkSecondaryFinalizer(final Runnable proc) {
              PrivilegedAction pa = new PrivilegedAction() {
              public Object run() {
              ThreadGroup tg = Thread.currentThread().getThreadGroup();
              for (ThreadGroup tgn = tg;
              tgn != null;
              tg = tgn, tgn = tg.getParent());
              Thread sft = new Thread(tg, proc, "Secondary finalizer");
              sft.start();
              try {
              sft.join();
              } catch (InterruptedException x) {
              /* Ignore */
              }
              return null;
              }};
              AccessController.doPrivileged(pa);
              }

              The "Secondary Finalizer" thread calls the Java objects' finalize() method, which calls
              IUnknown::Release(), which then deadlocks.

              Besides this deadlock behaviour, in principle, it's a bad idea to block the UI thread while doing
              finalizations. Especially since there's no compelling reason to do so.

              Either the calls to System.runFinalization() should be removed or they should be run from a background
              thread. This call is entirely optional anyways. The objects will eventually be finalized (though there
              may be compelling reasons to force the finalizations). Probably the best solution is to make both the
              call to gc() and to runFinalization() in a background thread.

              I have confirmed this behaviour using IBM VM versions 1.4.2 and Sun VM versions 1.4.2 and 1.5.0. I am
              unable to reproduce this using the IBM 1.5 vm.

              I have written a small Java-only testcase that demonstrates the deadlock. It emulates the scenario by
              doing a Display.syncExec() from a Java object's finalize() method so there's no need for the Eclipse
              team to actually use a Java/COM bridge to see the behaviour. I'll attach the testcase to the report
              shortly.
          </description>
          <version>1.1.0</version>
          <fixedVersion>3.6 M7</fixedVersion>
          <type>Bug</type>
      </buginformation>
      <fixedFiles>
          <file type="M">org.eclipse.ui.internal.ide.IDEIdleHelper.java</file>
          <file type="M">org.eclipse.ui.internal.ide.IDEWorkbenchMessages.java</file>
          <file type="M">org.eclipse.ui.internal.HeapStatus.java</file>
      </fixedFiles>
  </bug>
  <bug id="54450" opendate="2004-03-11 08:49:20" fixdate="2004-06-29 09:31:58" resolution="Fixed">
      <buginformation>
          <summary>requestInUI seems to have a race condition (fails most times).
          </summary>
          <description>I'm trying to exercise the job API that lets me query the user via a UI job and the requestInUI
              call.
              I get no Status back from the call unless I step through the logic in the debugger.
              Only then do I get a non-null return from the method.

              This is my logic:
              private boolean askUserForHelp() {
              UIJob uiJob = new UIJob("Help Request") {

              public IStatus runInUIThread(IProgressMonitor monitor) {

              if (MessageDialog.openQuestion(PlatformUI.getWorkbench()
              .getActiveWorkbenchWindow().getShell(), "Choose",
              "Should we run the runnable?"))
              return Status.OK_STATUS;
              else
              return Status.CANCEL_STATUS;
              }
              };

              IProgressService ps = PlatformUI.getWorkbench().getProgressService();

              IStatus choice = ps.requestInUI(uiJob, "Help Me" + getName());
              if (choice.getCode() == 0)
              return true;
              else
              return false;
              }

              The job I have processes some work and then does more (a runnable passed to the job for fun).
              I'm trying to make that 2nd bit of work optional based on the user prompt.
              This works only if I step through the logic, deep down into feedbackManager.requestInUI(job, message)
              where it sets up another UIJob and then uses a join() to wait on the response.
              Not sure if it is because of the async job execution (Something I had not noticed before on my API
              tour), or what.
              Another observation is that it seemed like the inUI request was not removed from the prompt dialog.
              The general purpose Errors Running Jobs dialog gets opened, but it is not helping identify what
              exception is thrown (I'm wondering if this dialog actually shows enough information, even when you open
              details it is redundantly showing the same thing twice - and little specific info that I can find a way
              to influence so far).
              I have to go to the error log to see that it is a NullPointerException; this is due to the fact my
              choice var above is null after the requestInUI call.
              An aside; I got the impression from EclipseCON that this user request would be a hint to see what was
              needed vs a dialog that opened on top of their current work. Is this prompt technique still under
              development or finalized?
              I've been running my code on both M7 and I20040310.
          </description>
          <version>1.1.0</version>
          <fixedVersion>3.6 M7</fixedVersion>
          <type>Bug</type>
      </buginformation>
      <fixedFiles>
          <file type="M">org.eclipse.ui.internal.progress.ProgressFeedbackManager.java</file>
      </fixedFiles>
  </bug>
</bugrepository>