ConcurrentModificationException with publish confirms.
I'm getting random ConcurrentModificationExceptions in the publish confirm code when sending messages from multiple threads, using the same rabbit template. 
Caused by: java.util.ConcurrentModificationException
	at java.util.TreeMap$NavigableSubMap$SubMapIterator.nextEntry(TreeMap.java:1594)
	at java.util.TreeMap$NavigableSubMap$SubMapEntryIterator.next(TreeMap.java:1642)
	at java.util.TreeMap$NavigableSubMap$SubMapEntryIterator.next(TreeMap.java:1636)
	at org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.processAck(PublisherCallbackChannelImpl.java:493)
	at org.springframework.amqp.rabbit.support.PublisherCallbackChannelImpl.handleAck(PublisherCallbackChannelImpl.java:474)
	at com.rabbitmq.client.impl.ChannelN.callConfirmListeners(ChannelN.java:435)
	at com.rabbitmq.client.impl.ChannelN.processAsync(ChannelN.java:351)
	at com.rabbitmq.client.impl.AMQChannel.handleCompleteInboundCommand(AMQChannel.java:144)
	at com.rabbitmq.client.impl.AMQChannel.handleFrame(AMQChannel.java:91)
	at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:526)
Looking at the code, it seems that PublisherCallbackChannelImpl.addPendingConfirm() is thread unsafe. 
It should synchronize the access to this.pendingConfirms, just like processAck() does. 
I've attached a possible fix. 
