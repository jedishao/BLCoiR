IndexedTable delete fails when used in conjunction with RowLock().
Created the following test in TestIndexedTable,
  public void testLockedRowDelete() throws IOException 
{

    writeInitalRows();

    // Delete the first row;

    byte[] row = PerformanceEvaluation.format(0);

    RowLock lock = table.lockRow(row);

    table.delete(new Delete(row, HConstants.LATEST_TIMESTAMP, lock));

    table.unlockRow(lock);    



    assertRowDeleted(NUM_ROWS - 1);  

  }
}
which fails and throws the following exception,
java.io.IOException: java.io.IOException: Invalid row lock
	at org.apache.hadoop.hbase.regionserver.HRegion.getLock(HRegion.java:1621)
	at org.apache.hadoop.hbase.regionserver.HRegion.delete(HRegion.java:1094)
	at org.apache.hadoop.hbase.regionserver.tableindexed.IndexedRegion.delete(IndexedRegion.java:269)
	at org.apache.hadoop.hbase.regionserver.HRegionServer.delete(HRegionServer.java:2014)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.hadoop.hbase.ipc.HBaseRPC$Server.call(HBaseRPC.java:648)
	at org.apache.hadoop.hbase.ipc.HBaseServer$Handler.run(HBaseServer.java:915)
Patch coded for the latest version in SVN (looks like 0.21.0) , just going through final testing and packaging. Will attach shortly.