Handle concurrent insert with dynamic partition.
With multiple users concurrently issuing insert statements on the same partition has a side effect that some queries may not see a partition at the time when they're issued, but will realize the partition is actually there when it is trying to add such partition to the metastore and thus get AlreadyExistsException, because some earlier query just created it (race condition).
For example, imagine such a table is created:



create table T (name char(50)) partitioned by (ds string);



and the following two queries are launched at the same time, from different sessions:



insert into table T partition (ds) values (&amp;apos;Bob&amp;apos;, &amp;apos;today&amp;apos;); -- creates the partition &amp;apos;today&amp;apos;

insert into table T partition (ds) values (&amp;apos;Joe&amp;apos;, &amp;apos;today&amp;apos;); -- will fail with AlreadyExistsException


