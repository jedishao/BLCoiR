ModelControllerClientOperationHandler doesn't manage the clientRequestExecutor properly ModelControllerClientOperationHandler's constructor creates a ThreadPoolExecutor for handling client requests and then the class doesn't clean it up.
In addition, an instance of ModelControllerClientOperationHandler is created per channel, not one per ModelControllerClientOperationHandlerFactoryService. 
I know I at least thought of the thread pool as being per remote management interface, not per channel.
Making it be per ModelControllerClientOperationHandlerFactoryService and cleaning it up in that service's stop would be the easiest fix, but the pool settings may not be appropriate if we do that, so tread carefully.